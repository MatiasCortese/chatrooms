var t,e,n,r,i,o,a,s,u,c,h,l,f,p,d,v,g,m,y,_,b,w,I,T,E,S,C,k,N,A,R,x,P,D,O="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function L(t,e,n,r){Object.defineProperty(t,e,{get:n,set:r,enumerable:!0,configurable:!0})}function M(t){return t&&t.__esModule?t.default:t}var F={},j={},U=O.parcelRequire014c;null==U&&((U=function(t){if(t in F)return F[t].exports;if(t in j){var e=j[t];delete j[t];var n={id:t,exports:{}};return F[t]=n,e.call(n.exports,n,n.exports),n.exports}var r=Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(t,e){j[t]=e},O.parcelRequire014c=U),U.register("f504n",function(t,e){var n=U("23YZo"),r=U("fiQnm"),i=e&&!e.nodeType&&e,o=i&&t&&!t.nodeType&&t,a=o&&o.exports===i?n.Buffer:void 0,s=a?a.isBuffer:void 0;t.exports=s||r}),U.register("23YZo",function(t,e){var n=U("ljJ8G"),r="object"==typeof self&&self&&self.Object===Object&&self,i=n||r||Function("return this")();t.exports=i}),U.register("ljJ8G",function(t,e){/** Detect free variable `global` from Node.js. */var n="object"==typeof O&&O&&O.Object===Object&&O;t.exports=n}),U.register("fiQnm",function(t,e){t.exports=/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */function(){return!1}}),U.register("jIny1",function(t,e){var n=U("ljJ8G"),r=e&&!e.nodeType&&e,i=r&&t&&!t.nodeType&&t,o=i&&i.exports===r&&n.process,a=function(){try{// Use `util.types` for Node.js 10+.
var t=i&&i.require&&i.require("util").types;if(t)return t;// Legacy `process.binding('util')` for Node.js < 10.
return o&&o.binding&&o.binding("util")}catch(t){}}();t.exports=a});var q={};Object.defineProperty(q,"__esModule",{value:!0,configurable:!0}),L(q,"firebase",()=>et),L(q,"default",()=>ee);/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** *//* global Reflect, Promise, SuppressedError, Symbol */var V=function(t,e){return(V=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)};function B(t,e){if("function"!=typeof e&&null!==e)throw TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}V(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var K=function(){return(K=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};function H(t,e,n,r){return new(n||(n=Promise))(function(i,o){function a(t){try{u(r.next(t))}catch(t){o(t)}}function s(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):((e=t.value)instanceof n?e:new n(function(t){t(e)})).then(a,s)}u((r=r.apply(t,e||[])).next())})}function W(t,e){var n,r,i,o,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(s){return function(u){return function(s){if(n)throw TypeError("Generator is already executing.");for(;o&&(o=0,s[0]&&(a=0)),a;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,r=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!(i=(i=a.trys).length>0&&i[i.length-1])&&(6===s[0]||2===s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=e.call(t,a)}catch(t){s=[6,t],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}}function z(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function G(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,i,o=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=o.next()).done;)a.push(r.value)}catch(t){i={error:t}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(i)throw i.error}}return a}function Q(t,e,n){if(n||2==arguments.length)for(var r,i=0,o=e.length;i<o;i++)!r&&i in e||(r||(r=Array.prototype.slice.call(e,0,i)),r[i]=e[i]);return t.concat(r||Array.prototype.slice.call(e))}"function"==typeof SuppressedError&&SuppressedError;/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */var $={/**
     * @define {boolean} Whether this is the client Node.js SDK.
     */NODE_CLIENT:!1,/**
     * @define {boolean} Whether this is the Admin Node.js SDK.
     */NODE_ADMIN:!1,/**
     * Firebase SDK Version
     */SDK_VERSION:"${JSCORE_VERSION}"},Y=function(t,e){if(!t)throw X(e)},X=function(t){return Error("Firebase Database ("+$.SDK_VERSION+") INTERNAL ASSERT FAILED: "+t)},J=function(t){for(var e=[],n=0,r=0;r<t.length;r++){var i=t.charCodeAt(r);i<128?e[n++]=i:(i<2048?e[n++]=i>>6|192:((64512&i)==55296&&r+1<t.length&&(64512&t.charCodeAt(r+1))==56320?(// Surrogate Pair
i=65536+((1023&i)<<10)+(1023&t.charCodeAt(++r)),e[n++]=i>>18|240,e[n++]=i>>12&63|128):e[n++]=i>>12|224,e[n++]=i>>6&63|128),e[n++]=63&i|128)}return e},Z=function(t){for(// TODO(user): Use native implementations if/when available
var e=[],n=0,r=0;n<t.length;){var i=t[n++];if(i<128)e[r++]=String.fromCharCode(i);else if(i>191&&i<224){var o=t[n++];e[r++]=String.fromCharCode((31&i)<<6|63&o)}else if(i>239&&i<365){// Surrogate Pair
var o=t[n++],a=t[n++],s=((7&i)<<18|(63&o)<<12|(63&a)<<6|63&t[n++])-65536;e[r++]=String.fromCharCode(55296+(s>>10)),e[r++]=String.fromCharCode(56320+(1023&s))}else{var o=t[n++],a=t[n++];e[r++]=String.fromCharCode((15&i)<<12|(63&o)<<6|63&a)}}return e.join("")},tt={/**
     * Maps bytes to characters.
     */byteToCharMap_:null,/**
     * Maps characters to bytes.
     */charToByteMap_:null,/**
     * Maps bytes to websafe characters.
     * @private
     */byteToCharMapWebSafe_:null,/**
     * Maps websafe characters to bytes.
     * @private
     */charToByteMapWebSafe_:null,/**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     */ENCODED_VALS_BASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",/**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     */get ENCODED_VALS(){return this.ENCODED_VALS_BASE+"+/="},/**
     * Our websafe alphabet.
     */get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+"-_."},/**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     */HAS_NATIVE_SUPPORT:"function"==typeof atob,/**
     * Base64-encode an array of bytes.
     *
     * @param input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */encodeByteArray:function(t,e){if(!Array.isArray(t))throw Error("encodeByteArray takes an array as a parameter");this.init_();for(var n=e?this.byteToCharMapWebSafe_:this.byteToCharMap_,r=[],i=0;i<t.length;i+=3){var o=t[i],a=i+1<t.length,s=a?t[i+1]:0,u=i+2<t.length,c=u?t[i+2]:0,h=o>>2,l=(3&o)<<4|s>>4,f=(15&s)<<2|c>>6,p=63&c;u||(p=64,a||(f=64)),r.push(n[h],n[l],n[f],n[p])}return r.join("")},/**
     * Base64-encode a string.
     *
     * @param input A string to encode.
     * @param webSafe If true, we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */encodeString:function(t,e){return(// Shortcut for Mozilla browsers that implement
// a native base64 encoder in the form of "btoa/atob"
this.HAS_NATIVE_SUPPORT&&!e?btoa(t):this.encodeByteArray(J(t),e))},/**
     * Base64-decode a string.
     *
     * @param input to decode.
     * @param webSafe True if we should use the
     *     alternative alphabet.
     * @return string representing the decoded value.
     */decodeString:function(t,e){return(// Shortcut for Mozilla browsers that implement
// a native base64 encoder in the form of "btoa/atob"
this.HAS_NATIVE_SUPPORT&&!e?atob(t):Z(this.decodeStringToByteArray(t,e)))},/**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param input Input to decode.
     * @param webSafe True if we should use the web-safe alphabet.
     * @return bytes representing the decoded value.
     */decodeStringToByteArray:function(t,e){this.init_();for(var n=e?this.charToByteMapWebSafe_:this.charToByteMap_,r=[],i=0;i<t.length;){var o=n[t.charAt(i++)],a=i<t.length?n[t.charAt(i)]:0,s=++i<t.length?n[t.charAt(i)]:64,u=++i<t.length?n[t.charAt(i)]:64;if(++i,null==o||null==a||null==s||null==u)throw Error();var c=o<<2|a>>4;if(r.push(c),64!==s){var h=a<<4&240|s>>2;if(r.push(h),64!==u){var l=s<<6&192|u;r.push(l)}}}return r},/**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */init_:function(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};// We want quick mappings back and forth, so we precompute two maps.
for(var t=0;t<this.ENCODED_VALS.length;t++)this.byteToCharMap_[t]=this.ENCODED_VALS.charAt(t),this.charToByteMap_[this.byteToCharMap_[t]]=t,this.byteToCharMapWebSafe_[t]=this.ENCODED_VALS_WEBSAFE.charAt(t),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[t]]=t,t>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(t)]=t,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(t)]=t)}}},te=function(t){var e=J(t);return tt.encodeByteArray(e,!0)},tn=function(t){// Use base64url encoding and remove padding in the end (dot characters).
return te(t).replace(/\./g,"")},tr=function(t){try{return tt.decodeString(t,!0)}catch(t){console.error("base64Decode failed: ",t)}return null};/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 *
 * Note: we don't merge __proto__ to prevent prototype pollution
 */function ti(t,e){if(!(e instanceof Object))return e;switch(e.constructor){case Date:return new Date(e.getTime());case Object:void 0===t&&(t={});break;case Array:// Always copy the array source and overwrite the target.
t=[];break;default:// Not a plain Object - treat it as a scalar.
return e}for(var n in e)// use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202
e.hasOwnProperty(n)&&"__proto__"!==n&&(t[n]=ti(t[n],e[n]));return t}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var to=/** @class */function(){function t(){var t=this;this.reject=function(){},this.resolve=function(){},this.promise=new Promise(function(e,n){t.resolve=e,t.reject=n})}return(/**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     */t.prototype.wrapCallback=function(t){var e=this;return function(n,r){n?e.reject(n):e.resolve(r),"function"==typeof t&&(// Attaching noop handler just in case developer wasn't expecting
// promises
e.promise.catch(function(){}),1===t.length?t(n):t(n,r))}},t)}();/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ta(t,e){if(t.uid)throw Error('The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.');var n=e||"demo-project",r=t.iat||0,i=t.sub||t.user_id;if(!i)throw Error("mockUserToken must contain 'sub' or 'user_id' field!");var o=K({// Set all required fields to decent defaults
iss:"https://securetoken.google.com/"+n,aud:n,iat:r,exp:r+3600,auth_time:r,sub:i,user_id:i,firebase:{sign_in_provider:"custom",identities:{}}},t);return[tn(JSON.stringify({alg:"none",type:"JWT"})),tn(JSON.stringify(o)),""].join(".")}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */function ts(){return"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent?navigator.userAgent:""}/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */function tu(){return"undefined"!=typeof window&&// @ts-ignore Setting up an broadly applicable index signature for Window
// just to deal with this case would probably be a bad idea.
!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(ts())}/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */// Node detection logic from: https://github.com/iliakan/detect-node/
function tc(){try{return"[object process]"===Object.prototype.toString.call(O.process)}catch(t){return!1}}function th(){var t="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0;return"object"==typeof t&&void 0!==t.id}/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */function tl(){return"object"==typeof navigator&&"ReactNative"===navigator.product}/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */function tf(){return!0===$.NODE_CLIENT||!0===$.NODE_ADMIN}/**
 * This method checks if indexedDB is supported by current browser/service worker context
 * @return true if indexedDB is supported by current browser/service worker context
 */function tp(){return"indexedDB"in self&&null!=indexedDB}/**
 * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject
 * if errors occur during the database open operation.
 *
 * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox
 * private browsing)
 */function td(){return new Promise(function(t,e){try{var n=!0,r="validate-browser-context-for-indexeddb-analytics-module",i=self.indexedDB.open(r);i.onsuccess=function(){i.result.close(),n||self.indexedDB.deleteDatabase(r),t(!0)},i.onupgradeneeded=function(){n=!1},i.onerror=function(){var t;e((null===(t=i.error)||void 0===t?void 0:t.message)||"")}}catch(t){e(t)}})}/**
 *
 * This method checks whether cookie is enabled within current browser
 * @return true if cookie is enabled within current browser
 */function tv(){return!!navigator&&!!navigator.cookieEnabled}// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
var tg=/** @class */function(t){function e(n,r,i){var o=t.call(this,r)||this;return o.code=n,o.customData=i,o.name="FirebaseError",// Fix For ES5
// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
Object.setPrototypeOf(o,e.prototype),Error.captureStackTrace&&Error.captureStackTrace(o,tm.prototype.create),o}return B(e,t),e}(Error),tm=/** @class */function(){function t(t,e,n){this.service=t,this.serviceName=e,this.errors=n}return t.prototype.create=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];var r=e[0]||{},i=this.service+"/"+t,o=this.errors[t],a=o?o.replace(ty,function(t,e){var n=r[e];return null!=n?String(n):"<"+e+"?>"}):"Error",s=this.serviceName+": "+a+" ("+i+").";return new tg(i,s,r)},t}(),ty=/\{\$([^}]+)}/g;/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */function t_(t){return JSON.parse(t)}/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */function tb(t){return JSON.stringify(t)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */var tw=function(t){var e={},n={},r={},i="";try{var o=t.split(".");e=t_(tr(o[0])||""),n=t_(tr(o[1])||""),i=o[2],r=n.d||{},delete n.d}catch(t){}return{header:e,claims:n,data:r,signature:i}},tI=function(t){var e=tw(t).claims;return"object"==typeof e&&e.hasOwnProperty("iat")?e.iat:null},tT=function(t){var e=tw(t).claims;return!!e&&"object"==typeof e&&e.hasOwnProperty("iat")},tE=function(t){var e=tw(t).claims;return"object"==typeof e&&!0===e.admin};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function tS(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function tC(t,e){return Object.prototype.hasOwnProperty.call(t,e)?t[e]:void 0}function tk(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0}function tN(t,e,n){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(r[i]=e.call(n,t[i],i,t));return r}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 *//**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */var tA=/** @class */function(){function t(){/**
         * Holds the previous values of accumulated variables a-e in the compress_
         * function.
         * @private
         */this.chain_=[],/**
         * A buffer holding the partially computed hash result.
         * @private
         */this.buf_=[],/**
         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
         * as the message schedule in the docs.
         * @private
         */this.W_=[],/**
         * Contains data needed to pad messages less than 64 bytes.
         * @private
         */this.pad_=[],/**
         * @private {number}
         */this.inbuf_=0,/**
         * @private {number}
         */this.total_=0,this.blockSize=64,this.pad_[0]=128;for(var t=1;t<this.blockSize;++t)this.pad_[t]=0;this.reset()}return t.prototype.reset=function(){this.chain_[0]=1732584193,this.chain_[1]=4023233417,this.chain_[2]=2562383102,this.chain_[3]=271733878,this.chain_[4]=3285377520,this.inbuf_=0,this.total_=0},/**
     * Internal compress helper function.
     * @param buf Block to compress.
     * @param offset Offset of the block in the buffer.
     * @private
     */t.prototype.compress_=function(t,e){e||(e=0);var n,r,i=this.W_;// get 16 big endian words
if("string"==typeof t)for(var o=0;o<16;o++)// TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
// have a bug that turns the post-increment ++ operator into pre-increment
// during JIT compilation.  We have code that depends heavily on SHA-1 for
// correctness and which is affected by this bug, so I've removed all uses
// of post-increment ++ in which the result value is used.  We can revert
// this change once the Safari bug
// (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
// most clients have been updated.
i[o]=t.charCodeAt(e)<<24|t.charCodeAt(e+1)<<16|t.charCodeAt(e+2)<<8|t.charCodeAt(e+3),e+=4;else for(var o=0;o<16;o++)i[o]=t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3],e+=4;// expand to 80 words
for(var o=16;o<80;o++){var a=i[o-3]^i[o-8]^i[o-14]^i[o-16];i[o]=(a<<1|a>>>31)&4294967295}// TODO(user): Try to unroll this loop to speed up the computation.
for(var s=this.chain_[0],u=this.chain_[1],c=this.chain_[2],h=this.chain_[3],l=this.chain_[4],o=0;o<80;o++){o<40?o<20?(n=h^u&(c^h),r=1518500249):(n=u^c^h,r=1859775393):o<60?(n=u&c|h&(u|c),r=2400959708):(n=u^c^h,r=3395469782);var a=(s<<5|s>>>27)+n+l+r+i[o]&4294967295;l=h,h=c,c=(u<<30|u>>>2)&4294967295,u=s,s=a}this.chain_[0]=this.chain_[0]+s&4294967295,this.chain_[1]=this.chain_[1]+u&4294967295,this.chain_[2]=this.chain_[2]+c&4294967295,this.chain_[3]=this.chain_[3]+h&4294967295,this.chain_[4]=this.chain_[4]+l&4294967295},t.prototype.update=function(t,e){// TODO(johnlenz): tighten the function signature and remove this check
if(null!=t){void 0===e&&(e=t.length);// The outer while loop should execute at most twice.
for(var n=e-this.blockSize,r=0,i=this.buf_,o=this.inbuf_;r<e;){// When we have no data in the block to top up, we can directly process the
// input buffer (assuming it contains sufficient data). This gives ~25%
// speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
// the data is provided in large chunks (or in multiples of 64 bytes).
if(0===o)for(;r<=n;)this.compress_(t,r),r+=this.blockSize;if("string"==typeof t){for(;r<e;)if(i[o]=t.charCodeAt(r),++o,++r,o===this.blockSize){this.compress_(i),o=0;break}}else for(;r<e;)if(i[o]=t[r],++o,++r,o===this.blockSize){this.compress_(i),o=0;break}}this.inbuf_=o,this.total_+=e}},/** @override */t.prototype.digest=function(){var t=[],e=8*this.total_;// Add pad 0x80 0x00*.
this.inbuf_<56?this.update(this.pad_,56-this.inbuf_):this.update(this.pad_,this.blockSize-(this.inbuf_-56));// Add # bits.
for(var n=this.blockSize-1;n>=56;n--)this.buf_[n]=255&e,e/=256;this.compress_(this.buf_);for(var r=0,n=0;n<5;n++)for(var i=24;i>=0;i-=8)t[r]=this.chain_[n]>>i&255,++r;return t},t}();/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */function tR(t,e){var n=new tx(t,e);return n.subscribe.bind(n)}/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */var tx=/** @class */function(){/**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */function t(t,e){var n=this;this.observers=[],this.unsubscribes=[],this.observerCount=0,// Micro-task scheduling by calling task.then().
this.task=Promise.resolve(),this.finalized=!1,this.onNoObservers=e,// Call the executor asynchronously so subscribers that are called
// synchronously after the creation of the subscribe function
// can still receive the very first value generated in the executor.
this.task.then(function(){t(n)}).catch(function(t){n.error(t)})}return t.prototype.next=function(t){this.forEachObserver(function(e){e.next(t)})},t.prototype.error=function(t){this.forEachObserver(function(e){e.error(t)}),this.close(t)},t.prototype.complete=function(){this.forEachObserver(function(t){t.complete()}),this.close()},/**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */t.prototype.subscribe=function(t,e,n){var r,i=this;if(void 0===t&&void 0===e&&void 0===n)throw Error("Missing Observer.");void 0===(r=!/**
 * Return true if the object passed in implements any of the named methods.
 */function(t,e){if("object"!=typeof t||null===t)return!1;for(var n=0;n<e.length;n++){var r=e[n];if(r in t&&"function"==typeof t[r])return!0}return!1}(t,["next","error","complete"])?{next:t,error:e,complete:n}:t).next&&(r.next=tP),void 0===r.error&&(r.error=tP),void 0===r.complete&&(r.complete=tP);var o=this.unsubscribeOne.bind(this,this.observers.length);return this.finalized&&this.task.then(function(){try{i.finalError?r.error(i.finalError):r.complete()}catch(t){// nothing
}}),this.observers.push(r),o},// Unsubscribe is synchronous - we guarantee that no events are sent to
// any unsubscribed Observer.
t.prototype.unsubscribeOne=function(t){void 0!==this.observers&&void 0!==this.observers[t]&&(delete this.observers[t],this.observerCount-=1,0===this.observerCount&&void 0!==this.onNoObservers&&this.onNoObservers(this))},t.prototype.forEachObserver=function(t){if(!this.finalized)// Since sendOne calls asynchronously - there is no chance that
// this.observers will become undefined.
for(var e=0;e<this.observers.length;e++)this.sendOne(e,t)},// Call the Observer via one of it's callback function. We are careful to
// confirm that the observe has not been unsubscribed since this asynchronous
// function had been queued.
t.prototype.sendOne=function(t,e){var n=this;// Execute the callback asynchronously
// eslint-disable-next-line @typescript-eslint/no-floating-promises
this.task.then(function(){if(void 0!==n.observers&&void 0!==n.observers[t])try{e(n.observers[t])}catch(t){// Ignore exceptions raised in Observers or missing methods of an
// Observer.
// Log error to console. b/31404806
"undefined"!=typeof console&&console.error&&console.error(t)}})},t.prototype.close=function(t){var e=this;this.finalized||(this.finalized=!0,void 0!==t&&(this.finalError=t),// Proxy is no longer needed - garbage collect references
// eslint-disable-next-line @typescript-eslint/no-floating-promises
this.task.then(function(){e.observers=void 0,e.onNoObservers=void 0}))},t}();function tP(){// do nothing
}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */var tD=function(t,e,n,r){var i;if(r<e?i="at least "+e:r>n&&(i=0===n?"none":"no more than "+n),i)throw Error(t+" failed: Was called with "+r+(1===r?" argument.":" arguments.")+" Expects "+i+".")};/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argName The name of the argument
 * @return The prefix to add to the error thrown for validation.
 */function tO(t,e){return t+" failed: "+e+" argument "}function tL(t,e,n,r){if((!r||n)&&"function"!=typeof n)throw Error(tO(t,e)+"must be a valid function.")}function tM(t,e,n,r){if((!r||n)&&("object"!=typeof n||null===n))throw Error(tO(t,e)+"must be a valid context object.")}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */var tF=function(t){for(var e=[],n=0,r=0;r<t.length;r++){var i=t.charCodeAt(r);// Is this the lead surrogate in a surrogate pair?
if(i>=55296&&i<=56319){var o=i-55296;// the high 10 bits.
Y(++r<t.length,"Surrogate pair missing trail surrogate."),i=65536+(o<<10)+(t.charCodeAt(r)-56320)}i<128?e[n++]=i:(i<2048?e[n++]=i>>6|192:(i<65536?e[n++]=i>>12|224:(e[n++]=i>>18|240,e[n++]=i>>12&63|128),e[n++]=i>>6&63|128),e[n++]=63&i|128)}return e},tj=function(t){for(var e=0,n=0;n<t.length;n++){var r=t.charCodeAt(n);r<128?e++:r<2048?e+=2:r>=55296&&r<=56319?(// Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
e+=4,n++):e+=3}return e};/**
 * Based on the backoff method from
 * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.
 * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.
 */function tU(t,e,n){void 0===e&&(e=1e3),void 0===n&&(n=2);// Calculates an exponentially increasing value.
// Deviation: calculates value from count and a constant interval, so we only need to save value
// and count to restore state.
var r=e*Math.pow(n,t);// Limits backoff to max to avoid effectively permanent backoff.
return Math.min(144e5,r+Math.round(// Deviation: changes multiplication order to improve readability.
.5*r*// A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines
// if we add or subtract.
(Math.random()-.5)*2))}/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function tq(t){return t&&t._delegate?t._delegate:t}/**
 * Component for service name T, e.g. `auth`, `auth-internal`
 */var tV=/** @class */function(){/**
     *
     * @param name The public service name, e.g. app, auth, firestore, database
     * @param instanceFactory Service factory responsible for creating the public interface
     * @param type whether the service provided by the component is public or private
     */function t(t,e,n){this.name=t,this.instanceFactory=e,this.type=n,this.multipleInstances=!1,/**
         * Properties to be added to the service namespace
         */this.serviceProps={},this.instantiationMode="LAZY"/* LAZY */,this.onInstanceCreated=null}return t.prototype.setInstantiationMode=function(t){return this.instantiationMode=t,this},t.prototype.setMultipleInstances=function(t){return this.multipleInstances=t,this},t.prototype.setServiceProps=function(t){return this.serviceProps=t,this},t.prototype.setInstanceCreatedCallback=function(t){return this.onInstanceCreated=t,this},t}(),tB="[DEFAULT]",tK=/** @class */function(){function t(t,e){this.name=t,this.container=e,this.component=null,this.instances=new Map,this.instancesDeferred=new Map,this.instancesOptions=new Map,this.onInitCallbacks=new Map}return(/**
     * @param identifier A provider can provide mulitple instances of a service
     * if this.component.multipleInstances is true.
     */t.prototype.get=function(t){// if multipleInstances is not supported, use the default name
var e=this.normalizeInstanceIdentifier(t);if(!this.instancesDeferred.has(e)){var n=new to;if(this.instancesDeferred.set(e,n),this.isInitialized(e)||this.shouldAutoInitialize())try{var r=this.getOrInitializeService({instanceIdentifier:e});r&&n.resolve(r)}catch(t){// when the instance factory throws an exception during get(), it should not cause
// a fatal error. We just return the unresolved promise in this case.
}}return this.instancesDeferred.get(e).promise},t.prototype.getImmediate=function(t){// if multipleInstances is not supported, use the default name
var e,n=this.normalizeInstanceIdentifier(null==t?void 0:t.identifier),r=null!==(e=null==t?void 0:t.optional)&&void 0!==e&&e;if(this.isInitialized(n)||this.shouldAutoInitialize())try{return this.getOrInitializeService({instanceIdentifier:n})}catch(t){if(r)return null;throw t}else{// In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw
if(r)return null;throw Error("Service "+this.name+" is not available")}},t.prototype.getComponent=function(){return this.component},t.prototype.setComponent=function(t){var e,n;if(t.name!==this.name)throw Error("Mismatching Component "+t.name+" for Provider "+this.name+".");if(this.component)throw Error("Component for "+this.name+" has already been provided");// return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)
if(this.component=t,this.shouldAutoInitialize()){// if the service is eager, initialize the default instance
if("EAGER"/* EAGER */===t.instantiationMode)try{this.getOrInitializeService({instanceIdentifier:tB})}catch(t){// when the instance factory for an eager Component throws an exception during the eager
// initialization, it should not cause a fatal error.
// TODO: Investigate if we need to make it configurable, because some component may want to cause
// a fatal error in this case?
}try{// Create service instances for the pending promises and resolve them
// NOTE: if this.multipleInstances is false, only the default instance will be created
// and all promises with resolve with it regardless of the identifier.
for(var r=z(this.instancesDeferred.entries()),i=r.next();!i.done;i=r.next()){var o=G(i.value,2),a=o[0],s=o[1],u=this.normalizeInstanceIdentifier(a);try{// `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
var c=this.getOrInitializeService({instanceIdentifier:u});s.resolve(c)}catch(t){// when the instance factory throws an exception, it should not cause
// a fatal error. We just leave the promise unresolved.
}}}catch(t){e={error:t}}finally{try{i&&!i.done&&(n=r.return)&&n.call(r)}finally{if(e)throw e.error}}}},t.prototype.clearInstance=function(t){void 0===t&&(t=tB),this.instancesDeferred.delete(t),this.instancesOptions.delete(t),this.instances.delete(t)},// app.delete() will call this method on every provider to delete the services
// TODO: should we mark the provider as deleted?
t.prototype.delete=function(){return H(this,void 0,void 0,function(){var t;return W(this,function(e){switch(e.label){case 0:return[4/*yield*/,Promise.all(Q(Q([],G((t=Array.from(this.instances.values())).filter(function(t){return"INTERNAL"in t})// legacy services
// eslint-disable-next-line @typescript-eslint/no-explicit-any
.map(function(t){return t.INTERNAL.delete()}))),G(t.filter(function(t){return"_delete"in t})// modularized services
// eslint-disable-next-line @typescript-eslint/no-explicit-any
.map(function(t){return t._delete()}))))];case 1:return e.sent(),[2/*return*/]}})})},t.prototype.isComponentSet=function(){return null!=this.component},t.prototype.isInitialized=function(t){return void 0===t&&(t=tB),this.instances.has(t)},t.prototype.getOptions=function(t){return void 0===t&&(t=tB),this.instancesOptions.get(t)||{}},t.prototype.initialize=function(t){void 0===t&&(t={});var e,n,r=t.options,i=this.normalizeInstanceIdentifier(t.instanceIdentifier);if(this.isInitialized(i))throw Error(this.name+"("+i+") has already been initialized");if(!this.isComponentSet())throw Error("Component "+this.name+" has not been registered yet");var o=this.getOrInitializeService({instanceIdentifier:i,options:void 0===r?{}:r});try{// resolve any pending promise waiting for the service instance
for(var a=z(this.instancesDeferred.entries()),s=a.next();!s.done;s=a.next()){var u=G(s.value,2),c=u[0],h=u[1],l=this.normalizeInstanceIdentifier(c);i===l&&h.resolve(o)}}catch(t){e={error:t}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(e)throw e.error}}return o},/**
     *
     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().
     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.
     *
     * @param identifier An optional instance identifier
     * @returns a function to unregister the callback
     */t.prototype.onInit=function(t,e){var n,r=this.normalizeInstanceIdentifier(e),i=null!==(n=this.onInitCallbacks.get(r))&&void 0!==n?n:new Set;i.add(t),this.onInitCallbacks.set(r,i);var o=this.instances.get(r);return o&&t(o,r),function(){i.delete(t)}},/**
     * Invoke onInit callbacks synchronously
     * @param instance the service instance`
     */t.prototype.invokeOnInitCallbacks=function(t,e){var n,r,i=this.onInitCallbacks.get(e);if(i)try{for(var o=z(i),a=o.next();!a.done;a=o.next()){var s=a.value;try{s(t,e)}catch(t){// ignore errors in the onInit callback
}}}catch(t){n={error:t}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}},t.prototype.getOrInitializeService=function(t){var e=t.instanceIdentifier,n=t.options,r=void 0===n?{}:n,i=this.instances.get(e);if(!i&&this.component&&(i=this.component.instanceFactory(this.container,{instanceIdentifier:e===tB?void 0:e,options:r}),this.instances.set(e,i),this.instancesOptions.set(e,r),/**
             * Invoke onInit listeners.
             * Note this.component.onInstanceCreated is different, which is used by the component creator,
             * while onInit listeners are registered by consumers of the provider.
             */this.invokeOnInitCallbacks(i,e),this.component.onInstanceCreated))try{this.component.onInstanceCreated(this.container,e,i)}catch(t){// ignore errors in the onInstanceCreatedCallback
}return i||null},t.prototype.normalizeInstanceIdentifier=function(t){return(void 0===t&&(t=tB),this.component)?this.component.multipleInstances?t:tB:t// assume multiple instances are supported before the component is provided.
},t.prototype.shouldAutoInitialize=function(){return!!this.component&&"EXPLICIT"/* EXPLICIT */!==this.component.instantiationMode},t)}(),tH=/** @class */function(){function t(t){this.name=t,this.providers=new Map}return(/**
     *
     * @param component Component being added
     * @param overwrite When a component with the same name has already been registered,
     * if overwrite is true: overwrite the existing component with the new component and create a new
     * provider with the new component. It can be useful in tests where you want to use different mocks
     * for different tests.
     * if overwrite is false: throw an exception
     */t.prototype.addComponent=function(t){var e=this.getProvider(t.name);if(e.isComponentSet())throw Error("Component "+t.name+" has already been registered with "+this.name);e.setComponent(t)},t.prototype.addOrOverwriteComponent=function(t){this.getProvider(t.name).isComponentSet()&&this.providers.delete(t.name),this.addComponent(t)},/**
     * getProvider provides a type safe interface where it can only be called with a field name
     * present in NameServiceMapping interface.
     *
     * Firebase SDKs providing services should extend NameServiceMapping interface to register
     * themselves.
     */t.prototype.getProvider=function(t){if(this.providers.has(t))return this.providers.get(t);// create a Provider for a service that hasn't registered with Firebase
var e=new tK(t,this);return this.providers.set(t,e),e},t.prototype.getProviders=function(){return Array.from(this.providers.values())},t)}();/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function tW(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;for(var r=Array(t),i=0,e=0;e<n;e++)for(var o=arguments[e],a=0,s=o.length;a<s;a++,i++)r[i]=o[a];return r}/**
 * A container for all of the Logger instances
 */var tz=[];(au=ad||(ad={}))[au.DEBUG=0]="DEBUG",au[au.VERBOSE=1]="VERBOSE",au[au.INFO=2]="INFO",au[au.WARN=3]="WARN",au[au.ERROR=4]="ERROR",au[au.SILENT=5]="SILENT";var tG={debug:ad.DEBUG,verbose:ad.VERBOSE,info:ad.INFO,warn:ad.WARN,error:ad.ERROR,silent:ad.SILENT},tQ=ad.INFO,t$=((ap={})[ad.DEBUG]="log",ap[ad.VERBOSE]="log",ap[ad.INFO]="info",ap[ad.WARN]="warn",ap[ad.ERROR]="error",ap),tY=function(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];if(!(e<t.logLevel)){var i=new Date().toISOString(),o=t$[e];if(o)console[o].apply(console,tW(["["+i+"]  "+t.name+":"],n));else throw Error("Attempted to log a message with an invalid logType (value: "+e+")")}},tX=/** @class */function(){/**
     * Gives you an instance of a Logger to capture messages according to
     * Firebase's logging scheme.
     *
     * @param name The name that the logs will be associated with
     */function t(t){this.name=t,/**
         * The log level of the given Logger instance.
         */this._logLevel=tQ,/**
         * The main (internal) log handler for the Logger instance.
         * Can be set to a new function in internal package code but not by user.
         */this._logHandler=tY,/**
         * The optional, additional, user-defined log handler for the Logger instance.
         */this._userLogHandler=null,/**
         * Capture the current instance for later use
         */tz.push(this)}return Object.defineProperty(t.prototype,"logLevel",{get:function(){return this._logLevel},set:function(t){if(!(t in ad))throw TypeError('Invalid value "'+t+'" assigned to `logLevel`');this._logLevel=t},enumerable:!1,configurable:!0}),// Workaround for setter/getter having to be the same type.
t.prototype.setLogLevel=function(t){this._logLevel="string"==typeof t?tG[t]:t},Object.defineProperty(t.prototype,"logHandler",{get:function(){return this._logHandler},set:function(t){if("function"!=typeof t)throw TypeError("Value assigned to `logHandler` must be a function");this._logHandler=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"userLogHandler",{get:function(){return this._userLogHandler},set:function(t){this._userLogHandler=t},enumerable:!1,configurable:!0}),/**
     * The functions below are all based on the `console` interface
     */t.prototype.debug=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,tW([this,ad.DEBUG],t)),this._logHandler.apply(this,tW([this,ad.DEBUG],t))},t.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,tW([this,ad.VERBOSE],t)),this._logHandler.apply(this,tW([this,ad.VERBOSE],t))},t.prototype.info=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,tW([this,ad.INFO],t)),this._logHandler.apply(this,tW([this,ad.INFO],t))},t.prototype.warn=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,tW([this,ad.WARN],t)),this._logHandler.apply(this,tW([this,ad.WARN],t))},t.prototype.error=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,tW([this,ad.ERROR],t)),this._logHandler.apply(this,tW([this,ad.ERROR],t))},t}();function tJ(t){tz.forEach(function(e){e.setLogLevel(t)})}var tZ=((av={})["no-app"/* NO_APP */]="No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",av["bad-app-name"/* BAD_APP_NAME */]="Illegal App name: '{$appName}",av["duplicate-app"/* DUPLICATE_APP */]="Firebase App named '{$appName}' already exists",av["app-deleted"/* APP_DELETED */]="Firebase App named '{$appName}' already deleted",av["invalid-app-argument"/* INVALID_APP_ARGUMENT */]="firebase.{$appName}() takes either no argument or a Firebase App instance.",av["invalid-log-argument"/* INVALID_LOG_ARGUMENT */]="First argument to `onLog` must be null or a function.",av),t0=new tm("app","Firebase",tZ),t1="@firebase/app",t2="[DEFAULT]",t4=((ag={})[t1]="fire-core",ag["@firebase/analytics"]="fire-analytics",ag["@firebase/app-check"]="fire-app-check",ag["@firebase/auth"]="fire-auth",ag["@firebase/database"]="fire-rtdb",ag["@firebase/functions"]="fire-fn",ag["@firebase/installations"]="fire-iid",ag["@firebase/messaging"]="fire-fcm",ag["@firebase/performance"]="fire-perf",ag["@firebase/remote-config"]="fire-rc",ag["@firebase/storage"]="fire-gcs",ag["@firebase/firestore"]="fire-fst",ag["fire-js"]="fire-js",ag["firebase-wrapper"]="fire-js-all",ag),t3=new tX("@firebase/app"),t6=/** @class */function(){function t(t,e,n){var r=this;this.firebase_=n,this.isDeleted_=!1,this.name_=e.name,this.automaticDataCollectionEnabled_=e.automaticDataCollectionEnabled||!1,this.options_=ti(void 0,t),this.container=new tH(e.name),// add itself to container
this._addComponent(new tV("app",function(){return r},"PUBLIC"/* PUBLIC */)),// populate ComponentContainer with existing components
this.firebase_.INTERNAL.components.forEach(function(t){return r._addComponent(t)})}return Object.defineProperty(t.prototype,"automaticDataCollectionEnabled",{get:function(){return this.checkDestroyed_(),this.automaticDataCollectionEnabled_},set:function(t){this.checkDestroyed_(),this.automaticDataCollectionEnabled_=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"name",{get:function(){return this.checkDestroyed_(),this.name_},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"options",{get:function(){return this.checkDestroyed_(),this.options_},enumerable:!1,configurable:!0}),t.prototype.delete=function(){var t=this;return new Promise(function(e){t.checkDestroyed_(),e()}).then(function(){return t.firebase_.INTERNAL.removeApp(t.name_),Promise.all(t.container.getProviders().map(function(t){return t.delete()}))}).then(function(){t.isDeleted_=!0})},/**
     * Return a service instance associated with this app (creating it
     * on demand), identified by the passed instanceIdentifier.
     *
     * NOTE: Currently storage and functions are the only ones that are leveraging this
     * functionality. They invoke it by calling:
     *
     * ```javascript
     * firebase.app().storage('STORAGE BUCKET ID')
     * ```
     *
     * The service name is passed to this already
     * @internal
     */t.prototype._getService=function(t,e){void 0===e&&(e=t2),this.checkDestroyed_();// Initialize instance if InstatiationMode is `EXPLICIT`.
var n,r=this.container.getProvider(t);// getImmediate will always succeed because _getService is only called for registered components.
return r.isInitialized()||(null===(n=r.getComponent())||void 0===n?void 0:n.instantiationMode)!=="EXPLICIT"/* EXPLICIT */||r.initialize(),r.getImmediate({identifier:e})},/**
     * Remove a service instance from the cache, so we will create a new instance for this service
     * when people try to get this service again.
     *
     * NOTE: currently only firestore is using this functionality to support firestore shutdown.
     *
     * @param name The service name
     * @param instanceIdentifier instance identifier in case multiple instances are allowed
     * @internal
     */t.prototype._removeServiceInstance=function(t,e){void 0===e&&(e=t2),// eslint-disable-next-line @typescript-eslint/no-explicit-any
this.container.getProvider(t).clearInstance(e)},/**
     * @param component the component being added to this app's container
     */t.prototype._addComponent=function(t){try{this.container.addComponent(t)}catch(e){t3.debug("Component "+t.name+" failed to register with FirebaseApp "+this.name,e)}},t.prototype._addOrOverwriteComponent=function(t){this.container.addOrOverwriteComponent(t)},t.prototype.toJSON=function(){return{name:this.name,automaticDataCollectionEnabled:this.automaticDataCollectionEnabled,options:this.options}},/**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */t.prototype.checkDestroyed_=function(){if(this.isDeleted_)throw t0.create("app-deleted"/* APP_DELETED */,{appName:this.name_})},t}();// Prevent dead-code elimination of these methods w/o invalid property
// copying.
t6.prototype.name&&t6.prototype.options||t6.prototype.delete||console.log("dc");var t5=/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */function t(){var e=/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */function(t){var e={},n=new Map,r={// Hack to prevent Babel from modifying the object returned
// as the firebase namespace.
// @ts-ignore
__esModule:!0,initializeApp:function(n,i){void 0===i&&(i={}),("object"!=typeof i||null===i)&&(i={name:i});var o=i;void 0===o.name&&(o.name=t2);var a=o.name;if("string"!=typeof a||!a)throw t0.create("bad-app-name"/* BAD_APP_NAME */,{appName:String(a)});if(tS(e,a))throw t0.create("duplicate-app"/* DUPLICATE_APP */,{appName:a});var s=new t(n,o,r);return e[a]=s,s},// @ts-ignore
app:i,registerVersion:function(t,e,n){// TODO: We can use this check to whitelist strings when/if we set up
// a good whitelist system.
var r,i=null!==(r=t4[t])&&void 0!==r?r:t;n&&(i+="-"+n);var a=i.match(/\s|\//),s=e.match(/\s|\//);if(a||s){var u=['Unable to register library "'+i+'" with version "'+e+'":'];a&&u.push('library name "'+i+'" contains illegal characters (whitespace or "/")'),a&&s&&u.push("and"),s&&u.push('version name "'+e+'" contains illegal characters (whitespace or "/")'),t3.warn(u.join(" "));return}o(new tV(i+"-version",function(){return{library:i,version:e}},"VERSION"/* VERSION */))},setLogLevel:tJ,onLog:function(t,e){if(null!==t&&"function"!=typeof t)throw t0.create("invalid-log-argument"/* INVALID_LOG_ARGUMENT */);!function(t,e){for(var n=0;n<tz.length;n++)!function(n){var r=null;e&&e.level&&(r=tG[e.level]),null===t?n.userLogHandler=null:n.userLogHandler=function(e,n){for(var i=[],o=2;o<arguments.length;o++)i[o-2]=arguments[o];var a=i.map(function(t){if(null==t)return null;if("string"==typeof t)return t;if("number"==typeof t||"boolean"==typeof t)return t.toString();if(t instanceof Error)return t.message;try{return JSON.stringify(t)}catch(t){return null}}).filter(function(t){return t}).join(" ");n>=(null!=r?r:e.logLevel)&&t({level:ad[n].toLowerCase(),message:a,args:i,type:e.name})}}(tz[n])}(t,e)},// @ts-ignore
apps:null,SDK_VERSION:"8.10.0",INTERNAL:{registerComponent:o,removeApp:/**
     * Called by App.delete() - but before any services associated with the App
     * are deleted.
     */function(t){delete e[t]},components:n,useAsService:// Map the requested service to a registered service name
// (used to map auth to serverAuth service when needed).
function(t,e){return"serverAuth"===e?null:e}}};/**
     * Get the App object for a given name (or DEFAULT).
     */function i(t){if(!tS(e,t=t||t2))throw t0.create("no-app"/* NO_APP */,{appName:t});return e[t]}function o(o){var a=o.name;if(n.has(a))return t3.debug("There were multiple attempts to register component "+a+"."),"PUBLIC"/* PUBLIC */===o.type?r[a]:null;// create service namespace for public components
if(n.set(a,o),"PUBLIC"/* PUBLIC */===o.type){// The Service namespace is an accessor function ...
var s=function(t){// eslint-disable-next-line @typescript-eslint/no-explicit-any
if(void 0===t&&(t=i()),"function"!=typeof t[a])// This happens in the following case: firebase.storage('gs:/')
throw t0.create("invalid-app-argument"/* INVALID_APP_ARGUMENT */,{appName:a});// Forward service instance lookup to the FirebaseApp.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
return t[a]()};void 0!==o.serviceProps&&ti(s,o.serviceProps),// eslint-disable-next-line @typescript-eslint/no-explicit-any
r[a]=s,// Patch the FirebaseAppImpl prototype
// eslint-disable-next-line @typescript-eslint/no-explicit-any
t.prototype[a]=// option added to the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this._getService.bind(this,a).apply(this,o.multipleInstances?t:[])}}// add the component to existing app instances
for(var u=0,c=Object.keys(e);u<c.length;u++)e[c[u]]._addComponent(o);return"PUBLIC"/* PUBLIC */===o.type?r[a]:null}return(// Inject a circular default export to allow Babel users who were previously
// using:
//
//   import firebase from 'firebase';
//   which becomes: var firebase = require('firebase').default;
//
// instead of
//
//   import * as firebase from 'firebase';
//   which becomes: var firebase = require('firebase');
// eslint-disable-next-line @typescript-eslint/no-explicit-any
r.default=r,// firebase.apps is a read-only getter.
Object.defineProperty(r,"apps",{get:/*
     * Return an array of all the non-deleted FirebaseApps.
     */function(){// Make a copy so caller cannot mutate the apps list.
return Object.keys(e).map(function(t){return e[t]})}}),// @ts-ignore
i.App=t,r)}(t6);return e.INTERNAL=K(K({},e.INTERNAL),{createFirebaseNamespace:t,extendNamespace:/**
     * Patch the top-level firebase namespace with additional properties.
     *
     * firebase.INTERNAL.extendNamespace()
     */function(t){ti(e,t)},createSubscribe:tR,ErrorFactory:tm,deepExtend:ti}),e}(),t8=/** @class */function(){function t(t){this.container=t}return(// In initial implementation, this will be called by installations on
// auth token refresh, and installations will send this string.
t.prototype.getPlatformInfoString=function(){// Loop through providers and get library/version pairs from any that are
// version components.
return this.container.getProviders().map(function(t){if((null==(e=t.getComponent())?void 0:e.type)!=="VERSION"/* VERSION */)return null;var e,n=t.getImmediate();return n.library+"/"+n.version}).filter(function(t){return t}).join(" ")},t)}();/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// Firebase Lite detection test
// eslint-disable-next-line @typescript-eslint/no-explicit-any
if("object"==typeof self&&self.self===self&&void 0!==self.firebase){t3.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");// eslint-disable-next-line
var t7=self.firebase.SDK_VERSION;t7&&t7.indexOf("LITE")>=0&&t3.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ")}var t9=t5.initializeApp;// TODO: This disable can be removed and the 'ignoreRestArgs' option added to
// the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
t5.initializeApp=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return tc()&&t3.warn('\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the "main" field in package.json.\n      \n      If you are using Webpack, you can specify "main" as the first item in\n      "resolve.mainFields":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the @rollup/plugin-node-resolve plugin and specify "main"\n      as the first item in "mainFields", e.g. [\'main\', \'module\'].\n      https://github.com/rollup/@rollup/plugin-node-resolve\n      '),t9.apply(void 0,t)};var et=t5;et.INTERNAL.registerComponent(new tV("platform-logger",function(t){return new t8(t)},"PRIVATE"/* PRIVATE */)),// Register `app` package.
et.registerVersion(t1,"0.6.30",void 0),// Register platform SDK identifier (no version).
et.registerVersion("fire-js","");var ee=et;(function(){var t,e,n,r="function"==typeof Object.defineProperties?Object.defineProperty:function(t,e,n){t!=Array.prototype&&t!=Object.prototype&&(t[e]=n.value)},i=function(t){t=["object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof O&&O,t];for(var e=0;e<t.length;++e){var n=t[e];if(n&&n.Math==Math)return n}return globalThis}(this);function o(t){var e,n="undefined"!=typeof Symbol&&Symbol.iterator&&t[Symbol.iterator];return n?n.call(t):{next:(e=0,function(){return e<t.length?{done:!1,value:t[e++]}:{done:!0}})}}!function(t,e){if(e){var n=i;t=t.split(".");for(var o=0;o<t.length-1;o++){var a=t[o];a in n||(n[a]={}),n=n[a]}(e=e(o=n[t=t[t.length-1]]))!=o&&null!=e&&r(n,t,{configurable:!0,writable:!0,value:e})}}("Promise",function(t){function e(t){this.b=0,this.c=void 0,this.a=[];var e=this.f();try{t(e.resolve,e.reject)}catch(t){e.reject(t)}}function n(){this.a=null}function r(t){return t instanceof e?t:new e(function(e){e(t)})}if(t)return t;n.prototype.b=function(t){if(null==this.a){this.a=[];var e=this;this.c(function(){e.g()})}this.a.push(t)};var a=i.setTimeout;n.prototype.c=function(t){a(t,0)},n.prototype.g=function(){for(;this.a&&this.a.length;){var t=this.a;this.a=[];for(var e=0;e<t.length;++e){var n=t[e];t[e]=null;try{n()}catch(t){this.f(t)}}}this.a=null},n.prototype.f=function(t){this.c(function(){throw t})},e.prototype.f=function(){function t(t){return function(r){n||(n=!0,t.call(e,r))}}var e=this,n=!1;return{resolve:t(this.m),reject:t(this.g)}},e.prototype.m=function(t){if(t===this)this.g(TypeError("A Promise cannot resolve to itself"));else if(t instanceof e)this.s(t);else{switch(typeof t){case"object":var n=null!=t;break;case"function":n=!0;break;default:n=!1}n?this.v(t):this.h(t)}},e.prototype.v=function(t){var e=void 0;try{e=t.then}catch(t){this.g(t);return}"function"==typeof e?this.u(e,t):this.h(t)},e.prototype.g=function(t){this.i(2,t)},e.prototype.h=function(t){this.i(1,t)},e.prototype.i=function(t,e){if(0!=this.b)throw Error("Cannot settle("+t+", "+e+"): Promise already settled in state"+this.b);this.b=t,this.c=e,this.l()},e.prototype.l=function(){if(null!=this.a){for(var t=0;t<this.a.length;++t)s.b(this.a[t]);this.a=null}};var s=new n;return e.prototype.s=function(t){var e=this.f();t.Ra(e.resolve,e.reject)},e.prototype.u=function(t,e){var n=this.f();try{t.call(e,n.resolve,n.reject)}catch(t){n.reject(t)}},e.prototype.then=function(t,n){function r(t,e){return"function"==typeof t?function(e){try{i(t(e))}catch(t){o(t)}}:e}var i,o,a=new e(function(t,e){i=t,o=e});return this.Ra(r(t,i),r(n,o)),a},e.prototype.catch=function(t){return this.then(void 0,t)},e.prototype.Ra=function(t,e){function n(){switch(r.b){case 1:t(r.c);break;case 2:e(r.c);break;default:throw Error("Unexpected state: "+r.b)}}var r=this;null==this.a?s.b(n):this.a.push(n)},e.resolve=r,e.reject=function(t){return new e(function(e,n){n(t)})},e.race=function(t){return new e(function(e,n){for(var i=o(t),a=i.next();!a.done;a=i.next())r(a.value).Ra(e,n)})},e.all=function(t){var n=o(t),i=n.next();return i.done?r([]):new e(function(t,e){var o=[],a=0;do o.push(void 0),a++,r(i.value).Ra(function(e){return function(n){o[e]=n,0==--a&&t(o)}}(o.length-1),e),i=n.next();while(!i.done)})},e});var a=a||{},s=this||self,u=/^[\w+/_-]+[=]{0,2}$/,c=null;function h(t){return(t=t.querySelector&&t.querySelector("script[nonce]"))&&(t=t.nonce||t.getAttribute("nonce"))&&u.test(t)?t:""}function l(){}function f(t){var e=typeof t;return"object"!=e?e:t?Array.isArray(t)?"array":e:"null"}function p(t){var e=f(t);return"array"==e||"object"==e&&"number"==typeof t.length}function d(t){return"function"==f(t)}function v(t){var e=typeof t;return"object"==e&&null!=t||"function"==e}function g(t){return Object.prototype.hasOwnProperty.call(t,m)&&t[m]||(t[m]=++y)}var m="closure_uid_"+(1e9*Math.random()>>>0),y=0;function _(t,e,n){return t.call.apply(t.bind,arguments)}function b(t,e,n){if(!t)throw Error();if(2<arguments.length){var r=Array.prototype.slice.call(arguments,2);return function(){var n=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(n,r),t.apply(e,n)}}return function(){return t.apply(e,arguments)}}function w(t,e,n){return(w=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?_:b).apply(null,arguments)}function I(t,e){var n=Array.prototype.slice.call(arguments,1);return function(){var e=n.slice();return e.push.apply(e,arguments),t.apply(this,e)}}var T=Date.now;function E(t,e){function n(){}n.prototype=e.prototype,t.bb=e.prototype,t.prototype=new n,t.prototype.constructor=t}function S(t){return t}function C(t,e,n){this.code=N+t,this.message=e||A[t]||"",this.a=n||null}function k(t){var e=t&&t.code;return e?new C(e.substring(N.length),t.message,t.serverResponse):null}E(C,Error),C.prototype.w=function(){var t={code:this.code,message:this.message};return this.a&&(t.serverResponse=this.a),t},C.prototype.toJSON=function(){return this.w()};var N="auth/",A={"admin-restricted-operation":"This operation is restricted to administrators only.","argument-error":"","app-not-authorized":"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.","app-not-installed":"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.","captcha-check-failed":"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.","code-expired":"The SMS code has expired. Please re-send the verification code to try again.","cordova-not-ready":"Cordova framework is not ready.","cors-unsupported":"This browser is not supported.","credential-already-in-use":"This credential is already associated with a different user account.","custom-token-mismatch":"The custom token corresponds to a different audience.","requires-recent-login":"This operation is sensitive and requires recent authentication. Log in again before retrying this request.","dynamic-link-not-activated":"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.","email-change-needs-verification":"Multi-factor users must always have a verified email.","email-already-in-use":"The email address is already in use by another account.","expired-action-code":"The action code has expired. ","cancelled-popup-request":"This operation has been cancelled due to another conflicting popup being opened.","internal-error":"An internal error has occurred.","invalid-app-credential":"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.","invalid-app-id":"The mobile app identifier is not registed for the current project.","invalid-user-token":"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.","invalid-auth-event":"An internal error has occurred.","invalid-verification-code":"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure to use the verification code provided by the user.","invalid-continue-uri":"The continue URL provided in the request is invalid.","invalid-cordova-configuration":"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.","invalid-custom-token":"The custom token format is incorrect. Please check the documentation.","invalid-dynamic-link-domain":"The provided dynamic link domain is not configured or authorized for the current project.","invalid-email":"The email address is badly formatted.","invalid-api-key":"Your API key is invalid, please check you have copied it correctly.","invalid-cert-hash":"The SHA-1 certificate hash provided is invalid.","invalid-credential":"The supplied auth credential is malformed or has expired.","invalid-message-payload":"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-multi-factor-session":"The request does not contain a valid proof of first factor successful sign-in.","invalid-oauth-provider":"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.","invalid-oauth-client-id":"The OAuth client ID provided is either invalid or does not match the specified API key.","unauthorized-domain":"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.","invalid-action-code":"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.","wrong-password":"The password is invalid or the user does not have a password.","invalid-persistence-type":"The specified persistence type is invalid. It can only be local, session or none.","invalid-phone-number":"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].","invalid-provider-id":"The specified provider ID is invalid.","invalid-recipient-email":"The email corresponding to this action failed to send as the provided recipient email address is invalid.","invalid-sender":"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-verification-id":"The verification ID used to create the phone auth credential is invalid.","invalid-tenant-id":"The Auth instance's tenant ID is invalid.","multi-factor-info-not-found":"The user does not have a second factor matching the identifier provided.","multi-factor-auth-required":"Proof of ownership of a second factor is required to complete sign-in.","missing-android-pkg-name":"An Android Package Name must be provided if the Android App is required to be installed.","auth-domain-config-required":"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.","missing-app-credential":"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.","missing-verification-code":"The phone auth credential was created with an empty SMS verification code.","missing-continue-uri":"A continue URL must be provided in the request.","missing-iframe-start":"An internal error has occurred.","missing-ios-bundle-id":"An iOS Bundle ID must be provided if an App Store ID is provided.","missing-multi-factor-info":"No second factor identifier is provided.","missing-multi-factor-session":"The request is missing proof of first factor successful sign-in.","missing-or-invalid-nonce":"The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.","missing-phone-number":"To send verification codes, provide a phone number for the recipient.","missing-verification-id":"The phone auth credential was created with an empty verification ID.","app-deleted":"This instance of FirebaseApp has been deleted.","account-exists-with-different-credential":"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.","network-request-failed":"A network error (such as timeout, interrupted connection or unreachable host) has occurred.","no-auth-event":"An internal error has occurred.","no-such-provider":"User was not linked to an account with the given provider.","null-user":"A null user object was provided as the argument for an operation which requires a non-null user object.","operation-not-allowed":"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.","operation-not-supported-in-this-environment":'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',"popup-blocked":"Unable to establish a connection with the popup. It may have been blocked by the browser.","popup-closed-by-user":"The popup has been closed by the user before finalizing the operation.","provider-already-linked":"User can only be linked to one identity for the given provider.","quota-exceeded":"The project's quota for this operation has been exceeded.","redirect-cancelled-by-user":"The redirect operation has been cancelled by the user before finalizing.","redirect-operation-pending":"A redirect sign-in operation is already pending.","rejected-credential":"The request contains malformed or mismatching credentials.","second-factor-already-in-use":"The second factor is already enrolled on this account.","maximum-second-factor-count-exceeded":"The maximum allowed number of second factors on a user has been exceeded.","tenant-id-mismatch":"The provided tenant ID does not match the Auth instance's tenant ID",timeout:"The operation has timed out.","user-token-expired":"The user's credential is no longer valid. The user must sign in again.","too-many-requests":"We have blocked all requests from this device due to unusual activity. Try again later.","unauthorized-continue-uri":"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.","unsupported-first-factor":"Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.","unsupported-persistence-type":"The current environment does not support the specified persistence type.","unsupported-tenant-operation":"This operation is not supported in a multi-tenant context.","unverified-email":"The operation requires a verified email.","user-cancelled":"The user did not grant your application the permissions it requested.","user-not-found":"There is no user record corresponding to this identifier. The user may have been deleted.","user-disabled":"The user account has been disabled by an administrator.","user-mismatch":"The supplied credentials do not correspond to the previously signed in user.","user-signed-out":"","weak-password":"The password must be 6 characters long or more.","web-storage-unsupported":"This browser is not supported or 3rd party cookies and data may be disabled."},R={ld:{Ua:"https://staging-identitytoolkit.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",$a:"https://staging-securetoken.sandbox.googleapis.com/v1/token",Xa:"https://staging-identitytoolkit.sandbox.googleapis.com/v2/",id:"b"},sd:{Ua:"https://www.googleapis.com/identitytoolkit/v3/relyingparty/",$a:"https://securetoken.googleapis.com/v1/token",Xa:"https://identitytoolkit.googleapis.com/v2/",id:"p"},ud:{Ua:"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",$a:"https://staging-securetoken.sandbox.googleapis.com/v1/token",Xa:"https://staging-identitytoolkit.sandbox.googleapis.com/v2/",id:"s"},vd:{Ua:"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/",$a:"https://test-securetoken.sandbox.googleapis.com/v1/token",Xa:"https://test-identitytoolkit.sandbox.googleapis.com/v2/",id:"t"}};function x(t){for(var e in R)if(R[e].id===t)return{firebaseEndpoint:(t=R[e]).Ua,secureTokenEndpoint:t.$a,identityPlatformEndpoint:t.Xa};return null}function P(t){if(!t)return!1;try{return!!t.$goog_Thenable}catch(t){return!1}}function D(t){if(Error.captureStackTrace)Error.captureStackTrace(this,D);else{var e=Error().stack;e&&(this.stack=e)}t&&(this.message=String(t))}function L(t,e){t=t.split("%s");for(var n="",r=t.length-1,i=0;i<r;i++)n+=t[i]+(i<e.length?e[i]:"%s");D.call(this,n+t[r])}function M(t,e){throw new L("Failure"+(t?": "+t:""),Array.prototype.slice.call(arguments,1))}function F(t,e){this.c=t,this.f=e,this.b=0,this.a=null}function j(t,e){t.f(e),100>t.b&&(t.b++,e.next=t.a,t.a=e)}function U(){this.b=this.a=null}oW=x("__EID__")?"__EID__":void 0,E(D,Error),D.prototype.name="CustomError",E(L,D),L.prototype.name="AssertionError",F.prototype.get=function(){if(0<this.b){this.b--;var t=this.a;this.a=t.next,t.next=null}else t=this.c();return t};var q=new F(function(){return new V},function(t){t.reset()});function V(){this.next=this.b=this.a=null}U.prototype.add=function(t,e){var n=q.get();n.set(t,e),this.b?this.b.next=n:this.a=n,this.b=n},V.prototype.set=function(t,e){this.a=t,this.b=e,this.next=null},V.prototype.reset=function(){this.next=this.b=this.a=null};var B=Array.prototype.indexOf?function(t,e){return Array.prototype.indexOf.call(t,e,void 0)}:function(t,e){if("string"==typeof t)return"string"!=typeof e||1!=e.length?-1:t.indexOf(e,0);for(var n=0;n<t.length;n++)if(n in t&&t[n]===e)return n;return -1},K=Array.prototype.forEach?function(t,e,n){Array.prototype.forEach.call(t,e,n)}:function(t,e,n){for(var r=t.length,i="string"==typeof t?t.split(""):t,o=0;o<r;o++)o in i&&e.call(n,i[o],o,t)},H=Array.prototype.filter?function(t,e){return Array.prototype.filter.call(t,e,void 0)}:function(t,e){for(var n=t.length,r=[],i=0,o="string"==typeof t?t.split(""):t,a=0;a<n;a++)if(a in o){var s=o[a];e.call(void 0,s,a,t)&&(r[i++]=s)}return r},W=Array.prototype.map?function(t,e){return Array.prototype.map.call(t,e,void 0)}:function(t,e){for(var n=t.length,r=Array(n),i="string"==typeof t?t.split(""):t,o=0;o<n;o++)o in i&&(r[o]=e.call(void 0,i[o],o,t));return r},z=Array.prototype.some?function(t,e){return Array.prototype.some.call(t,e,void 0)}:function(t,e){for(var n=t.length,r="string"==typeof t?t.split(""):t,i=0;i<n;i++)if(i in r&&e.call(void 0,r[i],i,t))return!0;return!1};function G(t,e){return 0<=B(t,e)}function Q(t,e){var n;return(n=0<=(e=B(t,e)))&&Array.prototype.splice.call(t,e,1),n}function $(t,e){var n=0;!function(t,e){for(var n="string"==typeof t?t.split(""):t,r=t.length-1;0<=r;--r)r in n&&e.call(void 0,n[r],r,t)}(t,function(r,i){e.call(void 0,r,i,t)&&1==Array.prototype.splice.call(t,i,1).length&&n++})}function Y(t){return Array.prototype.concat.apply([],arguments)}function X(t){var e=t.length;if(0<e){for(var n=Array(e),r=0;r<e;r++)n[r]=t[r];return n}return[]}var J=String.prototype.trim?function(t){return t.trim()}:function(t){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(t)[1]},Z=/&/g,tt=/</g,te=/>/g,tn=/"/g,tr=/'/g,ti=/\x00/g,to=/[\x00&<>"']/;function ta(t,e){return -1!=t.indexOf(e)}function ts(t,e){return t<e?-1:t>e?1:0}t:{var tu=s.navigator;if(tu){var tc=tu.userAgent;if(tc){oz=tc;break t}}oz=""}function th(t){return ta(oz,t)}function tl(t,e){for(var n in t)e.call(void 0,t[n],n,t)}function tf(t){for(var e in t)return!1;return!0}function tp(t){var e,n={};for(e in t)n[e]=t[e];return n}var td="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function tv(t,e){for(var n,r,i=1;i<arguments.length;i++){for(n in r=arguments[i])t[n]=r[n];for(var o=0;o<td.length;o++)n=td[o],Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}}function tg(t,e){t:{try{var n=t&&t.ownerDocument,r=n&&(n.defaultView||n.parentWindow);if((r=r||s).Element&&r.Location){var i=r;break t}}catch(t){}i=null}if(i&&void 0!==i[e]&&(!t||!(t instanceof i[e])&&(t instanceof i.Location||t instanceof i.Element))){if(v(t))try{var o=t.constructor.displayName||t.constructor.name||Object.prototype.toString.call(t)}catch(t){o="<object could not be stringified>"}else o=void 0===t?"undefined":null===t?"null":typeof t;M("Argument is not a %s (or a non-Element, non-Location mock); got: %s",e,o)}}function tm(t,e){this.a=t===tb&&e||"",this.b=t_}function ty(t){return t instanceof tm&&t.constructor===tm&&t.b===t_?t.a:(M("expected object of type Const, got '"+t+"'"),"type_error:Const")}tm.prototype.ta=!0,tm.prototype.sa=function(){return this.a},tm.prototype.toString=function(){return"Const{"+this.a+"}"};var t_={},tb={};function tw(){if(void 0===oG){var t=null,e=s.trustedTypes;if(e&&e.createPolicy){try{t=e.createPolicy("goog#html",{createHTML:S,createScript:S,createScriptURL:S})}catch(t){s.console&&s.console.error(t.message)}oG=t}else oG=t}return oG}function tI(t,e){this.a=e===tk?t:""}function tT(t){return t instanceof tI&&t.constructor===tI?t.a:(M("expected object of type TrustedResourceUrl, got '"+t+"' of type "+f(t)),"type_error:TrustedResourceUrl")}function tE(t,e){var n,r,i=ty(t);if(!tC.test(i))throw Error("Invalid TrustedResourceUrl format: "+i);return n=t=i.replace(tS,function(t,n){if(!Object.prototype.hasOwnProperty.call(e,n))throw Error('Found marker, "'+n+'", in format string, "'+i+'", but no valid label mapping found in args: '+JSON.stringify(e));return(t=e[n])instanceof tm?ty(t):encodeURIComponent(String(t))}),n=(r=tw())?r.createScriptURL(n):n,new tI(n,tk)}tI.prototype.ta=!0,tI.prototype.sa=function(){return this.a.toString()},tI.prototype.toString=function(){return"TrustedResourceUrl{"+this.a+"}"};var tS=/%{(\w+)}/g,tC=/^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i,tk={};function tN(t,e){this.a=e===tL?t:""}function tA(t){return t instanceof tN&&t.constructor===tN?t.a:(M("expected object of type SafeUrl, got '"+t+"' of type "+f(t)),"type_error:SafeUrl")}tN.prototype.ta=!0,tN.prototype.sa=function(){return this.a.toString()},tN.prototype.toString=function(){return"SafeUrl{"+this.a+"}"};var tR=/^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font\/\w+|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\w+=(?:\w+|"[\w;,= ]+"))*$/i,tx=/^data:(.*);base64,[a-z0-9+\/]+=*$/i,tP=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;function tD(t){if(t instanceof tN)return t;if(t="object"==typeof t&&t.ta?t.sa():String(t),tP.test(t))t=new tN(t,tL);else{var e=(t=(t=String(t)).replace(/(%0A|%0D)/g,"")).match(tx);t=e&&tR.test(e[1])?new tN(t,tL):null}return t}function tO(t){return t instanceof tN?t:(t="object"==typeof t&&t.ta?t.sa():String(t),tP.test(t)||(t="about:invalid#zClosurez"),new tN(t,tL))}var tL={},tM=new tN("about:invalid#zClosurez",tL);function tF(t,e,n){this.a=n===tj?t:""}tF.prototype.ta=!0,tF.prototype.sa=function(){return this.a.toString()},tF.prototype.toString=function(){return"SafeHtml{"+this.a+"}"};var tj={};function tU(t,e,n,r){return t=t instanceof tN?t:tO(t),e=e||s,n=n instanceof tm?ty(n):n||"",e.open(tA(t),n,r,void 0)}function tq(t,e){for(var n=t.split("%s"),r="",i=Array.prototype.slice.call(arguments,1);i.length&&1<n.length;)r+=n.shift()+i.shift();return r+n.join("%s")}function tV(t){return to.test(t)&&(-1!=t.indexOf("&")&&(t=t.replace(Z,"&amp;")),-1!=t.indexOf("<")&&(t=t.replace(tt,"&lt;")),-1!=t.indexOf(">")&&(t=t.replace(te,"&gt;")),-1!=t.indexOf('"')&&(t=t.replace(tn,"&quot;")),-1!=t.indexOf("'")&&(t=t.replace(tr,"&#39;")),-1!=t.indexOf("\x00")&&(t=t.replace(ti,"&#0;"))),t}function tB(t){return tB[" "](t),t}tB[" "]=l;var tK=th("Opera"),tH=th("Trident")||th("MSIE"),tW=th("Edge"),tz=tW||tH,tG=th("Gecko")&&!(ta(oz.toLowerCase(),"webkit")&&!th("Edge"))&&!(th("Trident")||th("MSIE"))&&!th("Edge"),tQ=ta(oz.toLowerCase(),"webkit")&&!th("Edge");function t$(){var t=s.document;return t?t.documentMode:void 0}t:{var tY,tX="",tJ=(tY=oz,tG?/rv:([^\);]+)(\)|;)/.exec(tY):tW?/Edge\/([\d\.]+)/.exec(tY):tH?/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(tY):tQ?/WebKit\/(\S+)/.exec(tY):tK?/(?:Version)[ \/]?(\S+)/.exec(tY):void 0);if(tJ&&(tX=tJ?tJ[1]:""),tH){var tZ=t$();if(null!=tZ&&tZ>parseFloat(tX)){oQ=String(tZ);break t}}oQ=tX}var t0={};function t1(t){return Object.prototype.hasOwnProperty.call(t0,t)?t0[t]:t0[t]=function(){for(var e=0,n=J(String(oQ)).split("."),r=J(String(t)).split("."),i=Math.max(n.length,r.length),o=0;0==e&&o<i;o++){var a=n[o]||"",s=r[o]||"";do{if(a=/(\d*)(\D*)(.*)/.exec(a)||["","","",""],s=/(\d*)(\D*)(.*)/.exec(s)||["","","",""],0==a[0].length&&0==s[0].length)break;e=ts(0==a[1].length?0:parseInt(a[1],10),0==s[1].length?0:parseInt(s[1],10))||ts(0==a[2].length,0==s[2].length)||ts(a[2],s[2]),a=a[3],s=s[3]}while(0==e)}return 0<=e}(t)}var t2=s.document&&tH&&(t$()||parseInt(oQ,10))||void 0;try{new self.OffscreenCanvas(0,0).getContext("2d")}catch(t){}var t4=!tH||9<=Number(t2);function t3(t){var e=document;return"string"==typeof t?e.getElementById(t):t}function t6(t,e){tl(e,function(e,n){e&&"object"==typeof e&&e.ta&&(e=e.sa()),"style"==n?t.style.cssText=e:"class"==n?t.className=e:"for"==n?t.htmlFor=e:t5.hasOwnProperty(n)?t.setAttribute(t5[n],e):0==n.lastIndexOf("aria-",0)||0==n.lastIndexOf("data-",0)?t.setAttribute(n,e):t[n]=e})}var t5={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"};function t8(t,e){return e=String(e),"application/xhtml+xml"===t.contentType&&(e=e.toLowerCase()),t.createElement(e)}function t7(t){s.setTimeout(function(){throw t},0)}function t9(t,e){oX||function(){if(s.Promise&&s.Promise.resolve){var t=s.Promise.resolve(void 0);oX=function(){t.then(er)}}else oX=function(){!d(s.setImmediate)||s.Window&&s.Window.prototype&&!th("Edge")&&s.Window.prototype.setImmediate==s.setImmediate?(oY||(oY=function(){var t=s.MessageChannel;if(void 0===t&&"undefined"!=typeof window&&window.postMessage&&window.addEventListener&&!th("Presto")&&(t=function(){var t=t8(document,"IFRAME");t.style.display="none",document.documentElement.appendChild(t);var e=t.contentWindow;(t=e.document).open(),t.close();var n="callImmediate"+Math.random(),r="file:"==e.location.protocol?"*":e.location.protocol+"//"+e.location.host;t=w(function(t){("*"==r||t.origin==r)&&t.data==n&&this.port1.onmessage()},this),e.addEventListener("message",t,!1),this.port1={},this.port2={postMessage:function(){e.postMessage(n,r)}}}),void 0!==t&&!th("Trident")&&!th("MSIE")){var e=new t,n={},r=n;return e.port1.onmessage=function(){if(void 0!==n.next){var t=(n=n.next).Hb;n.Hb=null,t()}},function(t){r.next={Hb:t},r=r.next,e.port2.postMessage(0)}}return function(t){s.setTimeout(t,0)}}()),oY(er)):s.setImmediate(er)}}(),et||(oX(),et=!0),en.add(t,e)}var et=!1,en=new U;function er(){for(var t,e;t=null,en.a&&(t=en.a,en.a=en.a.next,en.a||(en.b=null),t.next=null),e=t;){try{e.a.call(e.b)}catch(t){t7(t)}j(q,e)}et=!1}function ei(t,e){if(this.a=eo,this.i=void 0,this.f=this.b=this.c=null,this.g=this.h=!1,t!=l)try{var n=this;t.call(e,function(t){em(n,ea,t)},function(t){if(!(t instanceof eE))try{if(t instanceof Error)throw t;throw Error("Promise rejected.")}catch(t){}em(n,es,t)})}catch(t){em(this,es,t)}}var eo=0,ea=2,es=3;function eu(){this.next=this.f=this.b=this.g=this.a=null,this.c=!1}eu.prototype.reset=function(){this.f=this.b=this.g=this.a=null,this.c=!1};var ec=new F(function(){return new eu},function(t){t.reset()});function eh(t,e,n){var r=ec.get();return r.g=t,r.b=e,r.f=n,r}function el(t){if(t instanceof ei)return t;var e=new ei(l);return em(e,ea,t),e}function ef(t){return new ei(function(e,n){n(t)})}function ep(t,e,n){ey(t,e,n,null)||t9(I(e,t))}function ed(t){return new ei(function(e){var n=t.length,r=[];if(n)for(var i=function(t,i,o){n--,r[t]=i?{Qb:!0,value:o}:{Qb:!1,reason:o},0==n&&e(r)},o=0;o<t.length;o++)ep(t[o],I(i,o,!0),I(i,o,!1));else e(r)})}function ev(t,e){t.b||t.a!=ea&&t.a!=es||e_(t),t.f?t.f.next=e:t.b=e,t.f=e}function eg(t,e,n,r){var i=eh(null,null,null);return i.a=new ei(function(t,o){i.g=e?function(n){try{var i=e.call(r,n);t(i)}catch(t){o(t)}}:t,i.b=n?function(e){try{var i=n.call(r,e);void 0===i&&e instanceof eE?o(e):t(i)}catch(t){o(t)}}:o}),i.a.c=t,ev(t,i),i.a}function em(t,e,n){var r;t.a==eo&&(t===n&&(e=es,n=TypeError("Promise cannot resolve to itself")),t.a=1,ey(n,t.$c,t.ad,t)||(t.i=n,t.a=e,t.c=null,e_(t),e!=es||n instanceof eE||(r=n,t.g=!0,t9(function(){t.g&&eT.call(null,r)}))))}function ey(t,e,n,r){if(t instanceof ei)return ev(t,eh(e||l,n||null,r)),!0;if(P(t))return t.then(e,n,r),!0;if(v(t))try{var i=t.then;if(d(i))return function(t,e,n,r,i){function o(t){a||(a=!0,r.call(i,t))}var a=!1;try{e.call(t,function(t){a||(a=!0,n.call(i,t))},o)}catch(t){o(t)}}(t,i,e,n,r),!0}catch(t){return n.call(r,t),!0}return!1}function e_(t){t.h||(t.h=!0,t9(t.gc,t))}function eb(t){var e=null;return t.b&&(e=t.b,t.b=e.next,e.next=null),t.b||(t.f=null),e}function ew(t,e,n,r){if(n==es&&e.b&&!e.c)for(;t&&t.g;t=t.c)t.g=!1;if(e.a)e.a.c=null,eI(e,n,r);else try{e.c?e.g.call(e.f):eI(e,n,r)}catch(t){eT.call(null,t)}j(ec,e)}function eI(t,e,n){e==ea?t.g.call(t.f,n):t.b&&t.b.call(t.f,n)}ei.prototype.then=function(t,e,n){return eg(this,d(t)?t:null,d(e)?e:null,n)},ei.prototype.$goog_Thenable=!0,(n=ei.prototype).oa=function(t,e){return(t=eh(t,t,e)).c=!0,ev(this,t),this},n.o=function(t,e){return eg(this,null,t,e)},n.cancel=function(t){if(this.a==eo){var e=new eE(t);t9(function(){(function t(e,n){if(e.a==eo){if(e.c){var r=e.c;if(r.b){for(var i=0,o=null,a=null,s=r.b;s&&(s.c||(i++,s.a==e&&(o=s),!(o&&1<i)));s=s.next)o||(a=s);o&&(r.a==eo&&1==i?t(r,n):(a?((i=a).next==r.f&&(r.f=i),i.next=i.next.next):eb(r),ew(r,o,es,n)))}e.c=null}else em(e,es,n)}})(this,e)},this)}},n.$c=function(t){this.a=eo,em(this,ea,t)},n.ad=function(t){this.a=eo,em(this,es,t)},n.gc=function(){for(var t;t=eb(this);)ew(this,t,this.a,this.i);this.h=!1};var eT=t7;function eE(t){D.call(this,t)}function eS(){0!=eC&&(ek[g(this)]=this),this.ya=this.ya,this.pa=this.pa}E(eE,D),eE.prototype.name="cancel";var eC=0,ek={};function eN(t){if(!t.ya&&(t.ya=!0,t.Da(),0!=eC)){var e=g(t);if(0!=eC&&t.pa&&0<t.pa.length)throw Error(t+" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete ek[e]}}eS.prototype.ya=!1,eS.prototype.Da=function(){if(this.pa)for(;this.pa.length;)this.pa.shift()()};var eA=Object.freeze||function(t){return t},eR=!tH||9<=Number(t2),ex=tH&&!t1("9"),eP=function(){if(!s.addEventListener||!Object.defineProperty)return!1;var t=!1,e=Object.defineProperty({},"passive",{get:function(){t=!0}});try{s.addEventListener("test",l,e),s.removeEventListener("test",l,e)}catch(t){}return t}();function eD(t,e){this.type=t,this.b=this.target=e,this.defaultPrevented=!1}function eO(t,e){if(eD.call(this,t?t.type:""),this.relatedTarget=this.b=this.target=null,this.button=this.screenY=this.screenX=this.clientY=this.clientX=0,this.key="",this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1,this.pointerId=0,this.pointerType="",this.a=null,t){var n=this.type=t.type,r=t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:null;if(this.target=t.target||t.srcElement,this.b=e,e=t.relatedTarget){if(tG){t:{try{tB(e.nodeName);var i=!0;break t}catch(t){}i=!1}i||(e=null)}}else"mouseover"==n?e=t.fromElement:"mouseout"==n&&(e=t.toElement);this.relatedTarget=e,r?(this.clientX=void 0!==r.clientX?r.clientX:r.pageX,this.clientY=void 0!==r.clientY?r.clientY:r.pageY,this.screenX=r.screenX||0,this.screenY=r.screenY||0):(this.clientX=void 0!==t.clientX?t.clientX:t.pageX,this.clientY=void 0!==t.clientY?t.clientY:t.pageY,this.screenX=t.screenX||0,this.screenY=t.screenY||0),this.button=t.button,this.key=t.key||"",this.ctrlKey=t.ctrlKey,this.altKey=t.altKey,this.shiftKey=t.shiftKey,this.metaKey=t.metaKey,this.pointerId=t.pointerId||0,this.pointerType="string"==typeof t.pointerType?t.pointerType:eL[t.pointerType]||"",this.a=t,t.defaultPrevented&&this.preventDefault()}}eD.prototype.preventDefault=function(){this.defaultPrevented=!0},E(eO,eD);var eL=eA({2:"touch",3:"pen",4:"mouse"});eO.prototype.preventDefault=function(){eO.bb.preventDefault.call(this);var t=this.a;if(t.preventDefault)t.preventDefault();else if(t.returnValue=!1,ex)try{(t.ctrlKey||112<=t.keyCode&&123>=t.keyCode)&&(t.keyCode=-1)}catch(t){}},eO.prototype.g=function(){return this.a};var eM="closure_listenable_"+(1e6*Math.random()|0),eF=0;function ej(t,e,n,r,i){this.listener=t,this.proxy=null,this.src=e,this.type=n,this.capture=!!r,this.Wa=i,this.key=++eF,this.wa=this.Qa=!1}function eU(t){t.wa=!0,t.listener=null,t.proxy=null,t.src=null,t.Wa=null}function eq(t){this.src=t,this.a={},this.b=0}function eV(t,e){var n=e.type;n in t.a&&Q(t.a[n],e)&&(eU(e),0==t.a[n].length&&(delete t.a[n],t.b--))}function eB(t,e,n,r){for(var i=0;i<t.length;++i){var o=t[i];if(!o.wa&&o.listener==e&&!!n==o.capture&&o.Wa==r)return i}return -1}eq.prototype.add=function(t,e,n,r,i){var o=t.toString();(t=this.a[o])||(t=this.a[o]=[],this.b++);var a=eB(t,e,r,i);return -1<a?(e=t[a],n||(e.Qa=!1)):((e=new ej(e,this.src,o,!!r,i)).Qa=n,t.push(e)),e};var eK="closure_lm_"+(1e6*Math.random()|0),eH={},eW=0;function ez(t,e,n,r,i){if(r&&r.once)eQ(t,e,n,r,i);else if(Array.isArray(e))for(var o=0;o<e.length;o++)ez(t,e[o],n,r,i);else n=e4(n),t&&t[eM]?e6(t,e,n,v(r)?!!r.capture:!!r,i):eG(t,e,n,!1,r,i)}function eG(t,e,n,r,i,o){if(!e)throw Error("Invalid event type");var a,s=v(i)?!!i.capture:!!i,u=e1(t);if(u||(t[eK]=u=new eq(t)),!(n=u.add(e,n,r,s,o)).proxy){if(r=a=eR?function(t){return e0.call(a.src,a.listener,t)}:function(t){if(!(t=e0.call(a.src,a.listener,t)))return t},n.proxy=r,r.src=t,r.listener=n,t.addEventListener)eP||(i=s),void 0===i&&(i=!1),t.addEventListener(e.toString(),r,i);else if(t.attachEvent)t.attachEvent(eX(e.toString()),r);else if(t.addListener&&t.removeListener)t.addListener(r);else throw Error("addEventListener and attachEvent are unavailable.");eW++}}function eQ(t,e,n,r,i){if(Array.isArray(e))for(var o=0;o<e.length;o++)eQ(t,e[o],n,r,i);else n=e4(n),t&&t[eM]?e5(t,e,n,v(r)?!!r.capture:!!r,i):eG(t,e,n,!0,r,i)}function e$(t,e,n,r,i){if(Array.isArray(e))for(var o=0;o<e.length;o++)e$(t,e[o],n,r,i);else(r=v(r)?!!r.capture:!!r,n=e4(n),t&&t[eM])?(t=t.v,(e=String(e).toString())in t.a&&-1<(n=eB(o=t.a[e],n,r,i))&&(eU(o[n]),Array.prototype.splice.call(o,n,1),0==o.length&&(delete t.a[e],t.b--))):t&&(t=e1(t))&&(e=t.a[e.toString()],t=-1,e&&(t=eB(e,n,r,i)),(n=-1<t?e[t]:null)&&eY(n))}function eY(t){if("number"!=typeof t&&t&&!t.wa){var e=t.src;if(e&&e[eM])eV(e.v,t);else{var n=t.type,r=t.proxy;e.removeEventListener?e.removeEventListener(n,r,t.capture):e.detachEvent?e.detachEvent(eX(n),r):e.addListener&&e.removeListener&&e.removeListener(r),eW--,(n=e1(e))?(eV(n,t),0==n.b&&(n.src=null,e[eK]=null)):eU(t)}}}function eX(t){return t in eH?eH[t]:eH[t]="on"+t}function eJ(t,e,n,r){var i=!0;if((t=e1(t))&&(e=t.a[e.toString()]))for(e=e.concat(),t=0;t<e.length;t++){var o=e[t];o&&o.capture==n&&!o.wa&&(o=eZ(o,r),i=i&&!1!==o)}return i}function eZ(t,e){var n=t.listener,r=t.Wa||t.src;return t.Qa&&eY(t),n.call(r,e)}function e0(t,e){if(t.wa)return!0;if(!eR){if(!e)t:{e=["window","event"];for(var n=s,r=0;r<e.length;r++)if(null==(n=n[e[r]])){e=null;break t}e=n}if(r=e,e=new eO(r,this),n=!0,!(0>r.keyCode||void 0!=r.returnValue)){t:{var i=!1;if(0==r.keyCode)try{r.keyCode=-1;break t}catch(t){i=!0}(i||void 0==r.returnValue)&&(r.returnValue=!0)}for(r=[],i=e.b;i;i=i.parentNode)r.push(i);for(t=t.type,i=r.length-1;0<=i;i--){e.b=r[i];var o=eJ(r[i],t,!0,e);n=n&&o}for(i=0;i<r.length;i++)e.b=r[i],o=eJ(r[i],t,!1,e),n=n&&o}return n}return eZ(t,new eO(e,this))}function e1(t){return(t=t[eK])instanceof eq?t:null}var e2="__closure_events_fn_"+(1e9*Math.random()>>>0);function e4(t){return d(t)?t:(t[e2]||(t[e2]=function(e){return t.handleEvent(e)}),t[e2])}function e3(){eS.call(this),this.v=new eq(this),this.bc=this,this.hb=null}function e6(t,e,n,r,i){t.v.add(String(e),n,!1,r,i)}function e5(t,e,n,r,i){t.v.add(String(e),n,!0,r,i)}function e8(t,e,n,r){if(!(e=t.v.a[String(e)]))return!0;e=e.concat();for(var i=!0,o=0;o<e.length;++o){var a=e[o];if(a&&!a.wa&&a.capture==n){var s=a.listener,u=a.Wa||a.src;a.Qa&&eV(t.v,a),i=!1!==s.call(u,r)&&i}}return i&&!r.defaultPrevented}function e7(t,e,n){if(d(t))n&&(t=w(t,n));else if(t&&"function"==typeof t.handleEvent)t=w(t.handleEvent,t);else throw Error("Invalid listener argument");return 2147483647<Number(e)?-1:s.setTimeout(t,e||0)}function e9(t){var e=null;return new ei(function(n,r){-1==(e=e7(function(){n(void 0)},t))&&r(Error("Failed to schedule timer."))}).o(function(t){throw s.clearTimeout(e),t})}function nt(t){if(t.X&&"function"==typeof t.X)return t.X();if("string"==typeof t)return t.split("");if(p(t)){for(var e=[],n=t.length,r=0;r<n;r++)e.push(t[r]);return e}for(r in e=[],n=0,t)e[n++]=t[r];return e}function ne(t){if(t.Y&&"function"==typeof t.Y)return t.Y();if(!t.X||"function"!=typeof t.X){if(p(t)||"string"==typeof t){var e=[];t=t.length;for(var n=0;n<t;n++)e.push(n);return e}for(var r in e=[],n=0,t)e[n++]=r;return e}}function nn(t,e){this.b={},this.a=[],this.c=0;var n=arguments.length;if(1<n){if(n%2)throw Error("Uneven number of arguments");for(var r=0;r<n;r+=2)this.set(arguments[r],arguments[r+1])}else if(t){if(t instanceof nn)for(n=t.Y(),r=0;r<n.length;r++)this.set(n[r],t.get(n[r]));else for(r in t)this.set(r,t[r])}}function nr(t){if(t.c!=t.a.length){for(var e=0,n=0;e<t.a.length;){var r=t.a[e];ni(t.b,r)&&(t.a[n++]=r),e++}t.a.length=n}if(t.c!=t.a.length){var i={};for(n=e=0;e<t.a.length;)ni(i,r=t.a[e])||(t.a[n++]=r,i[r]=1),e++;t.a.length=n}}function ni(t,e){return Object.prototype.hasOwnProperty.call(t,e)}E(e3,eS),e3.prototype[eM]=!0,e3.prototype.addEventListener=function(t,e,n,r){ez(this,t,e,n,r)},e3.prototype.removeEventListener=function(t,e,n,r){e$(this,t,e,n,r)},e3.prototype.dispatchEvent=function(t){var e,n=this.hb;if(n)for(e=[];n;n=n.hb)e.push(n);n=this.bc;var r=t.type||t;if("string"==typeof t)t=new eD(t,n);else if(t instanceof eD)t.target=t.target||n;else{var i=t;tv(t=new eD(r,n),i)}if(i=!0,e)for(var o=e.length-1;0<=o;o--){var a=t.b=e[o];i=e8(a,r,!0,t)&&i}if(i=e8(a=t.b=n,r,!0,t)&&i,i=e8(a,r,!1,t)&&i,e)for(o=0;o<e.length;o++)i=e8(a=t.b=e[o],r,!1,t)&&i;return i},e3.prototype.Da=function(){if(e3.bb.Da.call(this),this.v){var t,e=this.v;for(t in e.a){for(var n=e.a[t],r=0;r<n.length;r++)eU(n[r]);delete e.a[t],e.b--}}this.hb=null},(n=nn.prototype).X=function(){nr(this);for(var t=[],e=0;e<this.a.length;e++)t.push(this.b[this.a[e]]);return t},n.Y=function(){return nr(this),this.a.concat()},n.clear=function(){this.b={},this.c=this.a.length=0},n.get=function(t,e){return ni(this.b,t)?this.b[t]:e},n.set=function(t,e){ni(this.b,t)||(this.c++,this.a.push(t)),this.b[t]=e},n.forEach=function(t,e){for(var n=this.Y(),r=0;r<n.length;r++){var i=n[r],o=this.get(i);t.call(e,o,i,this)}};var no=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function na(t,e){var n;this.a=this.l=this.c="",this.g=null,this.h=this.f="",this.i=!1,t instanceof na?(this.i=void 0!==e?e:t.i,ns(this,t.c),this.l=t.l,this.a=t.a,nu(this,t.g),this.f=t.f,nc(this,nN(t.b)),this.h=t.h):t&&(n=String(t).match(no))?(this.i=!!e,ns(this,n[1]||"",!0),this.l=nd(n[2]||""),this.a=nd(n[3]||"",!0),nu(this,n[4]),this.f=nd(n[5]||"",!0),nc(this,n[6]||"",!0),this.h=nd(n[7]||"")):(this.i=!!e,this.b=new nI(null,this.i))}function ns(t,e,n){t.c=n?nd(e,!0):e,t.c&&(t.c=t.c.replace(/:$/,""))}function nu(t,e){if(e){if(isNaN(e=Number(e))||0>e)throw Error("Bad port number "+e);t.g=e}else t.g=null}function nc(t,e,n){var r,i;e instanceof nI?(t.b=e,r=t.b,(i=t.i)&&!r.f&&(nT(r),r.c=null,r.a.forEach(function(t,e){var n=e.toLowerCase();e!=n&&(nS(this,e),nk(this,n,t))},r)),r.f=i):(n||(e=nv(e,nb)),t.b=new nI(e,t.i))}function nh(t,e,n){t.b.set(e,n)}function nl(t,e){return t.b.get(e)}function nf(t){return t instanceof na?new na(t):new na(t,void 0)}function np(t,e,n,r){var i=new na(null,void 0);return t&&ns(i,t),e&&(i.a=e),n&&nu(i,n),r&&(i.f=r),i}function nd(t,e){return t?e?decodeURI(t.replace(/%25/g,"%2525")):decodeURIComponent(t):""}function nv(t,e,n){return"string"==typeof t?(t=encodeURI(t).replace(e,ng),n&&(t=t.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),t):null}function ng(t){return"%"+((t=t.charCodeAt(0))>>4&15).toString(16)+(15&t).toString(16)}na.prototype.toString=function(){var t=[],e=this.c;e&&t.push(nv(e,nm,!0),":");var n=this.a;return(n||"file"==e)&&(t.push("//"),(e=this.l)&&t.push(nv(e,nm,!0),"@"),t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),null!=(n=this.g)&&t.push(":",String(n))),(n=this.f)&&(this.a&&"/"!=n.charAt(0)&&t.push("/"),t.push(nv(n,"/"==n.charAt(0)?n_:ny,!0))),(n=this.b.toString())&&t.push("?",n),(n=this.h)&&t.push("#",nv(n,nw)),t.join("")},na.prototype.resolve=function(t){var e=new na(this),n=!!t.c;n?ns(e,t.c):n=!!t.l,n?e.l=t.l:n=!!t.a,n?e.a=t.a:n=null!=t.g;var r=t.f;if(n)nu(e,t.g);else if(n=!!t.f){if("/"!=r.charAt(0)){if(this.a&&!this.f)r="/"+r;else{var i=e.f.lastIndexOf("/");-1!=i&&(r=e.f.substr(0,i+1)+r)}}if(".."==(i=r)||"."==i)r="";else if(ta(i,"./")||ta(i,"/.")){r=0==i.lastIndexOf("/",0),i=i.split("/");for(var o=[],a=0;a<i.length;){var s=i[a++];"."==s?r&&a==i.length&&o.push(""):".."==s?((1<o.length||1==o.length&&""!=o[0])&&o.pop(),r&&a==i.length&&o.push("")):(o.push(s),r=!0)}r=o.join("/")}else r=i}return n?e.f=r:n=""!==t.b.toString(),n?nc(e,nN(t.b)):n=!!t.h,n&&(e.h=t.h),e};var nm=/[#\/\?@]/g,ny=/[#\?:]/g,n_=/[#\?]/g,nb=/[#\?@]/g,nw=/#/g;function nI(t,e){this.b=this.a=null,this.c=t||null,this.f=!!e}function nT(t){t.a||(t.a=new nn,t.b=0,t.c&&function(t,e){if(t){t=t.split("&");for(var n=0;n<t.length;n++){var r=t[n].indexOf("="),i=null;if(0<=r){var o=t[n].substring(0,r);i=t[n].substring(r+1)}else o=t[n];e(o,i?decodeURIComponent(i.replace(/\+/g," ")):"")}}}(t.c,function(e,n){t.add(decodeURIComponent(e.replace(/\+/g," ")),n)}))}function nE(t){var e=ne(t);if(void 0===e)throw Error("Keys are undefined");var n=new nI(null,void 0);t=nt(t);for(var r=0;r<e.length;r++){var i=e[r],o=t[r];Array.isArray(o)?nk(n,i,o):n.add(i,o)}return n}function nS(t,e){nT(t),e=nA(t,e),ni(t.a.b,e)&&(t.c=null,t.b-=t.a.get(e).length,ni((t=t.a).b,e)&&(delete t.b[e],t.c--,t.a.length>2*t.c&&nr(t)))}function nC(t,e){return nT(t),e=nA(t,e),ni(t.a.b,e)}function nk(t,e,n){nS(t,e),0<n.length&&(t.c=null,t.a.set(nA(t,e),X(n)),t.b+=n.length)}function nN(t){var e=new nI;return e.c=t.c,t.a&&(e.a=new nn(t.a),e.b=t.b),e}function nA(t,e){return e=String(e),t.f&&(e=e.toLowerCase()),e}function nR(t){var e=[];return function t(e,n,r){if(null==n)r.push("null");else{if("object"==typeof n){if(Array.isArray(n)){var i=n;n=i.length,r.push("[");for(var o="",a=0;a<n;a++)r.push(o),t(e,i[a],r),o=",";r.push("]");return}if(n instanceof String||n instanceof Number||n instanceof Boolean)n=n.valueOf();else{for(i in r.push("{"),o="",n)Object.prototype.hasOwnProperty.call(n,i)&&"function"!=typeof(a=n[i])&&(r.push(o),nO(i,r),r.push(":"),t(e,a,r),o=",");r.push("}");return}}switch(typeof n){case"string":nO(n,r);break;case"number":r.push(isFinite(n)&&!isNaN(n)?String(n):"null");break;case"boolean":r.push(String(n));break;case"function":r.push("null");break;default:throw Error("Unknown type: "+typeof n)}}}(new nx,t,e),e.join("")}function nx(){}(n=nI.prototype).add=function(t,e){nT(this),this.c=null,t=nA(this,t);var n=this.a.get(t);return n||this.a.set(t,n=[]),n.push(e),this.b+=1,this},n.clear=function(){this.a=this.c=null,this.b=0},n.forEach=function(t,e){nT(this),this.a.forEach(function(n,r){K(n,function(n){t.call(e,n,r,this)},this)},this)},n.Y=function(){nT(this);for(var t=this.a.X(),e=this.a.Y(),n=[],r=0;r<e.length;r++)for(var i=t[r],o=0;o<i.length;o++)n.push(e[r]);return n},n.X=function(t){nT(this);var e=[];if("string"==typeof t)nC(this,t)&&(e=Y(e,this.a.get(nA(this,t))));else{t=this.a.X();for(var n=0;n<t.length;n++)e=Y(e,t[n])}return e},n.set=function(t,e){return nT(this),this.c=null,nC(this,t=nA(this,t))&&(this.b-=this.a.get(t).length),this.a.set(t,[e]),this.b+=1,this},n.get=function(t,e){return t&&0<(t=this.X(t)).length?String(t[0]):e},n.toString=function(){if(this.c)return this.c;if(!this.a)return"";for(var t=[],e=this.a.Y(),n=0;n<e.length;n++){var r=e[n],i=encodeURIComponent(String(r));r=this.X(r);for(var o=0;o<r.length;o++){var a=i;""!==r[o]&&(a+="="+encodeURIComponent(String(r[o]))),t.push(a)}}return this.c=t.join("&")};var nP={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t","\v":"\\u000b"},nD=/\uffff/.test("￿")?/[\\"\x00-\x1f\x7f-\uffff]/g:/[\\"\x00-\x1f\x7f-\xff]/g;function nO(t,e){e.push('"',t.replace(nD,function(t){var e=nP[t];return e||(e="\\u"+(65536|t.charCodeAt(0)).toString(16).substr(1),nP[t]=e),e}),'"')}function nL(){var t=n0();return tH&&!!t2&&11==t2||/Edge\/\d+/.test(t)}function nM(){return s.window&&s.window.location.href||self&&self.location&&self.location.href||""}function nF(t,e){e=e||s.window;var n="about:blank";t&&(n=tA(tD(t)||tM)),e.location.href=n}function nj(t){return!!((t=(t||n0()).toLowerCase()).match(/android/)||t.match(/webos/)||t.match(/iphone|ipad|ipod/)||t.match(/blackberry/)||t.match(/windows phone/)||t.match(/iemobile/))}function nU(t){t=t||s.window;try{t.close()}catch(t){}}function nq(t,e,n){var r,i=Math.floor(1e9*Math.random()).toString();e=e||500,n=n||600;var o=(window.screen.availHeight-n)/2,a=(window.screen.availWidth-e)/2;for(s in e={width:e,height:n,top:0<o?o:0,left:0<a?a:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1},n=n0().toLowerCase(),i&&(e.target=i,ta(n,"crios/")&&(e.target="_blank")),nX(n0())==n$&&(t=t||"http://localhost",e.scrollbars=!0),n=t||"",(t=e)||(t={}),i=window,e=n instanceof tN?n:tD(void 0!==n.href?n.href:String(n))||tM,n=t.target||n.target,o=[],t)switch(s){case"width":case"height":case"top":case"left":o.push(s+"="+t[s]);break;case"target":case"noopener":case"noreferrer":break;default:o.push(s+"="+(t[s]?1:0))}var s=o.join(",");if((th("iPhone")&&!th("iPod")&&!th("iPad")||th("iPad")||th("iPod"))&&i.navigator&&i.navigator.standalone&&n&&"_self"!=n?(tg(s=t8(document,"A"),"HTMLAnchorElement"),e=e instanceof tN?e:tO(e),s.href=tA(e),s.setAttribute("target",n),t.noreferrer&&s.setAttribute("rel","noreferrer"),(t=document.createEvent("MouseEvent")).initMouseEvent("click",!0,!0,i,1),s.dispatchEvent(t),s={}):t.noreferrer?(s=tU("",i,n,s),t=tA(e),s&&(tz&&ta(t,";")&&(t="'"+t.replace(/'/g,"%27")+"'"),s.opener=null,t='<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url='+tV(t)+'">',t=(i=tw())?i.createHTML(t):t,t=new tF(t,null,tj),i=s.document)&&(i.write((r=t)instanceof tF&&r.constructor===tF?r.a:(M("expected object of type SafeHtml, got '"+r+"' of type "+f(r)),"type_error:SafeHtml")),i.close())):(s=tU(e,i,n,s))&&t.noopener&&(s.opener=null),s)try{s.focus()}catch(t){}return s}var nV=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,nB=/^[^@]+@[^@]+$/;function nK(){var t=null;return new ei(function(e){"complete"==s.document.readyState?e():(t=function(){e()},eQ(window,"load",t))}).o(function(e){throw e$(window,"load",t),e})}function nH(t){return t=t||n0(),!("file:"!==n6()&&"ionic:"!==n6()||!t.toLowerCase().match(/iphone|ipad|ipod|android/))}function nW(){var t=s.window;try{return!(!t||t==t.top)}catch(t){return!1}}function nz(){return void 0!==s.WorkerGlobalScope&&"function"==typeof s.importScripts}function nG(){return ee.INTERNAL.hasOwnProperty("reactNative")?"ReactNative":ee.INTERNAL.hasOwnProperty("node")?"Node":nz()?"Worker":"Browser"}function nQ(){var t=nG();return"ReactNative"===t||"Node"===t}var n$="Firefox",nY="Chrome";function nX(t){var e=t.toLowerCase();return ta(e,"opera/")||ta(e,"opr/")||ta(e,"opios/")?"Opera":ta(e,"iemobile")?"IEMobile":ta(e,"msie")||ta(e,"trident/")?"IE":ta(e,"edge/")?"Edge":ta(e,"firefox/")?n$:ta(e,"silk/")?"Silk":ta(e,"blackberry")?"Blackberry":ta(e,"webos")?"Webos":!ta(e,"safari/")||ta(e,"chrome/")||ta(e,"crios/")||ta(e,"android")?!ta(e,"chrome/")&&!ta(e,"crios/")||ta(e,"edge/")?ta(e,"android")?"Android":(t=t.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/))&&2==t.length?t[1]:"Other":nY:"Safari"}var nJ={md:"FirebaseCore-web",od:"FirebaseUI-web"};function nZ(t,e){e=e||[];var n,r=[],i={};for(n in nJ)i[nJ[n]]=!0;for(n=0;n<e.length;n++)void 0!==i[e[n]]&&(delete i[e[n]],r.push(e[n]));return r.sort(),(e=r).length||(e=["FirebaseCore-web"]),"Browser"===(r=nG())?r=nX(i=n0()):"Worker"===r&&(r=nX(i=n0())+"-"+r),r+"/JsCore/"+t+"/"+e.join(",")}function n0(){return s.navigator&&s.navigator.userAgent||""}function n1(t,e){t=t.split("."),e=e||s;for(var n=0;n<t.length&&"object"==typeof e&&null!=e;n++)e=e[t[n]];return n!=t.length&&(e=void 0),e}function n2(){try{var t=s.localStorage,e=rt();if(t)return t.setItem(e,"1"),t.removeItem(e),!nL()||!!s.indexedDB}catch(t){return nz()&&!!s.indexedDB}return!1}function n4(){return(n3()||"chrome-extension:"===n6()||nH())&&!nQ()&&n2()&&!nz()}function n3(){return"http:"===n6()||"https:"===n6()}function n6(){return s.location&&s.location.protocol||null}function n5(t){return!nj(t=t||n0())&&nX(t)!=n$}function n8(t){return void 0===t?null:nR(t)}function n7(t){var e,n={};for(e in t)t.hasOwnProperty(e)&&null!==t[e]&&void 0!==t[e]&&(n[e]=t[e]);return n}function n9(t){if(null!==t)return JSON.parse(t)}function rt(t){return t||Math.floor(1e9*Math.random()).toString()}function re(t){return!("Safari"==nX(t=t||n0())||t.toLowerCase().match(/iphone|ipad|ipod/))}function rn(){var t=s.___jsl;if(t&&t.H){for(var e in t.H)if(t.H[e].r=t.H[e].r||[],t.H[e].L=t.H[e].L||[],t.H[e].r=t.H[e].L.concat(),t.CP)for(var n=0;n<t.CP.length;n++)t.CP[n]=null}}function rr(t,e){if(t>e)throw Error("Short delay should be less than long delay!");this.a=t,this.c=e,t=n0(),e=nG(),this.b=nj(t)||"ReactNative"===e}function ri(){var t=s.document;return!t||void 0===t.visibilityState||"visible"==t.visibilityState}function ro(t){try{var e=new Date(parseInt(t,10));if(!isNaN(e.getTime())&&!/[^0-9]/.test(t))return e.toUTCString()}catch(t){}return null}function ra(){return!(!n1("fireauth.oauthhelper",s)&&!n1("fireauth.iframe",s))}rr.prototype.get=function(){var t=s.navigator;return(t&&"boolean"==typeof t.onLine&&(n3()||"chrome-extension:"===n6()||void 0!==t.connection)?t.onLine:1)?this.b?this.c:this.a:Math.min(5e3,this.a)};var rs={};function ru(t){rs[t]||(rs[t]=!0,"undefined"!=typeof console&&"function"==typeof console.warn&&console.warn(t))}try{var rc={};Object.defineProperty(rc,"abcd",{configurable:!0,enumerable:!0,value:1}),Object.defineProperty(rc,"abcd",{configurable:!0,enumerable:!0,value:2}),oJ=2==rc.abcd}catch(t){oJ=!1}function rh(t,e,n){oJ?Object.defineProperty(t,e,{configurable:!0,enumerable:!0,value:n}):t[e]=n}function rl(t,e){if(e)for(var n in e)e.hasOwnProperty(n)&&rh(t,n,e[n])}function rf(t){var e={};return rl(e,t),e}function rp(t){var e=t;if("object"==typeof t&&null!=t)for(var n in e="length"in t?[]:{},t)rh(e,n,rp(t[n]));return e}function rd(t){var e=t&&(t[r_]?"phone":null);if(e&&t&&t[ry]){rh(this,"uid",t[ry]),rh(this,"displayName",t[rg]||null);var n=null;t[rm]&&(n=new Date(t[rm]).toUTCString()),rh(this,"enrollmentTime",n),rh(this,"factorId",e)}else throw new C("internal-error","Internal assert: invalid MultiFactorInfo object")}function rv(t){try{var e=new rb(t)}catch(t){e=null}return e}rd.prototype.w=function(){return{uid:this.uid,displayName:this.displayName,factorId:this.factorId,enrollmentTime:this.enrollmentTime}};var rg="displayName",rm="enrolledAt",ry="mfaEnrollmentId",r_="phoneInfo";function rb(t){rd.call(this,t),rh(this,"phoneNumber",t[r_])}function rw(t){var e={},n=t[rS],r=t[rk],i=t[rN];if(t=rv(t[rC]),!i||i!=rT&&i!=rE&&!n||i==rE&&!r||i==rI&&!t)throw Error("Invalid checkActionCode response!");i==rE?(e[rR]=n||null,e[rP]=n||null,e[rA]=r):(e[rR]=r||null,e[rP]=r||null,e[rA]=n||null),e[rx]=t||null,rh(this,rO,i),rh(this,rD,rp(e))}E(rb,rd),rb.prototype.w=function(){var t=rb.bb.w.call(this);return t.phoneNumber=this.phoneNumber,t};var rI="REVERT_SECOND_FACTOR_ADDITION",rT="EMAIL_SIGNIN",rE="VERIFY_AND_CHANGE_EMAIL",rS="email",rC="mfaInfo",rk="newEmail",rN="requestType",rA="email",rR="fromEmail",rx="multiFactorInfo",rP="previousEmail",rD="data",rO="operation";function rL(t){var e=nl(t=nf(t),rM)||null,n=nl(t,rF)||null,r=nl(t,rq)||null;if(r=r&&rB[r]||null,!e||!n||!r)throw new C("argument-error",rM+", "+rF+"and "+rq+" are required in a valid action code URL.");rl(this,{apiKey:e,operation:r,code:n,continueUrl:nl(t,rj)||null,languageCode:nl(t,rU)||null,tenantId:nl(t,rV)||null})}var rM="apiKey",rF="oobCode",rj="continueUrl",rU="languageCode",rq="mode",rV="tenantId",rB={recoverEmail:"RECOVER_EMAIL",resetPassword:"PASSWORD_RESET",revertSecondFactorAddition:rI,signIn:rT,verifyAndChangeEmail:rE,verifyEmail:"VERIFY_EMAIL"};function rK(t){try{return new rL(t)}catch(t){return null}}function rH(t){var e=t[r$];if(void 0===e)throw new C("missing-continue-uri");if("string"!=typeof e||"string"==typeof e&&!e.length)throw new C("invalid-continue-uri");this.h=e,this.b=this.a=null,this.g=!1;var n=t[rW];if(n&&"object"==typeof n){e=n[rJ];var r=n[rY];if(n=n[rX],"string"==typeof e&&e.length){if(this.a=e,void 0!==r&&"boolean"!=typeof r)throw new C("argument-error",rY+" property must be a boolean when specified.");if(this.g=!!r,void 0!==n&&("string"!=typeof n||"string"==typeof n&&!n.length))throw new C("argument-error",rX+" property must be a non empty string when specified.");this.b=n||null}else{if(void 0!==e)throw new C("argument-error",rJ+" property must be a non empty string when specified.");if(void 0!==r||void 0!==n)throw new C("missing-android-pkg-name")}}else if(void 0!==n)throw new C("argument-error",rW+" property must be a non null object when specified.");if(this.f=null,(e=t[rQ])&&"object"==typeof e){if("string"==typeof(e=e[rZ])&&e.length)this.f=e;else if(void 0!==e)throw new C("argument-error",rZ+" property must be a non empty string when specified.")}else if(void 0!==e)throw new C("argument-error",rQ+" property must be a non null object when specified.");if(void 0!==(e=t[rG])&&"boolean"!=typeof e)throw new C("argument-error",rG+" property must be a boolean when specified.");if(this.c=!!e,void 0!==(t=t[rz])&&("string"!=typeof t||"string"==typeof t&&!t.length))throw new C("argument-error",rz+" property must be a non empty string when specified.");this.i=t||null}var rW="android",rz="dynamicLinkDomain",rG="handleCodeInApp",rQ="iOS",r$="url",rY="installApp",rX="minimumVersion",rJ="packageName",rZ="bundleId";function r0(t){var e={};for(var n in e.continueUrl=t.h,e.canHandleCodeInApp=t.c,(e.androidPackageName=t.a)&&(e.androidMinimumVersion=t.b,e.androidInstallApp=t.g),e.iOSBundleId=t.f,e.dynamicLinkDomain=t.i,e)null===e[n]&&delete e[n];return e}var r1=null;function r2(t){var e=r3(t);if(!(e&&e.sub&&e.iss&&e.aud&&e.exp))throw Error("Invalid JWT");this.h=t,this.a=e.exp,this.i=e.sub,t=Date.now()/1e3,this.g=e.iat||(t>this.a?this.a:t),this.b=e.provider_id||e.firebase&&e.firebase.sign_in_provider||null,this.f=e.firebase&&e.firebase.tenant||null,this.c=!!e.is_anonymous||"anonymous"==this.b}function r4(t){try{return new r2(t)}catch(t){return null}}function r3(t){if(!t||3!=(t=t.split(".")).length)return null;t=t[1];for(var e=(4-t.length%4)%4,n=0;n<e;n++)t+=".";try{var r,i,o=(r=t,i=[],function(t,e){function n(e){for(;r<t.length;){var n=t.charAt(r++),i=r1[n];if(null!=i)return i;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return e}(function(){if(!r1){r1={};for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),e=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++)for(var r=t.concat(e[n].split("")),i=0;i<r.length;i++){var o=r[i];void 0===r1[o]&&(r1[o]=i)}}})();for(var r=0;;){var i=n(-1),o=n(0),a=n(64),s=n(64);if(64===s&&-1===i)break;e(i<<2|o>>4),64!=a&&(e(o<<4&240|a>>2),64!=s&&e(a<<6&192|s))}}(r,function(t){i.push(t)}),i);for(t=[],n=e=0;e<o.length;){var a=o[e++];if(128>a)t[n++]=String.fromCharCode(a);else if(191<a&&224>a){var s=o[e++];t[n++]=String.fromCharCode((31&a)<<6|63&s)}else if(239<a&&365>a){s=o[e++];var u=o[e++],c=o[e++],h=((7&a)<<18|(63&s)<<12|(63&u)<<6|63&c)-65536;t[n++]=String.fromCharCode(55296+(h>>10)),t[n++]=String.fromCharCode(56320+(1023&h))}else s=o[e++],u=o[e++],t[n++]=String.fromCharCode((15&a)<<12|(63&s)<<6|63&u)}return JSON.parse(t.join(""))}catch(t){}return null}r2.prototype.T=function(){return this.f},r2.prototype.l=function(){return this.c},r2.prototype.toString=function(){return this.h};var r6="oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),r5=["client_id","response_type","scope","redirect_uri","state"],r8={nd:{Ja:"locale",va:700,ua:600,fa:"facebook.com",Ya:r5},pd:{Ja:null,va:500,ua:750,fa:"github.com",Ya:r5},qd:{Ja:"hl",va:515,ua:680,fa:"google.com",Ya:r5},wd:{Ja:"lang",va:485,ua:705,fa:"twitter.com",Ya:r6},kd:{Ja:"locale",va:640,ua:600,fa:"apple.com",Ya:[]}};function r7(t){for(var e in r8)if(r8[e].fa==t)return r8[e];return null}function r9(t){var e={};e["facebook.com"]=io,e["google.com"]=is,e["github.com"]=ia,e["twitter.com"]=iu;var n=t&&t[ie];try{if(n)return e[n]?new e[n](t):new ii(t);if(void 0!==t[it])return new ir(t)}catch(t){}return null}var it="idToken",ie="providerId";function ir(t){var e=t[ie];if(!e&&t[it]){var n=r4(t[it]);n&&n.b&&(e=n.b)}if(!e)throw Error("Invalid additional user info!");("anonymous"==e||"custom"==e)&&(e=null),n=!1,void 0!==t.isNewUser?n=!!t.isNewUser:"identitytoolkit#SignupNewUserResponse"===t.kind&&(n=!0),rh(this,"providerId",e),rh(this,"isNewUser",n)}function ii(t){ir.call(this,t),rh(this,"profile",rp((t=n9(t.rawUserInfo||"{}"))||{}))}function io(t){if(ii.call(this,t),"facebook.com"!=this.providerId)throw Error("Invalid provider ID!")}function ia(t){if(ii.call(this,t),"github.com"!=this.providerId)throw Error("Invalid provider ID!");rh(this,"username",this.profile&&this.profile.login||null)}function is(t){if(ii.call(this,t),"google.com"!=this.providerId)throw Error("Invalid provider ID!")}function iu(t){if(ii.call(this,t),"twitter.com"!=this.providerId)throw Error("Invalid provider ID!");rh(this,"username",t.screenName||null)}function ic(t){var e=nf(t),n=nl(e,"link"),r=nl(nf(n),"link");return e=nl(e,"deep_link_id"),nl(nf(e),"link")||e||r||n||t}function ih(t,e){if(!t&&!e)throw new C("internal-error","Internal assert: no raw session string available");if(t&&e)throw new C("internal-error","Internal assert: unable to determine the session type");this.a=t||null,this.b=e||null,this.type=this.a?il:ip}E(ii,ir),E(io,ii),E(ia,ii),E(is,ii),E(iu,ii);var il="enroll",ip="signin";function id(){}function iv(t,e){return t.then(function(t){if(t[o1]){var n=r4(t[o1]);if(!n||e!=n.i)throw new C("user-mismatch");return t}throw new C("user-mismatch")}).o(function(t){throw t&&t.code&&t.code==N+"user-not-found"?new C("user-mismatch"):t})}function ig(t,e){if(e)this.a=e;else throw new C("internal-error","failed to construct a credential");rh(this,"providerId",t),rh(this,"signInMethod",t)}function im(t){return{pendingToken:t.a,requestUri:"http://localhost"}}function iy(t){if(t&&t.providerId&&t.signInMethod&&0==t.providerId.indexOf("saml.")&&t.pendingToken)try{return new ig(t.providerId,t.pendingToken)}catch(t){}return null}function i_(t,e,n){if(this.a=null,e.idToken||e.accessToken)e.idToken&&rh(this,"idToken",e.idToken),e.accessToken&&rh(this,"accessToken",e.accessToken),e.nonce&&!e.pendingToken&&rh(this,"nonce",e.nonce),e.pendingToken&&(this.a=e.pendingToken);else if(e.oauthToken&&e.oauthTokenSecret)rh(this,"accessToken",e.oauthToken),rh(this,"secret",e.oauthTokenSecret);else throw new C("internal-error","failed to construct a credential");rh(this,"providerId",t),rh(this,"signInMethod",n)}function ib(t){var e={};return t.idToken&&(e.id_token=t.idToken),t.accessToken&&(e.access_token=t.accessToken),t.secret&&(e.oauth_token_secret=t.secret),e.providerId=t.providerId,t.nonce&&!t.a&&(e.nonce=t.nonce),e={postBody:nE(e).toString(),requestUri:"http://localhost"},t.a&&(delete e.postBody,e.pendingToken=t.a),e}function iw(t){if(t&&t.providerId&&t.signInMethod){var e={idToken:t.oauthIdToken,accessToken:t.oauthTokenSecret?null:t.oauthAccessToken,oauthTokenSecret:t.oauthTokenSecret,oauthToken:t.oauthTokenSecret&&t.oauthAccessToken,nonce:t.nonce,pendingToken:t.pendingToken};try{return new i_(t.providerId,e,t.signInMethod)}catch(t){}}return null}function iI(t,e){this.Qc=e||[],rl(this,{providerId:t,isOAuthProvider:!0}),this.Jb={},this.qb=(r7(t)||{}).Ja||null,this.pb=null}function iT(t){if("string"!=typeof t||0!=t.indexOf("saml."))throw new C("argument-error",'SAML provider IDs must be prefixed with "saml."');iI.call(this,t,[])}function iE(t){iI.call(this,t,r5),this.a=[]}function iS(){iE.call(this,"facebook.com")}function iC(t){if(!t)throw new C("argument-error","credential failed: expected 1 argument (the OAuth access token).");var e=t;return v(t)&&(e=t.accessToken),(new iS).credential({accessToken:e})}function ik(){iE.call(this,"github.com")}function iN(t){if(!t)throw new C("argument-error","credential failed: expected 1 argument (the OAuth access token).");var e=t;return v(t)&&(e=t.accessToken),(new ik).credential({accessToken:e})}function iA(){iE.call(this,"google.com"),this.Ca("profile")}function iR(t,e){var n=t;return v(t)&&(n=t.idToken,e=t.accessToken),(new iA).credential({idToken:n,accessToken:e})}function ix(){iI.call(this,"twitter.com",r6)}function iP(t,e){var n=t;if(v(n)||(n={oauthToken:t,oauthTokenSecret:e}),!n.oauthToken||!n.oauthTokenSecret)throw new C("argument-error","credential failed: expected 2 arguments (the OAuth access token and secret).");return new i_("twitter.com",n,"twitter.com")}function iD(t,e,n){this.a=t,this.f=e,rh(this,"providerId","password"),rh(this,"signInMethod",n===iL.EMAIL_LINK_SIGN_IN_METHOD?iL.EMAIL_LINK_SIGN_IN_METHOD:iL.EMAIL_PASSWORD_SIGN_IN_METHOD)}function iO(t){return t&&t.email&&t.password?new iD(t.email,t.password,t.signInMethod):null}function iL(){rl(this,{providerId:"password",isOAuthProvider:!1})}function iM(t,e){if(!(e=iF(e)))throw new C("argument-error","Invalid email link!");return new iD(t,e.code,iL.EMAIL_LINK_SIGN_IN_METHOD)}function iF(t){return(t=rK(t=ic(t)))&&t.operation===rT?t:null}function ij(t){if(!(t.fb&&t.eb||t.La&&t.ea))throw new C("internal-error");this.a=t,rh(this,"providerId","phone"),this.fa="phone",rh(this,"signInMethod","phone")}function iU(t){if(t&&"phone"===t.providerId&&(t.verificationId&&t.verificationCode||t.temporaryProof&&t.phoneNumber)){var e={};return K(["verificationId","verificationCode","temporaryProof","phoneNumber"],function(n){t[n]&&(e[n]=t[n])}),new ij(e)}return null}function iq(t){return t.a.La&&t.a.ea?{temporaryProof:t.a.La,phoneNumber:t.a.ea}:{sessionInfo:t.a.fb,code:t.a.eb}}function iV(t){try{this.a=t||ee.auth()}catch(t){throw new C("argument-error","Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().")}rl(this,{providerId:"phone",isOAuthProvider:!1})}function iB(t,e){if(!t)throw new C("missing-verification-id");if(!e)throw new C("missing-verification-code");return new ij({fb:t,eb:e})}function iK(t){if(t.temporaryProof&&t.phoneNumber)return new ij({La:t.temporaryProof,ea:t.phoneNumber});var e=t&&t.providerId;if(!e||"password"===e)return null;var n=t&&t.oauthAccessToken,r=t&&t.oauthTokenSecret,i=t&&t.nonce,o=t&&t.oauthIdToken,a=t&&t.pendingToken;try{switch(e){case"google.com":return iR(o,n);case"facebook.com":return iC(n);case"github.com":return iN(n);case"twitter.com":return iP(n,r);default:return n||r||o||a?a?0==e.indexOf("saml.")?new ig(e,a):new i_(e,{pendingToken:a,idToken:t.oauthIdToken,accessToken:t.oauthAccessToken},e):new iE(e).credential({idToken:o,accessToken:n,rawNonce:i}):null}}catch(t){return null}}function iH(t){if(!t.isOAuthProvider)throw new C("invalid-oauth-provider")}function iW(t,e,n,r,i,o,a){if(this.c=t,this.b=e||null,this.g=n||null,this.f=r||null,this.i=o||null,this.h=a||null,this.a=i||null,this.g||this.a){if(this.g&&this.a||this.g&&!this.f)throw new C("invalid-auth-event")}else throw new C("invalid-auth-event")}function iz(t){return(t=t||{}).type?new iW(t.type,t.eventId,t.urlResponse,t.sessionId,t.error&&k(t.error),t.postBody,t.tenantId):null}function iG(){this.b=null,this.a=[]}ih.prototype.Ha=function(){return this.a?el(this.a):el(this.b)},ih.prototype.w=function(){return this.type==il?{multiFactorSession:{idToken:this.a}}:{multiFactorSession:{pendingCredential:this.b}}},id.prototype.ka=function(){},id.prototype.b=function(){},id.prototype.c=function(){},id.prototype.w=function(){},ig.prototype.ka=function(t){return ap(t,im(this))},ig.prototype.b=function(t,e){var n=im(this);return n.idToken=e,ad(t,n)},ig.prototype.c=function(t,e){return iv(av(t,im(this)),e)},ig.prototype.w=function(){return{providerId:this.providerId,signInMethod:this.signInMethod,pendingToken:this.a}},i_.prototype.ka=function(t){return ap(t,ib(this))},i_.prototype.b=function(t,e){var n=ib(this);return n.idToken=e,ad(t,n)},i_.prototype.c=function(t,e){return iv(av(t,ib(this)),e)},i_.prototype.w=function(){var t={providerId:this.providerId,signInMethod:this.signInMethod};return this.idToken&&(t.oauthIdToken=this.idToken),this.accessToken&&(t.oauthAccessToken=this.accessToken),this.secret&&(t.oauthTokenSecret=this.secret),this.nonce&&(t.nonce=this.nonce),this.a&&(t.pendingToken=this.a),t},iI.prototype.Ka=function(t){return this.Jb=tp(t),this},E(iT,iI),E(iE,iI),iE.prototype.Ca=function(t){return G(this.a,t)||this.a.push(t),this},iE.prototype.Rb=function(){return X(this.a)},iE.prototype.credential=function(t,e){var n;if(!(n=v(t)?{idToken:t.idToken||null,accessToken:t.accessToken||null,nonce:t.rawNonce||null}:{idToken:t||null,accessToken:e||null}).idToken&&!n.accessToken)throw new C("argument-error","credential failed: must provide the ID token and/or the access token.");return new i_(this.providerId,n,this.providerId)},E(iS,iE),rh(iS,"PROVIDER_ID","facebook.com"),rh(iS,"FACEBOOK_SIGN_IN_METHOD","facebook.com"),E(ik,iE),rh(ik,"PROVIDER_ID","github.com"),rh(ik,"GITHUB_SIGN_IN_METHOD","github.com"),E(iA,iE),rh(iA,"PROVIDER_ID","google.com"),rh(iA,"GOOGLE_SIGN_IN_METHOD","google.com"),E(ix,iI),rh(ix,"PROVIDER_ID","twitter.com"),rh(ix,"TWITTER_SIGN_IN_METHOD","twitter.com"),iD.prototype.ka=function(t){return this.signInMethod==iL.EMAIL_LINK_SIGN_IN_METHOD?aY(t,aT,{email:this.a,oobCode:this.f}):aY(t,aW,{email:this.a,password:this.f})},iD.prototype.b=function(t,e){return this.signInMethod==iL.EMAIL_LINK_SIGN_IN_METHOD?aY(t,aE,{idToken:e,email:this.a,oobCode:this.f}):aY(t,aF,{idToken:e,email:this.a,password:this.f})},iD.prototype.c=function(t,e){return iv(this.ka(t),e)},iD.prototype.w=function(){return{email:this.a,password:this.f,signInMethod:this.signInMethod}},rl(iL,{PROVIDER_ID:"password"}),rl(iL,{EMAIL_LINK_SIGN_IN_METHOD:"emailLink"}),rl(iL,{EMAIL_PASSWORD_SIGN_IN_METHOD:"password"}),ij.prototype.ka=function(t){return t.gb(iq(this))},ij.prototype.b=function(t,e){var n=iq(this);return n.idToken=e,aY(t,aG,n)},ij.prototype.c=function(t,e){var n=iq(this);return n.operation="REAUTH",iv(t=aY(t,aQ,n),e)},ij.prototype.w=function(){var t={providerId:"phone"};return this.a.fb&&(t.verificationId=this.a.fb),this.a.eb&&(t.verificationCode=this.a.eb),this.a.La&&(t.temporaryProof=this.a.La),this.a.ea&&(t.phoneNumber=this.a.ea),t},iV.prototype.gb=function(t,e){var n=this.a.a;return el(e.verify()).then(function(r){if("string"!=typeof r)throw new C("argument-error","An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");if("recaptcha"===e.type){var i=v(t)?t.session:null,o=v(t)?t.phoneNumber:t;return(i&&i.type==il?i.Ha().then(function(t){return aY(n,aU,{idToken:t,phoneEnrollmentInfo:{phoneNumber:o,recaptchaToken:r}}).then(function(t){return t.phoneSessionInfo.sessionInfo})}):i&&i.type==ip?i.Ha().then(function(e){return aY(n,aq,{mfaPendingCredential:e,mfaEnrollmentId:t.multiFactorHint&&t.multiFactorHint.uid||t.multiFactorUid,phoneSignInInfo:{recaptchaToken:r}}).then(function(t){return t.phoneResponseInfo.sessionInfo})}):aY(n,aL,{phoneNumber:o,recaptchaToken:r})).then(function(t){return"function"==typeof e.reset&&e.reset(),t},function(t){throw"function"==typeof e.reset&&e.reset(),t})}throw new C("argument-error",'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.')})},rl(iV,{PROVIDER_ID:"phone"}),rl(iV,{PHONE_SIGN_IN_METHOD:"phone"}),iW.prototype.getUid=function(){var t=[];return t.push(this.c),this.b&&t.push(this.b),this.f&&t.push(this.f),this.h&&t.push(this.h),t.join("-")},iW.prototype.T=function(){return this.h},iW.prototype.w=function(){return{type:this.c,eventId:this.b,urlResponse:this.g,sessionId:this.f,postBody:this.i,tenantId:this.h,error:this.a&&this.a.w()}};var iQ=null;function i$(t){var e="unauthorized-domain",n=void 0,r=nf(t);t=r.a,"chrome-extension"==(r=r.c)?n=tq("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",t):"http"==r||"https"==r?n=tq("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",t):e="operation-not-supported-in-this-environment",C.call(this,e,n)}function iY(t,e,n){C.call(this,t,n),(t=e||{}).Kb&&rh(this,"email",t.Kb),t.ea&&rh(this,"phoneNumber",t.ea),t.credential&&rh(this,"credential",t.credential),t.$b&&rh(this,"tenantId",t.$b)}function iX(t){if(t.code){var e=t.code||"";0==e.indexOf(N)&&(e=e.substring(N.length));var n={credential:iK(t),$b:t.tenantId};if(t.email)n.Kb=t.email;else if(t.phoneNumber)n.ea=t.phoneNumber;else if(!n.credential)return new C(e,t.message||void 0);return new iY(e,n,t.message)}return null}function iJ(){}function iZ(t){return t.c||(t.c=t.b())}function i0(){}function i1(t){if(!t.f&&"undefined"==typeof XMLHttpRequest&&"undefined"!=typeof ActiveXObject){for(var e=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"],n=0;n<e.length;n++){var r=e[n];try{return new ActiveXObject(r),t.f=r}catch(t){}}throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed")}return t.f}function i2(){}function i4(){this.a=new XDomainRequest,this.readyState=0,this.onreadystatechange=null,this.responseType=this.responseText=this.response="",this.status=-1,this.statusText="",this.a.onload=w(this.qc,this),this.a.onerror=w(this.Tb,this),this.a.onprogress=w(this.rc,this),this.a.ontimeout=w(this.vc,this)}function i3(t,e){t.readyState=e,t.onreadystatechange&&t.onreadystatechange()}function i6(t,e,n){this.reset(t,e,n,void 0,void 0)}E(i$,C),E(iY,C),iY.prototype.w=function(){var t={code:this.code,message:this.message};this.email&&(t.email=this.email),this.phoneNumber&&(t.phoneNumber=this.phoneNumber),this.tenantId&&(t.tenantId=this.tenantId);var e=this.credential&&this.credential.w();return e&&tv(t,e),t},iY.prototype.toJSON=function(){return this.w()},iJ.prototype.c=null,E(i0,iJ),i0.prototype.a=function(){var t=i1(this);return t?new ActiveXObject(t):new XMLHttpRequest},i0.prototype.b=function(){var t={};return i1(this)&&(t[0]=!0,t[1]=!0),t},oZ=new i0,E(i2,iJ),i2.prototype.a=function(){var t=new XMLHttpRequest;if("withCredentials"in t)return t;if("undefined"!=typeof XDomainRequest)return new i4;throw Error("Unsupported browser")},i2.prototype.b=function(){return{}},(n=i4.prototype).open=function(t,e,n){if(null!=n&&!n)throw Error("Only async requests are supported.");this.a.open(t,e)},n.send=function(t){if(t){if("string"==typeof t)this.a.send(t);else throw Error("Only string data is supported")}else this.a.send()},n.abort=function(){this.a.abort()},n.setRequestHeader=function(){},n.getResponseHeader=function(t){return"content-type"==t.toLowerCase()?this.a.contentType:""},n.qc=function(){this.status=200,this.response=this.responseText=this.a.responseText,i3(this,4)},n.Tb=function(){this.status=500,this.response=this.responseText="",i3(this,4)},n.vc=function(){this.Tb()},n.rc=function(){this.status=200,i3(this,1)},n.getAllResponseHeaders=function(){return"content-type: "+this.a.contentType},i6.prototype.a=null;var i5=0;function i8(t){this.f=t,this.b=this.c=this.a=null}function i7(t,e){this.name=t,this.value=e}i6.prototype.reset=function(t,e,n,r,i){"number"==typeof i||i5++,r||T(),delete this.a},i7.prototype.toString=function(){return this.name};var i9=new i7("SEVERE",1e3),ot=new i7("WARNING",900),oe=new i7("CONFIG",700),on=new i7("FINE",500);i8.prototype.log=function(t,e,n){if(t.value>=function t(e){return e.c?e.c:e.a?t(e.a):(M("Root logger has no level set."),null)}(this).value)for(d(e)&&(e=e()),t=new i6(t,String(e),this.f),n&&(t.a=n),n=this;n;)n=n.a};var or={},oi=null;function oo(t){if(oi||(oi=new i8(""),or[""]=oi,oi.c=oe),!(e=or[t])){e=new i8(t);var e,n=t.lastIndexOf("."),r=t.substr(n+1);(n=oo(t.substr(0,n))).b||(n.b={}),n.b[r]=e,e.a=n,or[t]=e}return e}function oa(t,e){t&&t.log(on,e,void 0)}function os(t){this.f=t}function ou(t){e3.call(this),this.u=t,this.h=void 0,this.readyState=oc,this.status=0,this.responseType=this.responseText=this.response=this.statusText="",this.onreadystatechange=null,this.l=new Headers,this.b=null,this.s="GET",this.f="",this.a=!1,this.i=oo("goog.net.FetchXmlHttp"),this.m=this.c=this.g=null}E(os,iJ),os.prototype.a=function(){return new ou(this.f)},os.prototype.b=(oH={},function(){return oH}),E(ou,e3);var oc=0;function oh(t){t.c.read().then(t.pc.bind(t)).catch(t.Va.bind(t))}function ol(t){t.readyState=4,t.g=null,t.c=null,t.m=null,of(t)}function of(t){t.onreadystatechange&&t.onreadystatechange.call(t)}function op(t){e3.call(this),this.headers=new nn,this.D=t||null,this.c=!1,this.C=this.a=null,this.h=this.P=this.l="",this.f=this.N=this.i=this.J=!1,this.g=0,this.s=null,this.m=od,this.u=this.S=!1}(n=ou.prototype).open=function(t,e){if(this.readyState!=oc)throw this.abort(),Error("Error reopening a connection");this.s=t,this.f=e,this.readyState=1,of(this)},n.send=function(t){if(1!=this.readyState)throw this.abort(),Error("need to call open() first. ");this.a=!0;var e={headers:this.l,method:this.s,credentials:this.h,cache:void 0};t&&(e.body=t),this.u.fetch(new Request(this.f,e)).then(this.uc.bind(this),this.Va.bind(this))},n.abort=function(){this.response=this.responseText="",this.l=new Headers,this.status=0,this.c&&this.c.cancel("Request was aborted."),1<=this.readyState&&this.a&&4!=this.readyState&&(this.a=!1,ol(this)),this.readyState=oc},n.uc=function(t){this.a&&(this.g=t,this.b||(this.status=this.g.status,this.statusText=this.g.statusText,this.b=t.headers,this.readyState=2,of(this)),this.a&&(this.readyState=3,of(this),this.a&&("arraybuffer"===this.responseType?t.arrayBuffer().then(this.sc.bind(this),this.Va.bind(this)):void 0!==s.ReadableStream&&"body"in t?(this.response=this.responseText="",this.c=t.body.getReader(),this.m=new TextDecoder,oh(this)):t.text().then(this.tc.bind(this),this.Va.bind(this)))))},n.pc=function(t){if(this.a){var e=this.m.decode(t.value?t.value:new Uint8Array(0),{stream:!t.done});e&&(this.response=this.responseText+=e),t.done?ol(this):of(this),3==this.readyState&&oh(this)}},n.tc=function(t){this.a&&(this.response=this.responseText=t,ol(this))},n.sc=function(t){this.a&&(this.response=t,ol(this))},n.Va=function(t){var e=this.i;e&&e.log(ot,"Failed to fetch url "+this.f,t instanceof Error?t:Error(t)),this.a&&ol(this)},n.setRequestHeader=function(t,e){this.l.append(t,e)},n.getResponseHeader=function(t){return this.b?this.b.get(t.toLowerCase())||"":((t=this.i)&&t.log(ot,"Attempting to get response header but no headers have been received for url: "+this.f,void 0),"")},n.getAllResponseHeaders=function(){if(!this.b){var t=this.i;return t&&t.log(ot,"Attempting to get all response headers but no headers have been received for url: "+this.f,void 0),""}t=[];for(var e=this.b.entries(),n=e.next();!n.done;)n=n.value,t.push(n[0]+": "+n[1]),n=e.next();return t.join("\r\n")},Object.defineProperty(ou.prototype,"withCredentials",{get:function(){return"include"===this.h},set:function(t){this.h=t?"include":"same-origin"}}),E(op,e3);var od="";op.prototype.b=oo("goog.net.XhrIo");var ov=/^https?$/i,og=["POST","PUT"];function om(t){return"content-type"==t.toLowerCase()}function oy(t,e){t.c=!1,t.a&&(t.f=!0,t.a.abort(),t.f=!1),t.h=e,o_(t),ow(t)}function o_(t){t.J||(t.J=!0,t.dispatchEvent("complete"),t.dispatchEvent("error"))}function ob(t){if(t.c&&void 0!==a){if(t.C[1]&&4==oT(t)&&2==oE(t))oa(t.b,oS(t,"Local request error detected and ignored"));else if(t.i&&4==oT(t))e7(t.Wb,0,t);else if(t.dispatchEvent("readystatechange"),4==oT(t)){oa(t.b,oS(t,"Request complete")),t.c=!1;try{var e,n,r=oE(t);switch(r){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var i=!0;break;default:i=!1}if(!(e=i)){if(n=0===r){var o=String(t.l).match(no)[1]||null;if(!o&&s.self&&s.self.location){var u=s.self.location.protocol;o=u.substr(0,u.length-1)}n=!ov.test(o?o.toLowerCase():"")}e=n}if(e)t.dispatchEvent("complete"),t.dispatchEvent("success");else{try{var c=2<oT(t)?t.a.statusText:""}catch(e){oa(t.b,"Can not get status: "+e.message),c=""}t.h=c+" ["+oE(t)+"]",o_(t)}}finally{ow(t)}}}}function ow(t,e){if(t.a){oI(t);var n=t.a,r=t.C[0]?l:null;t.a=null,t.C=null,e||t.dispatchEvent("ready");try{n.onreadystatechange=r}catch(e){(t=t.b)&&t.log(i9,"Problem encountered resetting onreadystatechange: "+e.message,void 0)}}}function oI(t){t.a&&t.u&&(t.a.ontimeout=null),t.s&&(s.clearTimeout(t.s),t.s=null)}function oT(t){return t.a?t.a.readyState:0}function oE(t){try{return 2<oT(t)?t.a.status:-1}catch(t){return -1}}function oS(t,e){return e+" ["+t.P+" "+t.l+" "+oE(t)+"]"}function oC(t){this.g=[],this.u=oF,this.s=t||null,this.f=this.a=!1,this.c=void 0,this.v=this.C=this.i=!1,this.h=0,this.b=null,this.l=0}function ok(t,e,n){t.a=!0,t.c=n,t.f=!e,ox(t)}function oN(t){if(t.a){if(!t.v)throw new oP(t);t.v=!1}}function oA(t,e,n,r){t.g.push([e,n,r]),t.a&&ox(t)}function oR(t){return z(t.g,function(t){return d(t[1])})}function ox(t){if(t.h&&t.a&&oR(t)){var e=t.h,n=oL[e];n&&(s.clearTimeout(n.a),delete oL[e]),t.h=0}t.b&&(t.b.l--,delete t.b),e=t.c;for(var r=n=!1;t.g.length&&!t.i;){var i=t.g.shift(),o=i[0],a=i[1];if(i=i[2],o=t.f?a:o)try{var u=o.call(i||t.s,e);void 0!==u&&(t.f=t.f&&(u==e||u instanceof Error),t.c=e=u),(P(e)||"function"==typeof s.Promise&&e instanceof s.Promise)&&(r=!0,t.i=!0)}catch(r){e=r,t.f=!0,oR(t)||(n=!0)}}t.c=e,r&&(u=w(t.m,t,!0),r=w(t.m,t,!1),e instanceof oC?(oA(e,u,r),e.C=!0):e.then(u,r)),n&&(oL[(e=new oO(e)).a]=e,t.h=e.a)}function oP(){D.call(this)}function oD(){D.call(this)}function oO(t){this.a=s.setTimeout(w(this.c,this),0),this.b=t}(n=op.prototype).Ma=function(){void 0!==a&&this.a&&(this.h="Timed out after "+this.g+"ms, aborting",oa(this.b,oS(this,this.h)),this.dispatchEvent("timeout"),this.abort(8))},n.abort=function(){this.a&&this.c&&(oa(this.b,oS(this,"Aborting")),this.c=!1,this.f=!0,this.a.abort(),this.f=!1,this.dispatchEvent("complete"),this.dispatchEvent("abort"),ow(this))},n.Da=function(){this.a&&(this.c&&(this.c=!1,this.f=!0,this.a.abort(),this.f=!1),ow(this,!0)),op.bb.Da.call(this)},n.Wb=function(){this.ya||(this.N||this.i||this.f?ob(this):this.Jc())},n.Jc=function(){ob(this)},n.getResponse=function(){try{if(!this.a)return null;if("response"in this.a)return this.a.response;switch(this.m){case od:case"text":return this.a.responseText;case"arraybuffer":if("mozResponseArrayBuffer"in this.a)return this.a.mozResponseArrayBuffer}var t=this.b;return t&&t.log(i9,"Response type "+this.m+" is not supported on this browser",void 0),null}catch(t){return oa(this.b,"Can not get response: "+t.message),null}},oC.prototype.cancel=function(t){if(this.a)this.c instanceof oC&&this.c.cancel();else{if(this.b){var e=this.b;delete this.b,t?e.cancel(t):(e.l--,0>=e.l&&e.cancel())}this.u?this.u.call(this.s,this):this.v=!0,this.a||(t=new oD(this),oN(this),ok(this,!1,t))}},oC.prototype.m=function(t,e){this.i=!1,ok(this,t,e)},oC.prototype.then=function(t,e,n){var r,i,o=new ei(function(t,e){r=t,i=e});return oA(this,r,function(t){t instanceof oD?o.cancel():i(t)}),o.then(t,e,n)},oC.prototype.$goog_Thenable=!0,E(oP,D),oP.prototype.message="Deferred has already fired",oP.prototype.name="AlreadyCalledError",E(oD,D),oD.prototype.message="Deferred was canceled",oD.prototype.name="CanceledError",oO.prototype.c=function(){throw delete oL[this.a],this.b};var oL={};function oM(t){var e,n,r={},i=r.document||document,o=tT(t).toString(),a=t8(document,"SCRIPT"),u={Xb:a,Ma:void 0},l=new oC(u),f=null,p=null!=r.timeout?r.timeout:5e3;return 0<p&&(f=window.setTimeout(function(){oj(a,!0);var t=new oV(oq,"Timeout reached for loading script "+o);oN(l),ok(l,!1,t)},p),u.Ma=f),a.onload=a.onreadystatechange=function(){a.readyState&&"loaded"!=a.readyState&&"complete"!=a.readyState||(oj(a,r.xd||!1,f),oN(l),ok(l,!0,null))},a.onerror=function(){oj(a,!0,f);var t=new oV(oU,"Error while loading script "+o);oN(l),ok(l,!1,t)},tv(u=r.attributes||{},{type:"text/javascript",charset:"UTF-8"}),t6(a,u),n=t,tg(a,"HTMLScriptElement"),a.src=tT(n),(n=a.ownerDocument&&a.ownerDocument.defaultView)&&n!=s?n=h(n.document):(null===c&&(c=h(s.document)),n=c),n&&a.setAttribute("nonce",n),((e=(i||document).getElementsByTagName("HEAD"))&&0!=e.length?e[0]:i.documentElement).appendChild(a),l}function oF(){if(this&&this.Xb){var t=this.Xb;t&&"SCRIPT"==t.tagName&&oj(t,!0,this.Ma)}}function oj(t,e,n){null!=n&&s.clearTimeout(n),t.onload=l,t.onerror=l,t.onreadystatechange=l,e&&window.setTimeout(function(){t&&t.parentNode&&t.parentNode.removeChild(t)},0)}var oU=0,oq=1;function oV(t,e){var n="Jsloader error (code #"+t+")";e&&(n+=": "+e),D.call(this,n),this.code=t}function oB(t){this.f=t}function oK(t,e,n){if(this.c=t,t=e||{},this.l=t.secureTokenEndpoint||"https://securetoken.googleapis.com/v1/token",this.m=t.secureTokenTimeout||o2,this.g=tp(t.secureTokenHeaders||o4),this.h=t.firebaseEndpoint||"https://www.googleapis.com/identitytoolkit/v3/relyingparty/",this.i=t.identityPlatformEndpoint||"https://identitytoolkit.googleapis.com/v2/",this.v=t.firebaseTimeout||o3,this.a=tp(t.firebaseHeaders||o6),n&&(this.a["X-Client-Version"]=n,this.g["X-Client-Version"]=n),n="Node"==nG(),!(n=s.XMLHttpRequest||n&&ee.INTERNAL.node&&ee.INTERNAL.node.XMLHttpRequest)&&!nz())throw new C("internal-error","The XMLHttpRequest compatibility library was not found.");this.f=void 0,nz()?this.f=new os(self):nQ()?this.f=new oB(n):this.f=new i2,this.b=null}E(oV,D),E(oB,iJ),oB.prototype.a=function(){return new this.f},oB.prototype.b=function(){return{}};var oH,oW,oz,oG,oQ,o$,oY,oX,oJ,oZ,o0,o1="idToken",o2=new rr(3e4,6e4),o4={"Content-Type":"application/x-www-form-urlencoded"},o3=new rr(3e4,6e4),o6={"Content-Type":"application/json"};function o5(t,e){e?t.a["X-Firebase-Locale"]=e:delete t.a["X-Firebase-Locale"]}function o8(t,e){e&&(t.l=o7("https://securetoken.googleapis.com/v1/token",e),t.h=o7("https://www.googleapis.com/identitytoolkit/v3/relyingparty/",e),t.i=o7("https://identitytoolkit.googleapis.com/v2/",e))}function o7(t,e){return t=nf(t),e=nf(e.url),t.f=t.a+t.f,ns(t,e.c),t.a=e.a,nu(t,e.g),t.toString()}function o9(t,e){e?(t.a["X-Client-Version"]=e,t.g["X-Client-Version"]=e):(delete t.a["X-Client-Version"],delete t.g["X-Client-Version"])}function at(t,e,n,r,i,o,a){var u;(!(u=nX(u=n0())!=nY?null:(u=u.match(/\sChrome\/(\d+)/i))&&2==u.length?parseInt(u[1],10):null)||!(30>u))&&(!tH||!t2||9<t2)||nz()?t=w(t.u,t):(o0||(o0=new ei(function(t,e){var n,r;n=t,r=e,((window.gapi||{}).client||{}).request?n():(s[an]=function(){((window.gapi||{}).client||{}).request?n():r(Error("CORS_UNSUPPORTED"))},oA(oM(tE(ae,{onload:an})),null,function(){r(Error("CORS_UNSUPPORTED"))},void 0))})),t=w(t.s,t)),t(e,n,r,i,o,a)}oK.prototype.T=function(){return this.b},oK.prototype.u=function(t,e,n,r,i,o){if(nz()&&(void 0===s.fetch||void 0===s.Headers||void 0===s.Request))throw new C("operation-not-supported-in-this-environment","fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.");var a=new op(this.f);if(o){a.g=Math.max(0,o);var u=setTimeout(function(){a.dispatchEvent("timeout")},o)}e6(a,"complete",function(){u&&clearTimeout(u);var t=null;try{t=JSON.parse(function(t){try{return t.a?t.a.responseText:""}catch(e){return oa(t.b,"Can not get responseText: "+e.message),""}}(this))||null}catch(e){t=null}e&&e(t)}),e5(a,"ready",function(){u&&clearTimeout(u),eN(this)}),e5(a,"timeout",function(){u&&clearTimeout(u),eN(this),e&&e(null)}),function(t,e,n,r,i){if(t.a)throw Error("[goog.net.XhrIo] Object is active with another request="+t.l+"; newUri="+e);n=n?n.toUpperCase():"GET",t.l=e,t.h="",t.P=n,t.J=!1,t.c=!0,t.a=t.D?t.D.a():oZ.a(),t.C=t.D?iZ(t.D):iZ(oZ),t.a.onreadystatechange=w(t.Wb,t);try{oa(t.b,oS(t,"Opening Xhr")),t.N=!0,t.a.open(n,String(e),!0),t.N=!1}catch(e){oa(t.b,oS(t,"Error opening Xhr: "+e.message)),oy(t,e);return}e=r||"";var o,a=new nn(t.headers);i&&function(t,e){if(t.forEach&&"function"==typeof t.forEach)t.forEach(e,void 0);else if(p(t)||"string"==typeof t)K(t,e,void 0);else for(var n=ne(t),r=nt(t),i=r.length,o=0;o<i;o++)e.call(void 0,r[o],n&&n[o],t)}(i,function(t,e){a.set(e,t)}),i=function(t){t:{for(var e=om,n=t.length,r="string"==typeof t?t.split(""):t,i=0;i<n;i++)if(i in r&&e.call(void 0,r[i],i,t)){e=i;break t}e=-1}return 0>e?null:"string"==typeof t?t.charAt(e):t[e]}(a.Y()),r=s.FormData&&e instanceof s.FormData,!G(og,n)||i||r||a.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8"),a.forEach(function(t,e){this.a.setRequestHeader(e,t)},t),t.m&&(t.a.responseType=t.m),"withCredentials"in t.a&&t.a.withCredentials!==t.S&&(t.a.withCredentials=t.S);try{oI(t),0<t.g&&(t.u=(o=t.a,tH&&t1(9)&&"number"==typeof o.timeout&&void 0!==o.ontimeout),oa(t.b,oS(t,"Will abort after "+t.g+"ms if incomplete, xhr2 "+t.u)),t.u?(t.a.timeout=t.g,t.a.ontimeout=w(t.Ma,t)):t.s=e7(t.Ma,t.g,t)),oa(t.b,oS(t,"Sending request")),t.i=!0,t.a.send(e),t.i=!1}catch(e){oa(t.b,oS(t,"Send error: "+e.message)),oy(t,e)}}(a,t,n,r,i)};var ae=new tm(tb,"https://apis.google.com/js/client.js?onload=%{onload}"),an="__fcb"+Math.floor(1e6*Math.random()).toString();function ar(t,e,n,r,i,o,a){var s=nf(e+n);nh(s,"key",t.c),a&&nh(s,"cb",Date.now().toString());var u="GET"==r;if(u)for(var c in i)i.hasOwnProperty(c)&&nh(s,c,i[c]);return new ei(function(e,n){at(t,s.toString(),function(t){t?t.error?n(aJ(t,o||{})):e(t):n(new C("network-request-failed"))},r,u?void 0:nR(n7(i)),t.a,t.v.get())})}function ai(t){if("string"!=typeof(t=t.email)||!nB.test(t))throw new C("invalid-email")}function ao(t){"email"in t&&ai(t)}function aa(t){if(!t[o1]){if(t.mfaPendingCredential)throw new C("multi-factor-auth-required",null,tp(t));throw new C("internal-error")}}function as(t){if(t.phoneNumber||t.temporaryProof){if(!t.phoneNumber||!t.temporaryProof)throw new C("internal-error")}else{if(!t.sessionInfo)throw new C("missing-verification-id");if(!t.code)throw new C("missing-verification-code")}}oK.prototype.s=function(t,e,n,r,i){var o=this;o0.then(function(){window.gapi.client.setApiKey(o.c);var a=window.gapi.auth.getToken();window.gapi.auth.setToken(null),window.gapi.client.request({path:t,method:n,body:r,headers:i,authType:"none",callback:function(t){window.gapi.auth.setToken(a),e&&e(t)}})}).o(function(t){e&&e({error:{message:t&&t.message||"CORS_UNSUPPORTED"}})})},oK.prototype.Ab=function(){return aY(this,aj,{})},oK.prototype.Cb=function(t,e){return aY(this,aM,{idToken:t,email:e})},oK.prototype.Db=function(t,e){return aY(this,aF,{idToken:t,password:e})};var au={displayName:"DISPLAY_NAME",photoUrl:"PHOTO_URL"};function ac(t){if(!t.phoneVerificationInfo)throw new C("internal-error");if(!t.phoneVerificationInfo.sessionInfo)throw new C("missing-verification-id");if(!t.phoneVerificationInfo.code)throw new C("missing-verification-code")}function ah(t){if(!t.requestUri||!t.sessionId&&!t.postBody&&!t.pendingToken)throw new C("internal-error")}function al(t,e){return e.oauthIdToken&&e.providerId&&0==e.providerId.indexOf("oidc.")&&!e.pendingToken&&(t.sessionId?e.nonce=t.sessionId:t.postBody&&nC(t=new nI(t.postBody),"nonce")&&(e.nonce=t.get("nonce"))),e}function af(t){var e=null;if(t.needConfirmation?(t.code="account-exists-with-different-credential",e=iX(t)):"FEDERATED_USER_ID_ALREADY_LINKED"==t.errorMessage?(t.code="credential-already-in-use",e=iX(t)):"EMAIL_EXISTS"==t.errorMessage?(t.code="email-already-in-use",e=iX(t)):t.errorMessage&&(e=aX(t.errorMessage)),e)throw e;aa(t)}function ap(t,e){return e.returnIdpCredential=!0,aY(t,aV,e)}function ad(t,e){return e.returnIdpCredential=!0,aY(t,aK,e)}function av(t,e){return e.returnIdpCredential=!0,e.autoCreate=!1,aY(t,aB,e)}function ag(t){if(!t.oobCode)throw new C("invalid-action-code")}(n=oK.prototype).Eb=function(t,e){var n={idToken:t},r=[];return tl(au,function(t,i){var o=e[i];null===o?r.push(t):i in e&&(n[i]=o)}),r.length&&(n.deleteAttribute=r),aY(this,aM,n)},n.wb=function(t,e){return tv(t={requestType:"PASSWORD_RESET",email:t},e),aY(this,ax,t)},n.xb=function(t,e){return tv(t={requestType:"EMAIL_SIGNIN",email:t},e),aY(this,aN,t)},n.vb=function(t,e){return tv(t={requestType:"VERIFY_EMAIL",idToken:t},e),aY(this,aA,t)},n.Fb=function(t,e,n){return tv(t={requestType:"VERIFY_AND_CHANGE_EMAIL",idToken:t,newEmail:e},n),aY(this,aR,t)},n.gb=function(t){return aY(this,az,t)},n.ob=function(t,e){return aY(this,aO,{oobCode:t,newPassword:e})},n.Sa=function(t){return aY(this,ay,{oobCode:t})},n.kb=function(t){return aY(this,am,{oobCode:t})};var am={endpoint:"setAccountInfo",A:ag,Z:"email",B:!0},ay={endpoint:"resetPassword",A:ag,G:function(t){var e=t.requestType;if(!e||!t.email&&"EMAIL_SIGNIN"!=e&&"VERIFY_AND_CHANGE_EMAIL"!=e)throw new C("internal-error")},B:!0},a_={endpoint:"signupNewUser",A:function(t){if(ai(t),!t.password)throw new C("weak-password")},G:aa,V:!0,B:!0},ab={endpoint:"createAuthUri",B:!0},aw={endpoint:"deleteAccount",O:["idToken"]},aI={endpoint:"setAccountInfo",O:["idToken","deleteProvider"],A:function(t){if(!Array.isArray(t.deleteProvider))throw new C("internal-error")}},aT={endpoint:"emailLinkSignin",O:["email","oobCode"],A:ai,G:aa,V:!0,B:!0},aE={endpoint:"emailLinkSignin",O:["idToken","email","oobCode"],A:ai,G:aa,V:!0},aS={endpoint:"accounts/mfaEnrollment:finalize",O:["idToken","phoneVerificationInfo"],A:ac,G:aa,B:!0,Na:!0},aC={endpoint:"accounts/mfaSignIn:finalize",O:["mfaPendingCredential","phoneVerificationInfo"],A:ac,G:aa,B:!0,Na:!0},ak={endpoint:"getAccountInfo"},aN={endpoint:"getOobConfirmationCode",O:["requestType"],A:function(t){if("EMAIL_SIGNIN"!=t.requestType)throw new C("internal-error");ai(t)},Z:"email",B:!0},aA={endpoint:"getOobConfirmationCode",O:["idToken","requestType"],A:function(t){if("VERIFY_EMAIL"!=t.requestType)throw new C("internal-error")},Z:"email",B:!0},aR={endpoint:"getOobConfirmationCode",O:["idToken","newEmail","requestType"],A:function(t){if("VERIFY_AND_CHANGE_EMAIL"!=t.requestType)throw new C("internal-error")},Z:"email",B:!0},ax={endpoint:"getOobConfirmationCode",O:["requestType"],A:function(t){if("PASSWORD_RESET"!=t.requestType)throw new C("internal-error");ai(t)},Z:"email",B:!0},aP={mb:!0,endpoint:"getProjectConfig",Vb:"GET"},aD={mb:!0,endpoint:"getRecaptchaParam",Vb:"GET",G:function(t){if(!t.recaptchaSiteKey)throw new C("internal-error")}},aO={endpoint:"resetPassword",A:ag,Z:"email",B:!0},aL={endpoint:"sendVerificationCode",O:["phoneNumber","recaptchaToken"],Z:"sessionInfo",B:!0},aM={endpoint:"setAccountInfo",O:["idToken"],A:ao,V:!0},aF={endpoint:"setAccountInfo",O:["idToken"],A:function(t){if(ao(t),!t.password)throw new C("weak-password")},G:aa,V:!0},aj={endpoint:"signupNewUser",G:aa,V:!0,B:!0},aU={endpoint:"accounts/mfaEnrollment:start",O:["idToken","phoneEnrollmentInfo"],A:function(t){if(!t.phoneEnrollmentInfo)throw new C("internal-error");if(!t.phoneEnrollmentInfo.phoneNumber)throw new C("missing-phone-number");if(!t.phoneEnrollmentInfo.recaptchaToken)throw new C("missing-app-credential")},G:function(t){if(!t.phoneSessionInfo||!t.phoneSessionInfo.sessionInfo)throw new C("internal-error")},B:!0,Na:!0},aq={endpoint:"accounts/mfaSignIn:start",O:["mfaPendingCredential","mfaEnrollmentId","phoneSignInInfo"],A:function(t){if(!t.phoneSignInInfo||!t.phoneSignInInfo.recaptchaToken)throw new C("missing-app-credential")},G:function(t){if(!t.phoneResponseInfo||!t.phoneResponseInfo.sessionInfo)throw new C("internal-error")},B:!0,Na:!0},aV={endpoint:"verifyAssertion",A:ah,Za:al,G:af,V:!0,B:!0},aB={endpoint:"verifyAssertion",A:ah,Za:al,G:function(t){if(t.errorMessage&&"USER_NOT_FOUND"==t.errorMessage)throw new C("user-not-found");if(t.errorMessage)throw aX(t.errorMessage);aa(t)},V:!0,B:!0},aK={endpoint:"verifyAssertion",A:function(t){if(ah(t),!t.idToken)throw new C("internal-error")},Za:al,G:af,V:!0},aH={endpoint:"verifyCustomToken",A:function(t){if(!t.token)throw new C("invalid-custom-token")},G:aa,V:!0,B:!0},aW={endpoint:"verifyPassword",A:function(t){if(ai(t),!t.password)throw new C("wrong-password")},G:aa,V:!0,B:!0},az={endpoint:"verifyPhoneNumber",A:as,G:aa,B:!0},aG={endpoint:"verifyPhoneNumber",A:function(t){if(!t.idToken)throw new C("internal-error");as(t)},G:function(t){if(t.temporaryProof)throw t.code="credential-already-in-use",iX(t);aa(t)}},aQ={Ib:{USER_NOT_FOUND:"user-not-found"},endpoint:"verifyPhoneNumber",A:as,G:aa,B:!0},a$={endpoint:"accounts/mfaEnrollment:withdraw",O:["idToken","mfaEnrollmentId"],G:function(t){if(!!t[o1]^!!t.refreshToken)throw new C("internal-error")},B:!0,Na:!0};function aY(t,e,n){if(!function(t,e){if(!e||!e.length)return!0;if(!t)return!1;for(var n=0;n<e.length;n++){var r=t[e[n]];if(null==r||""===r)return!1}return!0}(n,e.O))return ef(new C("internal-error"));var r,i=!!e.Na,o=e.Vb||"POST";return el(n).then(e.A).then(function(){return e.V&&(n.returnSecureToken=!0),e.B&&t.b&&void 0===n.tenantId&&(n.tenantId=t.b),i?ar(t,t.i,e.endpoint,o,n,e.Ib,e.mb||!1):ar(t,t.h,e.endpoint,o,n,e.Ib,e.mb||!1)}).then(function(t){return r=t,e.Za?e.Za(n,r):r}).then(e.G).then(function(){if(!e.Z)return r;if(!(e.Z in r))throw new C("internal-error");return r[e.Z]})}function aX(t){return aJ({error:{errors:[{message:t}],code:400,message:t}})}function aJ(t,e){var n=(t.error&&t.error.errors&&t.error.errors[0]||{}).reason||"",r={keyInvalid:"invalid-api-key",ipRefererBlocked:"app-not-authorized"};if(n=r[n]?new C(r[n]):null)return n;for(var i in n=t.error&&t.error.message||"",tv(r={INVALID_CUSTOM_TOKEN:"invalid-custom-token",CREDENTIAL_MISMATCH:"custom-token-mismatch",MISSING_CUSTOM_TOKEN:"internal-error",INVALID_IDENTIFIER:"invalid-email",MISSING_CONTINUE_URI:"internal-error",INVALID_EMAIL:"invalid-email",INVALID_PASSWORD:"wrong-password",USER_DISABLED:"user-disabled",MISSING_PASSWORD:"internal-error",EMAIL_EXISTS:"email-already-in-use",PASSWORD_LOGIN_DISABLED:"operation-not-allowed",INVALID_IDP_RESPONSE:"invalid-credential",INVALID_PENDING_TOKEN:"invalid-credential",FEDERATED_USER_ID_ALREADY_LINKED:"credential-already-in-use",MISSING_OR_INVALID_NONCE:"missing-or-invalid-nonce",INVALID_MESSAGE_PAYLOAD:"invalid-message-payload",INVALID_RECIPIENT_EMAIL:"invalid-recipient-email",INVALID_SENDER:"invalid-sender",EMAIL_NOT_FOUND:"user-not-found",RESET_PASSWORD_EXCEED_LIMIT:"too-many-requests",EXPIRED_OOB_CODE:"expired-action-code",INVALID_OOB_CODE:"invalid-action-code",MISSING_OOB_CODE:"internal-error",INVALID_PROVIDER_ID:"invalid-provider-id",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"requires-recent-login",INVALID_ID_TOKEN:"invalid-user-token",TOKEN_EXPIRED:"user-token-expired",USER_NOT_FOUND:"user-token-expired",CORS_UNSUPPORTED:"cors-unsupported",DYNAMIC_LINK_NOT_ACTIVATED:"dynamic-link-not-activated",INVALID_APP_ID:"invalid-app-id",TOO_MANY_ATTEMPTS_TRY_LATER:"too-many-requests",WEAK_PASSWORD:"weak-password",OPERATION_NOT_ALLOWED:"operation-not-allowed",USER_CANCELLED:"user-cancelled",CAPTCHA_CHECK_FAILED:"captcha-check-failed",INVALID_APP_CREDENTIAL:"invalid-app-credential",INVALID_CODE:"invalid-verification-code",INVALID_PHONE_NUMBER:"invalid-phone-number",INVALID_SESSION_INFO:"invalid-verification-id",INVALID_TEMPORARY_PROOF:"invalid-credential",MISSING_APP_CREDENTIAL:"missing-app-credential",MISSING_CODE:"missing-verification-code",MISSING_PHONE_NUMBER:"missing-phone-number",MISSING_SESSION_INFO:"missing-verification-id",QUOTA_EXCEEDED:"quota-exceeded",SESSION_EXPIRED:"code-expired",REJECTED_CREDENTIAL:"rejected-credential",INVALID_CONTINUE_URI:"invalid-continue-uri",MISSING_ANDROID_PACKAGE_NAME:"missing-android-pkg-name",MISSING_IOS_BUNDLE_ID:"missing-ios-bundle-id",UNAUTHORIZED_DOMAIN:"unauthorized-continue-uri",INVALID_DYNAMIC_LINK_DOMAIN:"invalid-dynamic-link-domain",INVALID_OAUTH_CLIENT_ID:"invalid-oauth-client-id",INVALID_CERT_HASH:"invalid-cert-hash",UNSUPPORTED_TENANT_OPERATION:"unsupported-tenant-operation",INVALID_TENANT_ID:"invalid-tenant-id",TENANT_ID_MISMATCH:"tenant-id-mismatch",ADMIN_ONLY_OPERATION:"admin-restricted-operation",INVALID_MFA_PENDING_CREDENTIAL:"invalid-multi-factor-session",MFA_ENROLLMENT_NOT_FOUND:"multi-factor-info-not-found",MISSING_MFA_PENDING_CREDENTIAL:"missing-multi-factor-session",MISSING_MFA_ENROLLMENT_ID:"missing-multi-factor-info",EMAIL_CHANGE_NEEDS_VERIFICATION:"email-change-needs-verification",SECOND_FACTOR_EXISTS:"second-factor-already-in-use",SECOND_FACTOR_LIMIT_EXCEEDED:"maximum-second-factor-count-exceeded",UNSUPPORTED_FIRST_FACTOR:"unsupported-first-factor",UNVERIFIED_EMAIL:"unverified-email"},e||{}),e=(e=n.match(/^[^\s]+\s*:\s*([\s\S]*)$/))&&1<e.length?e[1]:void 0,r)if(0===n.indexOf(i))return new C(r[i],e);return!e&&t&&(e=n8(t)),new C("internal-error",e)}function aZ(t){var e;this.b=t,this.a=null,this.sb=(e=this,(a4||(a4=new ei(function(t,e){function n(){rn(),n1("gapi.load")("gapi.iframes",{callback:t,ontimeout:function(){rn(),e(Error("Network Error"))},timeout:a1.get()})}if(n1("gapi.iframes.Iframe"))t();else if(n1("gapi.load"))n();else{var r="__iframefcb"+Math.floor(1e6*Math.random()).toString();s[r]=function(){n1("gapi.load")?n():e(Error("Network Error"))},el(oM(r=tE(a0,{onload:r}))).o(function(){e(Error("Network Error"))})}}).o(function(t){throw a4=null,t}))).then(function(){return new ei(function(t,n){n1("gapi.iframes.getContext")().open({where:document.body,url:e.b,messageHandlersFilter:n1("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),attributes:{style:{position:"absolute",top:"-100px",width:"1px",height:"1px"}},dontclear:!0},function(r){function i(){clearTimeout(o),t()}e.a=r,e.a.restyle({setHideOnLeave:!1});var o=setTimeout(function(){n(Error("Network Error"))},a2.get());r.ping(i).then(i,function(){n(Error("Network Error"))})})})}))}var a0=new tm(tb,"https://apis.google.com/js/api.js?onload=%{onload}"),a1=new rr(3e4,6e4),a2=new rr(5e3,15e3),a4=null;function a3(t,e,n,r){this.l=t,this.h=e,this.i=n,this.g=r,this.f=null,t=this.g?np((t=nf(this.g.url)).c,t.a,t.g,"/emulator/auth/iframe"):np("https",this.l,null,"/__/auth/iframe"),this.a=t,nh(this.a,"apiKey",this.h),nh(this.a,"appName",this.i),this.b=null,this.c=[]}function a6(t,e,n,r,i,o){this.u=t,this.s=e,this.c=n,this.m=r,this.v=o,this.i=this.g=this.l=null,this.a=i,this.h=this.f=null}function a5(t){try{return ee.app(t).auth().Ga()}catch(t){return[]}}function a8(t,e,n,r,i,o){this.s=t,this.g=e,this.b=n,this.f=o,this.c=r||null,this.i=i||null,this.l=this.u=this.C=null,this.h=[],this.m=this.a=null}function a7(t){var e=nM();return aY(t,aP,{}).then(function(t){return t.authorizedDomains||[]}).then(function(t){t:{var n=nf(e),r=n.c;n=n.a;for(var i=0;i<t.length;i++){var o=t[i],a=n;if(a=0==o.indexOf("chrome-extension://")?nf(o).a==a&&"chrome-extension"==r:("http"==r||"https"==r)&&(nV.test(o)?a==o:RegExp("^(.+\\."+(o=o.split(".").join("\\."))+"|"+o+")$","i").test(a))){t=!0;break t}}t=!1}if(!t)throw new i$(nM())})}function a9(t){return t.m||(t.m=nK().then(function(){if(!t.u){var e=t.c,n=t.i,r=a5(t.b),i=new a3(t.s,t.g,t.b,t.f);i.f=e,i.b=n,i.c=X(r||[]),t.u=i.toString()}t.v=new aZ(t.u),function(t){if(!t.v)throw Error("IfcHandler must be initialized!");!function(t,e){t.sb.then(function(){t.a.register("authEvent",e,n1("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})}(t.v,function(e){var n={};if(e&&e.authEvent){var r=!1;for(n=0,e=iz(e.authEvent);n<t.h.length;n++)r=t.h[n](e)||r;return(n={}).status=r?"ACK":"ERROR",el(n)}return n.status="ERROR",el(n)})}(t)})),t.m}function st(t){return t.l||(t.C=t.c?nZ(t.c,a5(t.b)):null,t.l=new oK(t.g,x(t.i),t.C),t.f&&o8(t.l,t.f)),t.l}function se(t,e,n,r,i,o,a,s,u,c,h,l){return(t=new a6(t,e,n,r,i,l)).l=o,t.g=a,t.i=s,t.b=tp(u||null),t.f=c,t.zb(h).toString()}function sn(t){if(this.a=t||ee.INTERNAL.reactNative&&ee.INTERNAL.reactNative.AsyncStorage,!this.a)throw new C("internal-error","The React Native compatibility library was not found.");this.type="asyncStorage"}function sr(t){this.b=t,this.a={},this.f=w(this.c,this)}a3.prototype.toString=function(){return this.f?nh(this.a,"v",this.f):nS(this.a.b,"v"),this.b?nh(this.a,"eid",this.b):nS(this.a.b,"eid"),this.c.length?nh(this.a,"fw",this.c.join(",")):nS(this.a.b,"fw"),this.a.toString()},a6.prototype.zb=function(t){return this.h=t,this},a6.prototype.toString=function(){if(this.v){var t=nf(this.v.url);t=np(t.c,t.a,t.g,"/emulator/auth/handler")}else t=np("https",this.u,null,"/__/auth/handler");if(nh(t,"apiKey",this.s),nh(t,"appName",this.c),nh(t,"authType",this.m),this.a.isOAuthProvider){var e=this.a;try{var n=ee.app(this.c).auth().la()}catch(t){n=null}for(var r in e.pb=n,nh(t,"providerId",this.a.providerId),e=n7((n=this.a).Jb))e[r]=e[r].toString();r=n.Qc,e=tp(e);for(var i=0;i<r.length;i++){var o=r[i];o in e&&delete e[o]}n.qb&&n.pb&&!e[n.qb]&&(e[n.qb]=n.pb),tf(e)||nh(t,"customParameters",n8(e))}if("function"==typeof this.a.Rb&&(n=this.a.Rb()).length&&nh(t,"scopes",n.join(",")),this.l?nh(t,"redirectUrl",this.l):nS(t.b,"redirectUrl"),this.g?nh(t,"eventId",this.g):nS(t.b,"eventId"),this.i?nh(t,"v",this.i):nS(t.b,"v"),this.b)for(var a in this.b)this.b.hasOwnProperty(a)&&!nl(t,a)&&nh(t,a,this.b[a]);return this.h?nh(t,"tid",this.h):nS(t.b,"tid"),this.f?nh(t,"eid",this.f):nS(t.b,"eid"),(a=a5(this.c)).length&&nh(t,"fw",a.join(",")),t.toString()},(n=a8.prototype).Pb=function(t,e,n){var r=new C("popup-closed-by-user"),i=new C("web-storage-unsupported"),o=this,a=!1;return this.ma().then(function(){var n;(n={type:"webStorageSupport"},a9(o).then(function(){var t;return(t=o.v).sb.then(function(){return new ei(function(e){t.a.send(n.type,n,e,n1("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})})}).then(function(t){if(t&&t.length&&void 0!==t[0].webStorageSupport)return t[0].webStorageSupport;throw Error()})).then(function(n){n||(t&&nU(t),e(i),a=!0)})}).o(function(){}).then(function(){if(!a)return new ei(function(e){return function n(){e9(2e3).then(function(){if(t&&!t.closed)return n();e()})}()})}).then(function(){if(!a)return e9(n).then(function(){e(r)})})},n.Yb=function(){var t=n0();return!n5(t)&&!re(t)},n.Ub=function(){return!1},n.Nb=function(t,e,n,r,i,o,a,s){if(!t)return ef(new C("popup-blocked"));if(a&&!n5())return this.ma().o(function(e){nU(t),i(e)}),r(),el();this.a||(this.a=a7(st(this)));var u=this;return this.a.then(function(){var e=u.ma().o(function(e){throw nU(t),i(e),e});return r(),e}).then(function(){iH(n),a||nF(se(u.s,u.g,u.b,e,n,null,o,u.c,void 0,u.i,s,u.f),t)}).o(function(t){throw"auth/network-request-failed"==t.code&&(u.a=null),t})},n.Ob=function(t,e,n,r){this.a||(this.a=a7(st(this)));var i=this;return this.a.then(function(){iH(e),nF(se(i.s,i.g,i.b,t,e,nM(),n,i.c,void 0,i.i,r,i.f))}).o(function(t){throw"auth/network-request-failed"==t.code&&(i.a=null),t})},n.ma=function(){var t=this;return a9(this).then(function(){return t.v.sb}).o(function(){throw t.a=null,new C("network-request-failed")})},n.ac=function(){return!0},n.Ea=function(t){this.h.push(t)},n.Ta=function(t){$(this.h,function(e){return e==t})},(n=sn.prototype).get=function(t){return el(this.a.getItem(t)).then(function(t){return t&&n9(t)})},n.set=function(t,e){return el(this.a.setItem(t,n8(e)))},n.U=function(t){return el(this.a.removeItem(t))},n.ca=function(){},n.ia=function(){};var si=[];function so(t,e,n){tf(t.a)&&t.b.addEventListener("message",t.f),void 0===t.a[e]&&(t.a[e]=[]),t.a[e].push(n)}function sa(t){this.a=t}function ss(t){this.c=t,this.b=!1,this.a=[]}function su(t,e,n,r){var i,o,a,s,u=n||{},c=null;if(t.b)return ef(Error("connection_unavailable"));var h=r?800:50,l="undefined"!=typeof MessageChannel?new MessageChannel:null;return new ei(function(n,r){l?(i=Math.floor(1e20*Math.random()).toString(),l.port1.start(),a=setTimeout(function(){r(Error("unsupported_event"))},h),c={messageChannel:l,onMessage:o=function(t){t.data.eventId===i&&("ack"===t.data.status?(clearTimeout(a),s=setTimeout(function(){r(Error("timeout"))},3e3)):"done"===t.data.status?(clearTimeout(s),void 0!==t.data.response?n(t.data.response):r(Error("unknown_error"))):(clearTimeout(a),clearTimeout(s),r(Error("invalid_response"))))}},t.a.push(c),l.port1.addEventListener("message",o),t.c.postMessage({eventType:e,eventId:i,data:u},[l.port2])):r(Error("connection_unavailable"))}).then(function(e){return sc(t,c),e}).o(function(e){throw sc(t,c),e})}function sc(t,e){if(e){var n=e.messageChannel,r=e.onMessage;n&&(n.port1.removeEventListener("message",r),n.port1.close()),$(t.a,function(t){return t==e})}}function sh(){if(!sp())throw new C("web-storage-unsupported");this.c={},this.a=[],this.b=0,this.m=s.indexedDB,this.type="indexedDB",this.g=this.v=this.f=this.l=null,this.s=!1,this.h=null;var t,e=this;nz()&&self?(this.v=function(){var t=nz()?self:null;if(K(si,function(n){n.b==t&&(e=n)}),!e){var e=new sr(t);si.push(e)}return e}(),so(this.v,"keyChanged",function(t,n){return sy(e).then(function(t){return 0<t.length&&K(e.a,function(e){e(t)}),{keyProcessed:G(t,n.key)}})}),so(this.v,"ping",function(){return el(["keyChanged"])})):((t=s.navigator)&&t.serviceWorker?el().then(function(){return t.serviceWorker.ready}).then(function(t){return t.active||null}).o(function(){return null}):el(null)).then(function(t){(e.h=t)&&(e.g=new ss(new sa(t)),su(e.g,"ping",null,!0).then(function(t){t[0].fulfilled&&G(t[0].value,"keyChanged")&&(e.s=!0)}).o(function(){}))})}function sl(t){return t.i||(t.i=function t(e){return new ei(function(n,r){var i=e.m.open("firebaseLocalStorageDb",1);i.onerror=function(t){try{t.preventDefault()}catch(t){}r(Error(t.target.error))},i.onupgradeneeded=function(t){t=t.target.result;try{t.createObjectStore("firebaseLocalStorage",{keyPath:"fbase_key"})}catch(t){r(t)}},i.onsuccess=function(i){(i=i.target.result).objectStoreNames.contains("firebaseLocalStorage")?n(i):new ei(function(t,n){var r=e.m.deleteDatabase("firebaseLocalStorageDb");r.onsuccess=function(){t()},r.onerror=function(t){n(Error(t.target.error))}}).then(function(){return t(e)}).then(function(t){n(t)}).o(function(t){r(t)})}})}(t)),t.i}function sf(t,e){var n=0;return new ei(function r(i,o){sl(t).then(e).then(i).o(function(e){if(!(3<++n))return sl(t).then(function(e){return e.close(),t.i=void 0,r(i,o)}).o(function(t){o(t)});o(e)})})}function sp(){try{return!!s.indexedDB}catch(t){return!1}}function sd(t){return t.objectStore("firebaseLocalStorage")}function sv(t,e){return t.transaction(["firebaseLocalStorage"],e?"readwrite":"readonly")}function sg(t){return new ei(function(e,n){t.onsuccess=function(t){t&&t.target?e(t.target.result):e()},t.onerror=function(t){n(t.target.error)}})}function sm(t,e){var n;return t.g&&t.h&&((n=s.navigator)&&n.serviceWorker&&n.serviceWorker.controller||null)===t.h?su(t.g,"keyChanged",{key:e},t.s).then(function(){}).o(function(){}):el()}function sy(t){return sl(t).then(function(t){var e=sd(sv(t,!1));return e.getAll?sg(e.getAll()):new ei(function(t,n){var r=[],i=e.openCursor();i.onsuccess=function(e){(e=e.target.result)?(r.push(e.value),e.continue()):t(r)},i.onerror=function(t){n(t.target.error)}})}).then(function(e){var n={},r=[];if(0==t.b){for(r=0;r<e.length;r++)n[e[r].fbase_key]=e[r].value;r=function t(e,n){var r,i=[];for(r in e)r in n?typeof e[r]!=typeof n[r]?i.push(r):"object"==typeof e[r]&&null!=e[r]&&null!=n[r]?0<t(e[r],n[r]).length&&i.push(r):e[r]!==n[r]&&i.push(r):i.push(r);for(r in n)r in e||i.push(r);return i}(t.c,n),t.c=n}return r})}function s_(t){t.l&&t.l.cancel("STOP_EVENT"),t.f&&(clearTimeout(t.f),t.f=null)}function sb(t){var e=this,n=null;this.a=[],this.type="indexedDB",this.c=t,this.b=el().then(function(){if(sp()){var t=rt(),r="__sak"+t;return sN||(sN=new sh),(n=sN).set(r,t).then(function(){return n.get(r)}).then(function(e){if(e!==t)throw Error("indexedDB not supported!");return n.U(r)}).then(function(){return n}).o(function(){return e.c})}return e.c}).then(function(t){return e.type=t.type,t.ca(function(t){K(e.a,function(e){e(t)})}),t})}function sw(){this.a={},this.type="inMemory"}function sI(){if(!function(){var t="Node"==nG();if(!(t=sT()||t&&ee.INTERNAL.node&&ee.INTERNAL.node.localStorage))return!1;try{return t.setItem("__sak","1"),t.removeItem("__sak"),!0}catch(t){return!1}}()){if("Node"==nG())throw new C("internal-error","The LocalStorage compatibility library was not found.");throw new C("web-storage-unsupported")}this.a=sT()||ee.INTERNAL.node.localStorage,this.type="localStorage"}function sT(){try{var t=s.localStorage,e=rt();return t&&(t.setItem(e,"1"),t.removeItem(e)),t}catch(t){return null}}function sE(){this.type="nullStorage"}function sS(){if(!function(){var t="Node"==nG();if(!(t=sC()||t&&ee.INTERNAL.node&&ee.INTERNAL.node.sessionStorage))return!1;try{return t.setItem("__sak","1"),t.removeItem("__sak"),!0}catch(t){return!1}}()){if("Node"==nG())throw new C("internal-error","The SessionStorage compatibility library was not found.");throw new C("web-storage-unsupported")}this.a=sC()||ee.INTERNAL.node.sessionStorage,this.type="sessionStorage"}function sC(){try{var t=s.sessionStorage,e=rt();return t&&(t.setItem(e,"1"),t.removeItem(e)),t}catch(t){return null}}function sk(){var t={};t.Browser=sR,t.Node=sx,t.ReactNative=sP,t.Worker=sD,this.a=t[nG()]}sr.prototype.c=function(t){var e=t.data.eventType,n=t.data.eventId,r=this.a[e];if(r&&0<r.length){t.ports[0].postMessage({status:"ack",eventId:n,eventType:e,response:null});var i=[];K(r,function(e){i.push(el().then(function(){return e(t.origin,t.data.data)}))}),ed(i).then(function(r){var i=[];K(r,function(t){i.push({fulfilled:t.Qb,value:t.value,reason:t.reason?t.reason.message:void 0})}),K(i,function(t){for(var e in t)void 0===t[e]&&delete t[e]}),t.ports[0].postMessage({status:"done",eventId:n,eventType:e,response:i})})}},sa.prototype.postMessage=function(t,e){this.a.postMessage(t,e)},ss.prototype.close=function(){for(;0<this.a.length;)sc(this,this.a[0]);this.b=!0},(n=sh.prototype).set=function(t,e){var n=this,r=!1;return sf(this,function(e){return sg((e=sd(sv(e,!0))).get(t))}).then(function(i){return sf(n,function(o){if(o=sd(sv(o,!0)),i)return i.value=e,sg(o.put(i));n.b++,r=!0;var a={};return a.fbase_key=t,a.value=e,sg(o.add(a))})}).then(function(){return n.c[t]=e,sm(n,t)}).oa(function(){r&&n.b--})},n.get=function(t){return sf(this,function(e){return sg(sd(sv(e,!1)).get(t))}).then(function(t){return t&&t.value})},n.U=function(t){var e=this,n=!1;return sf(this,function(r){return n=!0,e.b++,sg(sd(sv(r,!0)).delete(t))}).then(function(){return delete e.c[t],sm(e,t)}).oa(function(){n&&e.b--})},n.ca=function(t){var e;0==this.a.length&&(e=this,s_(e),function t(){e.f=setTimeout(function(){e.l=sy(e).then(function(t){0<t.length&&K(e.a,function(e){e(t)})}).then(function(){t()}).o(function(e){"STOP_EVENT"!=e.message&&t()})},800)}()),this.a.push(t)},n.ia=function(t){$(this.a,function(e){return e==t}),0==this.a.length&&s_(this)},(n=sb.prototype).get=function(t){return this.b.then(function(e){return e.get(t)})},n.set=function(t,e){return this.b.then(function(n){return n.set(t,e)})},n.U=function(t){return this.b.then(function(e){return e.U(t)})},n.ca=function(t){this.a.push(t)},n.ia=function(t){$(this.a,function(e){return e==t})},(n=sw.prototype).get=function(t){return el(this.a[t])},n.set=function(t,e){return this.a[t]=e,el()},n.U=function(t){return delete this.a[t],el()},n.ca=function(){},n.ia=function(){},(n=sI.prototype).get=function(t){var e=this;return el().then(function(){return n9(e.a.getItem(t))})},n.set=function(t,e){var n=this;return el().then(function(){var r=n8(e);null===r?n.U(t):n.a.setItem(t,r)})},n.U=function(t){var e=this;return el().then(function(){e.a.removeItem(t)})},n.ca=function(t){s.window&&ez(s.window,"storage",t)},n.ia=function(t){s.window&&e$(s.window,"storage",t)},(n=sE.prototype).get=function(){return el(null)},n.set=function(){return el()},n.U=function(){return el()},n.ca=function(){},n.ia=function(){},(n=sS.prototype).get=function(t){var e=this;return el().then(function(){return n9(e.a.getItem(t))})},n.set=function(t,e){var n=this;return el().then(function(){var r=n8(e);null===r?n.U(t):n.a.setItem(t,r)})},n.U=function(t){var e=this;return el().then(function(){e.a.removeItem(t)})},n.ca=function(){},n.ia=function(){};var sN,sA,sR={F:sI,cb:sS},sx={F:sI,cb:sS},sP={F:sn,cb:sE},sD={F:sI,cb:sE},sO={rd:"local",NONE:"none",td:"session"};function sL(){var t=!!(!re(n0())&&nW()),e=n5(),n=n2();this.m=t,this.h=e,this.l=n,this.a={},sA||(sA=new sk),t=sA;try{this.g=!nL()&&ra()||!s.indexedDB?new t.a.F:new sb(nz()?new sw:new t.a.F)}catch(t){this.g=new sw,this.h=!0}try{this.i=new t.a.cb}catch(t){this.i=new sw}this.v=new sw,this.f=w(this.Zb,this),this.b={}}function sM(){return t||(t=new sL),t}function sF(t,e){switch(e){case"session":return t.i;case"none":return t.v;default:return t.g}}function sj(t,e){return"firebase:"+t.name+(e?":"+e:"")}function sU(t,e,n){return n=sj(e,n),"local"==e.F&&(t.b[n]=null),sF(t,e.F).U(n)}function sq(t){t.c&&(clearInterval(t.c),t.c=null)}function sV(t){this.a=t,this.b=sM()}(n=sL.prototype).get=function(t,e){return sF(this,t.F).get(sj(t,e))},n.set=function(t,e,n){var r=sj(t,n),i=this,o=sF(this,t.F);return o.set(r,e).then(function(){return o.get(r)}).then(function(e){"local"==t.F&&(i.b[r]=e)})},n.addListener=function(t,e,n){var r;t=sj(t,e),this.l&&(this.b[t]=s.localStorage.getItem(t)),tf(this.a)&&(sF(this,"local").ca(this.f),this.h||(nL()||!ra())&&s.indexedDB||!this.l||(r=this,sq(r),r.c=setInterval(function(){for(var t in r.a){var e=s.localStorage.getItem(t),n=r.b[t];e!=n&&(r.b[t]=e,e=new eO({type:"storage",key:t,target:window,oldValue:n,newValue:e,a:!0}),r.Zb(e))}},1e3))),this.a[t]||(this.a[t]=[]),this.a[t].push(n)},n.removeListener=function(t,e,n){t=sj(t,e),this.a[t]&&($(this.a[t],function(t){return t==n}),0==this.a[t].length&&delete this.a[t]),tf(this.a)&&(sF(this,"local").ia(this.f),sq(this))},n.Zb=function(t){if(t&&t.g){var e=t.a.key;if(null==e)for(var n in this.a){var r=this.b[n];void 0===r&&(r=null);var i=s.localStorage.getItem(n);i!==r&&(this.b[n]=i,this.nb(n))}else if(0==e.indexOf("firebase:")&&this.a[e]){if(void 0!==t.a.a?sF(this,"local").ia(this.f):sq(this),this.m){if(n=s.localStorage.getItem(e),(r=t.a.newValue)!==n)null!==r?s.localStorage.setItem(e,r):s.localStorage.removeItem(e);else if(this.b[e]===r&&void 0===t.a.a)return}var o=this;n=function(){(void 0!==t.a.a||o.b[e]!==s.localStorage.getItem(e))&&(o.b[e]=s.localStorage.getItem(e),o.nb(e))},tH&&t2&&10==t2&&s.localStorage.getItem(e)!==t.a.newValue&&t.a.newValue!==t.a.oldValue?setTimeout(n,10):n()}}else K(t,w(this.nb,this))},n.nb=function(t){this.a[t]&&K(this.a[t],function(t){t()})};var sB={name:"authEvent",F:"local"};function sK(){this.a=sM()}function sH(t,n){this.b=sW,this.f=s.Uint8Array?new Uint8Array(this.b):Array(this.b),this.g=this.c=0,this.a=[],this.i=t,this.h=n,this.l=s.Int32Array?new Int32Array(64):Array(64),void 0===e&&(e=s.Int32Array?new Int32Array(sJ):sJ),this.reset()}E(sH,function(){this.b=-1});for(var sW=64,sz=sW-1,sG=[],sQ=0;sQ<sz;sQ++)sG[sQ]=0;var s$=Y(128,sG);function sY(t){for(var n=t.f,r=t.l,i=0,o=0;o<n.length;)r[i++]=n[o]<<24|n[o+1]<<16|n[o+2]<<8|n[o+3],o=4*i;for(n=16;64>n;n++){o=0|r[n-15],i=0|r[n-2];var a=(0|r[n-16])+((o>>>7|o<<25)^(o>>>18|o<<14)^o>>>3)|0,s=(0|r[n-7])+((i>>>17|i<<15)^(i>>>19|i<<13)^i>>>10)|0;r[n]=a+s|0}i=0|t.a[0],o=0|t.a[1];var u=0|t.a[2],c=0|t.a[3],h=0|t.a[4],l=0|t.a[5],f=0|t.a[6];for(n=0,a=0|t.a[7];64>n;n++){var p=((i>>>2|i<<30)^(i>>>13|i<<19)^(i>>>22|i<<10))+(i&o^i&u^o&u)|0;s=h&l^~h&f,s=(a=a+((h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))|0)+((s=s+(0|e[n])|0)+(0|r[n])|0)|0,a=f,f=l,l=h,h=c+s|0,c=u,u=o,o=i,i=s+p|0}t.a[0]=t.a[0]+i|0,t.a[1]=t.a[1]+o|0,t.a[2]=t.a[2]+u|0,t.a[3]=t.a[3]+c|0,t.a[4]=t.a[4]+h|0,t.a[5]=t.a[5]+l|0,t.a[6]=t.a[6]+f|0,t.a[7]=t.a[7]+a|0}function sX(t,e,n){void 0===n&&(n=e.length);var r=0,i=t.c;if("string"==typeof e)for(;r<n;)t.f[i++]=e.charCodeAt(r++),i==t.b&&(sY(t),i=0);else if(p(e))for(;r<n;){var o=e[r++];if(!("number"==typeof o&&0<=o&&255>=o&&o==(0|o)))throw Error("message must be a byte array");t.f[i++]=o,i==t.b&&(sY(t),i=0)}else throw Error("message must be string or array");t.c=i,t.g+=n}sH.prototype.reset=function(){this.g=this.c=0,this.a=s.Int32Array?new Int32Array(this.h):X(this.h)};var sJ=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function sZ(){sH.call(this,8,s0)}E(sZ,sH);var s0=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function s1(t,e,n,r,i,o){this.v=t,this.i=e,this.l=n,this.m=r||null,this.u=i||null,this.s=o,this.h=e+":"+n,this.C=new sK,this.g=new sV(this.h),this.f=null,this.b=[],this.a=this.c=null}function s2(t){return new C("invalid-cordova-configuration",t)}function s4(t,e){for(var n=0;n<t.b.length;n++)try{t.b[n](e)}catch(t){}}function s3(t){return t.f||(t.f=t.ma().then(function(){return new ei(function(e){t.Ea(function n(r){return e(r),t.Ta(n),!1}),function(t){function e(e){o=!0,a&&a.cancel(),s6(t).then(function(n){var r=i;if(n&&e&&e.url){var o=null;-1!=(r=ic(e.url)).indexOf("/__/auth/callback")&&(o=(o="object"==typeof(o=n9(nl(o=nf(r),"firebaseError")||null))?k(o):null)?new iW(n.c,n.b,null,null,o,null,n.T()):new iW(n.c,n.b,r,n.f,null,null,n.T())),r=o||i}s4(t,r)})}var n,r,i=new iW("unknown",null,null,null,new C("no-auth-event")),o=!1,a=e9(500).then(function(){return s6(t).then(function(){o||s4(t,i)})}),u=s.handleOpenURL;s.handleOpenURL=function(t){if(0==t.toLowerCase().indexOf(n1("BuildInfo.packageName",s).toLowerCase()+"://")&&e({url:t}),"function"==typeof u)try{u(t)}catch(t){console.error(t)}},iQ||(iQ=new iG),n=e,(r=iQ).a.push(n),r.b||(r.b=function(t){for(var e=0;e<r.a.length;e++)r.a[e](t)},"function"==typeof(n=n1("universalLinks.subscribe",s))&&n(null,r.b))}(t)})})),t.f}function s6(t){var e,n=null;return(e=t.g).b.get(sB,e.a).then(function(t){return iz(t)}).then(function(e){return n=e,sU((e=t.g).b,sB,e.a)}).then(function(){return n})}function s5(t){this.a=t,this.b=sM()}(n=s1.prototype).ma=function(){return this.Ia?this.Ia:this.Ia=(nH(void 0)?nK().then(function(){return new ei(function(t,e){var n=s.document,r=setTimeout(function(){e(Error("Cordova framework is not ready."))},1e3);n.addEventListener("deviceready",function(){clearTimeout(r),t()},!1)})}):ef(Error("Cordova must run in an Android or iOS file scheme."))).then(function(){if("function"!=typeof n1("universalLinks.subscribe",s))throw s2("cordova-universal-links-plugin-fix is not installed");if(void 0===n1("BuildInfo.packageName",s))throw s2("cordova-plugin-buildinfo is not installed");if("function"!=typeof n1("cordova.plugins.browsertab.openUrl",s))throw s2("cordova-plugin-browsertab is not installed");if("function"!=typeof n1("cordova.InAppBrowser.open",s))throw s2("cordova-plugin-inappbrowser is not installed")},function(){throw new C("cordova-not-ready")})},n.Pb=function(t,e){return e(new C("operation-not-supported-in-this-environment")),el()},n.Nb=function(){return ef(new C("operation-not-supported-in-this-environment"))},n.ac=function(){return!1},n.Yb=function(){return!0},n.Ub=function(){return!0},n.Ob=function(t,e,n,r){if(this.c)return ef(new C("redirect-operation-pending"));var i=this,o=s.document,a=null,u=null,c=null,h=null;return this.c=el().then(function(){return iH(e),s3(i)}).then(function(){return function(t,e,n,r,i){var o=function(){for(var t=20,e=[];0<t;)e.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),t--;return e.join("")}(),a=new iW(e,r,null,o,new C("no-auth-event"),null,i),u=n1("BuildInfo.packageName",s);if("string"!=typeof u)throw new C("invalid-cordova-configuration");var c=n1("BuildInfo.displayName",s),h={};if(n0().toLowerCase().match(/iphone|ipad|ipod/))h.ibi=u;else{if(!n0().toLowerCase().match(/android/))return ef(new C("operation-not-supported-in-this-environment"));h.apn=u}c&&(h.appDisplayName=c),o=function(t){var e=new sZ;sX(e,t),t=[];var n=8*e.g;56>e.c?sX(e,s$,56-e.c):sX(e,s$,e.b-(e.c-56));for(var r=63;56<=r;r--)e.f[r]=255&n,n/=256;for(sY(e),r=n=0;r<e.i;r++)for(var i=24;0<=i;i-=8)t[n++]=e.a[r]>>i&255;return W(t,function(t){return 1<(t=t.toString(16)).length?t:"0"+t}).join("")}(o),h.sessionId=o;var l=se(t.v,t.i,t.l,e,n,null,r,t.m,h,t.u,i,t.s);return t.ma().then(function(){var e=t.h;return t.C.a.set(sB,a.w(),e)}).then(function(){var e=n1("cordova.plugins.browsertab.isAvailable",s);if("function"!=typeof e)throw new C("invalid-cordova-configuration");var n=null;e(function(e){if(e){if("function"!=typeof(n=n1("cordova.plugins.browsertab.openUrl",s)))throw new C("invalid-cordova-configuration");n(l)}else{if("function"!=typeof(n=n1("cordova.InAppBrowser.open",s)))throw new C("invalid-cordova-configuration");e=n0(),t.a=n(l,e.match(/(iPad|iPhone|iPod).*OS 7_\d/i)||e.match(/(iPad|iPhone|iPod).*OS 8_\d/i)?"_blank":"_system","location=yes")}})})}(i,t,e,n,r)}).then(function(){return new ei(function(t,e){u=function(){var e=n1("cordova.plugins.browsertab.close",s);return t(),"function"==typeof e&&e(),i.a&&"function"==typeof i.a.close&&(i.a.close(),i.a=null),!1},i.Ea(u),c=function(){a||(a=e9(2e3).then(function(){e(new C("redirect-cancelled-by-user"))}))},h=function(){ri()&&c()},o.addEventListener("resume",c,!1),n0().toLowerCase().match(/android/)||o.addEventListener("visibilitychange",h,!1)}).o(function(t){return s6(i).then(function(){throw t})})}).oa(function(){c&&o.removeEventListener("resume",c,!1),h&&o.removeEventListener("visibilitychange",h,!1),a&&a.cancel(),u&&i.Ta(u),i.c=null})},n.Ea=function(t){this.b.push(t),s3(this).o(function(e){"auth/invalid-cordova-configuration"===e.code&&t(e=new iW("unknown",null,null,null,new C("no-auth-event")))})},n.Ta=function(t){$(this.b,function(e){return e==t})};var s8={name:"pendingRedirect",F:"session"};function s7(t){return sU(t.b,s8,t.a)}function s9(t,e,n,r){this.i={},this.u=0,this.D=t,this.v=e,this.m=n,this.J=r,this.h=[],this.f=!1,this.l=w(this.s,this),this.b=new ud,this.C=new u_,this.g=new s5(uf(this.v,this.m)),this.c={},this.c.unknown=this.b,this.c.signInViaRedirect=this.b,this.c.linkViaRedirect=this.b,this.c.reauthViaRedirect=this.b,this.c.signInViaPopup=this.C,this.c.linkViaPopup=this.C,this.c.reauthViaPopup=this.C,this.a=ut(this.D,this.v,this.m,oW,this.J)}function ut(t,e,n,r,i){var o=ee.SDK_VERSION||null;return nH()?new s1(t,e,n,o,r,i):new a8(t,e,n,o,r,i)}function ue(t){t.f||(t.f=!0,t.a.Ea(t.l));var e=t.a;return t.a.ma().o(function(n){throw t.a==e&&t.reset(),n})}function un(t){t.a.Yb()&&ue(t).o(function(e){var n=new iW("unknown",null,null,null,new C("operation-not-supported-in-this-environment"));uu(e)&&t.s(n)}),t.a.Ub()||uv(t.b)}function ur(t,e){var n;G(t.h,e)||t.h.push(e),t.f||(n=t.g).b.get(s8,n.a).then(function(t){return"pending"==t}).then(function(e){e?s7(t.g).then(function(){ue(t).o(function(e){var n=new iW("unknown",null,null,null,new C("operation-not-supported-in-this-environment"));uu(e)&&t.s(n)})}):un(t)}).o(function(){un(t)})}function ui(t,e){$(t.h,function(t){return t==e})}s9.prototype.reset=function(){this.f=!1,this.a.Ta(this.l),this.a=ut(this.D,this.v,this.m,null,this.J),this.i={}},s9.prototype.s=function(t){if(!t)throw new C("invalid-auth-event");if(6e5<=Date.now()-this.u&&(this.i={},this.u=0),t&&t.getUid()&&this.i.hasOwnProperty(t.getUid()))return!1;for(var e=!1,n=0;n<this.h.length;n++){var r=this.h[n];if(r.Gb(t.c,t.b)){(e=this.c[t.c])&&(e.h(t,r),t&&(t.f||t.b)&&(this.i[t.getUid()]=!0,this.u=Date.now())),e=!0;break}}return uv(this.b),e};var uo=new rr(2e3,1e4),ua=new rr(3e4,6e4);function us(t,e,n,r,i,o,a){return t.a.Nb(e,n,r,function(){t.f||(t.f=!0,t.a.Ea(t.l))},function(){t.reset()},i,o,a)}function uu(t){return!!t&&"auth/cordova-not-ready"==t.code}function uc(t,e,n,r,i){var o,a;return(a=t.g).b.set(s8,"pending",a.a).then(function(){return t.a.Ob(e,n,r,i).o(function(e){if(uu(e))throw new C("operation-not-supported-in-this-environment");return o=e,s7(t.g).then(function(){throw o})}).then(function(){return t.a.ac()?new ei(function(){}):s7(t.g).then(function(){return t.ra()}).then(function(){}).o(function(){})})})}function uh(t,e,n,r,i){return t.a.Pb(r,function(t){e.na(n,null,t,i)},uo.get())}s9.prototype.ra=function(){return this.b.ra()};var ul={};function uf(t,e,n){return t=t+":"+e,n&&(t=t+":"+n.url),t}function up(t,e,n,r){var i=uf(e,n,r);return ul[i]||(ul[i]=new s9(t,e,n,r)),ul[i]}function ud(){this.b=null,this.f=[],this.c=[],this.a=null,this.i=this.g=!1}function uv(t){t.g||(t.g=!0,uy(t,!1,null,null))}function ug(t){t.g&&!t.i&&uy(t,!1,null,null)}function um(t,e){if(t.b=function(){return el(e)},t.f.length)for(var n=0;n<t.f.length;n++)t.f[n](e)}function uy(t,e,n,r){e?r?function(t,e){if(t.b=function(){return ef(e)},t.c.length)for(var n=0;n<t.c.length;n++)t.c[n](e)}(t,r):um(t,n):um(t,{user:null}),t.f=[],t.c=[]}function u_(){}function ub(){this.jb=!1,Object.defineProperty(this,"appVerificationDisabled",{get:function(){return this.jb},set:function(t){this.jb=t},enumerable:!1})}function uw(t,e){this.a=e,rh(this,"verificationId",t)}function uI(t,e,n,r){return new iV(t).gb(e,n).then(function(t){return new uw(t,r)})}function uT(t){var e=r3(t);if(!(e&&e.exp&&e.auth_time&&e.iat))throw new C("internal-error","An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.");rl(this,{token:t,expirationTime:ro(1e3*e.exp),authTime:ro(1e3*e.auth_time),issuedAtTime:ro(1e3*e.iat),signInProvider:e.firebase&&e.firebase.sign_in_provider?e.firebase.sign_in_provider:null,signInSecondFactor:e.firebase&&e.firebase.sign_in_second_factor?e.firebase.sign_in_second_factor:null,claims:e})}function uE(t,e,n){var r=e&&e[uC];if(!r)throw new C("argument-error","Internal assert: Invalid MultiFactorResolver");this.a=t,this.f=tp(e),this.g=n,this.c=new ih(null,r),this.b=[];var i=this;K(e[uS]||[],function(t){(t=rv(t))&&i.b.push(t)}),rh(this,"auth",this.a),rh(this,"session",this.c),rh(this,"hints",this.b)}ud.prototype.reset=function(){this.b=null,this.a&&(this.a.cancel(),this.a=null)},ud.prototype.h=function(t,e){if(t){this.reset(),this.g=!0;var n=t.c,r=t.b,i=t.a&&"auth/web-storage-unsupported"==t.a.code,o=t.a&&"auth/operation-not-supported-in-this-environment"==t.a.code;this.i=!(!i&&!o),"unknown"!=n||i||o?t.a?(uy(this,!0,null,t.a),el()):e.Fa(n,r)?function(t,e,n){n=n.Fa(e.c,e.b);var r=e.g,i=e.f,o=e.i,a=e.T(),s=!!e.c.match(/Redirect$/);n(r,i,a,o).then(function(e){uy(t,s,e,null)}).o(function(e){uy(t,s,null,e)})}(this,t,e):ef(new C("invalid-auth-event")):(uy(this,!1,null,null),el())}else ef(new C("invalid-auth-event"))},ud.prototype.ra=function(){var t=this;return new ei(function(e,n){var r;t.b?t.b().then(e,n):(t.f.push(e),t.c.push(n),r=new C("timeout"),t.a&&t.a.cancel(),t.a=e9(ua.get()).then(function(){t.b||(t.g=!0,uy(t,!0,null,r))}))})},u_.prototype.h=function(t,e){if(t){var n=t.c,r=t.b;t.a?(e.na(t.c,null,t.a,t.b),el()):e.Fa(n,r)?function(t,e){var n=t.b,r=t.c;e.Fa(r,n)(t.g,t.f,t.T(),t.i).then(function(t){e.na(r,t,null,n)}).o(function(t){e.na(r,null,t,n)})}(t,e):ef(new C("invalid-auth-event"))}else ef(new C("invalid-auth-event"))},uw.prototype.confirm=function(t){return t=iB(this.verificationId,t),this.a(t)};var uS="mfaInfo",uC="mfaPendingCredential";function uk(t,e,n,r){C.call(this,"multi-factor-auth-required",r,e),this.b=new uE(t,e,n),rh(this,"resolver",this.b)}function uN(t,e,n){if(t&&v(t.serverResponse)&&"auth/multi-factor-auth-required"===t.code)try{return new uk(e,t.serverResponse,n,t.message)}catch(t){}return null}function uA(){}function uR(t){rh(this,"factorId",t.fa),this.a=t}function ux(t){if(uR.call(this,t),this.a.fa!=iV.PROVIDER_ID)throw new C("argument-error","firebase.auth.PhoneMultiFactorAssertion requires a valid firebase.auth.PhoneAuthCredential")}function uP(t,e){for(var n in eD.call(this,t),e)this[n]=e[n]}function uD(t,e){this.a=t,this.b=[],this.c=w(this.yc,this),ez(this.a,"userReloaded",this.c);var n=[];e&&e.multiFactor&&e.multiFactor.enrolledFactors&&K(e.multiFactor.enrolledFactors,function(t){var e=null,r={};if(t){t.uid&&(r[ry]=t.uid),t.displayName&&(r[rg]=t.displayName),t.enrollmentTime&&(r[rm]=new Date(t.enrollmentTime).toISOString()),t.phoneNumber&&(r[r_]=t.phoneNumber);try{e=new rb(r)}catch(t){}t=e}else t=null;t&&n.push(t)}),uO(this,n)}function uO(t,e){t.b=e,rh(t,"enrolledFactors",e)}function uL(t,e,n){if(this.h=t,this.i=e,this.g=n,this.c=3e4,this.f=96e4,this.b=null,this.a=this.c,this.f<this.c)throw Error("Proactive refresh lower bound greater than upper bound!")}function uM(t){this.f=t,this.b=this.a=null,this.c=Date.now()}function uF(t,e){void 0===e&&(e=t.b?(e=t.b).a-e.g:0),t.c=Date.now()+1e3*e}function uj(t,e){t.b=r4(e[o1]||""),t.a=e.refreshToken,uF(t,void 0!==(e=e.expiresIn)?Number(e):void 0)}function uU(t,e){this.a=t||null,this.b=e||null,rl(this,{lastSignInTime:ro(e||null),creationTime:ro(t||null)})}function uq(t,e,n,r,i,o){rl(this,{uid:t,displayName:r||null,photoURL:i||null,email:n||null,phoneNumber:o||null,providerId:e})}function uV(t,e,n){this.N=[],this.l=t.apiKey,this.m=t.appName,this.s=t.authDomain||null;var r,i=ee.SDK_VERSION?nZ(ee.SDK_VERSION):null;this.a=new oK(this.l,x(oW),i),(this.u=t.emulatorConfig||null)&&o8(this.a,this.u),this.h=new uM(this.a),uY(this,e[o1]),uj(this.h,e),rh(this,"refreshToken",this.h.a),uZ(this,n||{}),e3.call(this),this.P=!1,this.s&&n4()&&(this.b=up(this.s,this.l,this.m,this.u)),this.W=[],this.i=null,this.D=(r=this,new uL(function(){return r.I(!0)},function(t){return!!t&&"auth/network-request-failed"==t.code},function(){var t=r.h.c-Date.now()-3e5;return 0<t?t:0})),this.ba=w(this.ib,this);var o=this;this.za=null,this.Pa=function(t){o.xa(t.h)},this.qa=null,this.Ba=function(t){uB(o,t.c)},this.$=null,this.aa=[],this.Oa=function(t){uW(o,t.f)},this.ja=null,this.S=new uD(this,n),rh(this,"multiFactor",this.S)}function uB(t,e){t.u=e,o8(t.a,e),t.b&&(e=t.b,t.b=up(t.s,t.l,t.m,t.u),t.P&&(ui(e,t),ur(t.b,t)))}function uK(t,e){t.qa&&e$(t.qa,"languageCodeChanged",t.Pa),(t.qa=e)&&ez(e,"languageCodeChanged",t.Pa)}function uH(t,e){t.$&&e$(t.$,"emulatorConfigChanged",t.Ba),(t.$=e)&&ez(e,"emulatorConfigChanged",t.Ba)}function uW(t,e){t.aa=e,o9(t.a,ee.SDK_VERSION?nZ(ee.SDK_VERSION,t.aa):null)}function uz(t,e){t.ja&&e$(t.ja,"frameworkChanged",t.Oa),(t.ja=e)&&ez(e,"frameworkChanged",t.Oa)}function uG(t){try{return ee.app(t.m).auth()}catch(e){throw new C("internal-error","No firebase.auth.Auth instance is available for the Firebase App '"+t.m+"'!")}}function uQ(t){t.J||t.D.b||(t.D.start(),e$(t,"tokenChanged",t.ba),ez(t,"tokenChanged",t.ba))}function u$(t){e$(t,"tokenChanged",t.ba),t.D.stop()}function uY(t,e){t.Aa=e,rh(t,"_lat",e)}function uX(t){for(var e=[],n=0;n<t.W.length;n++)e.push(t.W[n](t));return ed(e).then(function(){return t})}function uJ(t){t.b&&!t.P&&(t.P=!0,ur(t.b,t))}function uZ(t,e){rl(t,{uid:e.uid,displayName:e.displayName||null,photoURL:e.photoURL||null,email:e.email||null,emailVerified:e.emailVerified||!1,phoneNumber:e.phoneNumber||null,isAnonymous:e.isAnonymous||!1,tenantId:e.tenantId||null,metadata:new uU(e.createdAt,e.lastLoginAt),providerData:[]}),t.a.b=t.tenantId}function u0(){}function u1(t){return el().then(function(){if(t.J)throw new C("app-deleted")})}function u2(t){return W(t.providerData,function(t){return t.providerId})}function u4(t,e){e&&(u3(t,e.providerId),t.providerData.push(e))}function u3(t,e){$(t.providerData,function(t){return t.providerId==e})}function u6(t,e,n){("uid"!=e||n)&&t.hasOwnProperty(e)&&rh(t,e,n)}function u5(t,e){var n,r,i;t!=e&&(rl(t,{uid:e.uid,displayName:e.displayName,photoURL:e.photoURL,email:e.email,emailVerified:e.emailVerified,phoneNumber:e.phoneNumber,isAnonymous:e.isAnonymous,tenantId:e.tenantId,providerData:[]}),e.metadata?rh(t,"metadata",(n=e.metadata,new uU(n.a,n.b))):rh(t,"metadata",new uU),K(e.providerData,function(e){u4(t,e)}),r=t.h,i=e.h,r.b=i.b,r.a=i.a,r.c=i.c,rh(t,"refreshToken",t.h.a),uO(t.S,e.S.b))}function u8(t){return t.I().then(function(e){var n=t.isAnonymous;return aY(t.a,ak,{idToken:e}).then(w(t.Kc,t)).then(function(){return n||u6(t,"isAnonymous",!1),e})})}function u7(t,e){e[o1]&&t.Aa!=e[o1]&&(uj(t.h,e),t.dispatchEvent(new uP("tokenChanged")),uY(t,e[o1]),u6(t,"refreshToken",t.h.a))}function u9(t,e){return u8(t).then(function(){if(G(u2(t),e))return uX(t).then(function(){throw new C("provider-already-linked")})})}function ct(t,e,n){return rf({user:t,credential:iK(e),additionalUserInfo:e=r9(e),operationType:n})}function ce(t,e){return u7(t,e),t.reload().then(function(){return t})}function cn(t,e,n,r,i){if(!n4())return ef(new C("operation-not-supported-in-this-environment"));if(t.i&&!i)return ef(t.i);var o=r7(n.providerId),a=rt(t.uid+":::"),s=null;(!n5()||nW())&&t.s&&n.isOAuthProvider&&(s=se(t.s,t.l,t.m,e,n,null,a,ee.SDK_VERSION||null,null,null,t.tenantId,t.u));var u=nq(s,o&&o.va,o&&o.ua);return r=r().then(function(){if(ci(t),!i)return t.I().then(function(){})}).then(function(){return us(t.b,u,e,n,a,!!s,t.tenantId)}).then(function(){return new ei(function(n,r){t.na(e,null,new C("cancelled-popup-request"),t.g||null),t.f=n,t.C=r,t.g=a,t.c=uh(t.b,t,e,u,a)})}).then(function(t){return u&&nU(u),t?rf(t):null}).o(function(t){throw u&&nU(u),t}),co(t,r,i)}function cr(t,e,n,r,i){if(!n4())return ef(new C("operation-not-supported-in-this-environment"));if(t.i&&!i)return ef(t.i);var o=null,a=rt(t.uid+":::");return r=r().then(function(){if(ci(t),!i)return t.I().then(function(){})}).then(function(){return t.ga=a,uX(t)}).then(function(e){return t.ha&&(e=(e=t.ha).b.set(cu,t.w(),e.a)),e}).then(function(){return uc(t.b,e,n,a,t.tenantId)}).o(function(e){if(o=e,t.ha)return cc(t.ha);throw o}).then(function(){if(o)throw o}),co(t,r,i)}function ci(t){if(!t.b||!t.P){if(t.b&&!t.P)throw new C("internal-error");throw new C("auth-domain-config-required")}}function co(t,e,n){var r=t.i&&!n?(e.cancel(),ef(t.i)):e.o(function(e){throw e&&("auth/user-disabled"==e.code||"auth/user-token-expired"==e.code)&&(t.i||t.dispatchEvent(new uP("userInvalidated")),t.i=e),e});return t.N.push(r),r.oa(function(){Q(t.N,r)}),r.o(function(e){var n=null;throw e&&"auth/multi-factor-auth-required"===e.code&&(n=uN(e.w(),uG(t),w(t.jc,t))),n||e})}function ca(t){if(!t.apiKey)return null;var e={apiKey:t.apiKey,authDomain:t.authDomain,appName:t.appName,emulatorConfig:t.emulatorConfig},n={};if(!t.stsTokenManager||!t.stsTokenManager.accessToken)return null;n[o1]=t.stsTokenManager.accessToken,n.refreshToken=t.stsTokenManager.refreshToken||null;var r=t.stsTokenManager.expirationTime;r&&(n.expiresIn=(r-Date.now())/1e3);var i=new uV(e,n,t);return t.providerData&&K(t.providerData,function(t){t&&u4(i,rf(t))}),t.redirectEventId&&(i.ga=t.redirectEventId),i}function cs(t){this.a=t,this.b=sM()}uE.prototype.Rc=function(t){var e=this;return t.tb(this.a.a,this.c).then(function(t){var n=tp(e.f);return delete n[uS],delete n[uC],tv(n,t),e.g(n)})},E(uk,C),uA.prototype.tb=function(t,e,n){var r,i;return e.type==il?(r=this,e.Ha().then(function(e){return e={idToken:e},void 0!==n&&(e.displayName=n),tv(e,{phoneVerificationInfo:iq(r.a)}),aY(t,aS,e)})):(i=this,e.Ha().then(function(e){return tv(e={mfaPendingCredential:e},{phoneVerificationInfo:iq(i.a)}),aY(t,aC,e)}))},E(uR,uA),E(ux,uR),E(uP,eD),(n=uD.prototype).yc=function(t){var e,n;uO(this,(e=t.hd,n=[],K(e.mfaInfo||[],function(t){(t=rv(t))&&n.push(t)}),n))},n.Sb=function(){return this.a.I().then(function(t){return new ih(t,null)})},n.fc=function(t,e){var n=this,r=this.a.a;return this.Sb().then(function(n){return t.tb(r,n,e)}).then(function(t){return u7(n.a,t),n.a.reload()})},n.bd=function(t){var e=this,n="string"==typeof t?t:t.uid,r=this.a.a;return this.a.I().then(function(t){return aY(r,a$,{idToken:t,mfaEnrollmentId:n})}).then(function(t){var r=H(e.b,function(t){return t.uid!=n});return uO(e,r),u7(e.a,t),e.a.reload().o(function(t){if("auth/user-token-expired"!=t.code)throw t})})},n.w=function(){return{multiFactor:{enrolledFactors:W(this.b,function(t){return t.w()})}}},uL.prototype.start=function(){this.a=this.c,function t(e,n){var r;e.stop(),e.b=e9((r=n)?(e.a=e.c,e.g()):(r=e.a,e.a*=2,e.a>e.f&&(e.a=e.f),r)).then(function(){var t,e;return t=s.document,e=null,ri()||!t?el():new ei(function(n){e=function(){ri()&&(t.removeEventListener("visibilitychange",e,!1),n())},t.addEventListener("visibilitychange",e,!1)}).o(function(n){throw t.removeEventListener("visibilitychange",e,!1),n})}).then(function(){return e.h()}).then(function(){t(e,!0)}).o(function(n){e.i(n)&&t(e,!1)})}(this,!0)},uL.prototype.stop=function(){this.b&&(this.b.cancel(),this.b=null)},uM.prototype.w=function(){return{apiKey:this.f.c,refreshToken:this.a,accessToken:this.b&&this.b.toString(),expirationTime:this.c}},uM.prototype.getToken=function(t){var e,n,r;return t=!!t,this.b&&!this.a?ef(new C("user-token-expired")):t||!this.b||Date.now()>this.c-3e4?this.a?(e=this,n={grant_type:"refresh_token",refresh_token:this.a},(r=e.f,new ei(function(t,e){"refresh_token"==n.grant_type&&n.refresh_token||"authorization_code"==n.grant_type&&n.code?at(r,r.l+"?key="+encodeURIComponent(r.c),function(n){n?n.error?e(aJ(n)):n.access_token&&n.refresh_token?t(n):e(new C("internal-error")):e(new C("network-request-failed"))},"POST",nE(n).toString(),r.g,r.m.get()):e(new C("internal-error"))})).then(function(t){return e.b=r4(t.access_token),e.a=t.refresh_token,uF(e,t.expires_in),{accessToken:e.b.toString(),refreshToken:e.a}}).o(function(t){throw"auth/user-token-expired"==t.code&&(e.a=null),t})):el(null):el({accessToken:this.b.toString(),refreshToken:this.a})},uU.prototype.w=function(){return{lastLoginAt:this.b,createdAt:this.a}},E(uV,e3),uV.prototype.xa=function(t){this.za=t,o5(this.a,t)},uV.prototype.la=function(){return this.za},uV.prototype.Ga=function(){return X(this.aa)},uV.prototype.ib=function(){this.D.b&&(this.D.stop(),this.D.start())},rh(uV.prototype,"providerId","firebase"),(n=uV.prototype).reload=function(){var t=this;return co(this,u1(this).then(function(){return u8(t).then(function(){return uX(t)}).then(u0)}))},n.oc=function(t){return this.I(t).then(function(t){return new uT(t)})},n.I=function(t){var e=this;return co(this,u1(this).then(function(){return e.h.getToken(t)}).then(function(t){if(!t)throw new C("internal-error");return t.accessToken!=e.Aa&&(uY(e,t.accessToken),e.dispatchEvent(new uP("tokenChanged"))),u6(e,"refreshToken",t.refreshToken),t.accessToken}))},n.Kc=function(t){if(!(t=t.users)||!t.length)throw new C("internal-error");uZ(this,{uid:(t=t[0]).localId,displayName:t.displayName,photoURL:t.photoUrl,email:t.email,emailVerified:!!t.emailVerified,phoneNumber:t.phoneNumber,lastLoginAt:t.lastLoginAt,createdAt:t.createdAt,tenantId:t.tenantId});for(var e,n=(e=(e=t).providerUserInfo)&&e.length?W(e,function(t){return new uq(t.rawId,t.providerId,t.email,t.displayName,t.photoUrl,t.phoneNumber)}):[],r=0;r<n.length;r++)u4(this,n[r]);u6(this,"isAnonymous",!(this.email&&t.passwordHash)&&!(this.providerData&&this.providerData.length)),this.dispatchEvent(new uP("userReloaded",{hd:t}))},n.Lc=function(t){return ru("firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead."),this.ub(t)},n.ub=function(t){var e=this,n=null;return co(this,t.c(this.a,this.uid).then(function(t){return u7(e,t),n=ct(e,t,"reauthenticate"),e.i=null,e.reload()}).then(function(){return n}),!0)},n.Cc=function(t){return ru("firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead."),this.rb(t)},n.rb=function(t){var e=this,n=null;return co(this,u9(this,t.providerId).then(function(){return e.I()}).then(function(n){return t.b(e.a,n)}).then(function(t){return n=ct(e,t,"link"),ce(e,t)}).then(function(){return n}))},n.Dc=function(t,e){var n=this;return co(this,u9(this,"phone").then(function(){return uI(uG(n),t,e,w(n.rb,n))}))},n.Mc=function(t,e){var n=this;return co(this,el().then(function(){return uI(uG(n),t,e,w(n.ub,n))}),!0)},n.Cb=function(t){var e=this;return co(this,this.I().then(function(n){return e.a.Cb(n,t)}).then(function(t){return u7(e,t),e.reload()}))},n.ed=function(t){var e=this;return co(this,this.I().then(function(n){return t.b(e.a,n)}).then(function(t){return u7(e,t),e.reload()}))},n.Db=function(t){var e=this;return co(this,this.I().then(function(n){return e.a.Db(n,t)}).then(function(t){return u7(e,t),e.reload()}))},n.Eb=function(t){if(void 0===t.displayName&&void 0===t.photoURL)return u1(this);var e=this;return co(this,this.I().then(function(n){return e.a.Eb(n,{displayName:t.displayName,photoUrl:t.photoURL})}).then(function(t){return u7(e,t),u6(e,"displayName",t.displayName||null),u6(e,"photoURL",t.photoUrl||null),K(e.providerData,function(t){"password"===t.providerId&&(rh(t,"displayName",e.displayName),rh(t,"photoURL",e.photoURL))}),uX(e)}).then(u0))},n.cd=function(t){var e=this;return co(this,u8(this).then(function(n){return G(u2(e),t)?aY(e.a,aI,{idToken:n,deleteProvider:[t]}).then(function(t){var n={};return K(t.providerUserInfo||[],function(t){n[t.providerId]=!0}),K(u2(e),function(t){n[t]||u3(e,t)}),n[iV.PROVIDER_ID]||rh(e,"phoneNumber",null),uX(e)}):uX(e).then(function(){throw new C("no-such-provider")})}))},n.delete=function(){var t=this;return co(this,this.I().then(function(e){return aY(t.a,aw,{idToken:e})}).then(function(){t.dispatchEvent(new uP("userDeleted"))})).then(function(){for(var e=0;e<t.N.length;e++)t.N[e].cancel("app-deleted");uK(t,null),uH(t,null),uz(t,null),t.N=[],t.J=!0,u$(t),rh(t,"refreshToken",null),t.b&&ui(t.b,t)})},n.Gb=function(t,e){return"linkViaPopup"==t&&(this.g||null)==e&&!!this.f||"reauthViaPopup"==t&&(this.g||null)==e&&!!this.f||"linkViaRedirect"==t&&(this.ga||null)==e||"reauthViaRedirect"==t&&(this.ga||null)==e},n.na=function(t,e,n,r){"linkViaPopup"!=t&&"reauthViaPopup"!=t||r!=(this.g||null)||(n&&this.C?this.C(n):e&&!n&&this.f&&this.f(e),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.C)},n.Fa=function(t,e){return"linkViaPopup"==t&&e==(this.g||null)?w(this.Lb,this):"reauthViaPopup"==t&&e==(this.g||null)?w(this.Mb,this):"linkViaRedirect"==t&&(this.ga||null)==e?w(this.Lb,this):"reauthViaRedirect"==t&&(this.ga||null)==e?w(this.Mb,this):null},n.Ec=function(t){var e=this;return cn(this,"linkViaPopup",t,function(){return u9(e,t.providerId).then(function(){return uX(e)})},!1)},n.Nc=function(t){return cn(this,"reauthViaPopup",t,function(){return el()},!0)},n.Fc=function(t){var e=this;return cr(this,"linkViaRedirect",t,function(){return u9(e,t.providerId)},!1)},n.Oc=function(t){return cr(this,"reauthViaRedirect",t,function(){return el()},!0)},n.Lb=function(t,e,n,r){var i=this;this.c&&(this.c.cancel(),this.c=null);var o=null;return co(this,this.I().then(function(n){return ad(i.a,{requestUri:t,postBody:r,sessionId:e,idToken:n})}).then(function(t){return o=ct(i,t,"link"),ce(i,t)}).then(function(){return o}))},n.Mb=function(t,e,n,r){var i=this;this.c&&(this.c.cancel(),this.c=null);var o=null;return co(this,el().then(function(){return iv(av(i.a,{requestUri:t,sessionId:e,postBody:r,tenantId:n}),i.uid)}).then(function(t){return o=ct(i,t,"reauthenticate"),u7(i,t),i.i=null,i.reload()}).then(function(){return o}),!0)},n.vb=function(t){var e=this,n=null;return co(this,this.I().then(function(e){return n=e,void 0===t||tf(t)?{}:r0(new rH(t))}).then(function(t){return e.a.vb(n,t)}).then(function(t){if(e.email!=t)return e.reload()}).then(function(){}))},n.Fb=function(t,e){var n=this,r=null;return co(this,this.I().then(function(t){return r=t,void 0===e||tf(e)?{}:r0(new rH(e))}).then(function(e){return n.a.Fb(r,t,e)}).then(function(t){if(n.email!=t)return n.reload()}).then(function(){}))},n.jc=function(t){var e=null,n=this;return co(this,t=iv(el(t),n.uid).then(function(t){return e=ct(n,t,"reauthenticate"),u7(n,t),n.i=null,n.reload()}).then(function(){return e}),!0)},n.toJSON=function(){return this.w()},n.w=function(){var t={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,tenantId:this.tenantId,providerData:[],apiKey:this.l,appName:this.m,authDomain:this.s,stsTokenManager:this.h.w(),redirectEventId:this.ga||null};return this.metadata&&tv(t,this.metadata.w()),K(this.providerData,function(e){t.providerData.push(function(t){var e,n={};for(e in t)t.hasOwnProperty(e)&&(n[e]=t[e]);return n}(e))}),tv(t,this.S.w()),t};var cu={name:"redirectUser",F:"session"};function cc(t){return sU(t.b,cu,t.a)}function ch(t){var e,n,r,i,o,a,u,c;this.a=t,this.b=sM(),this.c=null,this.f=(e=this,a=cp("local"),u=cp("session"),c=cp("none"),(n=e.b,i=sj(a,r=e.a),o=sF(n,a.F),n.get(a,r).then(function(t){var e=null;try{e=n9(s.localStorage.getItem(i))}catch(t){}if(e&&!t)return s.localStorage.removeItem(i),n.set(a,e,r);e&&t&&"localStorage"!=o.type&&s.localStorage.removeItem(i)})).then(function(){return e.b.get(u,e.a)}).then(function(t){return t?u:e.b.get(c,e.a).then(function(t){return t?c:e.b.get(a,e.a).then(function(t){return t?a:e.b.get(cf,e.a).then(function(t){return t?cp(t):a})})})}).then(function(t){return e.c=t,cl(e,t.F)}).o(function(){e.c||(e.c=a)})),this.b.addListener(cp("local"),this.a,w(this.g,this))}function cl(t,e){var n,r=[];for(n in sO)sO[n]!==e&&r.push(sU(t.b,cp(sO[n]),t.a));return r.push(sU(t.b,cf,t.a)),new ei(function(t,e){var n=r.length,i=[];if(n)for(var o=function(e,r){n--,i[e]=r,0==n&&t(i)},a=function(t){e(t)},s=0;s<r.length;s++)ep(r[s],I(o,s),a);else t(i)})}ch.prototype.g=function(){var t=this,e=cp("local");cm(this,function(){return el().then(function(){return t.c&&"local"!=t.c.F?t.b.get(e,t.a):null}).then(function(n){if(n)return cl(t,"local").then(function(){t.c=e})})})};var cf={name:"persistence",F:"session"};function cp(t){return{name:"authUser",F:t}}function cd(t,e){return cm(t,function(){return t.b.set(t.c,e.w(),t.a)})}function cv(t){return cm(t,function(){return sU(t.b,t.c,t.a)})}function cg(t,e,n){return cm(t,function(){return t.b.get(t.c,t.a).then(function(t){return t&&e&&(t.authDomain=e),t&&n&&(t.emulatorConfig=n),ca(t||{})})})}function cm(t,e){return t.f=t.f.then(e,e),t.f}function cy(t){var e,n,r,i,o,a,s,u,c,h;if(this.l=!1,rh(this,"settings",new ub),rh(this,"app",t),cC(this).options&&cC(this).options.apiKey)t=ee.SDK_VERSION?nZ(ee.SDK_VERSION):null,this.a=new oK(cC(this).options&&cC(this).options.apiKey,x(oW),t);else throw new C("invalid-api-key");this.P=[],this.s=[],this.N=[],this.Pa=ee.INTERNAL.createSubscribe(w(this.zc,this)),this.W=void 0,this.ib=ee.INTERNAL.createSubscribe(w(this.Ac,this)),cE(this,null),this.i=new ch(cC(this).options.apiKey+":"+cC(this).name),this.D=new cs(cC(this).options.apiKey+":"+cC(this).name),this.$=cR(this,(o=this,c=cC(o).options.authDomain,h=(u=(a=o.D,s=cC(o).options.authDomain,a.b.get(cu,a.a).then(function(t){return t&&s&&(t.authDomain=s),ca(t||{})})).then(function(t){return(o.m=t)&&(t.ha=o.D),cc(o.D)}),cR(o,u)).then(function(){return cg(o.i,c,o.R)}).then(function(t){return t?(t.ha=o.D,o.m&&(o.m.ga||null)==(t.ga||null)?t:t.reload().then(function(){return cd(o.i,t).then(function(){return t})}).o(function(e){return"auth/network-request-failed"==e.code?t:cv(o.i)})):null}).then(function(t){cE(o,t||null)}),cR(o,h))),this.h=cR(this,(e=this,e.$.then(function(){return cT(e)}).o(function(){}).then(function(){if(!e.l)return e.ja()}).o(function(){}).then(function(){if(!e.l){e.ba=!0;var t=e.i;t.b.addListener(cp("local"),t.a,e.ja)}}))),this.ba=!1,this.ja=w(this.Zc,this),this.Ba=w(this.da,this),this.qa=w(this.mc,this),this.za=w(this.wc,this),this.Aa=w(this.xc,this),this.b=null,n=this,r=cC(n).options.authDomain,i=cC(n).options.apiKey,r&&n4()&&(n.Oa=n.$.then(function(){if(!n.l){if(n.b=up(r,i,cC(n).name,n.R),ur(n.b,n),ck(n)&&uJ(ck(n)),n.m){uJ(n.m);var t=n.m;t.xa(n.la()),uK(t,n),uW(t=n.m,n.J),uz(t,n),uB(t=n.m,n.R),uH(t,n),n.m=null}return n.b}})),this.INTERNAL={},this.INTERNAL.delete=w(this.delete,this),this.INTERNAL.logFramework=w(this.Gc,this),this.u=0,e3.call(this),Object.defineProperty(this,"lc",{get:function(){return this.la()},set:function(t){this.xa(t)},enumerable:!1}),this.aa=null,Object.defineProperty(this,"ti",{get:function(){return this.T()},set:function(t){this.zb(t)},enumerable:!1}),this.S=null,Object.defineProperty(this,"emulatorConfig",{get:function(){if(this.R){var t=nf(this.R.url);t=rf({protocol:t.c,host:t.a,port:t.g,options:rf({disableWarnings:this.R.ec})})}else t=null;return t},enumerable:!1}),this.J=[],this.R=null}function c_(t){eD.call(this,"languageCodeChanged"),this.h=t}function cb(t){eD.call(this,"emulatorConfigChanged"),this.c=t}function cw(t){eD.call(this,"frameworkChanged"),this.f=t}function cI(t){return t.Oa||ef(new C("auth-domain-config-required"))}function cT(t){if(!n4())return ef(new C("operation-not-supported-in-this-environment"));var e=cI(t).then(function(){return t.b.ra()}).then(function(t){return t?rf(t):null});return cR(t,e)}function cE(t,e){var n,r;ck(t)&&(n=ck(t),r=t.Ba,$(n.W,function(t){return t==r}),e$(ck(t),"tokenChanged",t.qa),e$(ck(t),"userDeleted",t.za),e$(ck(t),"userInvalidated",t.Aa),u$(ck(t))),e&&(e.W.push(t.Ba),ez(e,"tokenChanged",t.qa),ez(e,"userDeleted",t.za),ez(e,"userInvalidated",t.Aa),0<t.u&&uQ(e)),rh(t,"currentUser",e),e&&(e.xa(t.la()),uK(e,t),uW(e,t.J),uz(e,t),uB(e,t.R),uH(e,t))}function cS(t,e){var n=null,r=null;return cR(t,e.then(function(e){var i;return n=iK(e),r=r9(e),(i={}).apiKey=cC(t).options.apiKey,i.authDomain=cC(t).options.authDomain,i.appName=cC(t).name,t.R&&(i.emulatorConfig=t.R),t.$.then(function(){var n,r,o;return n=t.D,r=t.Ga(),o=new uV(i,e),n&&(o.ha=n),r&&uW(o,r),o.reload().then(function(){return o})}).then(function(e){return ck(t)&&e.uid==ck(t).uid?u5(ck(t),e):(cE(t,e),uJ(e)),t.da(e)}).then(function(){cA(t)})},function(e){var n=null;throw e&&"auth/multi-factor-auth-required"===e.code&&(n=uN(e.w(),t,w(t.kc,t))),n||e}).then(function(){return rf({user:ck(t),credential:n,additionalUserInfo:r,operationType:"signIn"})}))}function cC(t){return t.app}function ck(t){return t.currentUser}function cN(t){return ck(t)&&ck(t)._lat||null}function cA(t){if(t.ba){for(var e=0;e<t.s.length;e++)t.s[e]&&t.s[e](cN(t));if(t.W!==t.getUid()&&t.N.length)for(t.W=t.getUid(),e=0;e<t.N.length;e++)t.N[e]&&t.N[e](cN(t))}}function cR(t,e){return t.P.push(e),e.oa(function(){Q(t.P,e)}),e}function cx(){}function cP(){this.a={},this.b=1e12}ch.prototype.yb=function(t){var e=null,n=this;return function(t){var e=new C("invalid-persistence-type"),n=new C("unsupported-persistence-type");t:{for(r in sO)if(sO[r]==t){var r=!0;break t}r=!1}if(!r||"string"!=typeof t)throw e;switch(nG()){case"ReactNative":if("session"===t)throw n;break;case"Node":if("none"!==t)throw n;break;case"Worker":if("session"===t||!sp()&&"none"!==t)throw n;break;default:if(!n2()&&"none"!==t)throw n}}(t),cm(this,function(){return t!=n.c.F?n.b.get(n.c,n.a).then(function(r){return e=r,cl(n,t)}).then(function(){if(n.c=cp(t),e)return n.b.set(n.c,e,n.a)}):el()})},E(cy,e3),E(c_,eD),E(cb,eD),E(cw,eD),(n=cy.prototype).yb=function(t){return cR(this,t=this.i.yb(t))},n.xa=function(t){this.aa===t||this.l||(this.aa=t,o5(this.a,this.aa),this.dispatchEvent(new c_(this.la())))},n.la=function(){return this.aa},n.fd=function(){var t=s.navigator;this.xa(t&&(t.languages&&t.languages[0]||t.language||t.userLanguage)||null)},n.gd=function(t,e){if(!this.R){var n;if(!/^https?:\/\//.test(t))throw new C("argument-error","Emulator URL must start with a valid scheme (http:// or https://).");n=e=!!e&&!!e.disableWarnings,"undefined"!=typeof console&&"function"==typeof console.info&&console.info("WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials."),s.document&&!n&&nK().then(function(){var t=s.document.createElement("div");t.innerText="Running in emulator mode. Do not use with production credentials.",t.style.position="fixed",t.style.width="100%",t.style.backgroundColor="#ffffff",t.style.border=".1em solid #000000",t.style.color="#b50000",t.style.bottom="0px",t.style.left="0px",t.style.margin="0px",t.style.zIndex=1e4,t.style.textAlign="center",t.classList.add("firebase-emulator-warning"),s.document.body.appendChild(t)}),this.R={url:t,ec:e},this.settings.jb=!0,o8(this.a,this.R),this.dispatchEvent(new cb(this.R))}},n.Gc=function(t){this.J.push(t),o9(this.a,ee.SDK_VERSION?nZ(ee.SDK_VERSION,this.J):null),this.dispatchEvent(new cw(this.J))},n.Ga=function(){return X(this.J)},n.zb=function(t){this.S===t||this.l||(this.S=t,this.a.b=this.S)},n.T=function(){return this.S},n.toJSON=function(){return{apiKey:cC(this).options.apiKey,authDomain:cC(this).options.authDomain,appName:cC(this).name,currentUser:ck(this)&&ck(this).w()}},n.Gb=function(t,e){switch(t){case"unknown":case"signInViaRedirect":return!0;case"signInViaPopup":return this.g==e&&!!this.f;default:return!1}},n.na=function(t,e,n,r){"signInViaPopup"==t&&this.g==r&&(n&&this.C?this.C(n):e&&!n&&this.f&&this.f(e),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.C)},n.Fa=function(t,e){return"signInViaRedirect"==t||"signInViaPopup"==t&&this.g==e&&this.f?w(this.ic,this):null},n.ic=function(t,e,n,r){var i=this,o={requestUri:t,postBody:r,sessionId:e,tenantId:n};return this.c&&(this.c.cancel(),this.c=null),i.$.then(function(){return cS(i,ap(i.a,o))})},n.Xc=function(t){if(!n4())return ef(new C("operation-not-supported-in-this-environment"));var e=this,n=r7(t.providerId),r=rt(),i=null;(!n5()||nW())&&cC(this).options.authDomain&&t.isOAuthProvider&&(i=se(cC(this).options.authDomain,cC(this).options.apiKey,cC(this).name,"signInViaPopup",t,null,r,ee.SDK_VERSION||null,null,null,this.T(),this.R));var o=nq(i,n&&n.va,n&&n.ua);return cR(this,n=cI(this).then(function(n){return us(n,o,"signInViaPopup",t,r,!!i,e.T())}).then(function(){return new ei(function(t,n){e.na("signInViaPopup",null,new C("cancelled-popup-request"),e.g),e.f=t,e.C=n,e.g=r,e.c=uh(e.b,e,"signInViaPopup",o,r)})}).then(function(t){return o&&nU(o),t?rf(t):null}).o(function(t){throw o&&nU(o),t}))},n.Yc=function(t){if(!n4())return ef(new C("operation-not-supported-in-this-environment"));var e=this;return cR(this,cI(this).then(function(){var t;return cm(t=e.i,function(){return t.b.set(cf,t.c.F,t.a)})}).then(function(){return uc(e.b,"signInViaRedirect",t,void 0,e.T())}))},n.ra=function(){var t=this;return cT(this).then(function(e){return t.b&&ug(t.b.b),e}).o(function(e){throw t.b&&ug(t.b.b),e})},n.dd=function(t){if(!t)return ef(new C("null-user"));if(this.S!=t.tenantId)return ef(new C("tenant-id-mismatch"));var e,n,r,i,o,a=this,s={};s.apiKey=cC(this).options.apiKey,s.authDomain=cC(this).options.authDomain,s.appName=cC(this).name;var u=(e=s,n=a.D,r=a.Ga(),i=t.h,(o={})[o1]=i.b&&i.b.toString(),o.refreshToken=i.a,e=new uV(e||{apiKey:t.l,authDomain:t.s,appName:t.m},o),n&&(e.ha=n),r&&uW(e,r),u5(e,t),e);return cR(this,this.h.then(function(){if(cC(a).options.apiKey!=t.l)return u.reload()}).then(function(){return ck(a)&&t.uid==ck(a).uid?(u5(ck(a),t),a.da(t)):(cE(a,u),uJ(u),a.da(u))}).then(function(){cA(a)}))},n.Bb=function(){var t=this;return cR(this,this.h.then(function(){return(t.b&&ug(t.b.b),ck(t))?(cE(t,null),cv(t.i).then(function(){cA(t)})):el()}))},n.Zc=function(){var t=this;return cg(this.i,cC(this).options.authDomain).then(function(e){if(!t.l){var n;if(n=ck(t)&&e){n=ck(t).uid;var r=e.uid;n=null!=n&&""!==n&&null!=r&&""!==r&&n==r}if(n)return u5(ck(t),e),ck(t).I();(ck(t)||e)&&(cE(t,e),e&&(uJ(e),e.ha=t.D),t.b&&ur(t.b,t),cA(t))}})},n.da=function(t){return cd(this.i,t)},n.mc=function(){cA(this),this.da(ck(this))},n.wc=function(){this.Bb()},n.xc=function(){this.Bb()},n.kc=function(t){var e=this;return this.h.then(function(){return cS(e,el(t))})},n.zc=function(t){var e=this;this.addAuthTokenListener(function(){t.next(ck(e))})},n.Ac=function(t){var e,n,r=this;e=this,n=function(){t.next(ck(r))},e.N.push(n),cR(e,e.h.then(function(){!e.l&&G(e.N,n)&&e.W!==e.getUid()&&(e.W=e.getUid(),n(cN(e)))}))},n.Ic=function(t,e,n){var r=this;return this.ba&&Promise.resolve().then(function(){"function"==typeof t?t(ck(r)):"function"==typeof t.next&&t.next(ck(r))}),this.Pa(t,e,n)},n.Hc=function(t,e,n){var r=this;return this.ba&&Promise.resolve().then(function(){r.W=r.getUid(),"function"==typeof t?t(ck(r)):"function"==typeof t.next&&t.next(ck(r))}),this.ib(t,e,n)},n.nc=function(t){var e=this;return cR(this,this.h.then(function(){return ck(e)?ck(e).I(t).then(function(t){return{accessToken:t}}):null}))},n.Tc=function(t){var e=this;return this.h.then(function(){return cS(e,aY(e.a,aH,{token:t}))}).then(function(t){var n=t.user;return u6(n,"isAnonymous",!1),e.da(n),t})},n.Uc=function(t,e){var n=this;return this.h.then(function(){return cS(n,aY(n.a,aW,{email:t,password:e}))})},n.dc=function(t,e){var n=this;return this.h.then(function(){return cS(n,aY(n.a,a_,{email:t,password:e}))})},n.ab=function(t){var e=this;return this.h.then(function(){return cS(e,t.ka(e.a))})},n.Sc=function(t){return ru("firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead."),this.ab(t)},n.Ab=function(){var t=this;return this.h.then(function(){var e=ck(t);if(e&&e.isAnonymous){var n=rf({providerId:null,isNewUser:!1});return rf({user:e,credential:null,additionalUserInfo:n,operationType:"signIn"})}return cS(t,t.a.Ab()).then(function(e){var n=e.user;return u6(n,"isAnonymous",!0),t.da(n),e})})},n.getUid=function(){return ck(this)&&ck(this).uid||null},n.cc=function(t){this.addAuthTokenListener(t),this.u++,0<this.u&&ck(this)&&uQ(ck(this))},n.Pc=function(t){var e=this;K(this.s,function(n){n==t&&e.u--}),0>this.u&&(this.u=0),0==this.u&&ck(this)&&u$(ck(this)),this.removeAuthTokenListener(t)},n.addAuthTokenListener=function(t){var e=this;this.s.push(t),cR(this,this.h.then(function(){e.l||G(e.s,t)&&t(cN(e))}))},n.removeAuthTokenListener=function(t){$(this.s,function(e){return e==t})},n.delete=function(){this.l=!0;for(var t=0;t<this.P.length;t++)this.P[t].cancel("app-deleted");return this.P=[],this.i&&(t=this.i).b.removeListener(cp("local"),t.a,this.ja),this.b&&(ui(this.b,this),ug(this.b.b)),Promise.resolve()},n.hc=function(t){return cR(this,aY(this.a,ab,{identifier:t,continueUri:n3()?nM():"http://localhost"}).then(function(t){return t.signinMethods||[]}))},n.Bc=function(t){return!!iF(t)},n.xb=function(t,e){var n=this;return cR(this,el().then(function(){var t=new rH(e);if(!t.c)throw new C("argument-error",rG+" must be true when sending sign in link to email");return r0(t)}).then(function(e){return n.a.xb(t,e)}).then(function(){}))},n.jd=function(t){return this.Sa(t).then(function(t){return t.data.email})},n.ob=function(t,e){return cR(this,this.a.ob(t,e).then(function(){}))},n.Sa=function(t){return cR(this,this.a.Sa(t).then(function(t){return new rw(t)}))},n.kb=function(t){return cR(this,this.a.kb(t).then(function(){}))},n.wb=function(t,e){var n=this;return cR(this,el().then(function(){return void 0===e||tf(e)?{}:r0(new rH(e))}).then(function(e){return n.a.wb(t,e)}).then(function(){}))},n.Wc=function(t,e){return cR(this,uI(this,t,e,w(this.ab,this)))},n.Vc=function(t,e){var n=this;return cR(this,el().then(function(){var r=e||nM(),i=iM(t,r);if(!(r=iF(r)))throw new C("argument-error","Invalid email link!");if(r.tenantId!==n.T())throw new C("tenant-id-mismatch");return n.ab(i)}))},cx.prototype.render=function(){},cx.prototype.reset=function(){},cx.prototype.getResponse=function(){},cx.prototype.execute=function(){};var cD=null;function cO(t,e){return(e=cL(e))&&t.a[e]||null}function cL(t){return(t=void 0===t?1e12:t)?t.toString():null}function cM(t,e){this.g=!1,this.c=e,this.a=this.b=null,this.h="invisible"!==this.c.size,this.f=t3(t);var n=this;this.i=function(){n.execute()},this.h?this.execute():ez(this.f,"click",this.i)}function cF(t){if(t.g)throw Error("reCAPTCHA mock was already deleted!")}function cj(){}function cU(){}cP.prototype.render=function(t,e){return this.a[this.b.toString()]=new cM(t,e),this.b++},cP.prototype.reset=function(t){var e=cO(this,t);t=cL(t),e&&t&&(e.delete(),delete this.a[t])},cP.prototype.getResponse=function(t){return(t=cO(this,t))?t.getResponse():null},cP.prototype.execute=function(t){(t=cO(this,t))&&t.execute()},cM.prototype.getResponse=function(){return cF(this),this.b},cM.prototype.execute=function(){cF(this);var t=this;this.a||(this.a=setTimeout(function(){t.b=function(){for(var t=50,e=[];0<t;)e.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),t--;return e.join("")}();var e=t.c.callback,n=t.c["expired-callback"];if(e)try{e(t.b)}catch(t){}t.a=setTimeout(function(){if(t.a=null,t.b=null,n)try{n()}catch(t){}t.h&&t.execute()},6e4)},500))},cM.prototype.delete=function(){cF(this),this.g=!0,clearTimeout(this.a),this.a=null,e$(this.f,"click",this.i)},rh(cj,"FACTOR_ID","phone"),cU.prototype.g=function(){return cD||(cD=new cP),el(cD)},cU.prototype.c=function(){};var cq=null;function cV(){this.b=s.grecaptcha?1/0:0,this.f=null,this.a="__rcb"+Math.floor(1e6*Math.random()).toString()}var cB=new tm(tb,"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),cK=new rr(3e4,6e4);cV.prototype.g=function(t){var e=this;return new ei(function(n,r){var i=setTimeout(function(){r(new C("network-request-failed"))},cK.get());s.grecaptcha&&(t===e.f||e.b)?(clearTimeout(i),n(s.grecaptcha)):(s[e.a]=function(){if(s.grecaptcha){e.f=t;var o=s.grecaptcha.render;s.grecaptcha.render=function(t,n){return t=o(t,n),e.b++,t},clearTimeout(i),n(s.grecaptcha)}else clearTimeout(i),r(new C("internal-error"));delete s[e.a]},el(oM(tE(cB,{onload:e.a,hl:t||""}))).o(function(){clearTimeout(i),r(new C("internal-error","Unable to load external reCAPTCHA dependencies!"))}))})},cV.prototype.c=function(){this.b--};var cH=null;function cW(t,e,n,r,i,o,a){if(rh(this,"type","recaptcha"),this.c=this.f=null,this.J=!1,this.v=e,this.g=null,a?(cq||(cq=new cU),a=cq):(cH||(cH=new cV),a=cH),this.m=a,this.a=n||{theme:"light",type:"image"},this.h=[],this.a[cQ])throw new C("argument-error","sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");if(this.i="invisible"===this.a[c$],!s.document)throw new C("operation-not-supported-in-this-environment","RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.");if(!t3(e)||!this.i&&t3(e).hasChildNodes())throw new C("argument-error","reCAPTCHA container is either not found or already contains inner elements!");this.s=new oK(t,o||null,i||null),this.u=r||function(){return null};var u=this;this.l=[];var c=this.a[cz];this.a[cz]=function(t){if(cY(u,t),"function"==typeof c)c(t);else if("string"==typeof c){var e=n1(c,s);"function"==typeof e&&e(t)}};var h=this.a[cG];this.a[cG]=function(){if(cY(u,null),"function"==typeof h)h();else if("string"==typeof h){var t=n1(h,s);"function"==typeof t&&t()}}}var cz="callback",cG="expired-callback",cQ="sitekey",c$="size";function cY(t,e){for(var n=0;n<t.l.length;n++)try{t.l[n](e)}catch(t){}}function cX(t,e){return t.h.push(e),e.oa(function(){Q(t.h,e)}),e}function cJ(t){if(t.J)throw new C("internal-error","RecaptchaVerifier instance has been destroyed.")}function cZ(t,e,n){var r=!1;try{this.b=n||ee.app()}catch(t){throw new C("argument-error","No firebase.app.App instance is currently initialized.")}if(this.b.options&&this.b.options.apiKey)n=this.b.options.apiKey;else throw new C("invalid-api-key");var i=this,o=null;try{o=this.b.auth().Ga()}catch(t){}try{r=this.b.auth().settings.appVerificationDisabledForTesting}catch(t){}o=ee.SDK_VERSION?nZ(ee.SDK_VERSION,o):null,cW.call(this,n,t,e,function(){try{var t=i.b.auth().la()}catch(e){t=null}return t},o,x(oW),r)}function c0(t,e,n,r){t:{n=Array.prototype.slice.call(n);for(var i=0,o=!1,a=0;a<e.length;a++)if(e[a].optional)o=!0;else{if(o)throw new C("internal-error","Argument validator encountered a required argument after an optional argument.");i++}if(o=e.length,n.length<i||o<n.length)r="Expected "+(i==o?1==i?"1 argument":i+" arguments":i+"-"+o+" arguments")+" but got "+n.length+".";else{for(i=0;i<n.length;i++)if(o=e[i].optional&&void 0===n[i],!e[i].M(n[i])&&!o){if(e=e[i],0>i||i>=c1.length)throw new C("internal-error","Argument validator received an unsupported number of arguments.");n=c1[i],r=(r?"":n+" argument ")+(e.name?'"'+e.name+'" ':"")+"must be "+e.K+".";break t}r=null}}if(r)throw new C("argument-error",t+" failed: "+r)}(n=cW.prototype).Ia=function(){var t=this;return this.f?this.f:this.f=cX(this,el().then(function(){if(n3()&&!nz())return nK();throw new C("operation-not-supported-in-this-environment","RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.")}).then(function(){return t.m.g(t.u())}).then(function(e){return t.g=e,aY(t.s,aD,{})}).then(function(e){t.a[cQ]=e.recaptchaSiteKey}).o(function(e){throw t.f=null,e}))},n.render=function(){cJ(this);var t=this;return cX(this,this.Ia().then(function(){if(null===t.c){var e=t.v;if(!t.i){var n=t3(e);e=function(t,e,n){var r=arguments,i=document,o=String(r[0]),a=r[1];if(!t4&&a&&(a.name||a.type)){if(o=["<",o],a.name&&o.push(' name="',tV(a.name),'"'),a.type){o.push(' type="',tV(a.type),'"');var s={};tv(s,a),delete s.type,a=s}o.push(">"),o=o.join("")}return o=t8(i,o),a&&("string"==typeof a?o.className=a:Array.isArray(a)?o.className=a.join(" "):t6(o,a)),2<r.length&&function(t,e,n){function r(n){n&&e.appendChild("string"==typeof n?t.createTextNode(n):n)}for(var i=2;i<n.length;i++){var o=n[i];if(!p(o)||v(o)&&0<o.nodeType)r(o);else{t:{if(o&&"number"==typeof o.length){if(v(o)){var a="function"==typeof o.item||"string"==typeof o.item;break t}if(d(o)){a="function"==typeof o.item;break t}}a=!1}K(a?X(o):o,r)}}}(i,o,r),o}("DIV"),n.appendChild(e)}t.c=t.g.render(e,t.a)}return t.c}))},n.verify=function(){cJ(this);var t=this;return cX(this,this.render().then(function(e){return new ei(function(n){var r=t.g.getResponse(e);if(r)n(r);else{var i=function(e){e&&($(t.l,function(t){return t==i}),n(e))};t.l.push(i),t.i&&t.g.execute(t.c)}})}))},n.reset=function(){cJ(this),null!==this.c&&this.g.reset(this.c)},n.clear=function(){cJ(this),this.J=!0,this.m.c();for(var t,e=0;e<this.h.length;e++)this.h[e].cancel("RecaptchaVerifier instance has been destroyed.");if(!this.i)for(e=t3(this.v);t=e.firstChild;)e.removeChild(t)},E(cZ,cW);var c1="First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" ");function c2(t,e){return{name:t||"",K:"a valid string",optional:!!e,M:function(t){return"string"==typeof t}}}function c4(t,e){return{name:t||"",K:"a boolean",optional:!!e,M:function(t){return"boolean"==typeof t}}}function c3(t,e){return{name:t||"",K:"a valid object",optional:!!e,M:v}}function c6(t,e){return{name:t||"",K:"a function",optional:!!e,M:function(t){return"function"==typeof t}}}function c5(t,e){return{name:t||"",K:"null",optional:!!e,M:function(t){return null===t}}}function c8(t){return{name:t?t+"Credential":"credential",K:t?"a valid "+t+" credential":"a valid credential",optional:!1,M:function(e){if(!e)return!1;var n=!t||e.providerId===t;return!(!e.ka||!n)}}}function c7(){return{name:"multiFactorAssertion",K:"a valid multiFactorAssertion",optional:!1,M:function(t){return!!t&&!!t.tb}}}function c9(){return{name:"authProvider",K:"a valid Auth provider",optional:!1,M:function(t){return!!(t&&t.providerId&&t.hasOwnProperty&&t.hasOwnProperty("isOAuthProvider"))}}}function ht(t,e){return v(t)&&"string"==typeof t.type&&t.type===e&&"function"==typeof t.Ha}function he(t){return v(t)&&"string"==typeof t.uid}function hn(){return{name:"applicationVerifier",K:"an implementation of firebase.auth.ApplicationVerifier",optional:!1,M:function(t){return!(!t||"string"!=typeof t.type||"function"!=typeof t.verify)}}}function hr(t,e,n,r){return{name:n||"",K:t.K+" or "+e.K,optional:!!r,M:function(n){return t.M(n)||e.M(n)}}}function hi(t,e){for(var n in e){var r=e[n].name;t[r]=hs(r,t[n],e[n].j)}}function ho(t,e){for(var n in e){var r=e[n].name;r!==n&&Object.defineProperty(t,r,{get:I(function(t){return this[t]},n),set:I(function(t,e,n,r){c0(t,[n],[r],!0),this[e]=r},r,n,e[n].lb),enumerable:!0})}}function ha(t,e,n,r){t[e]=hs(e,n,r)}function hs(t,e,n){function r(){var t=Array.prototype.slice.call(arguments);return c0(a,n,t),e.apply(this,t)}if(!n)return e;var i,o,a=(i=(i=t).split("."))[i.length-1];for(o in e)r[o]=e[o];for(o in e.prototype)r.prototype[o]=e.prototype[o];return r}hi(cy.prototype,{kb:{name:"applyActionCode",j:[c2("code")]},Sa:{name:"checkActionCode",j:[c2("code")]},ob:{name:"confirmPasswordReset",j:[c2("code"),c2("newPassword")]},dc:{name:"createUserWithEmailAndPassword",j:[c2("email"),c2("password")]},hc:{name:"fetchSignInMethodsForEmail",j:[c2("email")]},ra:{name:"getRedirectResult",j:[]},Bc:{name:"isSignInWithEmailLink",j:[c2("emailLink")]},Hc:{name:"onAuthStateChanged",j:[hr(c3(),c6(),"nextOrObserver"),c6("opt_error",!0),c6("opt_completed",!0)]},Ic:{name:"onIdTokenChanged",j:[hr(c3(),c6(),"nextOrObserver"),c6("opt_error",!0),c6("opt_completed",!0)]},wb:{name:"sendPasswordResetEmail",j:[c2("email"),hr(c3("opt_actionCodeSettings",!0),c5(null,!0),"opt_actionCodeSettings",!0)]},xb:{name:"sendSignInLinkToEmail",j:[c2("email"),c3("actionCodeSettings")]},yb:{name:"setPersistence",j:[c2("persistence")]},Sc:{name:"signInAndRetrieveDataWithCredential",j:[c8()]},Ab:{name:"signInAnonymously",j:[]},ab:{name:"signInWithCredential",j:[c8()]},Tc:{name:"signInWithCustomToken",j:[c2("token")]},Uc:{name:"signInWithEmailAndPassword",j:[c2("email"),c2("password")]},Vc:{name:"signInWithEmailLink",j:[c2("email"),c2("emailLink",!0)]},Wc:{name:"signInWithPhoneNumber",j:[c2("phoneNumber"),hn()]},Xc:{name:"signInWithPopup",j:[c9()]},Yc:{name:"signInWithRedirect",j:[c9()]},dd:{name:"updateCurrentUser",j:[hr({name:"user",K:"an instance of Firebase User",optional:!1,M:function(t){return!!(t&&t instanceof uV)}},c5(),"user")]},Bb:{name:"signOut",j:[]},toJSON:{name:"toJSON",j:[c2(null,!0)]},fd:{name:"useDeviceLanguage",j:[]},gd:{name:"useEmulator",j:[c2("url"),c3("options",!0)]},jd:{name:"verifyPasswordResetCode",j:[c2("code")]}}),ho(cy.prototype,{lc:{name:"languageCode",lb:hr(c2(),c5(),"languageCode")},ti:{name:"tenantId",lb:hr(c2(),c5(),"tenantId")}}),cy.Persistence=sO,cy.Persistence.LOCAL="local",cy.Persistence.SESSION="session",cy.Persistence.NONE="none",hi(uV.prototype,{delete:{name:"delete",j:[]},oc:{name:"getIdTokenResult",j:[c4("opt_forceRefresh",!0)]},I:{name:"getIdToken",j:[c4("opt_forceRefresh",!0)]},Cc:{name:"linkAndRetrieveDataWithCredential",j:[c8()]},rb:{name:"linkWithCredential",j:[c8()]},Dc:{name:"linkWithPhoneNumber",j:[c2("phoneNumber"),hn()]},Ec:{name:"linkWithPopup",j:[c9()]},Fc:{name:"linkWithRedirect",j:[c9()]},Lc:{name:"reauthenticateAndRetrieveDataWithCredential",j:[c8()]},ub:{name:"reauthenticateWithCredential",j:[c8()]},Mc:{name:"reauthenticateWithPhoneNumber",j:[c2("phoneNumber"),hn()]},Nc:{name:"reauthenticateWithPopup",j:[c9()]},Oc:{name:"reauthenticateWithRedirect",j:[c9()]},reload:{name:"reload",j:[]},vb:{name:"sendEmailVerification",j:[hr(c3("opt_actionCodeSettings",!0),c5(null,!0),"opt_actionCodeSettings",!0)]},toJSON:{name:"toJSON",j:[c2(null,!0)]},cd:{name:"unlink",j:[c2("provider")]},Cb:{name:"updateEmail",j:[c2("email")]},Db:{name:"updatePassword",j:[c2("password")]},ed:{name:"updatePhoneNumber",j:[c8("phone")]},Eb:{name:"updateProfile",j:[c3("profile")]},Fb:{name:"verifyBeforeUpdateEmail",j:[c2("email"),hr(c3("opt_actionCodeSettings",!0),c5(null,!0),"opt_actionCodeSettings",!0)]}}),hi(cP.prototype,{execute:{name:"execute"},render:{name:"render"},reset:{name:"reset"},getResponse:{name:"getResponse"}}),hi(cx.prototype,{execute:{name:"execute"},render:{name:"render"},reset:{name:"reset"},getResponse:{name:"getResponse"}}),hi(ei.prototype,{oa:{name:"finally"},o:{name:"catch"},then:{name:"then"}}),ho(ub.prototype,{appVerificationDisabled:{name:"appVerificationDisabledForTesting",lb:c4("appVerificationDisabledForTesting")}}),hi(uw.prototype,{confirm:{name:"confirm",j:[c2("verificationCode")]}}),ha(id,"fromJSON",function(t){t="string"==typeof t?JSON.parse(t):t;for(var e,n=[iw,iO,iU,iy],r=0;r<n.length;r++)if(e=n[r](t))return e;return null},[hr(c2(),c3(),"json")]),ha(iL,"credential",function(t,e){return new iD(t,e)},[c2("email"),c2("password")]),hi(iD.prototype,{w:{name:"toJSON",j:[c2(null,!0)]}}),hi(iS.prototype,{Ca:{name:"addScope",j:[c2("scope")]},Ka:{name:"setCustomParameters",j:[c3("customOAuthParameters")]}}),ha(iS,"credential",iC,[hr(c2(),c3(),"token")]),ha(iL,"credentialWithLink",iM,[c2("email"),c2("emailLink")]),hi(ik.prototype,{Ca:{name:"addScope",j:[c2("scope")]},Ka:{name:"setCustomParameters",j:[c3("customOAuthParameters")]}}),ha(ik,"credential",iN,[hr(c2(),c3(),"token")]),hi(iA.prototype,{Ca:{name:"addScope",j:[c2("scope")]},Ka:{name:"setCustomParameters",j:[c3("customOAuthParameters")]}}),ha(iA,"credential",iR,[hr(c2(),hr(c3(),c5()),"idToken"),hr(c2(),c5(),"accessToken",!0)]),hi(ix.prototype,{Ka:{name:"setCustomParameters",j:[c3("customOAuthParameters")]}}),ha(ix,"credential",iP,[hr(c2(),c3(),"token"),c2("secret",!0)]),hi(iE.prototype,{Ca:{name:"addScope",j:[c2("scope")]},credential:{name:"credential",j:[hr(c2(),hr(c3(),c5()),"optionsOrIdToken"),hr(c2(),c5(),"accessToken",!0)]},Ka:{name:"setCustomParameters",j:[c3("customOAuthParameters")]}}),hi(i_.prototype,{w:{name:"toJSON",j:[c2(null,!0)]}}),hi(ig.prototype,{w:{name:"toJSON",j:[c2(null,!0)]}}),ha(iV,"credential",iB,[c2("verificationId"),c2("verificationCode")]),hi(iV.prototype,{gb:{name:"verifyPhoneNumber",j:[hr(c2(),{name:"phoneInfoOptions",K:"valid phone info options",optional:!1,M:function(t){return!!t&&(t.session&&t.phoneNumber?ht(t.session,il)&&"string"==typeof t.phoneNumber:t.session&&t.multiFactorHint?ht(t.session,ip)&&he(t.multiFactorHint):t.session&&t.multiFactorUid?ht(t.session,ip)&&"string"==typeof t.multiFactorUid:!!t.phoneNumber&&"string"==typeof t.phoneNumber)}},"phoneInfoOptions"),hn()]}}),hi(ij.prototype,{w:{name:"toJSON",j:[c2(null,!0)]}}),hi(C.prototype,{toJSON:{name:"toJSON",j:[c2(null,!0)]}}),hi(iY.prototype,{toJSON:{name:"toJSON",j:[c2(null,!0)]}}),hi(i$.prototype,{toJSON:{name:"toJSON",j:[c2(null,!0)]}}),hi(uk.prototype,{toJSON:{name:"toJSON",j:[c2(null,!0)]}}),hi(uE.prototype,{Rc:{name:"resolveSignIn",j:[c7()]}}),hi(uD.prototype,{Sb:{name:"getSession",j:[]},fc:{name:"enroll",j:[c7(),c2("displayName",!0)]},bd:{name:"unenroll",j:[hr({name:"multiFactorInfo",K:"a valid multiFactorInfo",optional:!1,M:he},c2(),"multiFactorInfoIdentifier")]}}),hi(cZ.prototype,{clear:{name:"clear",j:[]},render:{name:"render",j:[]},verify:{name:"verify",j:[]}}),ha(rL,"parseLink",rK,[c2("link")]),ha(cj,"assertion",function(t){return new ux(t)},[c8("phone")]),function(){if(void 0!==ee&&ee.INTERNAL&&ee.INTERNAL.registerComponent){var t={ActionCodeInfo:{Operation:{EMAIL_SIGNIN:rT,PASSWORD_RESET:"PASSWORD_RESET",RECOVER_EMAIL:"RECOVER_EMAIL",REVERT_SECOND_FACTOR_ADDITION:rI,VERIFY_AND_CHANGE_EMAIL:rE,VERIFY_EMAIL:"VERIFY_EMAIL"}},Auth:cy,AuthCredential:id,Error:C};ha(t,"EmailAuthProvider",iL,[]),ha(t,"FacebookAuthProvider",iS,[]),ha(t,"GithubAuthProvider",ik,[]),ha(t,"GoogleAuthProvider",iA,[]),ha(t,"TwitterAuthProvider",ix,[]),ha(t,"OAuthProvider",iE,[c2("providerId")]),ha(t,"SAMLAuthProvider",iT,[c2("providerId")]),ha(t,"PhoneAuthProvider",iV,[{name:"auth",K:"an instance of Firebase Auth",optional:!0,M:function(t){return!!(t&&t instanceof cy)}}]),ha(t,"RecaptchaVerifier",cZ,[hr(c2(),{name:"",K:"an HTML element",optional:!1,M:function(t){return!!(t&&t instanceof Element)}},"recaptchaContainer"),c3("recaptchaParameters",!0),{name:"app",K:"an instance of Firebase App",optional:!0,M:function(t){return!!(t&&t instanceof ee.app.App)}}]),ha(t,"ActionCodeURL",rL,[]),ha(t,"PhoneMultiFactorGenerator",cj,[]),ee.INTERNAL.registerComponent({name:"auth",instanceFactory:function(t){return t=t.getProvider("app").getImmediate(),new cy(t)},multipleInstances:!1,serviceProps:t,instantiationMode:"LAZY",type:"PUBLIC",onInstanceCreated:function(t){t.getProvider("auth-internal").initialize()}}),ee.INTERNAL.registerComponent({name:"auth-internal",instanceFactory:function(t){return t=t.getProvider("auth").getImmediate(),{getUid:w(t.getUid,t),getToken:w(t.nc,t),addAuthTokenListener:w(t.cc,t),removeAuthTokenListener:w(t.Pc,t)}},multipleInstances:!1,instantiationMode:"LAZY",type:"PRIVATE"}),ee.registerVersion("@firebase/auth","0.16.8"),ee.INTERNAL.extendNamespace({User:uV})}else throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.")}()}).apply(void 0!==O?O:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var en={},er=en={};function ei(){throw Error("setTimeout has not been defined")}function eo(){throw Error("clearTimeout has not been defined")}function ea(t){if(am===setTimeout)return setTimeout(t,0);// if setTimeout wasn't available but was latter defined
if((am===ei||!am)&&setTimeout)return am=setTimeout,setTimeout(t,0);try{// when when somebody has screwed with setTimeout but no I.E. maddness
return am(t,0)}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return am.call(null,t,0)}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return am.call(this,t,0)}}}!function(){try{am="function"==typeof setTimeout?setTimeout:ei}catch(t){am=ei}try{ay="function"==typeof clearTimeout?clearTimeout:eo}catch(t){ay=eo}}();var es=[],eu=!1,ec=-1;function eh(){eu&&a_&&(eu=!1,a_.length?es=a_.concat(es):ec=-1,es.length&&el())}function el(){if(!eu){var t=ea(eh);eu=!0;for(var e=es.length;e;){for(a_=es,es=[];++ec<e;)a_&&a_[ec].run();ec=-1,e=es.length}a_=null,eu=!1,function(t){if(ay===clearTimeout)return clearTimeout(t);// if clearTimeout wasn't available but was latter defined
if((ay===eo||!ay)&&clearTimeout)return ay=clearTimeout,clearTimeout(t);try{// when when somebody has screwed with setTimeout but no I.E. maddness
ay(t)}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return ay.call(null,t)}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return ay.call(this,t)}}}(t)}}// v8 likes predictible objects
function ef(t,e){this.fun=t,this.array=e}function ep(){}er.nextTick=function(t){var e=Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];es.push(new ef(t,e)),1!==es.length||eu||ea(el)},ef.prototype.run=function(){this.fun.apply(null,this.array)},er.title="browser",er.browser=!0,er.env={},er.argv=[],er.version="",er.versions={},er.on=ep,er.addListener=ep,er.once=ep,er.off=ep,er.removeListener=ep,er.removeAllListeners=ep,er.emit=ep,er.prependListener=ep,er.prependOnceListener=ep,er.listeners=function(t){return[]},er.binding=function(t){throw Error("process.binding is not supported")},er.cwd=function(){return"/"},er.chdir=function(t){throw Error("process.chdir is not supported")},er.umask=function(){return 0};/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** The semver (www.semver.org) version of the SDK. */var ed="",ev=/** @class */function(){/**
     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)
     */function t(t){this.domStorage_=t,// Use a prefix to avoid collisions with other stuff saved by the app.
this.prefix_="firebase:"}return(/**
     * @param key - The key to save the value under
     * @param value - The value being stored, or null to remove the key.
     */t.prototype.set=function(t,e){null==e?this.domStorage_.removeItem(this.prefixedName_(t)):this.domStorage_.setItem(this.prefixedName_(t),tb(e))},/**
     * @returns The value that was stored under this key, or null
     */t.prototype.get=function(t){var e=this.domStorage_.getItem(this.prefixedName_(t));return null==e?null:t_(e)},t.prototype.remove=function(t){this.domStorage_.removeItem(this.prefixedName_(t))},t.prototype.prefixedName_=function(t){return this.prefix_+t},t.prototype.toString=function(){return this.domStorage_.toString()},t)}(),eg=/** @class */function(){function t(){this.cache_={},this.isInMemoryStorage=!0}return t.prototype.set=function(t,e){null==e?delete this.cache_[t]:this.cache_[t]=e},t.prototype.get=function(t){return tS(this.cache_,t)?this.cache_[t]:null},t.prototype.remove=function(t){delete this.cache_[t]},t}(),em=function(t){try{// NOTE: just accessing "localStorage" or "window['localStorage']" may throw a security exception,
// so it must be inside the try/catch.
if("undefined"!=typeof window&&void 0!==window[t]){// Need to test cache. Just because it's here doesn't mean it works
var e=window[t];return e.setItem("firebase:sentinel","cache"),e.removeItem("firebase:sentinel"),new ev(e)}}catch(t){}// Failed to create wrapper.  Just return in-memory storage.
// TODO: log?
return new eg},ey=em("localStorage"),e_=em("sessionStorage"),eb=new tX("@firebase/database"),ew=(ac=1,function(){return ac++}),eI=function(t){var e=tF(t),n=new tA;n.update(e);var r=n.digest();return tt.encodeByteArray(r)},eT=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n="",r=0;r<t.length;r++){var i=t[r];Array.isArray(i)||i&&"object"==typeof i&&// eslint-disable-next-line @typescript-eslint/no-explicit-any
"number"==typeof i.length?n+=eT.apply(null,i):"object"==typeof i?n+=tb(i):n+=i,n+=" "}return n},eE=null,eS=!0,eC=function(t,e){Y(!e||!0===t||!1===t,"Can't turn on custom loggers persistently."),!0===t?(eb.logLevel=ad.VERBOSE,eE=eb.log.bind(eb),e&&e_.set("logging_enabled",!0)):"function"==typeof t?eE=t:(eE=null,e_.remove("logging_enabled"))},ek=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(!0===eS&&(eS=!1,null===eE&&!0===e_.get("logging_enabled")&&eC(!0)),eE){var n=eT.apply(null,t);eE(n)}},eN=function(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];ek.apply(void 0,Q([t],G(e)))}},eA=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n="FIREBASE INTERNAL ERROR: "+eT.apply(void 0,Q([],G(t)));eb.error(n)},eR=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n="FIREBASE FATAL ERROR: "+eT.apply(void 0,Q([],G(t)));throw eb.error(n),Error(n)},ex=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n="FIREBASE WARNING: "+eT.apply(void 0,Q([],G(t)));eb.warn(n)},eP=function(){// Be very careful accessing browser globals. Who knows what may or may not exist.
"undefined"!=typeof window&&window.location&&window.location.protocol&&-1!==window.location.protocol.indexOf("https:")&&ex("Insecure Firebase access from a secure page. Please use https in calls to new Firebase().")},eD=function(t){return"number"==typeof t&&(t!=t||// NaN
t===Number.POSITIVE_INFINITY||t===Number.NEGATIVE_INFINITY)},eO=function(t){if(tf()||"complete"===document.readyState)t();else{// Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which
// fire before onload), but fall back to onload.
var e=!1,n=function(){if(!document.body){setTimeout(n,Math.floor(10));return}e||(e=!0,t())};document.addEventListener?(document.addEventListener("DOMContentLoaded",n,!1),// fallback to onload.
window.addEventListener("load",n,!1)):document.attachEvent&&(// IE.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
document.attachEvent("onreadystatechange",function(){"complete"===document.readyState&&n()}),// fallback to onload.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
window.attachEvent("onload",n))}},eL="[MIN_NAME]",eM="[MAX_NAME]",eF=function(t,e){if(t===e)return 0;if(t===eL||e===eM)return -1;if(e===eL||t===eM)return 1;var n=eW(t),r=eW(e);return null!==n?null!==r?n-r==0?t.length-e.length:n-r:-1:null!==r?1:t<e?-1:1},ej=function(t,e){return t===e?0:t<e?-1:1},eU=function(t,e){if(e&&t in e)return e[t];throw Error("Missing required key ("+t+") in object: "+tb(e))},eq=function(t){if("object"!=typeof t||null===t)return tb(t);var e=[];// eslint-disable-next-line guard-for-in
for(var n in t)e.push(n);// Export as json, but with the keys sorted.
e.sort();for(var r="{",i=0;i<e.length;i++)0!==i&&(r+=","),r+=tb(e[i])+":"+eq(t[e[i]]);return r+"}"},eV=function(t,e){var n=t.length;if(n<=e)return[t];for(var r=[],i=0;i<n;i+=e)i+e>n?r.push(t.substring(i,n)):r.push(t.substring(i,i+e));return r};/**
 * Apply a function to each (key, value) pair in an object or
 * apply a function to each (index, value) pair in an array
 * @param obj - The object or array to iterate over
 * @param fn - The function to apply
 */function eB(t,e){for(var n in t)t.hasOwnProperty(n)&&e(n,t[n])}/**
 * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)
 * I made one modification at the end and removed the NaN / Infinity
 * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.
 * @param v - A double
 *
 */var eK=function(t){Y(!eD(t),"Invalid JSON number"),0===t?(n=0,r=0,e=1/t==-1/0?1:0):(e=t<0,(t=Math.abs(t))>=22250738585072014e-324?(n=// Normalized
(i=Math.min(Math.floor(Math.log(t)/Math.LN2),1023))+1023,r=Math.round(t*Math.pow(2,52-i)-4503599627370496)):(// Denormalized
n=0,r=Math.round(t/5e-324)));// Pack sign, exponent, fraction
var e,n,r,i,o,a=[];for(o=52;o;o-=1)a.push(r%2?1:0),r=Math.floor(r/2);for(o=11;o;o-=1)a.push(n%2?1:0),n=Math.floor(n/2);a.push(e?1:0),a.reverse();var s=a.join(""),u="";for(o=0;o<64;o+=8){var c=parseInt(s.substr(o,8),2).toString(16);1===c.length&&(c="0"+c),u+=c}return u.toLowerCase()},eH=RegExp("^-?(0*)\\d{1,10}$"),eW=function(t){if(eH.test(t)){var e=Number(t);if(e>=-2147483648&&e<=2147483647)return e}return null},ez=function(t){try{t()}catch(t){// Re-throw exception when it's safe.
setTimeout(function(){throw ex("Exception was thrown by user callback.",t.stack||""),t},Math.floor(0))}},eG=function(t,e){var n=setTimeout(t,e);return"object"==typeof n&&n.unref&&n.unref(),n},eQ=/** @class */function(){function t(t,e){var n=this;this.appName_=t,this.appCheckProvider=e,this.appCheck=null==e?void 0:e.getImmediate({optional:!0}),this.appCheck||null==e||e.get().then(function(t){return n.appCheck=t})}return t.prototype.getToken=function(t){var e=this;return this.appCheck?this.appCheck.getToken(t):new Promise(function(n,r){// Support delayed initialization of FirebaseAppCheck. This allows our
// customers to initialize the RTDB SDK before initializing Firebase
// AppCheck and ensures that all requests are authenticated if a token
// becomes available before the timoeout below expires.
setTimeout(function(){e.appCheck?e.getToken(t).then(n,r):n(null)},0)})},t.prototype.addTokenChangeListener=function(t){var e;null===(e=this.appCheckProvider)||void 0===e||e.get().then(function(e){return e.addTokenListener(t)})},t.prototype.notifyForInvalidToken=function(){ex('Provided AppCheck credentials for the app named "'+this.appName_+'" are invalid. This usually indicates your app was not initialized correctly.')},t}(),e$=/** @class */function(){function t(t,e,n){var r=this;this.appName_=t,this.firebaseOptions_=e,this.authProvider_=n,this.auth_=null,this.auth_=n.getImmediate({optional:!0}),this.auth_||n.onInit(function(t){return r.auth_=t})}return t.prototype.getToken=function(t){var e=this;return this.auth_?this.auth_.getToken(t).catch(function(t){return(// TODO: Need to figure out all the cases this is raised and whether
// this makes sense.
t&&"auth/token-not-initialized"===t.code?(ek("Got auth/token-not-initialized error.  Treating as null token."),null):Promise.reject(t))}):new Promise(function(n,r){// Support delayed initialization of FirebaseAuth. This allows our
// customers to initialize the RTDB SDK before initializing Firebase
// Auth and ensures that all requests are authenticated if a token
// becomes available before the timoeout below expires.
setTimeout(function(){e.auth_?e.getToken(t).then(n,r):n(null)},0)})},t.prototype.addTokenChangeListener=function(t){// TODO: We might want to wrap the listener and call it with no args to
// avoid a leaky abstraction, but that makes removing the listener harder.
this.auth_?this.auth_.addAuthTokenListener(t):this.authProvider_.get().then(function(e){return e.addAuthTokenListener(t)})},t.prototype.removeTokenChangeListener=function(t){this.authProvider_.get().then(function(e){return e.removeAuthTokenListener(t)})},t.prototype.notifyForInvalidToken=function(){var t='Provided authentication credentials for the app named "'+this.appName_+'" are invalid. This usually indicates your app was not initialized correctly. ';"credential"in this.firebaseOptions_?t+='Make sure the "credential" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.':"serviceAccount"in this.firebaseOptions_?t+='Make sure the "serviceAccount" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.':t+='Make sure the "apiKey" and "databaseURL" properties provided to initializeApp() match the values provided for your app at https://console.firebase.google.com/.',ex(t)},t}(),eY=/** @class */function(){function t(t){this.accessToken=t}return t.prototype.getToken=function(t){return Promise.resolve({accessToken:this.accessToken})},t.prototype.addTokenChangeListener=function(t){// Invoke the listener immediately to match the behavior in Firebase Auth
// (see packages/auth/src/auth.js#L1807)
t(this.accessToken)},t.prototype.removeTokenChangeListener=function(t){},t.prototype.notifyForInvalidToken=function(){},/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */t.OWNER="owner",t}(),eX=/(console\.firebase|firebase-console-\w+\.corp|firebase\.corp)\.google\.com/,eJ="websocket",eZ="long_polling",e0=/** @class */function(){/**
     * @param host - Hostname portion of the url for the repo
     * @param secure - Whether or not this repo is accessed over ssl
     * @param namespace - The namespace represented by the repo
     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).
     * @param nodeAdmin - Whether this instance uses Admin SDK credentials
     * @param persistenceKey - Override the default session persistence storage key
     */function t(t,e,n,r,i,o,a){void 0===i&&(i=!1),void 0===o&&(o=""),void 0===a&&(a=!1),this.secure=e,this.namespace=n,this.webSocketOnly=r,this.nodeAdmin=i,this.persistenceKey=o,this.includeNamespaceInQueryParams=a,this._host=t.toLowerCase(),this._domain=this._host.substr(this._host.indexOf(".")+1),this.internalHost=ey.get("host:"+t)||this._host}return t.prototype.isCacheableHost=function(){return"s-"===this.internalHost.substr(0,2)},t.prototype.isCustomHost=function(){return"firebaseio.com"!==this._domain&&"firebaseio-demo.com"!==this._domain},Object.defineProperty(t.prototype,"host",{get:function(){return this._host},set:function(t){t!==this.internalHost&&(this.internalHost=t,this.isCacheableHost()&&ey.set("host:"+this._host,this.internalHost))},enumerable:!1,configurable:!0}),t.prototype.toString=function(){var t=this.toURLString();return this.persistenceKey&&(t+="<"+this.persistenceKey+">"),t},t.prototype.toURLString=function(){var t=this.secure?"https://":"http://",e=this.includeNamespaceInQueryParams?"?ns="+this.namespace:"";return""+t+this.host+"/"+e},t}();/**
 * Returns the websocket URL for this repo
 * @param repoInfo - RepoInfo object
 * @param type - of connection
 * @param params - list
 * @returns The URL for this repo
 */function e1(t,e,n){if(Y("string"==typeof e,"typeof type must == string"),Y("object"==typeof n,"typeof params must == object"),e===eJ)r=(t.secure?"wss://":"ws://")+t.internalHost+"/.ws?";else if(e===eZ)r=(t.secure?"https://":"http://")+t.internalHost+"/.lp?";else throw Error("Unknown connection type: "+e);(t.host!==t.internalHost||t.isCustomHost()||t.includeNamespaceInQueryParams)&&(n.ns=t.namespace);var r,i=[];return eB(n,function(t,e){i.push(t+"="+e)}),r+i.join("&")}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Tracks a collection of stats.
 */var e2=/** @class */function(){function t(){this.counters_={}}return t.prototype.incrementCounter=function(t,e){void 0===e&&(e=1),tS(this.counters_,t)||(this.counters_[t]=0),this.counters_[t]+=e},t.prototype.get=function(){return ti(void 0,this.counters_)},t}(),e4={},e3={};function e6(t){var e=t.toString();return e4[e]||(e4[e]=new e2),e4[e]}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * This class ensures the packets from the server arrive in order
 * This class takes data from the server and ensures it gets passed into the callbacks in order.
 */var e5=/** @class */function(){/**
     * @param onMessage_
     */function t(t){this.onMessage_=t,this.pendingResponses=[],this.currentResponseNum=0,this.closeAfterResponse=-1,this.onClose=null}return t.prototype.closeAfter=function(t,e){this.closeAfterResponse=t,this.onClose=e,this.closeAfterResponse<this.currentResponseNum&&(this.onClose(),this.onClose=null)},/**
     * Each message from the server comes with a response number, and an array of data. The responseNumber
     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all
     * browsers will respond in the same order as the requests we sent
     */t.prototype.handleResponse=function(t,e){var n=this;this.pendingResponses[t]=e;for(var r=this;this.pendingResponses[this.currentResponseNum]&&"break"!==function(){var t=r.pendingResponses[r.currentResponseNum];delete r.pendingResponses[r.currentResponseNum];for(var e=function(e){t[e]&&ez(function(){n.onMessage_(t[e])})},i=0;i<t.length;++i)e(i);if(r.currentResponseNum===r.closeAfterResponse)return r.onClose&&(r.onClose(),r.onClose=null),"break";r.currentResponseNum++}(););},t}(),e8="start",e7=/** @class */function(){/**
     * @param connId An identifier for this connection, used for logging
     * @param repoInfo The info for the endpoint to send data to.
     * @param applicationId The Firebase App ID for this project.
     * @param appCheckToken The AppCheck token for this client.
     * @param authToken The AuthToken to use for this connection.
     * @param transportSessionId Optional transportSessionid if we are
     * reconnecting for an existing transport session
     * @param lastSessionId Optional lastSessionId if the PersistentConnection has
     * already created a connection previously
     */function t(t,e,n,r,i,o,a){var s=this;this.connId=t,this.repoInfo=e,this.applicationId=n,this.appCheckToken=r,this.authToken=i,this.transportSessionId=o,this.lastSessionId=a,this.bytesSent=0,this.bytesReceived=0,this.everConnected_=!1,this.log_=eN(t),this.stats_=e6(e),this.urlFn=function(t){return s.appCheckToken&&(t.ac=s.appCheckToken),e1(e,eZ,t)}}return(/**
     * @param onMessage - Callback when messages arrive
     * @param onDisconnect - Callback with connection lost.
     */t.prototype.open=function(t,e){var n=this;this.curSegmentNum=0,this.onDisconnect_=e,this.myPacketOrderer=new e5(t),this.isClosed_=!1,this.connectTimeoutTimer_=setTimeout(function(){n.log_("Timed out trying to connect."),// Make sure we clear the host cache
n.onClosed_(),n.connectTimeoutTimer_=null;// eslint-disable-next-line @typescript-eslint/no-explicit-any
},Math.floor(3e4)),// Ensure we delay the creation of the iframe until the DOM is loaded.
eO(function(){if(!n.isClosed_){//Set up a callback that gets triggered once a connection is set up.
n.scriptTagHolder=new e9(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=G(t,5),i=r[0],o=r[1],a=r[2];if(r[3],r[4],n.incrementIncomingBytes_(t),n.scriptTagHolder){if(n.connectTimeoutTimer_&&(clearTimeout(n.connectTimeoutTimer_),n.connectTimeoutTimer_=null),n.everConnected_=!0,i===e8)n.id=o,n.password=a;else if("close"===i)// Don't clear the host cache. We got a response from the server, so we know it's reachable
o?(// We aren't expecting any more data (other than what the server's already in the process of sending us
// through our already open polls), so don't send any more.
n.scriptTagHolder.sendNewPolls=!1,// arg1 in this case is the last response number sent by the server. We should try to receive
// all of the responses up to this one before closing
n.myPacketOrderer.closeAfter(o,function(){n.onClosed_()})):n.onClosed_();else throw Error("Unrecognized command received: "+i)}// we closed the connection.
},function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var r=G(t,2),i=r[0],o=r[1];n.incrementIncomingBytes_(t),n.myPacketOrderer.handleResponse(i,o)},function(){n.onClosed_()},n.urlFn);//Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results
//from cache.
var t={};t[e8]="t",t.ser=Math.floor(1e8*Math.random()),n.scriptTagHolder.uniqueCallbackIdentifier&&(t.cb=n.scriptTagHolder.uniqueCallbackIdentifier),t.v="5",n.transportSessionId&&(t.s=n.transportSessionId),n.lastSessionId&&(t.ls=n.lastSessionId),n.applicationId&&(t.p=n.applicationId),n.appCheckToken&&(t.ac=n.appCheckToken),"undefined"!=typeof location&&location.hostname&&eX.test(location.hostname)&&(t.r="f");var e=n.urlFn(t);n.log_("Connecting via long-poll to "+e),n.scriptTagHolder.addTag(e,function(){/* do nothing */})}})},/**
     * Call this when a handshake has completed successfully and we want to consider the connection established
     */t.prototype.start=function(){this.scriptTagHolder.startLongPoll(this.id,this.password),this.addDisconnectPingFrame(this.id,this.password)},/**
     * Forces long polling to be considered as a potential transport
     */t.forceAllow=function(){t.forceAllow_=!0},/**
     * Forces longpolling to not be considered as a potential transport
     */t.forceDisallow=function(){t.forceDisallow_=!0},// Static method, use string literal so it can be accessed in a generic way
t.isAvailable=function(){return!tf()&&(!!t.forceAllow_||!t.forceDisallow_&&"undefined"!=typeof document&&null!=document.createElement&&!("object"==typeof window&&window.chrome&&window.chrome.extension&&!/^chrome/.test(window.location.href))&&!("object"==typeof Windows&&"object"==typeof Windows.UI))},/**
     * No-op for polling
     */t.prototype.markConnectionHealthy=function(){},/**
     * Stops polling and cleans up the iframe
     */t.prototype.shutdown_=function(){this.isClosed_=!0,this.scriptTagHolder&&(this.scriptTagHolder.close(),this.scriptTagHolder=null),this.myDisconnFrame&&(document.body.removeChild(this.myDisconnFrame),this.myDisconnFrame=null),this.connectTimeoutTimer_&&(clearTimeout(this.connectTimeoutTimer_),this.connectTimeoutTimer_=null)},/**
     * Triggered when this transport is closed
     */t.prototype.onClosed_=function(){!this.isClosed_&&(this.log_("Longpoll is closing itself"),this.shutdown_(),this.onDisconnect_&&(this.onDisconnect_(this.everConnected_),this.onDisconnect_=null))},/**
     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server
     * that we've left.
     */t.prototype.close=function(){this.isClosed_||(this.log_("Longpoll is being closed."),this.shutdown_())},/**
     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then
     * broken into chunks (since URLs have a small maximum length).
     * @param data - The JSON data to transmit.
     */t.prototype.send=function(t){var e=tb(t);this.bytesSent+=e.length,this.stats_.incrementCounter("bytes_sent",e.length);//Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number
//of segments so that we can reassemble the packet on the server.
for(var n=eV(te(e),1840),r=0;r<n.length;r++)this.scriptTagHolder.enqueueSegment(this.curSegmentNum,n.length,n[r]),this.curSegmentNum++},/**
     * This is how we notify the server that we're leaving.
     * We aren't able to send requests with DHTML on a window close event, but we can
     * trigger XHR requests in some browsers (everything but Opera basically).
     */t.prototype.addDisconnectPingFrame=function(t,e){if(!tf()){this.myDisconnFrame=document.createElement("iframe");var n={};n.dframe="t",n.id=t,n.pw=e,this.myDisconnFrame.src=this.urlFn(n),this.myDisconnFrame.style.display="none",document.body.appendChild(this.myDisconnFrame)}},/**
     * Used to track the bytes received by this client
     */t.prototype.incrementIncomingBytes_=function(t){// TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.
var e=tb(t).length;this.bytesReceived+=e,this.stats_.incrementCounter("bytes_received",e)},t)}(),e9=/** @class */function(){/**
     * @param commandCB - The callback to be called when control commands are recevied from the server.
     * @param onMessageCB - The callback to be triggered when responses arrive from the server.
     * @param onDisconnect - The callback to be triggered when this tag holder is closed
     * @param urlFn - A function that provides the URL of the endpoint to send data to.
     */function t(e,n,r,i){if(this.onDisconnect=r,this.urlFn=i,//We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause
//problems in some browsers.
this.outstandingRequests=new Set,//A queue of the pending segments waiting for transmission to the server.
this.pendingSegs=[],//A serial number. We use this for two things:
// 1) A way to ensure the browser doesn't cache responses to polls
// 2) A way to make the server aware when long-polls arrive in a different order than we started them. The
//    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute
//    JSONP code in the order it was added to the iframe.
this.currentSerial=Math.floor(1e8*Math.random()),// This gets set to false when we're "closing down" the connection (e.g. we're switching transports but there's still
// incoming data from the server that we're waiting for).
this.sendNewPolls=!0,tf())this.commandCB=e,this.onMessageCB=n;else{//Each script holder registers a couple of uniquely named callbacks with the window. These are called from the
//iframes where we put the long-polling script tags. We have two callbacks:
//   1) Command Callback - Triggered for control issues, like starting a connection.
//   2) Message Callback - Triggered when new data arrives.
this.uniqueCallbackIdentifier=ew(),window["pLPCommand"+this.uniqueCallbackIdentifier]=e,window["pRTLPCB"+this.uniqueCallbackIdentifier]=n,//Create an iframe for us to add script tags to.
this.myIFrame=t.createIFrame_();// Set the iframe's contents.
var o="";this.myIFrame.src&&"javascript:"===this.myIFrame.src.substr(0,11)&&(o='<script>document.domain="'+document.domain+'";</script>');var a="<html><body>"+o+"</body></html>";try{this.myIFrame.doc.open(),this.myIFrame.doc.write(a),this.myIFrame.doc.close()}catch(t){ek("frame writing exception"),t.stack&&ek(t.stack),ek(t)}}}return(/**
     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can
     * actually use.
     */t.createIFrame_=function(){var t=document.createElement("iframe");// This is necessary in order to initialize the document inside the iframe
if(t.style.display="none",document.body){document.body.appendChild(t);try{t.contentWindow.document||ek("No IE domain setting required")}catch(n){var e=document.domain;t.src="javascript:void((function(){document.open();document.domain='"+e+"';document.close();})())"}}else // never gets hit.
throw"Document body has not initialized. Wait to initialize Firebase until after the document is ready.";return t.contentDocument?t.doc=t.contentDocument:t.contentWindow?t.doc=t.contentWindow.document:t.document&&(t.doc=t.document),t},/**
     * Cancel all outstanding queries and remove the frame.
     */t.prototype.close=function(){var t=this;//Mark this iframe as dead, so no new requests are sent.
this.alive=!1,this.myIFrame&&(//We have to actually remove all of the html inside this iframe before removing it from the
//window, or IE will continue loading and executing the script tags we've already added, which
//can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.
this.myIFrame.doc.body.innerHTML="",setTimeout(function(){null!==t.myIFrame&&(document.body.removeChild(t.myIFrame),t.myIFrame=null)},Math.floor(0)));// Protect from being called recursively.
var e=this.onDisconnect;e&&(this.onDisconnect=null,e())},/**
     * Actually start the long-polling session by adding the first script tag(s) to the iframe.
     * @param id - The ID of this connection
     * @param pw - The password for this connection
     */t.prototype.startLongPoll=function(t,e){//send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.
for(this.myID=t,this.myPW=e,this.alive=!0;this.newRequest_(););},/**
     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't
     * too many outstanding requests and we are still alive.
     *
     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if
     * needed.
     */t.prototype.newRequest_=function(){// We keep one outstanding request open all the time to receive data, but if we need to send data
// (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically
// close the old request.
if(!this.alive||!this.sendNewPolls||!(this.outstandingRequests.size<(this.pendingSegs.length>0?2:1)))return!1;//construct our url
this.currentSerial++;var t={};t.id=this.myID,t.pw=this.myPW,t.ser=this.currentSerial;for(var e=this.urlFn(t),n="",r=0;this.pendingSegs.length>0;)if(this.pendingSegs[0].d.length+30+n.length<=1870){//great, the segment will fit. Lets append it.
var i=this.pendingSegs.shift();n=n+"&seg"+r+"="+i.seg+"&ts"+r+"="+i.ts+"&d"+r+"="+i.d,r++}else break;return e+=n,this.addLongPollTag_(e,this.currentSerial),!0},/**
     * Queue a packet for transmission to the server.
     * @param segnum - A sequential id for this packet segment used for reassembly
     * @param totalsegs - The total number of segments in this packet
     * @param data - The data for this segment.
     */t.prototype.enqueueSegment=function(t,e,n){//add this to the queue of segments to send.
this.pendingSegs.push({seg:t,ts:e,d:n}),this.alive&&this.newRequest_()},/**
     * Add a script tag for a regular long-poll request.
     * @param url - The URL of the script tag.
     * @param serial - The serial number of the request.
     */t.prototype.addLongPollTag_=function(t,e){var n=this;//remember that we sent this request.
this.outstandingRequests.add(e);var r=function(){n.outstandingRequests.delete(e),n.newRequest_()},i=setTimeout(r,Math.floor(25e3));this.addTag(t,function(){// Request completed.  Cancel the keepalive.
clearTimeout(i),// Trigger a new request so we can continue receiving data.
r()})},/**
     * Add an arbitrary script tag to the iframe.
     * @param url - The URL for the script tag source.
     * @param loadCB - A callback to be triggered once the script has loaded.
     */t.prototype.addTag=function(t,e){var n=this;tf()?this.doNodeLongPoll(t,e):setTimeout(function(){try{// if we're already closed, don't add this poll
if(!n.sendNewPolls)return;var r=n.myIFrame.doc.createElement("script");r.type="text/javascript",r.async=!0,r.src=t,// eslint-disable-next-line @typescript-eslint/no-explicit-any
r.onload=r.onreadystatechange=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any
var t=r.readyState;t&&"loaded"!==t&&"complete"!==t||(// eslint-disable-next-line @typescript-eslint/no-explicit-any
r.onload=r.onreadystatechange=null,r.parentNode&&r.parentNode.removeChild(r),e())},r.onerror=function(){ek("Long-poll script failed to load: "+t),n.sendNewPolls=!1,n.close()},n.myIFrame.doc.body.appendChild(r)}catch(t){// TODO: we should make this error visible somehow
}},Math.floor(1))},t)}(),nt=null;"undefined"!=typeof MozWebSocket?nt=MozWebSocket:"undefined"!=typeof WebSocket&&(nt=WebSocket);/**
 * Create a new websocket connection with the given callbacks.
 */var ne=/** @class */function(){/**
     * @param connId identifier for this transport
     * @param repoInfo The info for the websocket endpoint.
     * @param applicationId The Firebase App ID for this project.
     * @param appCheckToken The App Check Token for this client.
     * @param authToken The Auth Token for this client.
     * @param transportSessionId Optional transportSessionId if this is connecting
     * to an existing transport session
     * @param lastSessionId Optional lastSessionId if there was a previous
     * connection
     */function t(e,n,r,i,o,a,s){this.connId=e,this.applicationId=r,this.appCheckToken=i,this.authToken=o,this.keepaliveTimer=null,this.frames=null,this.totalFrames=0,this.bytesSent=0,this.bytesReceived=0,this.log_=eN(this.connId),this.stats_=e6(n),this.connURL=t.connectionURL_(n,a,s,i),this.nodeAdmin=n.nodeAdmin}return(/**
     * @param repoInfo - The info for the websocket endpoint.
     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport
     *                                         session
     * @param lastSessionId - Optional lastSessionId if there was a previous connection
     * @returns connection url
     */t.connectionURL_=function(t,e,n,r){var i={};return i.v="5",!tf()&&"undefined"!=typeof location&&location.hostname&&eX.test(location.hostname)&&(i.r="f"),e&&(i.s=e),n&&(i.ls=n),r&&(i.ac=r),e1(t,eJ,i)},/**
     * @param onMessage - Callback when messages arrive
     * @param onDisconnect - Callback with connection lost.
     */t.prototype.open=function(t,e){var n=this;this.onDisconnect=e,this.onMessage=t,this.log_("Websocket connecting to "+this.connURL),this.everConnected_=!1,// Assume failure until proven otherwise.
ey.set("previous_websocket_failure",!0);try{if(tf()){var r=this.nodeAdmin?"AdminNode":"Node",i={headers:{"User-Agent":"Firebase/5/"+ed+"/"+en.platform+"/"+r,"X-Firebase-GMPID":this.applicationId||""}};this.authToken&&(i.headers.Authorization="Bearer "+this.authToken),this.appCheckToken&&(i.headers["X-Firebase-AppCheck"]=this.appCheckToken);// Plumb appropriate http_proxy environment variable into faye-websocket if it exists.
var o={},a=0===this.connURL.indexOf("wss://")?o.HTTPS_PROXY||o.https_proxy:o.HTTP_PROXY||o.http_proxy;a&&(i.proxy={origin:a}),this.mySock=new nt(this.connURL,[],i)}else{var i={headers:{"X-Firebase-GMPID":this.applicationId||"","X-Firebase-AppCheck":this.appCheckToken||""}};this.mySock=new nt(this.connURL,[],i)}}catch(t){this.log_("Error instantiating WebSocket.");var s=t.message||t.data;s&&this.log_(s),this.onClosed_();return}this.mySock.onopen=function(){n.log_("Websocket connected."),n.everConnected_=!0},this.mySock.onclose=function(){n.log_("Websocket connection was disconnected."),n.mySock=null,n.onClosed_()},this.mySock.onmessage=function(t){n.handleIncomingFrame(t)},this.mySock.onerror=function(t){n.log_("WebSocket error.  Closing connection.");// eslint-disable-next-line @typescript-eslint/no-explicit-any
var e=t.message||t.data;e&&n.log_(e),n.onClosed_()}},/**
     * No-op for websockets, we don't need to do anything once the connection is confirmed as open
     */t.prototype.start=function(){},t.forceDisallow=function(){t.forceDisallow_=!0},t.isAvailable=function(){var e=!1;if("undefined"!=typeof navigator&&navigator.userAgent){var n=navigator.userAgent.match(/Android ([0-9]{0,}\.[0-9]{0,})/);n&&n.length>1&&4.4>parseFloat(n[1])&&(e=!0)}return!e&&null!==nt&&!t.forceDisallow_},/**
     * Returns true if we previously failed to connect with this transport.
     */t.previouslyFailed=function(){// If our persistent storage is actually only in-memory storage,
// we default to assuming that it previously failed to be safe.
return ey.isInMemoryStorage||!0===ey.get("previous_websocket_failure")},t.prototype.markConnectionHealthy=function(){ey.remove("previous_websocket_failure")},t.prototype.appendFrame_=function(t){if(this.frames.push(t),this.frames.length===this.totalFrames){var e=this.frames.join("");this.frames=null;var n=t_(e);//handle the message
this.onMessage(n)}},/**
     * @param frameCount - The number of frames we are expecting from the server
     */t.prototype.handleNewFrameCount_=function(t){this.totalFrames=t,this.frames=[]},/**
     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1
     * @returns Any remaining data to be process, or null if there is none
     */t.prototype.extractFrameCount_=function(t){// TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced
// currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508
if(Y(null===this.frames,"We already have a frame buffer"),t.length<=6){var e=Number(t);if(!isNaN(e))return this.handleNewFrameCount_(e),null}return this.handleNewFrameCount_(1),t},/**
     * Process a websocket frame that has arrived from the server.
     * @param mess - The frame data
     */t.prototype.handleIncomingFrame=function(t){if(null!==this.mySock){var e=t.data;if(this.bytesReceived+=e.length,this.stats_.incrementCounter("bytes_received",e.length),this.resetKeepAlive(),null!==this.frames)this.appendFrame_(e);else{// try to parse out a frame count, otherwise, assume 1 and process it
var n=this.extractFrameCount_(e);null!==n&&this.appendFrame_(n)}}// Chrome apparently delivers incoming packets even after we .close() the connection sometimes.
},/**
     * Send a message to the server
     * @param data - The JSON object to transmit
     */t.prototype.send=function(t){this.resetKeepAlive();var e=tb(t);this.bytesSent+=e.length,this.stats_.incrementCounter("bytes_sent",e.length);//We can only fit a certain amount in each websocket frame, so we need to split this request
//up into multiple pieces if it doesn't fit in one request.
var n=eV(e,16384);n.length>1&&this.sendString_(String(n.length));//Send the actual data in segments.
for(var r=0;r<n.length;r++)this.sendString_(n[r])},t.prototype.shutdown_=function(){this.isClosed_=!0,this.keepaliveTimer&&(clearInterval(this.keepaliveTimer),this.keepaliveTimer=null),this.mySock&&(this.mySock.close(),this.mySock=null)},t.prototype.onClosed_=function(){!this.isClosed_&&(this.log_("WebSocket is closing itself"),this.shutdown_(),this.onDisconnect&&(this.onDisconnect(this.everConnected_),this.onDisconnect=null))},/**
     * External-facing close handler.
     * Close the websocket and kill the connection.
     */t.prototype.close=function(){this.isClosed_||(this.log_("WebSocket is being closed"),this.shutdown_())},/**
     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after
     * the last activity.
     */t.prototype.resetKeepAlive=function(){var t=this;clearInterval(this.keepaliveTimer),this.keepaliveTimer=setInterval(function(){t.mySock&&t.sendString_("0"),t.resetKeepAlive();// eslint-disable-next-line @typescript-eslint/no-explicit-any
},Math.floor(45e3))},/**
     * Send a string over the websocket.
     *
     * @param str - String to send.
     */t.prototype.sendString_=function(t){// Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()
// calls for some unknown reason.  We treat these as an error and disconnect.
// See https://app.asana.com/0/58926111402292/68021340250410
try{this.mySock.send(t)}catch(t){this.log_("Exception thrown from WebSocket.send():",t.message||t.data,"Closing connection."),setTimeout(this.onClosed_.bind(this),0)}},/**
     * Number of response before we consider the connection "healthy."
     */t.responsesRequiredToBeHealthy=2,/**
     * Time to wait for the connection te become healthy before giving up.
     */t.healthyTimeout=3e4,t)}(),nn=/** @class */function(){/**
     * @param repoInfo - Metadata around the namespace we're connecting to
     */function t(t){this.initTransports_(t)}return Object.defineProperty(t,"ALL_TRANSPORTS",{get:function(){return[e7,ne]},enumerable:!1,configurable:!0}),t.prototype.initTransports_=function(e){var n,r,i=ne&&ne.isAvailable(),o=i&&!ne.previouslyFailed();if(e.webSocketOnly&&(i||ex("wss:// URL used, but browser isn't known to support websockets.  Trying anyway."),o=!0),o)this.transports_=[ne];else{var a=this.transports_=[];try{for(var s=z(t.ALL_TRANSPORTS),u=s.next();!u.done;u=s.next()){var c=u.value;c&&c.isAvailable()&&a.push(c)}}catch(t){n={error:t}}finally{try{u&&!u.done&&(r=s.return)&&r.call(s)}finally{if(n)throw n.error}}}},/**
     * @returns The constructor for the initial transport to use
     */t.prototype.initialTransport=function(){if(this.transports_.length>0)return this.transports_[0];throw Error("No transports available")},/**
     * @returns The constructor for the next transport, or null
     */t.prototype.upgradeTransport=function(){return this.transports_.length>1?this.transports_[1]:null},t}(),nr=/** @class */function(){/**
     * @param id - an id for this connection
     * @param repoInfo_ - the info for the endpoint to connect to
     * @param applicationId_ - the Firebase App ID for this project
     * @param appCheckToken_ - The App Check Token for this device.
     * @param authToken_ - The auth token for this session.
     * @param onMessage_ - the callback to be triggered when a server-push message arrives
     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.
     * @param onDisconnect_ - the callback to be triggered when a connection was lost
     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.
     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server
     */function t(t,e,n,r,i,o,a,s,u,c){this.id=t,this.repoInfo_=e,this.applicationId_=n,this.appCheckToken_=r,this.authToken_=i,this.onMessage_=o,this.onReady_=a,this.onDisconnect_=s,this.onKill_=u,this.lastSessionId=c,this.connectionCount=0,this.pendingDataMessages=[],this.state_=0/* CONNECTING */,this.log_=eN("c:"+this.id+":"),this.transportManager_=new nn(e),this.log_("Connection created"),this.start_()}return(/**
     * Starts a connection attempt
     */t.prototype.start_=function(){var t=this,e=this.transportManager_.initialTransport();this.conn_=new e(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,null,this.lastSessionId),// For certain transports (WebSockets), we need to send and receive several messages back and forth before we
// can consider the transport healthy.
this.primaryResponsesRequired_=e.responsesRequiredToBeHealthy||0;var n=this.connReceiver_(this.conn_),r=this.disconnReceiver_(this.conn_);this.tx_=this.conn_,this.rx_=this.conn_,this.secondaryConn_=null,this.isHealthy_=!1,/*
         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.
         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.
         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should
         * still have the context of your originating frame.
         */setTimeout(function(){// this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it
t.conn_&&t.conn_.open(n,r)},Math.floor(0));var i=e.healthyTimeout||0;i>0&&(this.healthyTimeout_=eG(function(){t.healthyTimeout_=null,t.isHealthy_||(t.conn_&&t.conn_.bytesReceived>102400?(t.log_("Connection exceeded healthy timeout but has received "+t.conn_.bytesReceived+" bytes.  Marking connection healthy."),t.isHealthy_=!0,t.conn_.markConnectionHealthy()):t.conn_&&t.conn_.bytesSent>10240?t.log_("Connection exceeded healthy timeout but has sent "+t.conn_.bytesSent+" bytes.  Leaving connection alive."):(t.log_("Closing unhealthy connection after timeout."),t.close()));// eslint-disable-next-line @typescript-eslint/no-explicit-any
},Math.floor(i)))},t.prototype.nextTransportId_=function(){return"c:"+this.id+":"+this.connectionCount++},t.prototype.disconnReceiver_=function(t){var e=this;return function(n){t===e.conn_?e.onConnectionLost_(n):t===e.secondaryConn_?(e.log_("Secondary connection lost."),e.onSecondaryConnectionLost_()):e.log_("closing an old connection")}},t.prototype.connReceiver_=function(t){var e=this;return function(n){2/* DISCONNECTED */!==e.state_&&(t===e.rx_?e.onPrimaryMessageReceived_(n):t===e.secondaryConn_?e.onSecondaryMessageReceived_(n):e.log_("message on old connection"))}},/**
     * @param dataMsg - An arbitrary data message to be sent to the server
     */t.prototype.sendRequest=function(t){this.sendData_({t:"d",d:t})},t.prototype.tryCleanupConnection=function(){this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_&&(this.log_("cleaning up and promoting a connection: "+this.secondaryConn_.connId),this.conn_=this.secondaryConn_,this.secondaryConn_=null)},t.prototype.onSecondaryControl_=function(t){if("t"in t){var e=t.t;"a"===e?this.upgradeIfSecondaryHealthy_():"r"===e?(// Most likely the session wasn't valid. Abandon the switch attempt
this.log_("Got a reset on secondary, closing it"),this.secondaryConn_.close(),(this.tx_===this.secondaryConn_||this.rx_===this.secondaryConn_)&&this.close()):"o"===e&&(this.log_("got pong on secondary."),this.secondaryResponsesRequired_--,this.upgradeIfSecondaryHealthy_())}},t.prototype.onSecondaryMessageReceived_=function(t){var e=eU("t",t),n=eU("d",t);if("c"===e)this.onSecondaryControl_(n);else if("d"===e)this.pendingDataMessages.push(n);else throw Error("Unknown protocol layer: "+e)},t.prototype.upgradeIfSecondaryHealthy_=function(){this.secondaryResponsesRequired_<=0?(this.log_("Secondary connection is healthy."),this.isHealthy_=!0,this.secondaryConn_.markConnectionHealthy(),this.proceedWithUpgrade_()):(// Send a ping to make sure the connection is healthy.
this.log_("sending ping on secondary."),this.secondaryConn_.send({t:"c",d:{t:"p",d:{}}}))},t.prototype.proceedWithUpgrade_=function(){// tell this connection to consider itself open
this.secondaryConn_.start(),// send ack
this.log_("sending client ack on secondary"),this.secondaryConn_.send({t:"c",d:{t:"a",d:{}}}),// send end packet on primary transport, switch to sending on this one
// can receive on this one, buffer responses until end received on primary transport
this.log_("Ending transmission on primary"),this.conn_.send({t:"c",d:{t:"n",d:{}}}),this.tx_=this.secondaryConn_,this.tryCleanupConnection()},t.prototype.onPrimaryMessageReceived_=function(t){// Must refer to parsedData properties in quotes, so closure doesn't touch them.
var e=eU("t",t),n=eU("d",t);"c"===e?this.onControl_(n):"d"===e&&this.onDataMessage_(n)},t.prototype.onDataMessage_=function(t){this.onPrimaryResponse_(),// We don't do anything with data messages, just kick them up a level
this.onMessage_(t)},t.prototype.onPrimaryResponse_=function(){!this.isHealthy_&&(this.primaryResponsesRequired_--,this.primaryResponsesRequired_<=0&&(this.log_("Primary connection is healthy."),this.isHealthy_=!0,this.conn_.markConnectionHealthy()))},t.prototype.onControl_=function(t){var e=eU("t",t);if("d"in t){var n=t.d;if("h"===e)this.onHandshake_(n);else if("n"===e){this.log_("recvd end transmission on primary"),this.rx_=this.secondaryConn_;for(var r=0;r<this.pendingDataMessages.length;++r)this.onDataMessage_(this.pendingDataMessages[r]);this.pendingDataMessages=[],this.tryCleanupConnection()}else"s"===e?// payload in this case is the reason for the shutdown. Generally a human-readable error
this.onConnectionShutdown_(n):"r"===e?this.onReset_(n):"e"===e?eA("Server Error: "+n):"o"===e?(this.log_("got pong on primary."),this.onPrimaryResponse_(),this.sendPingOnPrimaryIfNecessary_()):eA("Unknown control packet command: "+e)}},/**
     * @param handshake - The handshake data returned from the server
     */t.prototype.onHandshake_=function(t){var e=t.ts,n=t.v,r=t.h;this.sessionId=t.s,this.repoInfo_.host=r,0/* CONNECTING */===this.state_&&(this.conn_.start(),this.onConnectionEstablished_(this.conn_,e),"5"!==n&&ex("Protocol version mismatch detected"),// TODO: do we want to upgrade? when? maybe a delay?
this.tryStartUpgrade_())},t.prototype.tryStartUpgrade_=function(){var t=this.transportManager_.upgradeTransport();t&&this.startUpgrade_(t)},t.prototype.startUpgrade_=function(t){var e=this;this.secondaryConn_=new t(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,this.sessionId),// For certain transports (WebSockets), we need to send and receive several messages back and forth before we
// can consider the transport healthy.
this.secondaryResponsesRequired_=t.responsesRequiredToBeHealthy||0;var n=this.connReceiver_(this.secondaryConn_),r=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(n,r),// If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.
eG(function(){e.secondaryConn_&&(e.log_("Timed out trying to upgrade."),e.secondaryConn_.close())},Math.floor(6e4))},t.prototype.onReset_=function(t){this.log_("Reset packet received.  New host: "+t),this.repoInfo_.host=t,1/* CONNECTED */===this.state_?this.close():(// Close whatever connections we have open and start again.
this.closeConnections_(),this.start_())},t.prototype.onConnectionEstablished_=function(t,e){var n=this;this.log_("Realtime connection established."),this.conn_=t,this.state_=1/* CONNECTED */,this.onReady_&&(this.onReady_(e,this.sessionId),this.onReady_=null),0===this.primaryResponsesRequired_?(this.log_("Primary connection is healthy."),this.isHealthy_=!0):eG(function(){n.sendPingOnPrimaryIfNecessary_()},Math.floor(5e3))},t.prototype.sendPingOnPrimaryIfNecessary_=function(){// If the connection isn't considered healthy yet, we'll send a noop ping packet request.
this.isHealthy_||1/* CONNECTED */!==this.state_||(this.log_("sending ping on primary."),this.sendData_({t:"c",d:{t:"p",d:{}}}))},t.prototype.onSecondaryConnectionLost_=function(){var t=this.secondaryConn_;this.secondaryConn_=null,(this.tx_===t||this.rx_===t)&&this.close()},/**
     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if
     * we should flush the host cache
     */t.prototype.onConnectionLost_=function(t){this.conn_=null,t||0/* CONNECTING */!==this.state_?1/* CONNECTED */===this.state_&&this.log_("Realtime connection lost."):(this.log_("Realtime connection failed."),this.repoInfo_.isCacheableHost()&&(ey.remove("host:"+this.repoInfo_.host),// reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com
this.repoInfo_.internalHost=this.repoInfo_.host)),this.close()},t.prototype.onConnectionShutdown_=function(t){this.log_("Connection shutdown command received. Shutting down..."),this.onKill_&&(this.onKill_(t),this.onKill_=null),// We intentionally don't want to fire onDisconnect (kill is a different case),
// so clear the callback.
this.onDisconnect_=null,this.close()},t.prototype.sendData_=function(t){if(1/* CONNECTED */!==this.state_)throw"Connection is not connected";this.tx_.send(t)},/**
     * Cleans up this connection, calling the appropriate callbacks
     */t.prototype.close=function(){2/* DISCONNECTED */!==this.state_&&(this.log_("Closing realtime connection."),this.state_=2/* DISCONNECTED */,this.closeConnections_(),this.onDisconnect_&&(this.onDisconnect_(),this.onDisconnect_=null))},t.prototype.closeConnections_=function(){this.log_("Shutting down all connections"),this.conn_&&(this.conn_.close(),this.conn_=null),this.secondaryConn_&&(this.secondaryConn_.close(),this.secondaryConn_=null),this.healthyTimeout_&&(clearTimeout(this.healthyTimeout_),this.healthyTimeout_=null)},t)}(),ni=/** @class */function(){function t(){}return t.prototype.put=function(t,e,n,r){},t.prototype.merge=function(t,e,n,r){},/**
     * Refreshes the auth token for the current connection.
     * @param token - The authentication token
     */t.prototype.refreshAuthToken=function(t){},/**
     * Refreshes the app check token for the current connection.
     * @param token The app check token
     */t.prototype.refreshAppCheckToken=function(t){},t.prototype.onDisconnectPut=function(t,e,n){},t.prototype.onDisconnectMerge=function(t,e,n){},t.prototype.onDisconnectCancel=function(t,e){},t.prototype.reportStats=function(t){},t}(),no=/** @class */function(){function t(t){this.allowedEvents_=t,this.listeners_={},Y(Array.isArray(t)&&t.length>0,"Requires a non-empty array")}return(/**
     * To be called by derived classes to trigger events.
     */t.prototype.trigger=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(Array.isArray(this.listeners_[t]))for(var r=Q([],G(this.listeners_[t])),i=0;i<r.length;i++)r[i].callback.apply(r[i].context,e)},t.prototype.on=function(t,e,n){this.validateEventType_(t),this.listeners_[t]=this.listeners_[t]||[],this.listeners_[t].push({callback:e,context:n});var r=this.getInitialEvent(t);r&&e.apply(n,r)},t.prototype.off=function(t,e,n){this.validateEventType_(t);for(var r=this.listeners_[t]||[],i=0;i<r.length;i++)if(r[i].callback===e&&(!n||n===r[i].context)){r.splice(i,1);return}},t.prototype.validateEventType_=function(t){Y(this.allowedEvents_.find(function(e){return e===t}),"Unknown event: "+t)},t)}(),na=/** @class */function(t){function e(){var e=t.call(this,["online"])||this;return e.online_=!0,"undefined"==typeof window||void 0===window.addEventListener||tu()||(window.addEventListener("online",function(){e.online_||(e.online_=!0,e.trigger("online",!0))},!1),window.addEventListener("offline",function(){e.online_&&(e.online_=!1,e.trigger("online",!1))},!1)),e}return B(e,t),e.getInstance=function(){return new e},e.prototype.getInitialEvent=function(t){return Y("online"===t,"Unknown event type: "+t),[this.online_]},e.prototype.currentlyOnline=function(){return this.online_},e}(no),ns=/** @class */function(){/**
     * @param pathOrString - Path string to parse, or another path, or the raw
     * tokens array
     */function t(t,e){if(void 0===e){this.pieces_=t.split("/");for(var n=0,r=0;r<this.pieces_.length;r++)this.pieces_[r].length>0&&(this.pieces_[n]=this.pieces_[r],n++);this.pieces_.length=n,this.pieceNum_=0}else this.pieces_=t,this.pieceNum_=e}return t.prototype.toString=function(){for(var t="",e=this.pieceNum_;e<this.pieces_.length;e++)""!==this.pieces_[e]&&(t+="/"+this.pieces_[e]);return t||"/"},t}();function nu(){return new ns("")}function nc(t){return t.pieceNum_>=t.pieces_.length?null:t.pieces_[t.pieceNum_]}/**
 * @returns The number of segments in this path
 */function nh(t){return t.pieces_.length-t.pieceNum_}function nl(t){var e=t.pieceNum_;return e<t.pieces_.length&&e++,new ns(t.pieces_,e)}function nf(t){return t.pieceNum_<t.pieces_.length?t.pieces_[t.pieces_.length-1]:null}/**
 * Shallow copy of the parts of the path.
 *
 */function np(t,e){return void 0===e&&(e=0),t.pieces_.slice(t.pieceNum_+e)}function nd(t){if(t.pieceNum_>=t.pieces_.length)return null;for(var e=[],n=t.pieceNum_;n<t.pieces_.length-1;n++)e.push(t.pieces_[n]);return new ns(e,0)}function nv(t,e){for(var n=[],r=t.pieceNum_;r<t.pieces_.length;r++)n.push(t.pieces_[r]);if(e instanceof ns)for(var r=e.pieceNum_;r<e.pieces_.length;r++)n.push(e.pieces_[r]);else for(var i=e.split("/"),r=0;r<i.length;r++)i[r].length>0&&n.push(i[r]);return new ns(n,0)}/**
 * @returns True if there are no segments in this path
 */function ng(t){return t.pieceNum_>=t.pieces_.length}/**
 * @returns The path from outerPath to innerPath
 */function nm(t,e){var n=nc(t),r=nc(e);if(null===n)return e;if(n===r)return nm(nl(t),nl(e));throw Error("INTERNAL ERROR: innerPath ("+e+") is not within outerPath ("+t+")")}/**
 * @returns -1, 0, 1 if left is less, equal, or greater than the right.
 */function ny(t,e){for(var n=np(t,0),r=np(e,0),i=0;i<n.length&&i<r.length;i++){var o=eF(n[i],r[i]);if(0!==o)return o}return n.length===r.length?0:n.length<r.length?-1:1}/**
 * @returns true if paths are the same.
 */function n_(t,e){if(nh(t)!==nh(e))return!1;for(var n=t.pieceNum_,r=e.pieceNum_;n<=t.pieces_.length;n++,r++)if(t.pieces_[n]!==e.pieces_[r])return!1;return!0}/**
 * @returns True if this path is a parent (or the same as) other
 */function nb(t,e){var n=t.pieceNum_,r=e.pieceNum_;if(nh(t)>nh(e))return!1;for(;n<t.pieces_.length;){if(t.pieces_[n]!==e.pieces_[r])return!1;++n,++r}return!0}/**
 * Dynamic (mutable) path used to count path lengths.
 *
 * This class is used to efficiently check paths for valid
 * length (in UTF8 bytes) and depth (used in path validation).
 *
 * Throws Error exception if path is ever invalid.
 *
 * The definition of a path always begins with '/'.
 */var nw=/**
     * @param path - Initial Path.
     * @param errorPrefix_ - Prefix for any error messages.
     */function(t,e){this.errorPrefix_=e,this.parts_=np(t,0),/** Initialize to number of '/' chars needed in path. */this.byteLength_=Math.max(1,this.parts_.length);for(var n=0;n<this.parts_.length;n++)this.byteLength_+=tj(this.parts_[n]);nI(this)};function nI(t){if(t.byteLength_>768)throw Error(t.errorPrefix_+"has a key path longer than 768 bytes ("+t.byteLength_+").");if(t.parts_.length>32)throw Error(t.errorPrefix_+"path specified exceeds the maximum depth that can be written (32) or object contains a cycle "+nT(t))}/**
 * String for use in error messages - uses '.' notation for path.
 */function nT(t){return 0===t.parts_.length?"":"in property '"+t.parts_.join(".")+"'"}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var nE=/** @class */function(t){function e(){var e,n,r=t.call(this,["visible"])||this;return"undefined"!=typeof document&&void 0!==document.addEventListener&&(void 0!==document.hidden?(// Opera 12.10 and Firefox 18 and later support
n="visibilitychange",e="hidden"):void 0!==document.mozHidden?(n="mozvisibilitychange",e="mozHidden"):void 0!==document.msHidden?(n="msvisibilitychange",e="msHidden"):void 0!==document.webkitHidden&&(n="webkitvisibilitychange",e="webkitHidden")),// Initially, we always assume we are visible. This ensures that in browsers
// without page visibility support or in cases where we are never visible
// (e.g. chrome extension), we act as if we are visible, i.e. don't delay
// reconnects
r.visible_=!0,n&&document.addEventListener(n,function(){var t=!document[e];t!==r.visible_&&(r.visible_=t,r.trigger("visible",t))},!1),r}return B(e,t),e.getInstance=function(){return new e},e.prototype.getInitialEvent=function(t){return Y("visible"===t,"Unknown event type: "+t),[this.visible_]},e}(no),nS=/** @class */function(t){/**
     * @param repoInfo_ - Data about the namespace we are connecting to
     * @param applicationId_ - The Firebase App ID for this project
     * @param onDataUpdate_ - A callback for new data from the server
     */function e(n,r,i,o,a,s,u,c){var h=t.call(this)||this;if(h.repoInfo_=n,h.applicationId_=r,h.onDataUpdate_=i,h.onConnectStatus_=o,h.onServerInfoUpdate_=a,h.authTokenProvider_=s,h.appCheckTokenProvider_=u,h.authOverride_=c,// Used for diagnostic logging.
h.id=e.nextPersistentConnectionId_++,h.log_=eN("p:"+h.id+":"),h.interruptReasons_={},h.listens=new Map,h.outstandingPuts_=[],h.outstandingGets_=[],h.outstandingPutCount_=0,h.outstandingGetCount_=0,h.onDisconnectRequestQueue_=[],h.connected_=!1,h.reconnectDelay_=1e3,h.maxReconnectDelay_=3e5,h.securityDebugCallback_=null,h.lastSessionId=null,h.establishConnectionTimer_=null,h.visible_=!1,// Before we get connected, we keep a queue of pending messages to send.
h.requestCBHash_={},h.requestNumber_=0,h.realtime_=null,h.authToken_=null,h.appCheckToken_=null,h.forceTokenRefresh_=!1,h.invalidAuthTokenCount_=0,h.invalidAppCheckTokenCount_=0,h.firstConnection_=!0,h.lastConnectionAttemptTime_=null,h.lastConnectionEstablishedTime_=null,c&&!tf())throw Error("Auth override specified in options, but not supported on non Node.js platforms");return nE.getInstance().on("visible",h.onVisible_,h),-1===n.host.indexOf("fblocal")&&na.getInstance().on("online",h.onOnline_,h),h}return B(e,t),e.prototype.sendRequest=function(t,e,n){var r=++this.requestNumber_,i={r:r,a:t,b:e};this.log_(tb(i)),Y(this.connected_,"sendRequest call when we're not connected not allowed."),this.realtime_.sendRequest(i),n&&(this.requestCBHash_[r]=n)},e.prototype.get=function(t){var e=this;this.initConnection_();var n=new to,r={p:t._path.toString(),q:t._queryObject},i={action:"g",request:r,onComplete:function(t){var i=t.d;"ok"===t.s?(e.onDataUpdate_(r.p,i,/*isMerge*/!1,/*tag*/null),n.resolve(i)):n.reject(i)}};this.outstandingGets_.push(i),this.outstandingGetCount_++;var o=this.outstandingGets_.length-1;return this.connected_||setTimeout(function(){var t=e.outstandingGets_[o];void 0!==t&&i===t&&(delete e.outstandingGets_[o],e.outstandingGetCount_--,0===e.outstandingGetCount_&&(e.outstandingGets_=[]),e.log_("get "+o+" timed out on connection"),n.reject(Error("Client is offline.")))},3e3),this.connected_&&this.sendGet_(o),n.promise},e.prototype.listen=function(t,e,n,r){this.initConnection_();var i=t._queryIdentifier,o=t._path.toString();this.log_("Listen called for "+o+" "+i),this.listens.has(o)||this.listens.set(o,new Map),Y(t._queryParams.isDefault()||!t._queryParams.loadsAllData(),"listen() called for non-default but complete query"),Y(!this.listens.get(o).has(i),"listen() called twice for same path/queryId.");var a={onComplete:r,hashFn:e,query:t,tag:n};this.listens.get(o).set(i,a),this.connected_&&this.sendListen_(a)},e.prototype.sendGet_=function(t){var e=this,n=this.outstandingGets_[t];this.sendRequest("g",n.request,function(r){delete e.outstandingGets_[t],e.outstandingGetCount_--,0===e.outstandingGetCount_&&(e.outstandingGets_=[]),n.onComplete&&n.onComplete(r)})},e.prototype.sendListen_=function(t){var n=this,r=t.query,i=r._path.toString(),o=r._queryIdentifier;this.log_("Listen on "+i+" for "+o);var a={p:i};t.tag&&(a.q=r._queryObject,a.t=t.tag),a./*hash*/h=t.hashFn(),this.sendRequest("q",a,function(a){var s=a./*data*/d,u=a./*status*/s;// print warnings in any case...
e.warnOnListenWarnings_(s,r),(n.listens.get(i)&&n.listens.get(i).get(o))===t&&(n.log_("listen response",a),"ok"!==u&&n.removeListen_(i,o),t.onComplete&&t.onComplete(u,s))})},e.warnOnListenWarnings_=function(t,e){if(t&&"object"==typeof t&&tS(t,"w")){// eslint-disable-next-line @typescript-eslint/no-explicit-any
var n=tC(t,"w");Array.isArray(n)&&~n.indexOf("no_index")&&ex('Using an unspecified index. Your data will be downloaded and filtered on the client. Consider adding ".indexOn": "'+e._queryParams.getIndex().toString()+'" at '+e._path.toString()+" to your security rules for better performance.")}},e.prototype.refreshAuthToken=function(t){this.authToken_=t,this.log_("Auth token refreshed"),this.authToken_?this.tryAuth():this.connected_&&this.sendRequest("unauth",{},function(){}),this.reduceReconnectDelayIfAdminCredential_(t)},e.prototype.reduceReconnectDelayIfAdminCredential_=function(t){(t&&40===t.length||tE(t))&&(this.log_("Admin auth credential detected.  Reducing max reconnect time."),this.maxReconnectDelay_=3e4)},e.prototype.refreshAppCheckToken=function(t){this.appCheckToken_=t,this.log_("App check token refreshed"),this.appCheckToken_?this.tryAppCheck():this.connected_&&this.sendRequest("unappeck",{},function(){})},/**
     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like
     * a auth revoked (the connection is closed).
     */e.prototype.tryAuth=function(){var t=this;if(this.connected_&&this.authToken_){var e=this.authToken_,n=tT(e)?"auth":"gauth",r={cred:e};null===this.authOverride_?r.noauth=!0:"object"==typeof this.authOverride_&&(r.authvar=this.authOverride_),this.sendRequest(n,r,function(n){var r=n./*status*/s,i=n./*data*/d||"error";t.authToken_===e&&("ok"===r?t.invalidAuthTokenCount_=0:t.onAuthRevoked_(r,i))})}},/**
     * Attempts to authenticate with the given token. If the authentication
     * attempt fails, it's triggered like the token was revoked (the connection is
     * closed).
     */e.prototype.tryAppCheck=function(){var t=this;this.connected_&&this.appCheckToken_&&this.sendRequest("appcheck",{token:this.appCheckToken_},function(e){var n=e./*status*/s,r=e./*data*/d||"error";"ok"===n?t.invalidAppCheckTokenCount_=0:t.onAppCheckRevoked_(n,r)})},/**
     * @inheritDoc
     */e.prototype.unlisten=function(t,e){var n=t._path.toString(),r=t._queryIdentifier;this.log_("Unlisten called for "+n+" "+r),Y(t._queryParams.isDefault()||!t._queryParams.loadsAllData(),"unlisten() called for non-default but complete query"),this.removeListen_(n,r)&&this.connected_&&this.sendUnlisten_(n,r,t._queryObject,e)},e.prototype.sendUnlisten_=function(t,e,n,r){this.log_("Unlisten on "+t+" for "+e);var i={p:t};r&&(i.q=n,i.t=r),this.sendRequest("n",i)},e.prototype.onDisconnectPut=function(t,e,n){this.initConnection_(),this.connected_?this.sendOnDisconnect_("o",t,e,n):this.onDisconnectRequestQueue_.push({pathString:t,action:"o",data:e,onComplete:n})},e.prototype.onDisconnectMerge=function(t,e,n){this.initConnection_(),this.connected_?this.sendOnDisconnect_("om",t,e,n):this.onDisconnectRequestQueue_.push({pathString:t,action:"om",data:e,onComplete:n})},e.prototype.onDisconnectCancel=function(t,e){this.initConnection_(),this.connected_?this.sendOnDisconnect_("oc",t,null,e):this.onDisconnectRequestQueue_.push({pathString:t,action:"oc",data:null,onComplete:e})},e.prototype.sendOnDisconnect_=function(t,e,n,r){var i={p:e,/*data*/d:n};this.log_("onDisconnect "+t,i),this.sendRequest(t,i,function(t){r&&setTimeout(function(){r(t./*status*/s,t./* data */d)},Math.floor(0))})},e.prototype.put=function(t,e,n,r){this.putInternal("p",t,e,n,r)},e.prototype.merge=function(t,e,n,r){this.putInternal("m",t,e,n,r)},e.prototype.putInternal=function(t,e,n,r,i){this.initConnection_();var o={/*path*/p:e,/*data*/d:n};void 0!==i&&(o./*hash*/h=i),// TODO: Only keep track of the most recent put for a given path?
this.outstandingPuts_.push({action:t,request:o,onComplete:r}),this.outstandingPutCount_++;var a=this.outstandingPuts_.length-1;this.connected_?this.sendPut_(a):this.log_("Buffering put: "+e)},e.prototype.sendPut_=function(t){var e=this,n=this.outstandingPuts_[t].action,r=this.outstandingPuts_[t].request,i=this.outstandingPuts_[t].onComplete;this.outstandingPuts_[t].queued=this.connected_,this.sendRequest(n,r,function(r){e.log_(n+" response",r),delete e.outstandingPuts_[t],e.outstandingPutCount_--,0===e.outstandingPutCount_&&(e.outstandingPuts_=[]),i&&i(r./*status*/s,r./* data */d)})},e.prototype.reportStats=function(t){var e=this;// If we're not connected, we just drop the stats.
if(this.connected_){var n={c:t};this.log_("reportStats",n),this.sendRequest(/*stats*/"s",n,function(t){if("ok"!==t./*status*/s){var n=t./* data */d;e.log_("reportStats","Error sending stats: "+n)}})}},e.prototype.onDataMessage_=function(t){if("r"in t){// this is a response
this.log_("from server: "+tb(t));var e=t.r,n=this.requestCBHash_[e];n&&(delete this.requestCBHash_[e],n(t./*body*/b))}else if("error"in t)throw"A server-side error has occurred: "+t.error;else"a"in t&&this.onDataPush_(t.a,t.b)},e.prototype.onDataPush_=function(t,e){this.log_("handleServerMessage",t,e),"d"===t?this.onDataUpdate_(e./*path*/p,e./*data*/d,/*isMerge*/!1,e.t):"m"===t?this.onDataUpdate_(e./*path*/p,e./*data*/d,/*isMerge=*/!0,e.t):"c"===t?this.onListenRevoked_(e./*path*/p,e./*query*/q):"ac"===t?this.onAuthRevoked_(e./*status code*/s,e./* explanation */d):"apc"===t?this.onAppCheckRevoked_(e./*status code*/s,e./* explanation */d):"sd"===t?this.onSecurityDebugPacket_(e):eA("Unrecognized action received from server: "+tb(t)+"\nAre you using the latest client?")},e.prototype.onReady_=function(t,e){this.log_("connection ready"),this.connected_=!0,this.lastConnectionEstablishedTime_=new Date().getTime(),this.handleTimestamp_(t),this.lastSessionId=e,this.firstConnection_&&this.sendConnectStats_(),this.restoreState_(),this.firstConnection_=!1,this.onConnectStatus_(!0)},e.prototype.scheduleConnect_=function(t){var e=this;Y(!this.realtime_,"Scheduling a connect when we're already connected/ing?"),this.establishConnectionTimer_&&clearTimeout(this.establishConnectionTimer_),// NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating "Security Error" in
// Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).
this.establishConnectionTimer_=setTimeout(function(){e.establishConnectionTimer_=null,e.establishConnection_();// eslint-disable-next-line @typescript-eslint/no-explicit-any
},Math.floor(t))},e.prototype.initConnection_=function(){!this.realtime_&&this.firstConnection_&&this.scheduleConnect_(0)},e.prototype.onVisible_=function(t){!t||this.visible_||this.reconnectDelay_!==this.maxReconnectDelay_||(this.log_("Window became visible.  Reducing delay."),this.reconnectDelay_=1e3,this.realtime_||this.scheduleConnect_(0)),this.visible_=t},e.prototype.onOnline_=function(t){t?(this.log_("Browser went online."),this.reconnectDelay_=1e3,this.realtime_||this.scheduleConnect_(0)):(this.log_("Browser went offline.  Killing connection."),this.realtime_&&this.realtime_.close())},e.prototype.onRealtimeDisconnect_=function(){if(this.log_("data client disconnected"),this.connected_=!1,this.realtime_=null,// Since we don't know if our sent transactions succeeded or not, we need to cancel them.
this.cancelSentTransactions_(),// Clear out the pending requests.
this.requestCBHash_={},this.shouldReconnect_()){this.visible_?this.lastConnectionEstablishedTime_&&(new Date().getTime()-this.lastConnectionEstablishedTime_>3e4&&(this.reconnectDelay_=1e3),this.lastConnectionEstablishedTime_=null):(this.log_("Window isn't visible.  Delaying reconnect."),this.reconnectDelay_=this.maxReconnectDelay_,this.lastConnectionAttemptTime_=new Date().getTime());var t=new Date().getTime()-this.lastConnectionAttemptTime_,e=Math.max(0,this.reconnectDelay_-t);e=Math.random()*e,this.log_("Trying to reconnect in "+e+"ms"),this.scheduleConnect_(e),// Adjust reconnect delay for next time.
this.reconnectDelay_=Math.min(this.maxReconnectDelay_,1.3*this.reconnectDelay_)}this.onConnectStatus_(!1)},e.prototype.establishConnection_=function(){return H(this,void 0,void 0,function(){var t,n,r,i,o,a,s,u,c,h,l,f,p,d,v=this;return W(this,function(g){switch(g.label){case 0:if(!this.shouldReconnect_())return[3/*break*/,4];this.log_("Making a connection attempt"),this.lastConnectionAttemptTime_=new Date().getTime(),this.lastConnectionEstablishedTime_=null,t=this.onDataMessage_.bind(this),n=this.onReady_.bind(this),r=this.onRealtimeDisconnect_.bind(this),i=this.id+":"+e.nextConnectionId_++,o=this.lastSessionId,a=!1,s=null,u=function(){s?s.close():(a=!0,r())},c=function(t){Y(s,"sendRequest call when we're not connected not allowed."),s.sendRequest(t)},this.realtime_={close:u,sendRequest:c},h=this.forceTokenRefresh_,this.forceTokenRefresh_=!1,g.label=1;case 1:return g.trys.push([1,3,,4]),[4/*yield*/,Promise.all([this.authTokenProvider_.getToken(h),this.appCheckTokenProvider_.getToken(h)])];case 2:return f=(l=G.apply(void 0,[g.sent(),2]))[0],p=l[1],a?ek("getToken() completed but was canceled"):(ek("getToken() completed. Creating connection."),this.authToken_=f&&f.accessToken,this.appCheckToken_=p&&p.token,s=new nr(i,this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,t,n,r,/* onKill= */function(t){ex(t+" ("+v.repoInfo_.toString()+")"),v.interrupt("server_kill")},o)),[3/*break*/,4];case 3:return d=g.sent(),this.log_("Failed to get token: "+d),a||(this.repoInfo_.nodeAdmin&&// But getToken() may also just have temporarily failed, so we still want to
// continue retrying.
ex(d),u()),[3/*break*/,4];case 4:return[2/*return*/]}})})},e.prototype.interrupt=function(t){ek("Interrupting connection for reason: "+t),this.interruptReasons_[t]=!0,this.realtime_?this.realtime_.close():(this.establishConnectionTimer_&&(clearTimeout(this.establishConnectionTimer_),this.establishConnectionTimer_=null),this.connected_&&this.onRealtimeDisconnect_())},e.prototype.resume=function(t){ek("Resuming connection for reason: "+t),delete this.interruptReasons_[t],tk(this.interruptReasons_)&&(this.reconnectDelay_=1e3,this.realtime_||this.scheduleConnect_(0))},e.prototype.handleTimestamp_=function(t){var e=t-new Date().getTime();this.onServerInfoUpdate_({serverTimeOffset:e})},e.prototype.cancelSentTransactions_=function(){for(var t=0;t<this.outstandingPuts_.length;t++){var e=this.outstandingPuts_[t];e&&/*hash*/"h"in e.request&&e.queued&&(e.onComplete&&e.onComplete("disconnect"),delete this.outstandingPuts_[t],this.outstandingPutCount_--)}// Clean up array occasionally.
0===this.outstandingPutCount_&&(this.outstandingPuts_=[])},e.prototype.onListenRevoked_=function(t,e){n=e?e.map(function(t){return eq(t)}).join("$"):"default";var n,r=this.removeListen_(t,n);r&&r.onComplete&&r.onComplete("permission_denied")},e.prototype.removeListen_=function(t,e){var n,r=new ns(t).toString();// normalize path.
if(this.listens.has(r)){var i=this.listens.get(r);n=i.get(e),i.delete(e),0===i.size&&this.listens.delete(r)}else n=void 0;return n},e.prototype.onAuthRevoked_=function(t,e){ek("Auth token revoked: "+t+"/"+e),this.authToken_=null,this.forceTokenRefresh_=!0,this.realtime_.close(),("invalid_token"===t||"permission_denied"===t)&&(// We'll wait a couple times before logging the warning / increasing the
// retry period since oauth tokens will report as "invalid" if they're
// just expired. Plus there may be transient issues that resolve themselves.
this.invalidAuthTokenCount_++,this.invalidAuthTokenCount_>=3&&(// Set a long reconnect delay because recovery is unlikely
this.reconnectDelay_=3e4,// Notify the auth token provider that the token is invalid, which will log
// a warning
this.authTokenProvider_.notifyForInvalidToken()))},e.prototype.onAppCheckRevoked_=function(t,e){ek("App check token revoked: "+t+"/"+e),this.appCheckToken_=null,this.forceTokenRefresh_=!0,("invalid_token"===t||"permission_denied"===t)&&(// We'll wait a couple times before logging the warning / increasing the
// retry period since oauth tokens will report as "invalid" if they're
// just expired. Plus there may be transient issues that resolve themselves.
this.invalidAppCheckTokenCount_++,this.invalidAppCheckTokenCount_>=3&&this.appCheckTokenProvider_.notifyForInvalidToken())},e.prototype.onSecurityDebugPacket_=function(t){this.securityDebugCallback_?this.securityDebugCallback_(t):"msg"in t&&console.log("FIREBASE: "+t.msg.replace("\n","\nFIREBASE: "))},e.prototype.restoreState_=function(){var t,e,n,r;//Re-authenticate ourselves if we have a credential stored.
this.tryAuth(),this.tryAppCheck();try{// Puts depend on having received the corresponding data update from the server before they complete, so we must
// make sure to send listens before puts.
for(var i=z(this.listens.values()),o=i.next();!o.done;o=i.next()){var a=o.value;try{for(var s=(n=void 0,z(a.values())),u=s.next();!u.done;u=s.next()){var c=u.value;this.sendListen_(c)}}catch(t){n={error:t}}finally{try{u&&!u.done&&(r=s.return)&&r.call(s)}finally{if(n)throw n.error}}}}catch(e){t={error:e}}finally{try{o&&!o.done&&(e=i.return)&&e.call(i)}finally{if(t)throw t.error}}for(var h=0;h<this.outstandingPuts_.length;h++)this.outstandingPuts_[h]&&this.sendPut_(h);for(;this.onDisconnectRequestQueue_.length;){var l=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(l.action,l.pathString,l.data,l.onComplete)}for(var h=0;h<this.outstandingGets_.length;h++)this.outstandingGets_[h]&&this.sendGet_(h)},/**
     * Sends client stats for first connection
     */e.prototype.sendConnectStats_=function(){var t={},e="js";tf()&&(e=this.repoInfo_.nodeAdmin?"admin_node":"node"),t["sdk."+e+"."+ed.replace(/\./g,"-")]=1,tu()?t["framework.cordova"]=1:tl()&&(t["framework.reactnative"]=1),this.reportStats(t)},e.prototype.shouldReconnect_=function(){var t=na.getInstance().currentlyOnline();return tk(this.interruptReasons_)&&t},e.nextPersistentConnectionId_=0,/**
     * Counter for number of connections created. Mainly used for tagging in the logs
     */e.nextConnectionId_=0,e}(ni),nC=/** @class */function(){function t(t,e){this.name=t,this.node=e}return t.Wrap=function(e,n){return new t(e,n)},t}(),nk=/** @class */function(){function t(){}return(/**
     * @returns A standalone comparison function for
     * this index
     */t.prototype.getCompare=function(){return this.compare.bind(this)},/**
     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,
     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.
     *
     *
     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode
     */t.prototype.indexedValueChanged=function(t,e){var n=new nC(eL,t),r=new nC(eL,e);return 0!==this.compare(n,r)},/**
     * @returns a node wrapper that will sort equal to or less than
     * any other node wrapper, using this index
     */t.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any
return nC.MIN},t)}(),nN=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),Object.defineProperty(e,"__EMPTY_NODE",{get:function(){return ab},set:function(t){ab=t},enumerable:!1,configurable:!0}),e.prototype.compare=function(t,e){return eF(t.name,e.name)},e.prototype.isDefinedOn=function(t){// We could probably return true here (since every node has a key), but it's never called
// so just leaving unimplemented for now.
throw X("KeyIndex.isDefinedOn not expected to be called.")},e.prototype.indexedValueChanged=function(t,e){return!1;// The key for a node never changes.
},e.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any
return nC.MIN},e.prototype.maxPost=function(){// TODO: This should really be created once and cached in a static property, but
// NamedNode isn't defined yet, so I can't use it in a static.  Bleh.
return new nC(eM,ab)},e.prototype.makePost=function(t,e){// We just use empty node, but it'll never be compared, since our comparator only looks at name.
return Y("string"==typeof t,"KeyIndex indexValue must always be a string."),new nC(t,ab)},/**
     * @returns String representation for inclusion in a query spec
     */e.prototype.toString=function(){return".key"},e}(nk),nA=new nN,nR=/** @class */function(){/**
     * @param node - Node to iterate.
     * @param isReverse_ - Whether or not to iterate in reverse
     */function t(t,e,n,r,i){void 0===i&&(i=null),this.isReverse_=r,this.resultGenerator_=i,this.nodeStack_=[];for(var o=1;!t.isEmpty();)if(o=e?n(t.key,e):1,r&&(o*=-1),o<0)// This node is less than our start key. ignore it
t=this.isReverse_?t.left:t.right;else if(0===o){// This node is exactly equal to our start key. Push it on the stack, but stop iterating;
this.nodeStack_.push(t);break}else // This node is greater than our start key, add it to the stack and move to the next one
this.nodeStack_.push(t),t=this.isReverse_?t.right:t.left}return t.prototype.getNext=function(){if(0===this.nodeStack_.length)return null;var t,e=this.nodeStack_.pop();if(t=this.resultGenerator_?this.resultGenerator_(e.key,e.value):{key:e.key,value:e.value},this.isReverse_)for(e=e.left;!e.isEmpty();)this.nodeStack_.push(e),e=e.right;else for(e=e.right;!e.isEmpty();)this.nodeStack_.push(e),e=e.left;return t},t.prototype.hasNext=function(){return this.nodeStack_.length>0},t.prototype.peek=function(){if(0===this.nodeStack_.length)return null;var t=this.nodeStack_[this.nodeStack_.length-1];return this.resultGenerator_?this.resultGenerator_(t.key,t.value):{key:t.key,value:t.value}},t}(),nx=/** @class */function(){/**
     * @param key - Key associated with this node.
     * @param value - Value associated with this node.
     * @param color - Whether this node is red.
     * @param left - Left child.
     * @param right - Right child.
     */function t(e,n,r,i,o){this.key=e,this.value=n,this.color=null!=r?r:t.RED,this.left=null!=i?i:nD.EMPTY_NODE,this.right=null!=o?o:nD.EMPTY_NODE}return(/**
     * Returns a copy of the current node, optionally replacing pieces of it.
     *
     * @param key - New key for the node, or null.
     * @param value - New value for the node, or null.
     * @param color - New color for the node, or null.
     * @param left - New left child for the node, or null.
     * @param right - New right child for the node, or null.
     * @returns The node copy.
     */t.prototype.copy=function(e,n,r,i,o){return new t(null!=e?e:this.key,null!=n?n:this.value,null!=r?r:this.color,null!=i?i:this.left,null!=o?o:this.right)},/**
     * @returns The total number of nodes in the tree.
     */t.prototype.count=function(){return this.left.count()+1+this.right.count()},/**
     * @returns True if the tree is empty.
     */t.prototype.isEmpty=function(){return!1},/**
     * Traverses the tree in key order and calls the specified action function
     * for each node.
     *
     * @param action - Callback function to be called for each
     *   node.  If it returns true, traversal is aborted.
     * @returns The first truthy value returned by action, or the last falsey
     *   value returned by action
     */t.prototype.inorderTraversal=function(t){return this.left.inorderTraversal(t)||!!t(this.key,this.value)||this.right.inorderTraversal(t)},/**
     * Traverses the tree in reverse key order and calls the specified action function
     * for each node.
     *
     * @param action - Callback function to be called for each
     * node.  If it returns true, traversal is aborted.
     * @returns True if traversal was aborted.
     */t.prototype.reverseTraversal=function(t){return this.right.reverseTraversal(t)||t(this.key,this.value)||this.left.reverseTraversal(t)},/**
     * @returns The minimum node in the tree.
     */t.prototype.min_=function(){return this.left.isEmpty()?this:this.left.min_()},/**
     * @returns The maximum key in the tree.
     */t.prototype.minKey=function(){return this.min_().key},/**
     * @returns The maximum key in the tree.
     */t.prototype.maxKey=function(){return this.right.isEmpty()?this.key:this.right.maxKey()},/**
     * @param key - Key to insert.
     * @param value - Value to insert.
     * @param comparator - Comparator.
     * @returns New tree, with the key/value added.
     */t.prototype.insert=function(t,e,n){var r=this,i=n(t,r.key);return(r=i<0?r.copy(null,null,null,r.left.insert(t,e,n),null):0===i?r.copy(null,e,null,null,null):r.copy(null,null,null,null,r.right.insert(t,e,n))).fixUp_()},/**
     * @returns New tree, with the minimum key removed.
     */t.prototype.removeMin_=function(){if(this.left.isEmpty())return nD.EMPTY_NODE;var t=this;return t.left.isRed_()||t.left.left.isRed_()||(t=t.moveRedLeft_()),(t=t.copy(null,null,null,t.left.removeMin_(),null)).fixUp_()},/**
     * @param key - The key of the item to remove.
     * @param comparator - Comparator.
     * @returns New tree, with the specified item removed.
     */t.prototype.remove=function(t,e){var n,r;if(n=this,0>e(t,n.key))n.left.isEmpty()||n.left.isRed_()||n.left.left.isRed_()||(n=n.moveRedLeft_()),n=n.copy(null,null,null,n.left.remove(t,e),null);else{if(n.left.isRed_()&&(n=n.rotateRight_()),n.right.isEmpty()||n.right.isRed_()||n.right.left.isRed_()||(n=n.moveRedRight_()),0===e(t,n.key)){if(n.right.isEmpty())return nD.EMPTY_NODE;r=n.right.min_(),n=n.copy(r.key,r.value,null,null,n.right.removeMin_())}n=n.copy(null,null,null,null,n.right.remove(t,e))}return n.fixUp_()},/**
     * @returns Whether this is a RED node.
     */t.prototype.isRed_=function(){return this.color},/**
     * @returns New tree after performing any needed rotations.
     */t.prototype.fixUp_=function(){var t=this;return t.right.isRed_()&&!t.left.isRed_()&&(t=t.rotateLeft_()),t.left.isRed_()&&t.left.left.isRed_()&&(t=t.rotateRight_()),t.left.isRed_()&&t.right.isRed_()&&(t=t.colorFlip_()),t},/**
     * @returns New tree, after moveRedLeft.
     */t.prototype.moveRedLeft_=function(){var t=this.colorFlip_();return t.right.left.isRed_()&&(t=(t=(t=t.copy(null,null,null,null,t.right.rotateRight_())).rotateLeft_()).colorFlip_()),t},/**
     * @returns New tree, after moveRedRight.
     */t.prototype.moveRedRight_=function(){var t=this.colorFlip_();return t.left.left.isRed_()&&(t=(t=t.rotateRight_()).colorFlip_()),t},/**
     * @returns New tree, after rotateLeft.
     */t.prototype.rotateLeft_=function(){var e=this.copy(null,null,t.RED,null,this.right.left);return this.right.copy(null,null,this.color,e,null)},/**
     * @returns New tree, after rotateRight.
     */t.prototype.rotateRight_=function(){var e=this.copy(null,null,t.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,e)},/**
     * @returns Newt ree, after colorFlip.
     */t.prototype.colorFlip_=function(){var t=this.left.copy(null,null,!this.left.color,null,null),e=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,t,e)},/**
     * For testing.
     *
     * @returns True if all is well.
     */t.prototype.checkMaxDepth_=function(){return Math.pow(2,this.check_())<=this.count()+1},t.prototype.check_=function(){if(this.isRed_()&&this.left.isRed_())throw Error("Red node has red child("+this.key+","+this.value+")");if(this.right.isRed_())throw Error("Right child of ("+this.key+","+this.value+") is red");var t=this.left.check_();if(t===this.right.check_())return t+(this.isRed_()?0:1);throw Error("Black depths differ")},t.RED=!0,t.BLACK=!1,t)}(),nP=/** @class */function(){function t(){}return(/**
     * Returns a copy of the current node.
     *
     * @returns The node copy.
     */t.prototype.copy=function(t,e,n,r,i){return this},/**
     * Returns a copy of the tree, with the specified key/value added.
     *
     * @param key - Key to be added.
     * @param value - Value to be added.
     * @param comparator - Comparator.
     * @returns New tree, with item added.
     */t.prototype.insert=function(t,e,n){return new nx(t,e,null)},/**
     * Returns a copy of the tree, with the specified key removed.
     *
     * @param key - The key to remove.
     * @param comparator - Comparator.
     * @returns New tree, with item removed.
     */t.prototype.remove=function(t,e){return this},/**
     * @returns The total number of nodes in the tree.
     */t.prototype.count=function(){return 0},/**
     * @returns True if the tree is empty.
     */t.prototype.isEmpty=function(){return!0},/**
     * Traverses the tree in key order and calls the specified action function
     * for each node.
     *
     * @param action - Callback function to be called for each
     * node.  If it returns true, traversal is aborted.
     * @returns True if traversal was aborted.
     */t.prototype.inorderTraversal=function(t){return!1},/**
     * Traverses the tree in reverse key order and calls the specified action function
     * for each node.
     *
     * @param action - Callback function to be called for each
     * node.  If it returns true, traversal is aborted.
     * @returns True if traversal was aborted.
     */t.prototype.reverseTraversal=function(t){return!1},t.prototype.minKey=function(){return null},t.prototype.maxKey=function(){return null},t.prototype.check_=function(){return 0},/**
     * @returns Whether this node is red.
     */t.prototype.isRed_=function(){return!1},t)}(),nD=/** @class */function(){/**
     * @param comparator_ - Key comparator.
     * @param root_ - Optional root node for the map.
     */function t(e,n){void 0===n&&(n=t.EMPTY_NODE),this.comparator_=e,this.root_=n}return(/**
     * Returns a copy of the map, with the specified key/value added or replaced.
     * (TODO: We should perhaps rename this method to 'put')
     *
     * @param key - Key to be added.
     * @param value - Value to be added.
     * @returns New map, with item added.
     */t.prototype.insert=function(e,n){return new t(this.comparator_,this.root_.insert(e,n,this.comparator_).copy(null,null,nx.BLACK,null,null))},/**
     * Returns a copy of the map, with the specified key removed.
     *
     * @param key - The key to remove.
     * @returns New map, with item removed.
     */t.prototype.remove=function(e){return new t(this.comparator_,this.root_.remove(e,this.comparator_).copy(null,null,nx.BLACK,null,null))},/**
     * Returns the value of the node with the given key, or null.
     *
     * @param key - The key to look up.
     * @returns The value of the node with the given key, or null if the
     * key doesn't exist.
     */t.prototype.get=function(t){for(var e,n=this.root_;!n.isEmpty();){if(0===(e=this.comparator_(t,n.key)))return n.value;e<0?n=n.left:e>0&&(n=n.right)}return null},/**
     * Returns the key of the item *before* the specified key, or null if key is the first item.
     * @param key - The key to find the predecessor of
     * @returns The predecessor key.
     */t.prototype.getPredecessorKey=function(t){for(var e,n=this.root_,r=null;!n.isEmpty();){if(0===(e=this.comparator_(t,n.key))){if(n.left.isEmpty()){if(r)return r.key;// first item.
return null}for(n=n.left;!n.right.isEmpty();)n=n.right;return n.key}e<0?n=n.left:e>0&&(r=n,n=n.right)}throw Error("Attempted to find predecessor key for a nonexistent key.  What gives?")},/**
     * @returns True if the map is empty.
     */t.prototype.isEmpty=function(){return this.root_.isEmpty()},/**
     * @returns The total number of nodes in the map.
     */t.prototype.count=function(){return this.root_.count()},/**
     * @returns The minimum key in the map.
     */t.prototype.minKey=function(){return this.root_.minKey()},/**
     * @returns The maximum key in the map.
     */t.prototype.maxKey=function(){return this.root_.maxKey()},/**
     * Traverses the map in key order and calls the specified action function
     * for each key/value pair.
     *
     * @param action - Callback function to be called
     * for each key/value pair.  If action returns true, traversal is aborted.
     * @returns The first truthy value returned by action, or the last falsey
     *   value returned by action
     */t.prototype.inorderTraversal=function(t){return this.root_.inorderTraversal(t)},/**
     * Traverses the map in reverse key order and calls the specified action function
     * for each key/value pair.
     *
     * @param action - Callback function to be called
     * for each key/value pair.  If action returns true, traversal is aborted.
     * @returns True if the traversal was aborted.
     */t.prototype.reverseTraversal=function(t){return this.root_.reverseTraversal(t)},/**
     * Returns an iterator over the SortedMap.
     * @returns The iterator.
     */t.prototype.getIterator=function(t){return new nR(this.root_,null,this.comparator_,!1,t)},t.prototype.getIteratorFrom=function(t,e){return new nR(this.root_,t,this.comparator_,!1,e)},t.prototype.getReverseIteratorFrom=function(t,e){return new nR(this.root_,t,this.comparator_,!0,e)},t.prototype.getReverseIterator=function(t){return new nR(this.root_,null,this.comparator_,!0,t)},/**
     * Always use the same empty node, to reduce memory.
     */t.EMPTY_NODE=new nP,t)}();/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function nO(t,e){return eF(t.name,e.name)}function nL(t,e){return eF(t,e)}var nM=function(t){return"number"==typeof t?"number:"+eK(t):"string:"+t},nF=function(t){if(t.isLeafNode()){var e=t.val();Y("string"==typeof e||"number"==typeof e||"object"==typeof e&&tS(e,".sv"),"Priority must be a string or number.")}else Y(t===aw||t.isEmpty(),"priority of unexpected type.");Y(t===aw||t.getPriority().isEmpty(),"Priority nodes can't have a priority of their own.")},nj=/** @class */function(){/**
     * @param value_ - The value to store in this leaf node. The object type is
     * possible in the event of a deferred value
     * @param priorityNode_ - The priority of this node.
     */function t(e,n){void 0===n&&(n=t.__childrenNodeConstructor.EMPTY_NODE),this.value_=e,this.priorityNode_=n,this.lazyHash_=null,Y(void 0!==this.value_&&null!==this.value_,"LeafNode shouldn't be created with null/undefined value."),nF(this.priorityNode_)}return Object.defineProperty(t,"__childrenNodeConstructor",{get:function(){return aI},set:function(t){aI=t},enumerable:!1,configurable:!0}),/** @inheritDoc */t.prototype.isLeafNode=function(){return!0},/** @inheritDoc */t.prototype.getPriority=function(){return this.priorityNode_},/** @inheritDoc */t.prototype.updatePriority=function(e){return new t(this.value_,e)},/** @inheritDoc */t.prototype.getImmediateChild=function(e){return(// Hack to treat priority as a regular child
".priority"===e?this.priorityNode_:t.__childrenNodeConstructor.EMPTY_NODE)},/** @inheritDoc */t.prototype.getChild=function(e){return ng(e)?this:".priority"===nc(e)?this.priorityNode_:t.__childrenNodeConstructor.EMPTY_NODE},t.prototype.hasChild=function(){return!1},/** @inheritDoc */t.prototype.getPredecessorChildName=function(t,e){return null},/** @inheritDoc */t.prototype.updateImmediateChild=function(e,n){return".priority"===e?this.updatePriority(n):n.isEmpty()&&".priority"!==e?this:t.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(e,n).updatePriority(this.priorityNode_)},/** @inheritDoc */t.prototype.updateChild=function(e,n){var r=nc(e);return null===r?n:n.isEmpty()&&".priority"!==r?this:(Y(".priority"!==r||1===nh(e),".priority must be the last token in a path"),this.updateImmediateChild(r,t.__childrenNodeConstructor.EMPTY_NODE.updateChild(nl(e),n)))},/** @inheritDoc */t.prototype.isEmpty=function(){return!1},/** @inheritDoc */t.prototype.numChildren=function(){return 0},/** @inheritDoc */t.prototype.forEachChild=function(t,e){return!1},t.prototype.val=function(t){return t&&!this.getPriority().isEmpty()?{".value":this.getValue(),".priority":this.getPriority().val()}:this.getValue()},/** @inheritDoc */t.prototype.hash=function(){if(null===this.lazyHash_){var t="";this.priorityNode_.isEmpty()||(t+="priority:"+nM(this.priorityNode_.val())+":");var e=typeof this.value_;t+=e+":","number"===e?t+=eK(this.value_):t+=this.value_,this.lazyHash_=eI(t)}return this.lazyHash_},/**
     * Returns the value of the leaf node.
     * @returns The value of the node.
     */t.prototype.getValue=function(){return this.value_},t.prototype.compareTo=function(e){return e===t.__childrenNodeConstructor.EMPTY_NODE?1:e instanceof t.__childrenNodeConstructor?-1:(Y(e.isLeafNode(),"Unknown node type"),this.compareToLeafNode_(e))},/**
     * Comparison specifically for two leaf nodes
     */t.prototype.compareToLeafNode_=function(e){var n=typeof e.value_,r=typeof this.value_,i=t.VALUE_TYPE_ORDER.indexOf(n),o=t.VALUE_TYPE_ORDER.indexOf(r);return(Y(i>=0,"Unknown leaf type: "+n),Y(o>=0,"Unknown leaf type: "+r),i!==o)?o-i:// Same type, compare values
"object"===r?0:// Note that this works because true > false, all others are number or string comparisons
this.value_<e.value_?-1:this.value_===e.value_?0:1},t.prototype.withIndex=function(){return this},t.prototype.isIndexed=function(){return!0},t.prototype.equals=function(t){return t===this||!!t.isLeafNode()&&this.value_===t.value_&&this.priorityNode_.equals(t.priorityNode_)},/**
     * The sort order for comparing leaf nodes of different types. If two leaf nodes have
     * the same type, the comparison falls back to their value
     */t.VALUE_TYPE_ORDER=["object","boolean","number","string"],t}(),nU=new/** @class */(function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype.compare=function(t,e){var n=t.node.getPriority(),r=e.node.getPriority(),i=n.compareTo(r);return 0===i?eF(t.name,e.name):i},e.prototype.isDefinedOn=function(t){return!t.getPriority().isEmpty()},e.prototype.indexedValueChanged=function(t,e){return!t.getPriority().equals(e.getPriority())},e.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any
return nC.MIN},e.prototype.maxPost=function(){return new nC(eM,new nj("[PRIORITY-POST]",aE))},e.prototype.makePost=function(t,e){var n=aT(t);return new nC(e,new nj("[PRIORITY-POST]",n))},/**
     * @returns String representation for inclusion in a query spec
     */e.prototype.toString=function(){return".priority"},e}(nk)),nq=Math.log(2),nV=/** @class */function(){function t(t){this.count=parseInt(Math.log(t+1)/nq,10),this.current_=this.count-1;var e=parseInt(Array(this.count+1).join("1"),2);this.bits_=t+1&e}return t.prototype.nextBitIsOne=function(){//noinspection JSBitwiseOperatorUsage
var t=!(this.bits_&1<<this.current_);return this.current_--,t},t}(),nB=function(t,e,n,r){t.sort(e);var i=function(e,r){var o,a,s=r-e;if(0===s)return null;if(1===s)return o=t[e],a=n?n(o):o,new nx(a,o.node,nx.BLACK,null,null);// eslint-disable-next-line @typescript-eslint/no-explicit-any
var u=parseInt(s/2,10)+e,c=i(e,u),h=i(u+1,r);return o=t[u],a=n?n(o):o,new nx(a,o.node,nx.BLACK,c,h)},o=function(e){for(var r=null,o=null,a=t.length,s=function(e,r){var o=a-e,s=a;a-=e;var c=i(o+1,s),h=t[o],l=n?n(h):h;u(new nx(l,h.node,r,null,c))},u=function(t){r?r.left=t:o=t,r=t},c=0;c<e.count;++c){var h=e.nextBitIsOne(),l=Math.pow(2,e.count-(c+1));h?s(l,nx.BLACK):(// current == 2
s(l,nx.BLACK),s(l,nx.RED))}return o}(new nV(t.length));// eslint-disable-next-line @typescript-eslint/no-explicit-any
return new nD(r||e,o)},nK={},nH=/** @class */function(){function t(t,e){this.indexes_=t,this.indexSet_=e}return Object.defineProperty(t,"Default",{/**
         * The default IndexMap for nodes without a priority
         */get:function(){return Y(nK&&nU,"ChildrenNode.ts has not been loaded"),aS=aS||new t({".priority":nK},{".priority":nU})},enumerable:!1,configurable:!0}),t.prototype.get=function(t){var e=tC(this.indexes_,t);if(!e)throw Error("No index defined for "+t);return e instanceof nD?e:null},t.prototype.hasIndex=function(t){return tS(this.indexSet_,t.toString())},t.prototype.addIndex=function(e,n){Y(e!==nA,"KeyIndex always exists and isn't meant to be added to the IndexMap.");for(var r,i=[],o=!1,a=n.getIterator(nC.Wrap),s=a.getNext();s;)o=o||e.isDefinedOn(s.node),i.push(s),s=a.getNext();r=o?nB(i,e.getCompare()):nK;var u=e.toString(),c=K({},this.indexSet_);c[u]=e;var h=K({},this.indexes_);return h[u]=r,new t(h,c)},/**
     * Ensure that this node is properly tracked in any indexes that we're maintaining
     */t.prototype.addToIndexes=function(e,n){var r=this,i=tN(this.indexes_,function(t,i){var o=tC(r.indexSet_,i);if(Y(o,"Missing index implementation for "+i),t===nK){// Check to see if we need to index everything
if(!o.isDefinedOn(e.node))return nK;for(// We need to build this index
var a=[],s=n.getIterator(nC.Wrap),u=s.getNext();u;)u.name!==e.name&&a.push(u),u=s.getNext();return a.push(e),nB(a,o.getCompare())}var c=n.get(e.name),h=t;return c&&(h=h.remove(new nC(e.name,c))),h.insert(e,e.node)});return new t(i,this.indexSet_)},/**
     * Create a new IndexMap instance with the given value removed
     */t.prototype.removeFromIndexes=function(e,n){var r=tN(this.indexes_,function(t){if(t===nK)return t;var r=n.get(e.name);return r?t.remove(new nC(e.name,r)):t});return new t(r,this.indexSet_)},t}(),nW=/** @class */function(){/**
     * @param children_ - List of children of this node..
     * @param priorityNode_ - The priority of this node (as a snapshot node).
     */function t(t,e,n){this.children_=t,this.priorityNode_=e,this.indexMap_=n,this.lazyHash_=null,this.priorityNode_&&nF(this.priorityNode_),this.children_.isEmpty()&&Y(!this.priorityNode_||this.priorityNode_.isEmpty(),"An empty node cannot have a priority")}return Object.defineProperty(t,"EMPTY_NODE",{get:function(){return aC||(aC=new t(new nD(nL),null,nH.Default))},enumerable:!1,configurable:!0}),/** @inheritDoc */t.prototype.isLeafNode=function(){return!1},/** @inheritDoc */t.prototype.getPriority=function(){return this.priorityNode_||aC},/** @inheritDoc */t.prototype.updatePriority=function(e){return this.children_.isEmpty()?this:new t(this.children_,e,this.indexMap_)},/** @inheritDoc */t.prototype.getImmediateChild=function(t){// Hack to treat priority as a regular child
if(".priority"===t)return this.getPriority();var e=this.children_.get(t);return null===e?aC:e},/** @inheritDoc */t.prototype.getChild=function(t){var e=nc(t);return null===e?this:this.getImmediateChild(e).getChild(nl(t))},/** @inheritDoc */t.prototype.hasChild=function(t){return null!==this.children_.get(t)},/** @inheritDoc */t.prototype.updateImmediateChild=function(e,n){if(Y(n,"We should always be passing snapshot nodes"),".priority"===e)return this.updatePriority(n);var r=new nC(e,n),i=void 0,o=void 0;n.isEmpty()?(i=this.children_.remove(e),o=this.indexMap_.removeFromIndexes(r,this.children_)):(i=this.children_.insert(e,n),o=this.indexMap_.addToIndexes(r,this.children_));var a=i.isEmpty()?aC:this.priorityNode_;return new t(i,a,o)},/** @inheritDoc */t.prototype.updateChild=function(t,e){var n=nc(t);if(null===n)return e;Y(".priority"!==nc(t)||1===nh(t),".priority must be the last token in a path");var r=this.getImmediateChild(n).updateChild(nl(t),e);return this.updateImmediateChild(n,r)},/** @inheritDoc */t.prototype.isEmpty=function(){return this.children_.isEmpty()},/** @inheritDoc */t.prototype.numChildren=function(){return this.children_.count()},/** @inheritDoc */t.prototype.val=function(e){if(this.isEmpty())return null;var n={},r=0,i=0,o=!0;if(this.forEachChild(nU,function(a,s){n[a]=s.val(e),r++,o&&t.INTEGER_REGEXP_.test(a)?i=Math.max(i,Number(a)):o=!1}),e||!o||!(i<2*r))return e&&!this.getPriority().isEmpty()&&(n[".priority"]=this.getPriority().val()),n;// convert to array.
var a=[];// eslint-disable-next-line guard-for-in
for(var s in n)a[s]=n[s];return a},/** @inheritDoc */t.prototype.hash=function(){if(null===this.lazyHash_){var t="";this.getPriority().isEmpty()||(t+="priority:"+nM(this.getPriority().val())+":"),this.forEachChild(nU,function(e,n){var r=n.hash();""!==r&&(t+=":"+e+":"+r)}),this.lazyHash_=""===t?"":eI(t)}return this.lazyHash_},/** @inheritDoc */t.prototype.getPredecessorChildName=function(t,e,n){var r=this.resolveIndex_(n);if(!r)return this.children_.getPredecessorKey(t);var i=r.getPredecessorKey(new nC(t,e));return i?i.name:null},t.prototype.getFirstChildName=function(t){var e=this.resolveIndex_(t);if(!e)return this.children_.minKey();var n=e.minKey();return n&&n.name},t.prototype.getFirstChild=function(t){var e=this.getFirstChildName(t);return e?new nC(e,this.children_.get(e)):null},/**
     * Given an index, return the key name of the largest value we have, according to that index
     */t.prototype.getLastChildName=function(t){var e=this.resolveIndex_(t);if(!e)return this.children_.maxKey();var n=e.maxKey();return n&&n.name},t.prototype.getLastChild=function(t){var e=this.getLastChildName(t);return e?new nC(e,this.children_.get(e)):null},t.prototype.forEachChild=function(t,e){var n=this.resolveIndex_(t);return n?n.inorderTraversal(function(t){return e(t.name,t.node)}):this.children_.inorderTraversal(e)},t.prototype.getIterator=function(t){return this.getIteratorFrom(t.minPost(),t)},t.prototype.getIteratorFrom=function(t,e){var n=this.resolveIndex_(e);if(n)return n.getIteratorFrom(t,function(t){return t});for(var r=this.children_.getIteratorFrom(t.name,nC.Wrap),i=r.peek();null!=i&&0>e.compare(i,t);)r.getNext(),i=r.peek();return r},t.prototype.getReverseIterator=function(t){return this.getReverseIteratorFrom(t.maxPost(),t)},t.prototype.getReverseIteratorFrom=function(t,e){var n=this.resolveIndex_(e);if(n)return n.getReverseIteratorFrom(t,function(t){return t});for(var r=this.children_.getReverseIteratorFrom(t.name,nC.Wrap),i=r.peek();null!=i&&e.compare(i,t)>0;)r.getNext(),i=r.peek();return r},t.prototype.compareTo=function(t){return this.isEmpty()?t.isEmpty()?0:-1:t.isLeafNode()||t.isEmpty()?1:t===nz?-1:0},t.prototype.withIndex=function(e){if(e===nA||this.indexMap_.hasIndex(e))return this;var n=this.indexMap_.addIndex(e,this.children_);return new t(this.children_,this.priorityNode_,n)},t.prototype.isIndexed=function(t){return t===nA||this.indexMap_.hasIndex(t)},t.prototype.equals=function(t){if(t===this)return!0;if(t.isLeafNode()||!this.getPriority().equals(t.getPriority())||this.children_.count()!==t.children_.count())return!1;for(var e=this.getIterator(nU),n=t.getIterator(nU),r=e.getNext(),i=n.getNext();r&&i;){if(r.name!==i.name||!r.node.equals(i.node))return!1;r=e.getNext(),i=n.getNext()}return null===r&&null===i},/**
     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used
     * instead.
     *
     */t.prototype.resolveIndex_=function(t){return t===nA?null:this.indexMap_.get(t.toString())},t.INTEGER_REGEXP_=/^(0|[1-9]\d*)$/,t}(),nz=new/** @class */(function(t){function e(){return t.call(this,new nD(nL),nW.EMPTY_NODE,nH.Default)||this}return B(e,t),e.prototype.compareTo=function(t){return t===this?0:1},e.prototype.equals=function(t){// Not that we every compare it, but MAX_NODE is only ever equal to itself
return t===this},e.prototype.getPriority=function(){return this},e.prototype.getImmediateChild=function(t){return nW.EMPTY_NODE},e.prototype.isEmpty=function(){return!1},e}(nW));/**
 * Constructs a snapshot node representing the passed JSON and returns it.
 * @param json - JSON to create a node for.
 * @param priority - Optional priority to use.  This will be ignored if the
 * passed JSON contains a .priority property.
 */function nG(t,e){if(void 0===e&&(e=null),null===t)return nW.EMPTY_NODE;// Valid leaf nodes include non-objects or server-value wrapper objects
if("object"==typeof t&&".priority"in t&&(e=t[".priority"]),Y(null===e||"string"==typeof e||"number"==typeof e||"object"==typeof e&&".sv"in e,"Invalid priority type found: "+typeof e),"object"==typeof t&&".value"in t&&null!==t[".value"]&&(t=t[".value"]),"object"!=typeof t||".sv"in t){var n=t;return new nj(n,nG(e))}if(t instanceof Array){var r=nW.EMPTY_NODE;return eB(t,function(e,n){if(tS(t,e)&&"."!==e.substring(0,1)){// ignore metadata nodes.
var i=nG(n);(i.isLeafNode()||!i.isEmpty())&&(r=r.updateImmediateChild(e,i))}}),r.updatePriority(nG(e))}var i=[],o=!1;if(eB(t,function(t,e){if("."!==t.substring(0,1)){// Ignore metadata nodes
var n=nG(e);n.isEmpty()||(o=o||!n.getPriority().isEmpty(),i.push(new nC(t,n)))}}),0===i.length)return nW.EMPTY_NODE;var a=nB(i,nO,function(t){return t.name},nL);if(!o)return new nW(a,nG(e),nH.Default);var s=nB(i,nU.getCompare());return new nW(a,nG(e),new nH({".priority":s},{".priority":nU}))}Object.defineProperties(nC,{MIN:{value:new nC(eL,nW.EMPTY_NODE)},MAX:{value:new nC(eM,nz)}}),/**
 * Reference Extensions
 */nN.__EMPTY_NODE=nW.EMPTY_NODE,nj.__childrenNodeConstructor=nW,aw=nz,aE=nz,aT=nG;/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var nQ=/** @class */function(t){function e(e){var n=t.call(this)||this;return n.indexPath_=e,Y(!ng(e)&&".priority"!==nc(e),"Can't create PathIndex with empty path or .priority key"),n}return B(e,t),e.prototype.extractChild=function(t){return t.getChild(this.indexPath_)},e.prototype.isDefinedOn=function(t){return!t.getChild(this.indexPath_).isEmpty()},e.prototype.compare=function(t,e){var n=this.extractChild(t.node),r=this.extractChild(e.node),i=n.compareTo(r);return 0===i?eF(t.name,e.name):i},e.prototype.makePost=function(t,e){var n=nG(t),r=nW.EMPTY_NODE.updateChild(this.indexPath_,n);return new nC(e,r)},e.prototype.maxPost=function(){var t=nW.EMPTY_NODE.updateChild(this.indexPath_,nz);return new nC(eM,t)},e.prototype.toString=function(){return np(this.indexPath_,0).join("/")},e}(nk),n$=new/** @class */(function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype.compare=function(t,e){var n=t.node.compareTo(e.node);return 0===n?eF(t.name,e.name):n},e.prototype.isDefinedOn=function(t){return!0},e.prototype.indexedValueChanged=function(t,e){return!t.equals(e)},e.prototype.minPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any
return nC.MIN},e.prototype.maxPost=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any
return nC.MAX},e.prototype.makePost=function(t,e){var n=nG(t);return new nC(e,n)},/**
     * @returns String representation for inclusion in a query spec
     */e.prototype.toString=function(){return".value"},e}(nk)),nY="-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz",nX=(ah=0,al=[],function(t){var e,n=t===ah;ah=t;var r=Array(8);for(e=7;e>=0;e--)r[e]=nY.charAt(t%64),// NOTE: Can't use << here because javascript will convert to int and lose
// the upper bits.
t=Math.floor(t/64);Y(0===t,"Cannot push at time == 0");var i=r.join("");if(n){// If the timestamp hasn't changed since last push, use the same random
// number, except incremented by 1.
for(e=11;e>=0&&63===al[e];e--)al[e]=0;al[e]++}else for(e=0;e<12;e++)al[e]=Math.floor(64*Math.random());for(e=0;e<12;e++)i+=nY.charAt(al[e]);return Y(20===i.length,"nextPushId: Length should be 20."),i}),nJ=function(t){if("2147483647"===t)return"-";var e=eW(t);if(null!=e)return""+(e+1);for(var n=Array(t.length),r=0;r<n.length;r++)n[r]=t.charAt(r);if(n.length<786)return n.push("-"),n.join("");for(var i=n.length-1;i>=0&&"z"===n[i];)i--;// `successor` was called on the largest possible key, so return the
// MAX_NAME, which sorts larger than all keys.
if(-1===i)return eM;var o=n[i],a=nY.charAt(nY.indexOf(o)+1);return n[i]=a,n.slice(0,i+1).join("")},nZ=function(t){if("-2147483648"===t)return eL;var e=eW(t);if(null!=e)return""+(e-1);for(var n=Array(t.length),r=0;r<n.length;r++)n[r]=t.charAt(r);return(// If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically
// smaller than `key`, is `key[0:key.length - 1]`. The next key smaller
// than that, `predecessor(predecessor(key))`, is
//
// `key[0:key.length - 2] + (key[key.length - 1] - 1) + \
//   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }
//
// analogous to increment/decrement for base-10 integers.
//
// This works because lexigographic comparison works character-by-character,
// using length as a tie-breaker if one key is a prefix of the other.
"-"===n[n.length-1]?1===n.length?"2147483647":(delete n[n.length-1],n.join("")):(// Replace the last character with it's immediate predecessor, and
// fill the suffix of the key with MAX_PUSH_CHAR. This is the
// lexicographically largest possible key smaller than `key`.
n[n.length-1]=nY.charAt(nY.indexOf(n[n.length-1])-1),n.join("")+"z".repeat(786-n.length)))};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function n0(t){return{type:"value"/* VALUE */,snapshotNode:t}}function n1(t,e){return{type:"child_added"/* CHILD_ADDED */,snapshotNode:e,childName:t}}function n2(t,e){return{type:"child_removed"/* CHILD_REMOVED */,snapshotNode:e,childName:t}}function n4(t,e,n){return{type:"child_changed"/* CHILD_CHANGED */,snapshotNode:e,childName:t,oldSnap:n}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Doesn't really filter nodes but applies an index to the node and keeps track of any changes
 */var n3=/** @class */function(){function t(t){this.index_=t}return t.prototype.updateChild=function(t,e,n,r,i,o){Y(t.isIndexed(this.index_),"A node must be indexed if only a child is updated");var a=t.getImmediateChild(e);return(// Check if anything actually changed.
a.getChild(r).equals(n.getChild(r))&&a.isEmpty()===n.isEmpty()?t:(null!=o&&(n.isEmpty()?t.hasChild(e)?o.trackChildChange(n2(e,a)):Y(t.isLeafNode(),"A child remove without an old child only makes sense on a leaf node"):a.isEmpty()?o.trackChildChange(n1(e,n)):o.trackChildChange(n4(e,n,a))),t.isLeafNode()&&n.isEmpty())?t:t.updateImmediateChild(e,n).withIndex(this.index_))},t.prototype.updateFullNode=function(t,e,n){return null==n||(t.isLeafNode()||t.forEachChild(nU,function(t,r){e.hasChild(t)||n.trackChildChange(n2(t,r))}),e.isLeafNode()||e.forEachChild(nU,function(e,r){if(t.hasChild(e)){var i=t.getImmediateChild(e);i.equals(r)||n.trackChildChange(n4(e,r,i))}else n.trackChildChange(n1(e,r))})),e.withIndex(this.index_)},t.prototype.updatePriority=function(t,e){return t.isEmpty()?nW.EMPTY_NODE:t.updatePriority(e)},t.prototype.filtersNodes=function(){return!1},t.prototype.getIndexedFilter=function(){return this},t.prototype.getIndex=function(){return this.index_},t}(),n6=/** @class */function(){function t(e){this.indexedFilter_=new n3(e.getIndex()),this.index_=e.getIndex(),this.startPost_=t.getStartPost_(e),this.endPost_=t.getEndPost_(e)}return t.prototype.getStartPost=function(){return this.startPost_},t.prototype.getEndPost=function(){return this.endPost_},t.prototype.matches=function(t){return 0>=this.index_.compare(this.getStartPost(),t)&&0>=this.index_.compare(t,this.getEndPost())},t.prototype.updateChild=function(t,e,n,r,i,o){return this.matches(new nC(e,n))||(n=nW.EMPTY_NODE),this.indexedFilter_.updateChild(t,e,n,r,i,o)},t.prototype.updateFullNode=function(t,e,n){e.isLeafNode()&&(e=nW.EMPTY_NODE);var r=e.withIndex(this.index_);// Don't support priorities on queries
r=r.updatePriority(nW.EMPTY_NODE);var i=this;return e.forEachChild(nU,function(t,e){i.matches(new nC(t,e))||(r=r.updateImmediateChild(t,nW.EMPTY_NODE))}),this.indexedFilter_.updateFullNode(t,r,n)},t.prototype.updatePriority=function(t,e){// Don't support priorities on queries
return t},t.prototype.filtersNodes=function(){return!0},t.prototype.getIndexedFilter=function(){return this.indexedFilter_},t.prototype.getIndex=function(){return this.index_},t.getStartPost_=function(t){if(!t.hasStart())return t.getIndex().minPost();var e=t.getIndexStartName();return t.getIndex().makePost(t.getIndexStartValue(),e)},t.getEndPost_=function(t){if(!t.hasEnd())return t.getIndex().maxPost();var e=t.getIndexEndName();return t.getIndex().makePost(t.getIndexEndValue(),e)},t}(),n5=/** @class */function(){function t(t){this.rangedFilter_=new n6(t),this.index_=t.getIndex(),this.limit_=t.getLimit(),this.reverse_=!t.isViewFromLeft()}return t.prototype.updateChild=function(t,e,n,r,i,o){return(this.rangedFilter_.matches(new nC(e,n))||(n=nW.EMPTY_NODE),t.getImmediateChild(e).equals(n))?t:t.numChildren()<this.limit_?this.rangedFilter_.getIndexedFilter().updateChild(t,e,n,r,i,o):this.fullLimitUpdateChild_(t,e,n,i,o)},t.prototype.updateFullNode=function(t,e,n){var r;if(e.isLeafNode()||e.isEmpty())r=nW.EMPTY_NODE.withIndex(this.index_);else if(2*this.limit_<e.numChildren()&&e.isIndexed(this.index_)){// Easier to build up a snapshot, since what we're given has more than twice the elements we want
r=nW.EMPTY_NODE.withIndex(this.index_);// anchor to the startPost, endPost, or last element as appropriate
var i=void 0;i=this.reverse_?e.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_):e.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);for(var o=0;i.hasNext()&&o<this.limit_;){var a=i.getNext(),s=void 0;if(s=this.reverse_?0>=this.index_.compare(this.rangedFilter_.getStartPost(),a):0>=this.index_.compare(a,this.rangedFilter_.getEndPost()))r=r.updateImmediateChild(a.name,a.node),o++;else break}}else{// Don't support priorities on queries
r=// The snap contains less than twice the limit. Faster to delete from the snap than build up a new one
(r=e.withIndex(this.index_)).updatePriority(nW.EMPTY_NODE);var u=void 0,c=void 0,h=void 0,i=void 0;if(this.reverse_){i=r.getReverseIterator(this.index_),u=this.rangedFilter_.getEndPost(),c=this.rangedFilter_.getStartPost();var l=this.index_.getCompare();h=function(t,e){return l(e,t)}}else i=r.getIterator(this.index_),u=this.rangedFilter_.getStartPost(),c=this.rangedFilter_.getEndPost(),h=this.index_.getCompare();for(var o=0,f=!1;i.hasNext();){var a=i.getNext();!f&&0>=h(u,a)&&(f=!0);var s=f&&o<this.limit_&&0>=h(a,c);s?o++:r=r.updateImmediateChild(a.name,nW.EMPTY_NODE)}}return this.rangedFilter_.getIndexedFilter().updateFullNode(t,r,n)},t.prototype.updatePriority=function(t,e){// Don't support priorities on queries
return t},t.prototype.filtersNodes=function(){return!0},t.prototype.getIndexedFilter=function(){return this.rangedFilter_.getIndexedFilter()},t.prototype.getIndex=function(){return this.index_},t.prototype.fullLimitUpdateChild_=function(t,e,n,r,i){if(this.reverse_){var o,a=this.index_.getCompare();o=function(t,e){return a(e,t)}}else o=this.index_.getCompare();Y(t.numChildren()===this.limit_,"");var s=new nC(e,n),u=this.reverse_?t.getFirstChild(this.index_):t.getLastChild(this.index_),c=this.rangedFilter_.matches(s);if(t.hasChild(e)){for(var h=t.getImmediateChild(e),l=r.getChildAfterChild(this.index_,u,this.reverse_);null!=l&&(l.name===e||t.hasChild(l.name));)// been applied to the limited filter yet. Ignore this next child which will be updated later in
// the limited filter...
l=r.getChildAfterChild(this.index_,l,this.reverse_);var f=null==l?1:o(l,s);if(c&&!n.isEmpty()&&f>=0)return null!=i&&i.trackChildChange(n4(e,n,h)),t.updateImmediateChild(e,n);null!=i&&i.trackChildChange(n2(e,h));var p=t.updateImmediateChild(e,nW.EMPTY_NODE);return null!=l&&this.rangedFilter_.matches(l)?(null!=i&&i.trackChildChange(n1(l.name,l.node)),p.updateImmediateChild(l.name,l.node)):p}return n.isEmpty()?t:c&&o(u,s)>=0?(null!=i&&(i.trackChildChange(n2(u.name,u.node)),i.trackChildChange(n1(e,n))),t.updateImmediateChild(e,n).updateImmediateChild(u.name,nW.EMPTY_NODE)):t},t}(),n8=/** @class */function(){function t(){this.limitSet_=!1,this.startSet_=!1,this.startNameSet_=!1,this.startAfterSet_=!1,this.endSet_=!1,this.endNameSet_=!1,this.endBeforeSet_=!1,this.limit_=0,this.viewFrom_="",this.indexStartValue_=null,this.indexStartName_="",this.indexEndValue_=null,this.indexEndName_="",this.index_=nU}return t.prototype.hasStart=function(){return this.startSet_},t.prototype.hasStartAfter=function(){return this.startAfterSet_},t.prototype.hasEndBefore=function(){return this.endBeforeSet_},/**
     * @returns True if it would return from left.
     */t.prototype.isViewFromLeft=function(){return""===this.viewFrom_?this.startSet_:"l"/* VIEW_FROM_LEFT */===this.viewFrom_},/**
     * Only valid to call if hasStart() returns true
     */t.prototype.getIndexStartValue=function(){return Y(this.startSet_,"Only valid if start has been set"),this.indexStartValue_},/**
     * Only valid to call if hasStart() returns true.
     * Returns the starting key name for the range defined by these query parameters
     */t.prototype.getIndexStartName=function(){return(Y(this.startSet_,"Only valid if start has been set"),this.startNameSet_)?this.indexStartName_:eL},t.prototype.hasEnd=function(){return this.endSet_},/**
     * Only valid to call if hasEnd() returns true.
     */t.prototype.getIndexEndValue=function(){return Y(this.endSet_,"Only valid if end has been set"),this.indexEndValue_},/**
     * Only valid to call if hasEnd() returns true.
     * Returns the end key name for the range defined by these query parameters
     */t.prototype.getIndexEndName=function(){return(Y(this.endSet_,"Only valid if end has been set"),this.endNameSet_)?this.indexEndName_:eM},t.prototype.hasLimit=function(){return this.limitSet_},/**
     * @returns True if a limit has been set and it has been explicitly anchored
     */t.prototype.hasAnchoredLimit=function(){return this.limitSet_&&""!==this.viewFrom_},/**
     * Only valid to call if hasLimit() returns true
     */t.prototype.getLimit=function(){return Y(this.limitSet_,"Only valid if limit has been set"),this.limit_},t.prototype.getIndex=function(){return this.index_},t.prototype.loadsAllData=function(){return!(this.startSet_||this.endSet_||this.limitSet_)},t.prototype.isDefault=function(){return this.loadsAllData()&&this.index_===nU},t.prototype.copy=function(){var e=new t;return e.limitSet_=this.limitSet_,e.limit_=this.limit_,e.startSet_=this.startSet_,e.indexStartValue_=this.indexStartValue_,e.startNameSet_=this.startNameSet_,e.indexStartName_=this.indexStartName_,e.endSet_=this.endSet_,e.indexEndValue_=this.indexEndValue_,e.endNameSet_=this.endNameSet_,e.indexEndName_=this.indexEndName_,e.index_=this.index_,e.viewFrom_=this.viewFrom_,e},t}();function n7(t,e,n){var r=t.copy();return r.startSet_=!0,void 0===e&&(e=null),r.indexStartValue_=e,null!=n?(r.startNameSet_=!0,r.indexStartName_=n):(r.startNameSet_=!1,r.indexStartName_=""),r}function n9(t,e,n){var r=t.copy();return r.endSet_=!0,void 0===e&&(e=null),r.indexEndValue_=e,void 0!==n?(r.endNameSet_=!0,r.indexEndName_=n):(r.endNameSet_=!1,r.indexEndName_=""),r}function rt(t,e){var n=t.copy();return n.index_=e,n}/**
 * Returns a set of REST query string parameters representing this query.
 *
 * @returns query string parameters
 */function re(t){var e,n={};return t.isDefault()||(t.index_===nU?e="$priority"/* PRIORITY_INDEX */:t.index_===n$?e="$value"/* VALUE_INDEX */:t.index_===nA?e="$key"/* KEY_INDEX */:(Y(t.index_ instanceof nQ,"Unrecognized index type!"),e=t.index_.toString()),n.orderBy=tb(e),t.startSet_&&(n.startAt=tb(t.indexStartValue_),t.startNameSet_&&(n.startAt+=","+tb(t.indexStartName_))),t.endSet_&&(n.endAt=tb(t.indexEndValue_),t.endNameSet_&&(n.endAt+=","+tb(t.indexEndName_))),t.limitSet_&&(t.isViewFromLeft()?n.limitToFirst=t.limit_:n.limitToLast=t.limit_)),n}function rn(t){var e={};if(t.startSet_&&(e.sp=t.indexStartValue_,t.startNameSet_&&(e.sn=t.indexStartName_)),t.endSet_&&(e.ep=t.indexEndValue_,t.endNameSet_&&(e.en=t.indexEndName_)),t.limitSet_){e.l=t.limit_;var n=t.viewFrom_;""===n&&(n=t.isViewFromLeft()?"l"/* VIEW_FROM_LEFT */:"r"/* VIEW_FROM_RIGHT */),e.vf=n}return t.index_!==nU&&(e.i=t.index_.toString()),e}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An implementation of ServerActions that communicates with the server via REST requests.
 * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full
 * persistent connection (using WebSockets or long-polling)
 */var rr=/** @class */function(t){/**
     * @param repoInfo_ - Data about the namespace we are connecting to
     * @param onDataUpdate_ - A callback for new data from the server
     */function e(e,n,r,i){var o=t.call(this)||this;return o.repoInfo_=e,o.onDataUpdate_=n,o.authTokenProvider_=r,o.appCheckTokenProvider_=i,/** @private {function(...[*])} */o.log_=eN("p:rest:"),/**
         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen
         * that's been removed. :-/
         */o.listens_={},o}return B(e,t),e.prototype.reportStats=function(t){throw Error("Method not implemented.")},e.getListenId_=function(t,e){return void 0!==e?"tag$"+e:(Y(t._queryParams.isDefault(),"should have a tag if it's not a default query."),t._path.toString())},/** @inheritDoc */e.prototype.listen=function(t,n,r,i){var o=this,a=t._path.toString();this.log_("Listen called for "+a+" "+t._queryIdentifier);// Mark this listener so we can tell if it's removed.
var s=e.getListenId_(t,r),u={};this.listens_[s]=u;var c=re(t._queryParams);this.restRequest_(a+".json",c,function(t,e){var n=e;404===t&&(n=null,t=null),null===t&&o.onDataUpdate_(a,n,/*isMerge=*/!1,r),tC(o.listens_,s)===u&&i(t?401===t?"permission_denied":"rest_error:"+t:"ok",null)})},/** @inheritDoc */e.prototype.unlisten=function(t,n){var r=e.getListenId_(t,n);delete this.listens_[r]},e.prototype.get=function(t){var e=this,n=re(t._queryParams),r=t._path.toString(),i=new to;return this.restRequest_(r+".json",n,function(t,n){var o=n;404===t&&(o=null,t=null),null===t?(e.onDataUpdate_(r,o,/*isMerge=*/!1,/*tag=*/null),i.resolve(o)):i.reject(Error(o))}),i.promise},/** @inheritDoc */e.prototype.refreshAuthToken=function(t){// no-op since we just always call getToken.
},/**
     * Performs a REST request to the given path, with the provided query string parameters,
     * and any auth credentials we have.
     */e.prototype.restRequest_=function(t,e,n){var r=this;return void 0===e&&(e={}),e.format="export",Promise.all([this.authTokenProvider_.getToken(/*forceRefresh=*/!1),this.appCheckTokenProvider_.getToken(/*forceRefresh=*/!1)]).then(function(i){var o=G(i,2),a=o[0],s=o[1];a&&a.accessToken&&(e.auth=a.accessToken),s&&s.token&&(e.ac=s.token);var u=(r.repoInfo_.secure?"https://":"http://")+r.repoInfo_.host+t+"?ns="+r.repoInfo_.namespace+/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */function(t){for(var e=[],n=function(t,n){Array.isArray(n)?n.forEach(function(n){e.push(encodeURIComponent(t)+"="+encodeURIComponent(n))}):e.push(encodeURIComponent(t)+"="+encodeURIComponent(n))},r=0,i=Object.entries(t);r<i.length;r++){var o=i[r];n(o[0],o[1])}return e.length?"&"+e.join("&"):""}(e);r.log_("Sending REST request for "+u);var c=new XMLHttpRequest;c.onreadystatechange=function(){if(n&&4===c.readyState){r.log_("REST Response for "+u+" received. status:",c.status,"response:",c.responseText);var t=null;if(c.status>=200&&c.status<300){try{t=t_(c.responseText)}catch(t){ex("Failed to parse JSON response for "+u+": "+c.responseText)}n(null,t)}else 401!==c.status&&404!==c.status&&ex("Got unsuccessful REST response for "+u+" Status: "+c.status),n(c.status);n=null}},c.open("GET",u,/*asynchronous=*/!0),c.send()})},e}(ni),ri=/** @class */function(){function t(){this.rootNode_=nW.EMPTY_NODE}return t.prototype.getNode=function(t){return this.rootNode_.getChild(t)},t.prototype.updateSnapshot=function(t,e){this.rootNode_=this.rootNode_.updateChild(t,e)},t}();/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ro(){return{value:null,children:new Map}}/**
 * Stores the given node at the specified path. If there is already a node
 * at a shallower path, it merges the new data into that snapshot node.
 *
 * @param path - Path to look up snapshot for.
 * @param data - The new data, or null.
 */function ra(t,e,n){if(ng(e))t.value=n,t.children.clear();else if(null!==t.value)t.value=t.value.updateChild(e,n);else{var r=nc(e);t.children.has(r)||t.children.set(r,ro()),ra(t.children.get(r),e=nl(e),n)}}/**
 * Recursively iterates through all of the stored tree and calls the
 * callback on each one.
 *
 * @param prefixPath - Path to look up node for.
 * @param func - The function to invoke for each tree.
 */function rs(t,e,n){null!==t.value?n(e,t.value):/**
 * Iterates through each immediate child and triggers the callback.
 * Only seems to be used in tests.
 *
 * @param func - The function to invoke for each child.
 */function(t,e){t.children.forEach(function(t,n){e(n,t)})}(t,function(t,r){rs(r,new ns(e.toString()+"/"+t),n)})}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns the delta from the previous call to get stats.
 *
 * @param collection_ - The collection to "listen" to.
 */var ru=/** @class */function(){function t(t){this.collection_=t,this.last_=null}return t.prototype.get=function(){var t=this.collection_.get(),e=K({},t);return this.last_&&eB(this.last_,function(t,n){e[t]=e[t]-n}),this.last_=t,e},t}(),rc=/** @class */function(){function t(t,e){this.server_=e,this.statsToReport_={},this.statsListener_=new ru(t),eG(this.reportStats_.bind(this),Math.floor(1e4+2e4*Math.random()))}return t.prototype.reportStats_=function(){var t=this,e=this.statsListener_.get(),n={},r=!1;eB(e,function(e,i){i>0&&tS(t.statsToReport_,e)&&(n[e]=i,r=!0)}),r&&this.server_.reportStats(n),// queue our next run.
eG(this.reportStats_.bind(this),Math.floor(2*Math.random()*3e5))},t}();function rh(){return{fromUser:!0,fromServer:!1,queryId:null,tagged:!1}}function rl(){return{fromUser:!1,fromServer:!0,queryId:null,tagged:!1}}function rf(t){return{fromUser:!1,fromServer:!0,queryId:t,tagged:!0}}(af=ak||(ak={}))[af.OVERWRITE=0]="OVERWRITE",af[af.MERGE=1]="MERGE",af[af.ACK_USER_WRITE=2]="ACK_USER_WRITE",af[af.LISTEN_COMPLETE=3]="LISTEN_COMPLETE";/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var rp=/** @class */function(){/**
     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.
     */function t(/** @inheritDoc */t,/** @inheritDoc */e,/** @inheritDoc */n){this.path=t,this.affectedTree=e,this.revert=n,/** @inheritDoc */this.type=ak.ACK_USER_WRITE,/** @inheritDoc */this.source=rh()}return t.prototype.operationForChild=function(e){if(!ng(this.path))return Y(nc(this.path)===e,"operationForChild called for unrelated child."),new t(nl(this.path),this.affectedTree,this.revert);if(null!=this.affectedTree.value)// All child locations are affected as well; just return same operation.
return Y(this.affectedTree.children.isEmpty(),"affectedTree should not have overlapping affected paths."),this;var n=this.affectedTree.subtree(new ns(e));return new t(nu(),n,this.revert)},t}(),rd=/** @class */function(){function t(t,e){this.source=t,this.path=e,/** @inheritDoc */this.type=ak.LISTEN_COMPLETE}return t.prototype.operationForChild=function(e){return ng(this.path)?new t(this.source,nu()):new t(this.source,nl(this.path))},t}(),rv=/** @class */function(){function t(t,e,n){this.source=t,this.path=e,this.snap=n,/** @inheritDoc */this.type=ak.OVERWRITE}return t.prototype.operationForChild=function(e){return ng(this.path)?new t(this.source,nu(),this.snap.getImmediateChild(e)):new t(this.source,nl(this.path),this.snap)},t}(),rg=/** @class */function(){function t(/** @inheritDoc */t,/** @inheritDoc */e,/** @inheritDoc */n){this.source=t,this.path=e,this.children=n,/** @inheritDoc */this.type=ak.MERGE}return t.prototype.operationForChild=function(e){if(!ng(this.path))return Y(nc(this.path)===e,"Can't get a merge for a child not on the path of the operation"),new t(this.source,nl(this.path),this.children);var n=this.children.subtree(new ns(e));return n.isEmpty()?null:n.value?new rv(this.source,nu(),n.value):new t(this.source,nu(),n)},t.prototype.toString=function(){return"Operation("+this.path+": "+this.source.toString()+" merge: "+this.children.toString()+")"},t}(),rm=/** @class */function(){function t(t,e,n){this.node_=t,this.fullyInitialized_=e,this.filtered_=n}return(/**
     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client
     */t.prototype.isFullyInitialized=function(){return this.fullyInitialized_},/**
     * Returns whether this node is potentially missing children due to a filter applied to the node
     */t.prototype.isFiltered=function(){return this.filtered_},t.prototype.isCompleteForPath=function(t){if(ng(t))return this.isFullyInitialized()&&!this.filtered_;var e=nc(t);return this.isCompleteForChild(e)},t.prototype.isCompleteForChild=function(t){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(t)},t.prototype.getNode=function(){return this.node_},t)}(),ry=function(t){this.query_=t,this.index_=this.query_._queryParams.getIndex()};/**
 * Given changes of a single change type, generate the corresponding events.
 */function r_(t,e,n,r,i,o){var a=r.filter(function(t){return t.type===n});a.sort(function(e,n){return function(t,e,n){if(null==e.childName||null==n.childName)throw X("Should only compare child_ events.");var r=new nC(e.childName,e.snapshotNode),i=new nC(n.childName,n.snapshotNode);return t.index_.compare(r,i)}(t,e,n)}),a.forEach(function(n){var r=("value"===n.type||"child_removed"===n.type||(n.prevName=o.getPredecessorChildName(n.childName,n.snapshotNode,t.index_)),n);i.forEach(function(i){i.respondsTo(n.type)&&e.push(i.createEvent(r,t.query_))})})}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function rb(t,e){return{eventCache:t,serverCache:e}}function rw(t,e,n,r){return rb(new rm(e,n,r),t.serverCache)}function rI(t,e,n,r){return rb(t.eventCache,new rm(e,n,r))}function rT(t){return t.eventCache.isFullyInitialized()?t.eventCache.getNode():null}function rE(t){return t.serverCache.isFullyInitialized()?t.serverCache.getNode():null}/**
 * A tree with immutable elements.
 */var rS=/** @class */function(){function t(t,e){void 0===e&&(aN||(aN=new nD(ej)),e=aN),this.value=t,this.children=e}return t.fromObject=function(e){var n=new t(null);return eB(e,function(t,e){n=n.set(new ns(t),e)}),n},/**
     * True if the value is empty and there are no children
     */t.prototype.isEmpty=function(){return null===this.value&&this.children.isEmpty()},/**
     * Given a path and predicate, return the first node and the path to that node
     * where the predicate returns true.
     *
     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`
     * objects on the way back out, it may be better to pass down a pathSoFar obj.
     *
     * @param relativePath - The remainder of the path
     * @param predicate - The predicate to satisfy to return a node
     */t.prototype.findRootMostMatchingPathAndValue=function(t,e){if(null!=this.value&&e(this.value))return{path:nu(),value:this.value};if(ng(t))return null;var n=nc(t),r=this.children.get(n);if(null===r)return null;var i=r.findRootMostMatchingPathAndValue(nl(t),e);return null!=i?{path:nv(new ns(n),i.path),value:i.value}:null},/**
     * Find, if it exists, the shortest subpath of the given path that points a defined
     * value in the tree
     */t.prototype.findRootMostValueAndPath=function(t){return this.findRootMostMatchingPathAndValue(t,function(){return!0})},/**
     * @returns The subtree at the given path
     */t.prototype.subtree=function(e){if(ng(e))return this;var n=nc(e),r=this.children.get(n);return null!==r?r.subtree(nl(e)):new t(null)},/**
     * Sets a value at the specified path.
     *
     * @param relativePath - Path to set value at.
     * @param toSet - Value to set.
     * @returns Resulting tree.
     */t.prototype.set=function(e,n){if(ng(e))return new t(n,this.children);var r=nc(e),i=(this.children.get(r)||new t(null)).set(nl(e),n),o=this.children.insert(r,i);return new t(this.value,o)},/**
     * Removes the value at the specified path.
     *
     * @param relativePath - Path to value to remove.
     * @returns Resulting tree.
     */t.prototype.remove=function(e){if(ng(e))return this.children.isEmpty()?new t(null):new t(null,this.children);var n=nc(e),r=this.children.get(n);if(!r)return this;var i=r.remove(nl(e)),o=void 0;return(o=i.isEmpty()?this.children.remove(n):this.children.insert(n,i),null===this.value&&o.isEmpty())?new t(null):new t(this.value,o)},/**
     * Gets a value from the tree.
     *
     * @param relativePath - Path to get value for.
     * @returns Value at path, or null.
     */t.prototype.get=function(t){if(ng(t))return this.value;var e=nc(t),n=this.children.get(e);return n?n.get(nl(t)):null},/**
     * Replace the subtree at the specified path with the given new tree.
     *
     * @param relativePath - Path to replace subtree for.
     * @param newTree - New tree.
     * @returns Resulting tree.
     */t.prototype.setTree=function(e,n){if(ng(e))return n;var r=nc(e),i=(this.children.get(r)||new t(null)).setTree(nl(e),n),o=void 0;return o=i.isEmpty()?this.children.remove(r):this.children.insert(r,i),new t(this.value,o)},/**
     * Performs a depth first fold on this tree. Transforms a tree into a single
     * value, given a function that operates on the path to a node, an optional
     * current value, and a map of child names to folded subtrees
     */t.prototype.fold=function(t){return this.fold_(nu(),t)},/**
     * Recursive helper for public-facing fold() method
     */t.prototype.fold_=function(t,e){var n={};return this.children.inorderTraversal(function(r,i){n[r]=i.fold_(nv(t,r),e)}),e(t,this.value,n)},/**
     * Find the first matching value on the given path. Return the result of applying f to it.
     */t.prototype.findOnPath=function(t,e){return this.findOnPath_(t,nu(),e)},t.prototype.findOnPath_=function(t,e,n){var r=!!this.value&&n(e,this.value);if(r)return r;if(ng(t))return null;var i=nc(t),o=this.children.get(i);return o?o.findOnPath_(nl(t),nv(e,i),n):null},t.prototype.foreachOnPath=function(t,e){return this.foreachOnPath_(t,nu(),e)},t.prototype.foreachOnPath_=function(e,n,r){if(ng(e))return this;this.value&&r(n,this.value);var i=nc(e),o=this.children.get(i);return o?o.foreachOnPath_(nl(e),nv(n,i),r):new t(null)},/**
     * Calls the given function for each node in the tree that has a value.
     *
     * @param f - A function to be called with the path from the root of the tree to
     * a node, and the value at that node. Called in depth-first order.
     */t.prototype.foreach=function(t){this.foreach_(nu(),t)},t.prototype.foreach_=function(t,e){this.children.inorderTraversal(function(n,r){r.foreach_(nv(t,n),e)}),this.value&&e(t,this.value)},t.prototype.foreachChild=function(t){this.children.inorderTraversal(function(e,n){n.value&&t(e,n.value)})},t}(),rC=/** @class */function(){function t(t){this.writeTree_=t}return t.empty=function(){return new t(new rS(null))},t}();function rk(t,e,n){if(ng(e))return new rC(new rS(n));var r=t.writeTree_.findRootMostValueAndPath(e);if(null!=r){var i=r.path,o=r.value,a=nm(i,e);return o=o.updateChild(a,n),new rC(t.writeTree_.set(i,o))}var s=new rS(n),u=t.writeTree_.setTree(e,s);return new rC(u)}function rN(t,e,n){var r=t;return eB(n,function(t,n){r=rk(r,nv(e,t),n)}),r}/**
 * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher
 * location, which must be removed by calling this method with that path.
 *
 * @param compoundWrite - The CompoundWrite to remove.
 * @param path - The path at which a write and all deeper writes should be removed
 * @returns The new CompoundWrite with the removed path
 */function rA(t,e){if(ng(e))return rC.empty();var n=t.writeTree_.setTree(e,new rS(null));return new rC(n)}/**
 * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be
 * considered "complete".
 *
 * @param compoundWrite - The CompoundWrite to check.
 * @param path - The path to check for
 * @returns Whether there is a complete write at that path
 */function rR(t,e){return null!=rx(t,e)}/**
 * Returns a node for a path if and only if the node is a "complete" overwrite at that path. This will not aggregate
 * writes from deeper paths, but will return child nodes from a more shallow path.
 *
 * @param compoundWrite - The CompoundWrite to get the node from.
 * @param path - The path to get a complete write
 * @returns The node if complete at that path, or null otherwise.
 */function rx(t,e){var n=t.writeTree_.findRootMostValueAndPath(e);return null!=n?t.writeTree_.get(n.path).getChild(nm(n.path,e)):null}/**
 * Returns all children that are guaranteed to be a complete overwrite.
 *
 * @param compoundWrite - The CompoundWrite to get children from.
 * @returns A list of all complete children.
 */function rP(t){var e=[],n=t.writeTree_.value;return null!=n?n.isLeafNode()||n.forEachChild(nU,function(t,n){e.push(new nC(t,n))}):t.writeTree_.children.inorderTraversal(function(t,n){null!=n.value&&e.push(new nC(t,n.value))}),e}function rD(t,e){if(ng(e))return t;var n=rx(t,e);return new rC(null!=n?new rS(n):t.writeTree_.subtree(e))}/**
 * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.
 * @returns Whether this CompoundWrite is empty
 */function rO(t){return t.writeTree_.isEmpty()}/**
 * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the
 * node
 * @param node - The node to apply this CompoundWrite to
 * @returns The node with all writes applied
 */function rL(t,e){return function t(e,n,r){if(null!=n.value)return r.updateChild(e,n.value);var i=null;return n.children.inorderTraversal(function(n,o){".priority"===n?(Y(null!==o.value,"Priority writes must always be leaf nodes"),i=o.value):r=t(nv(e,n),o,r)}),r.getChild(e).isEmpty()||null===i||(r=r.updateChild(nv(e,".priority"),i)),r}(nu(),t.writeTree_,e)}/**
 * The default filter used when constructing the tree. Keep everything that's visible.
 */function rM(t){return t.visible}/**
 * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of
 * event data at that path.
 */function rF(t,e,n){for(var r=rC.empty(),i=0;i<t.length;++i){var o=t[i];// Theory, a later set will either:
// a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction
// b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction
if(e(o)){var a=o.path,s=void 0;if(o.snap)nb(n,a)?r=rk(r,s=nm(n,a),o.snap):nb(a,n)&&(s=nm(a,n),r=rk(r,nu(),o.snap.getChild(s)));else if(o.children){if(nb(n,a))r=rN(r,s=nm(n,a),o.children);else if(nb(a,n)){if(ng(s=nm(a,n)))r=rN(r,nu(),o.children);else{var u=tC(o.children,nc(s));if(u){// There exists a child in this node that matches the root path
var c=u.getChild(nl(s));r=rk(r,nu(),c)}}}}else throw X("WriteRecord should have .snap or .children")}}return r}/**
 * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden
 * writes), attempt to calculate a complete snapshot for the given path
 *
 * @param writeIdsToExclude - An optional set to be excluded
 * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false
 */function rj(t,e,n,r,i){if(r||i){var o=rD(t.visibleWrites,e);if(!i&&rO(o))return n;// If the server cache is null, and we don't have a complete cache, we need to return null
if(!i&&null==n&&!rR(o,nu()))return null;var a=rF(t.allWrites,function(t){return(t.visible||i)&&(!r||!~r.indexOf(t.writeId))&&(nb(t.path,e)||nb(e,t.path))},e),s=n||nW.EMPTY_NODE;return rL(a,s)}var u=rx(t.visibleWrites,e);if(null!=u)return u;var c=rD(t.visibleWrites,e);if(rO(c))return n;if(null==n&&!rR(c,nu()))return null;var s=n||nW.EMPTY_NODE;return rL(c,s)}/**
 * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used
 * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node
 * can lead to a more expensive calculation.
 *
 * @param writeIdsToExclude - Optional writes to exclude.
 * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false
 */function rU(t,e,n,r){return rj(t.writeTree,t.treePath,e,n,r)}/**
 * If possible, returns a children node containing all of the complete children we have data for. The returned data is a
 * mix of the given server data and write data.
 *
 */function rq(t,e){return(/**
 * With optional, underlying server data, attempt to return a children node of children that we have complete data for.
 * Used when creating new views, to pre-fill their complete event children snapshot.
 */function(t,e,n){var r=nW.EMPTY_NODE,i=rx(t.visibleWrites,e);if(i)return i.isLeafNode()||i.forEachChild(nU,function(t,e){r=r.updateImmediateChild(t,e)}),r;if(!n)return rP(rD(t.visibleWrites,e)).forEach(function(t){r=r.updateImmediateChild(t.name,t.node)}),r;// Layer any children we have on top of this
// We know we don't have a top-level set, so just enumerate existing children
var o=rD(t.visibleWrites,e);return n.forEachChild(nU,function(t,e){var n=rL(rD(o,new ns(t)),e);r=r.updateImmediateChild(t,n)}),// Add any complete children we have from the set
rP(o).forEach(function(t){r=r.updateImmediateChild(t.name,t.node)}),r}(t.writeTree,t.treePath,e))}/**
 * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,
 * if anything, needs to be applied to the event cache.
 *
 * Possibilities:
 *
 * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data
 *
 * 2. Some write is completely shadowing. No events to be raised
 *
 * 3. Is partially shadowed. Events should be raised
 *
 * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert
 *
 *
 */function rV(t,e,n,r){return(/**
 * Given that the underlying server data has updated, determine what, if anything, needs to be
 * applied to the event cache.
 *
 * Possibilities:
 *
 * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data
 *
 * 2. Some write is completely shadowing. No events to be raised
 *
 * 3. Is partially shadowed. Events
 *
 * Either existingEventSnap or existingServerSnap must exist
 */function(t,e,n,r,i){Y(r||i,"Either existingEventSnap or existingServerSnap must exist");var o=nv(e,n);if(rR(t.visibleWrites,o))// May need to check visibility while doing the findRootMostValueAndPath call
return null;// No complete shadowing. We're either partially shadowing or not shadowing at all.
var a=rD(t.visibleWrites,o);return rO(a)?i.getChild(n):rL(a,i.getChild(n))}(t.writeTree,t.treePath,e,n,r))}/**
 * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at
 * a higher path, this will return the child of that write relative to the write and this path.
 * Returns null if there is no write at this path.
 *
 */function rB(t,e){var n,r;return n=t.writeTree,r=nv(t.treePath,e),rx(n.visibleWrites,r)}/**
 * Returns a complete child for a given server snap after applying all user writes or null if there is no
 * complete child for this ChildKey.
 */function rK(t,e,n){var r,i,o;return r=t.writeTree,i=nv(t.treePath,e),null!=(o=rx(r.visibleWrites,i))?o:n.isCompleteForChild(e)?rL(rD(r.visibleWrites,i),n.getNode().getImmediateChild(e)):null}/**
 * Return a WriteTreeRef for a child.
 */function rH(t,e){return rW(nv(t.treePath,e),t.writeTree)}function rW(t,e){return{treePath:t,writeTree:e}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var rz=/** @class */function(){function t(){this.changeMap=new Map}return t.prototype.trackChildChange=function(t){var e=t.type,n=t.childName;Y("child_added"/* CHILD_ADDED */===e||"child_changed"/* CHILD_CHANGED */===e||"child_removed"/* CHILD_REMOVED */===e,"Only child changes supported for tracking"),Y(".priority"!==n,"Only non-priority child changes can be tracked.");var r=this.changeMap.get(n);if(r){var i=r.type;if("child_added"/* CHILD_ADDED */===e&&"child_removed"/* CHILD_REMOVED */===i)this.changeMap.set(n,n4(n,t.snapshotNode,r.snapshotNode));else if("child_removed"/* CHILD_REMOVED */===e&&"child_added"/* CHILD_ADDED */===i)this.changeMap.delete(n);else if("child_removed"/* CHILD_REMOVED */===e&&"child_changed"/* CHILD_CHANGED */===i)this.changeMap.set(n,n2(n,r.oldSnap));else if("child_changed"/* CHILD_CHANGED */===e&&"child_added"/* CHILD_ADDED */===i)this.changeMap.set(n,n1(n,t.snapshotNode));else if("child_changed"/* CHILD_CHANGED */===e&&"child_changed"/* CHILD_CHANGED */===i)this.changeMap.set(n,n4(n,t.snapshotNode,r.oldSnap));else throw X("Illegal combination of changes: "+t+" occurred after "+r)}else this.changeMap.set(n,t)},t.prototype.getChanges=function(){return Array.from(this.changeMap.values())},t}(),rG=new/** @class */(function(){function t(){}return t.prototype.getCompleteChild=function(t){return null},t.prototype.getChildAfterChild=function(t,e,n){return null},t}()),rQ=/** @class */function(){function t(t,e,n){void 0===n&&(n=null),this.writes_=t,this.viewCache_=e,this.optCompleteServerCache_=n}return t.prototype.getCompleteChild=function(t){var e=this.viewCache_.eventCache;if(e.isCompleteForChild(t))return e.getNode().getImmediateChild(t);var n=null!=this.optCompleteServerCache_?new rm(this.optCompleteServerCache_,!0,!1):this.viewCache_.serverCache;return rK(this.writes_,t,n)},t.prototype.getChildAfterChild=function(t,e,n){var r,i=null!=this.optCompleteServerCache_?this.optCompleteServerCache_:rE(this.viewCache_),o=/**
 * This method is used when processing child remove events on a query. If we can, we pull in children that were outside
 * the window, but may now be in the window.
 */function(t,e,n,r,i,o,a){var s,u=rD(t.visibleWrites,e),c=rx(u,nu());if(null!=c)s=c;else{if(null==n)return[];s=rL(u,n)}if((s=s.withIndex(a)).isEmpty()||s.isLeafNode())return[];for(var h=[],l=a.getCompare(),f=o?s.getReverseIteratorFrom(r,a):s.getIteratorFrom(r,a),p=f.getNext();p&&h.length<1;)0!==l(p,r)&&h.push(p),p=f.getNext();return h}((r=this.writes_).writeTree,r.treePath,i,e,0,n,t);return 0===o.length?null:o[0]},t}();function r$(t,e,n,r,i,o){var a=e.eventCache;if(null!=rB(r,n))return e;var s=void 0,u=void 0;if(ng(n)){if(Y(e.serverCache.isFullyInitialized(),"If change path is empty, we must have complete server data"),e.serverCache.isFiltered()){// We need to special case this, because we need to only apply writes to complete children, or
// we might end up raising events for incomplete children. If the server data is filtered deep
// writes cannot be guaranteed to be complete
var c=rE(e),h=rq(r,c instanceof nW?c:nW.EMPTY_NODE);s=t.filter.updateFullNode(e.eventCache.getNode(),h,o)}else{var l=rU(r,rE(e));s=t.filter.updateFullNode(e.eventCache.getNode(),l,o)}}else{var f=nc(n);if(".priority"===f){Y(1===nh(n),"Can't have a priority with additional path components");var p=a.getNode(),d=rV(r,n,p,u=e.serverCache.getNode());s=null!=d?t.filter.updatePriority(p,d):a.getNode()}else{var v=nl(n),g=void 0;if(a.isCompleteForChild(f)){u=e.serverCache.getNode();var m=rV(r,n,a.getNode(),u);g=null!=m?a.getNode().getImmediateChild(f).updateChild(v,m):a.getNode().getImmediateChild(f)}else g=rK(r,f,e.serverCache);s=null!=g?t.filter.updateChild(a.getNode(),f,g,v,i,o):a.getNode()}}return rw(e,s,a.isFullyInitialized()||ng(n),t.filter.filtersNodes())}function rY(t,e,n,r,i,o,a,s){var u,c=e.serverCache,h=a?t.filter:t.filter.getIndexedFilter();if(ng(n))u=h.updateFullNode(c.getNode(),r,null);else if(h.filtersNodes()&&!c.isFiltered()){// we want to filter the server node, but we didn't filter the server node yet, so simulate a full update
var l=c.getNode().updateChild(n,r);u=h.updateFullNode(c.getNode(),l,null)}else{var f=nc(n);if(!c.isCompleteForPath(n)&&nh(n)>1)return e;var p=nl(n),d=c.getNode().getImmediateChild(f).updateChild(p,r);u=".priority"===f?h.updatePriority(c.getNode(),d):h.updateChild(c.getNode(),f,d,p,rG,null)}var v=rI(e,u,c.isFullyInitialized()||ng(n),h.filtersNodes()),g=new rQ(i,v,o);return r$(t,v,n,i,g,s)}function rX(t,e,n,r,i,o,a){var s,u,c=e.eventCache,h=new rQ(i,e,o);if(ng(n))u=t.filter.updateFullNode(e.eventCache.getNode(),r,a),s=rw(e,u,!0,t.filter.filtersNodes());else{var l=nc(n);if(".priority"===l)u=t.filter.updatePriority(e.eventCache.getNode(),r),s=rw(e,u,c.isFullyInitialized(),c.isFiltered());else{var f=nl(n),p=c.getNode().getImmediateChild(l),d=void 0;if(ng(f))d=r;else{var v=h.getCompleteChild(l);// server will send down the priority in the update, so ignore for now
d=null!=v?".priority"===nf(f)&&v.getChild(nd(f)).isEmpty()?v:v.updateChild(f,r):nW.EMPTY_NODE}s=p.equals(d)?e:rw(e,t.filter.updateChild(c.getNode(),l,d,f,h,a),c.isFullyInitialized(),t.filter.filtersNodes())}}return s}function rJ(t,e){return t.eventCache.isCompleteForChild(e)}function rZ(t,e,n){return n.foreach(function(t,n){e=e.updateChild(t,n)}),e}function r0(t,e,n,r,i,o,a,s){// If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and
// wait for the complete data update coming soon.
if(e.serverCache.getNode().isEmpty()&&!e.serverCache.isFullyInitialized())return e;// HACK: In the case of a limit query, there may be some changes that bump things out of the
// window leaving room for new items.  It's important we process these changes first, so we
// iterate the changes twice, first processing any that affect items currently in view.
// TODO: I consider an item "in view" if cacheHasChild is true, which checks both the server
// and event snap.  I'm not sure if this will result in edge cases when a child is in one but
// not the other.
var u,c=e;u=ng(n)?r:new rS(null).setTree(n,r);var h=e.serverCache.getNode();return u.children.inorderTraversal(function(n,r){if(h.hasChild(n)){var u=rZ(t,e.serverCache.getNode().getImmediateChild(n),r);c=rY(t,c,new ns(n),u,i,o,a,s)}}),u.children.inorderTraversal(function(n,r){var u=!e.serverCache.isCompleteForChild(n)&&void 0===r.value;if(!h.hasChild(n)&&!u){var l=rZ(t,e.serverCache.getNode().getImmediateChild(n),r);c=rY(t,c,new ns(n),l,i,o,a,s)}}),c}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A view represents a specific location and query that has 1 or more event registrations.
 *
 * It does several things:
 *  - Maintains the list of event registrations for this location/query.
 *  - Maintains a cache of the data visible for this location/query.
 *  - Applies new operations (via applyOperation), updates the cache, and based on the event
 *    registrations returns the set of events to be raised.
 */var r1=/** @class */function(){function t(t,e){this.query_=t,this.eventRegistrations_=[];var n=this.query_._queryParams,r=new n3(n.getIndex()),i=n.loadsAllData()?new n3(n.getIndex()):n.hasLimit()?new n5(n):new n6(n);this.processor_={filter:i};var o=e.serverCache,a=e.eventCache,s=r.updateFullNode(nW.EMPTY_NODE,o.getNode(),null),u=i.updateFullNode(nW.EMPTY_NODE,a.getNode(),null),c=new rm(s,o.isFullyInitialized(),r.filtersNodes()),h=new rm(u,a.isFullyInitialized(),i.filtersNodes());this.viewCache_=rb(h,c),this.eventGenerator_=new ry(this.query_)}return Object.defineProperty(t.prototype,"query",{get:function(){return this.query_},enumerable:!1,configurable:!0}),t}();function r2(t){return 0===t.eventRegistrations_.length}/**
 * @param eventRegistration - If null, remove all callbacks.
 * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.
 * @returns Cancel events, if cancelError was provided.
 */function r4(t,e,n){var r=[];if(n){Y(null==e,"A cancel should cancel all event registrations.");var i=t.query._path;t.eventRegistrations_.forEach(function(t){var e=t.createCancelEvent(n,i);e&&r.push(e)})}if(e){for(var o=[],a=0;a<t.eventRegistrations_.length;++a){var s=t.eventRegistrations_[a];if(s.matches(e)){if(e.hasAnyCallback()){// We're removing just this one
o=o.concat(t.eventRegistrations_.slice(a+1));break}}else o.push(s)}t.eventRegistrations_=o}else t.eventRegistrations_=[];return r}/**
 * Applies the given Operation, updates our cache, and returns the appropriate events.
 */function r3(t,e,n,r){e.type===ak.MERGE&&null!==e.source.queryId&&(Y(rE(t.viewCache_),"We should always have a full cache before handling merges"),Y(rT(t.viewCache_),"Missing event cache, even though we have a server cache"));var i,o,a=t.viewCache_,s=function(t,e,n,r,i){var o,a,s,u,c,h,l,f=new rz;if(n.type===ak.OVERWRITE)n.source.fromUser?h=rX(t,e,n.path,n.snap,r,i,f):(Y(n.source.fromServer,"Unknown source."),// We filter the node if it's a tagged update or the node has been previously filtered  and the
// update is not at the root in which case it is ok (and necessary) to mark the node unfiltered
// again
l=n.source.tagged||e.serverCache.isFiltered()&&!ng(n.path),h=rY(t,e,n.path,n.snap,r,i,l,f));else if(n.type===ak.MERGE)n.source.fromUser?(o=n.path,a=n.children,s=e,a.foreach(function(n,a){var u=nv(o,n);rJ(e,nc(u))&&(s=rX(t,s,u,a,r,i,f))}),a.foreach(function(n,a){var u=nv(o,n);rJ(e,nc(u))||(s=rX(t,s,u,a,r,i,f))}),h=s):(Y(n.source.fromServer,"Unknown source."),// We filter the node if it's a tagged update or the node has been previously filtered
l=n.source.tagged||e.serverCache.isFiltered(),h=r0(t,e,n.path,n.children,r,i,l,f));else if(n.type===ak.ACK_USER_WRITE)h=n.revert?function(t,e,n,r,i,o){if(null!=rB(r,n))return e;var a,s=new rQ(r,e,i),u=e.eventCache.getNode(),c=void 0;if(ng(n)||".priority"===nc(n)){var h=void 0;if(e.serverCache.isFullyInitialized())h=rU(r,rE(e));else{var l=e.serverCache.getNode();Y(l instanceof nW,"serverChildren would be complete if leaf node"),h=rq(r,l)}c=t.filter.updateFullNode(u,h,o)}else{var f=nc(n),p=rK(r,f,e.serverCache);null==p&&e.serverCache.isCompleteForChild(f)&&(p=u.getImmediateChild(f)),(c=null!=p?t.filter.updateChild(u,f,p,nl(n),s,o):e.eventCache.getNode().hasChild(f)?t.filter.updateChild(u,f,nW.EMPTY_NODE,nl(n),s,o):u).isEmpty()&&e.serverCache.isFullyInitialized()&&// We might have reverted all child writes. Maybe the old event was a leaf node
(a=rU(r,rE(e))).isLeafNode()&&(c=t.filter.updateFullNode(c,a,o))}return a=e.serverCache.isFullyInitialized()||null!=rB(r,nu()),rw(e,c,a,t.filter.filtersNodes())}(t,e,n.path,r,i,f):function(t,e,n,r,i,o,a){if(null!=rB(i,n))return e;// Only filter server node if it is currently filtered
var s=e.serverCache.isFiltered(),u=e.serverCache;if(null!=r.value){// This is an overwrite.
if(ng(n)&&u.isFullyInitialized()||u.isCompleteForPath(n))return rY(t,e,n,u.getNode().getChild(n),i,o,s,a);if(!ng(n))return e;// This is a goofy edge case where we are acking data at this location but don't have full data.  We
// should just re-apply whatever we have in our cache as a merge.
var c=new rS(null);return u.getNode().forEachChild(nA,function(t,e){c=c.set(new ns(t),e)}),r0(t,e,n,c,i,o,s,a)}// This is a merge.
var h=new rS(null);return r.foreach(function(t,e){var r=nv(n,t);u.isCompleteForPath(r)&&(h=h.set(t,u.getNode().getChild(r)))}),r0(t,e,n,h,i,o,s,a)}(t,e,n.path,n.affectedTree,r,i,f);else if(n.type===ak.LISTEN_COMPLETE)u=n.path,c=e.serverCache,h=r$(t,rI(e,c.getNode(),c.isFullyInitialized()||ng(u),c.isFiltered()),u,r,rG,f);else throw X("Unknown operation type: "+n.type);var p=f.getChanges();return function(t,e,n){var r=e.eventCache;if(r.isFullyInitialized()){var i=r.getNode().isLeafNode()||r.getNode().isEmpty(),o=rT(t);!(n.length>0)&&t.eventCache.isFullyInitialized()&&(!i||r.getNode().equals(o))&&r.getNode().getPriority().equals(o.getPriority())||n.push(n0(rT(e)))}}(e,h,p),{viewCache:h,changes:p}}(t.processor_,a,e,n,r);return i=t.processor_,Y((o=s.viewCache).eventCache.getNode().isIndexed(i.filter.getIndex()),"Event snap not indexed"),Y(o.serverCache.getNode().isIndexed(i.filter.getIndex()),"Server snap not indexed"),Y(s.viewCache.serverCache.isFullyInitialized()||!a.serverCache.isFullyInitialized(),"Once a server snap is complete, it should never go back"),t.viewCache_=s.viewCache,r6(t,s.changes,s.viewCache.eventCache.getNode(),null)}function r6(t,e,n,r){var i,o,a,s=r?[r]:t.eventRegistrations_;return i=t.eventGenerator_,o=[],a=[],e.forEach(function(t){if("child_changed"/* CHILD_CHANGED */===t.type&&i.index_.indexedValueChanged(t.oldSnap,t.snapshotNode)){var e;a.push((e=t.childName,{type:"child_moved"/* CHILD_MOVED */,snapshotNode:t.snapshotNode,childName:e}))}}),r_(i,o,"child_removed"/* CHILD_REMOVED */,e,s,n),r_(i,o,"child_added"/* CHILD_ADDED */,e,s,n),r_(i,o,"child_moved"/* CHILD_MOVED */,a,s,n),r_(i,o,"child_changed"/* CHILD_CHANGED */,e,s,n),r_(i,o,"value"/* VALUE */,e,s,n),o}/**
 * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to
 * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes
 * and user writes (set, transaction, update).
 *
 * It's responsible for:
 *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).
 *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,
 *    applyUserOverwrite, etc.)
 */var r5=function(){/**
         * The Views being tracked at this location in the tree, stored as a map where the key is a
         * queryId and the value is the View for that query.
         *
         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).
         */this.views=new Map};function r8(t,e,n,r){var i,o,a=e.source.queryId;if(null!==a){var s=t.views.get(a);return Y(null!=s,"SyncTree gave us an op for an invalid query."),r3(s,e,n,r)}var u=[];try{for(var c=z(t.views.values()),h=c.next();!h.done;h=c.next()){var s=h.value;u=u.concat(r3(s,e,n,r))}}catch(t){i={error:t}}finally{try{h&&!h.done&&(o=c.return)&&o.call(c)}finally{if(i)throw i.error}}return u}/**
 * Get a view for the specified query.
 *
 * @param query - The query to return a view for
 * @param writesCache
 * @param serverCache
 * @param serverCacheComplete
 * @returns Events to raise.
 */function r7(t,e,n,r,i){var o=e._queryIdentifier,a=t.views.get(o);if(!a){// TODO: make writesCache take flag for complete server node
var s=rU(n,i?r:null),u=!1;s?u=!0:(s=r instanceof nW?rq(n,r):nW.EMPTY_NODE,u=!1);var c=rb(new rm(s,u,!1),new rm(r,i,!1));return new r1(e,c)}return a}function r9(t){var e,n,r=[];try{for(var i=z(t.views.values()),o=i.next();!o.done;o=i.next()){var a=o.value;a.query._queryParams.loadsAllData()||r.push(a)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r}/**
 * @param path - The path to the desired complete snapshot
 * @returns A complete cache, if it exists
 */function it(t,e){var n,r,i=null;try{for(var o=z(t.views.values()),a=o.next();!a.done;a=o.next()){var s=a.value;i=i||function(t,e){var n=rE(t.viewCache_);return n&&(t.query._queryParams.loadsAllData()||!ng(e)&&!n.getImmediateChild(nc(e)).isEmpty())?n.getChild(e):null}(s,e)}}catch(t){n={error:t}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}return i}function ie(t,e){if(e._queryParams.loadsAllData())return ii(t);var n=e._queryIdentifier;return t.views.get(n)}function ir(t){return null!=ii(t)}function ii(t){var e,n;try{for(var r=z(t.views.values()),i=r.next();!i.done;i=r.next()){var o=i.value;if(o.query._queryParams.loadsAllData())return o}}catch(t){e={error:t}}finally{try{i&&!i.done&&(n=r.return)&&n.call(r)}finally{if(e)throw e.error}}return null}/**
 * Static tracker for next query tag.
 */var io=1,ia=/**
     * @param listenProvider_ - Used by SyncTree to start / stop listening
     *   to server data.
     */function(t){this.listenProvider_=t,/**
         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.
         */this.syncPointTree_=new rS(null),/**
         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).
         */this.pendingWriteTree_={visibleWrites:rC.empty(),allWrites:[],lastWriteId:-1},this.tagToQueryMap=new Map,this.queryToTagMap=new Map};/**
 * Apply the data changes for a user-generated set() or transaction() call.
 *
 * @returns Events to raise.
 */function is(t,e,n,r,i){var o,a;return(o=t.pendingWriteTree_,a=i,Y(r>o.lastWriteId,"Stacking an older write on top of newer ones"),void 0===a&&(a=!0),o.allWrites.push({path:e,snap:n,writeId:r,visible:a}),a&&(o.visibleWrites=rk(o.visibleWrites,e,n)),o.lastWriteId=r,i)?id(t,new rv(rh(),e,n)):[]}/**
 * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().
 *
 * @param revert - True if the given write failed and needs to be reverted
 * @returns Events to raise.
 */function iu(t,e,n){void 0===n&&(n=!1);var r=function(t,e){for(var n=0;n<t.allWrites.length;n++){var r=t.allWrites[n];if(r.writeId===e)return r}return null}(t.pendingWriteTree_,e);if(!/**
 * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates
 * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.
 *
 * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise
 * events as a result).
 */function(t,e){// Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied
// out of order.
//const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;
//assert(validClear, "Either we don't have this write, or it's the first one in the queue");
var n=t.allWrites.findIndex(function(t){return t.writeId===e});Y(n>=0,"removeWrite called with nonexistent writeId.");var r=t.allWrites[n];t.allWrites.splice(n,1);for(var i=r.visible,o=!1,a=t.allWrites.length-1;i&&a>=0;){var s=t.allWrites[a];s.visible&&(a>=n&&function(t,e){if(t.snap)return nb(t.path,e);for(var n in t.children)if(t.children.hasOwnProperty(n)&&nb(nv(t.path,n),e))return!0;return!1}(s,r.path)?i=!1:nb(r.path,s.path)&&(o=!0)),a--}return!!i&&(o?(t.visibleWrites=rF(t.allWrites,rM,nu()),t.allWrites.length>0?t.lastWriteId=t.allWrites[t.allWrites.length-1].writeId:t.lastWriteId=-1):r.snap?t.visibleWrites=rA(t.visibleWrites,r.path):eB(r.children,function(e){t.visibleWrites=rA(t.visibleWrites,nv(r.path,e))}),!0)}(t.pendingWriteTree_,e))return[];var i=new rS(null);return null!=r.snap?i=i.set(nu(),!0):eB(r.children,function(t){i=i.set(new ns(t),!0)}),id(t,new rp(r.path,i,n))}/**
 * Apply new server data for the specified path..
 *
 * @returns Events to raise.
 */function ic(t,e,n){return id(t,new rv(rl(),e,n))}/**
 * Remove event callback(s).
 *
 * If query is the default query, we'll check all queries for the specified eventRegistration.
 * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.
 *
 * @param eventRegistration - If null, all callbacks are removed.
 * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.
 * @returns Cancel events, if cancelError was provided.
 */function ih(t,e,n,r){// Find the syncPoint first. Then deal with whether or not it has matching listeners
var i=e._path,o=t.syncPointTree_.get(i),a=[];// A removal on a default query affects all queries at that location. A removal on an indexed query, even one without
// other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and
// not loadsAllData().
if(o&&("default"===e._queryIdentifier||null!=ie(o,e))){var s=/**
 * Remove event callback(s).  Return cancelEvents if a cancelError is specified.
 *
 * If query is the default query, we'll check all views for the specified eventRegistration.
 * If eventRegistration is null, we'll remove all callbacks for the specified view(s).
 *
 * @param eventRegistration - If null, remove all callbacks.
 * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.
 * @returns removed queries and any cancel events
 */function(t,e,n,r){var i,o,a=e._queryIdentifier,s=[],u=[],c=ir(t);if("default"===a)try{// When you do ref.off(...), we search all views for the registration to remove.
for(var h=z(t.views.entries()),l=h.next();!l.done;l=h.next()){var f=G(l.value,2),p=f[0],d=f[1];u=u.concat(r4(d,n,r)),r2(d)&&(t.views.delete(p),d.query._queryParams.loadsAllData()||s.push(d.query))}}catch(t){i={error:t}}finally{try{l&&!l.done&&(o=h.return)&&o.call(h)}finally{if(i)throw i.error}}else{// remove the callback from the specific view.
var d=t.views.get(a);d&&(u=u.concat(r4(d,n,r)),r2(d)&&(t.views.delete(a),d.query._queryParams.loadsAllData()||s.push(d.query)))}return c&&!ir(t)&&s.push(new(Y(aA,"Reference.ts has not been loaded"),aA)(e._repo,e._path)),{removed:s,events:u}}(o,e,n,r);0===o.views.size&&(t.syncPointTree_=t.syncPointTree_.remove(i));var u=s.removed;a=s.events;// We may have just removed one of many listeners and can short-circuit this whole process
// We may also not have removed a default listener, in which case all of the descendant listeners should already be
// properly set up.
//
// Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of
// queryId === 'default'
var c=-1!==u.findIndex(function(t){return t._queryParams.loadsAllData()}),h=t.syncPointTree_.findOnPath(i,function(t,e){return ir(e)});if(c&&!h){var l=t.syncPointTree_.subtree(i);// There are potentially child listeners. Determine what if any listens we need to send before executing the
// removal
if(!l.isEmpty())// Ok, we've collected all the listens we need. Set them up.
for(var f=l.fold(function(t,e,n){if(e&&ir(e))return[ii(e)];// No complete view here, flatten any deeper listens into an array
var r=[];return e&&(r=r9(e)),eB(n,function(t,e){r=r.concat(e)}),r}),p=0;p<f.length;++p){var d=f[p],v=d.query,g=iv(t,d);t.listenProvider_.startListening(iw(v),ig(t,v),g.hashFn,g.onComplete)}}h||!(u.length>0)||r||(c?t.listenProvider_.stopListening(iw(e),null):u.forEach(function(e){var n=t.queryToTagMap.get(im(e));t.listenProvider_.stopListening(iw(e),n)})),// Now, clear all of the tags we're tracking for the removed listens
function(t,e){for(var n=0;n<e.length;++n){var r=e[n];if(!r._queryParams.loadsAllData()){// We should have a tag for this
var i=im(r),o=t.queryToTagMap.get(i);t.queryToTagMap.delete(i),t.tagToQueryMap.delete(o)}}}(t,u)}return a}/**
 * Add an event callback for the specified query.
 *
 * @returns Events to raise.
 */function il(t,e,n){var r,i,o,a,s,u=e._path,c=null,h=!1;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.
// Consider optimizing this once there's a better understanding of what actual behavior will be.
t.syncPointTree_.foreachOnPath(u,function(t,e){var n=nm(t,u);c=c||it(e,n),h=h||ir(e)});var l=t.syncPointTree_.get(u);l?(h=h||ir(l),c=c||it(l,nu())):(l=new r5,t.syncPointTree_=t.syncPointTree_.set(u,l)),null!=c?s=!0:(s=!1,c=nW.EMPTY_NODE,t.syncPointTree_.subtree(u).foreachChild(function(t,e){var n=it(e,nu());n&&(c=c.updateImmediateChild(t,n))}));var f=null!=ie(l,e);if(!f&&!e._queryParams.loadsAllData()){// We need to track a tag for this query
var p=im(e);Y(!t.queryToTagMap.has(p),"View does not exist, but we have a tag");var d=io++;t.queryToTagMap.set(p,d),t.tagToQueryMap.set(d,p)}var v=rW(u,t.pendingWriteTree_),g=(i=r7(r=l,e,v,c,s),r.views.has(e._queryIdentifier)||r.views.set(e._queryIdentifier,i),!// This is guaranteed to exist now, we just created anything that was missing
function(t,e){t.eventRegistrations_.push(e)}(i,n),o=i.viewCache_.eventCache,a=[],o.getNode().isLeafNode()||o.getNode().forEachChild(nU,function(t,e){a.push(n1(t,e))}),o.isFullyInitialized()&&a.push(n0(o.getNode())),r6(i,a,o.getNode(),n));if(!f&&!h){var m=ie(l,e);g=g.concat(/**
 * For a given new listen, manage the de-duplication of outstanding subscriptions.
 *
 * @returns This method can return events to support synchronous data sources
 */function(t,e,n){var r=e._path,i=ig(t,e),o=iv(t,n),a=t.listenProvider_.startListening(iw(e),i,o.hashFn,o.onComplete),s=t.syncPointTree_.subtree(r);// The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we
// may need to shadow other listens as well.
if(i)Y(!ir(s.value),"If we're adding a query, it shouldn't be shadowed");else for(var u=s.fold(function(t,e,n){if(!ng(t)&&e&&ir(e))return[ii(e).query];// No default listener here, flatten any deeper queries into an array
var r=[];return e&&(r=r.concat(r9(e).map(function(t){return t.query}))),eB(n,function(t,e){r=r.concat(e)}),r}),c=0;c<u.length;++c){var h=u[c];t.listenProvider_.stopListening(iw(h),ig(t,h))}return a}(t,e,m))}return g}/**
 * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a
 * listener above it, we will get a false "null". This shouldn't be a problem because transactions will always
 * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->
 *     <incremented total> as the write is applied locally and then acknowledged at the server.
 *
 * Note: this method will *include* hidden writes from transaction with applyLocally set to false.
 *
 * @param path - The path to the data we want
 * @param writeIdsToExclude - A specific set to be excluded
 */function ip(t,e,n){var r=t.pendingWriteTree_,i=t.syncPointTree_.findOnPath(e,function(t,n){var r=it(n,nm(t,e));if(r)return r});return rj(r,e,i,n,!0)}/**
 * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.
 *
 * NOTES:
 * - Descendant SyncPoints will be visited first (since we raise events depth-first).
 *
 * - We call applyOperation() on each SyncPoint passing three things:
 *   1. A version of the Operation that has been made relative to the SyncPoint location.
 *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.
 *   3. A snapshot Node with cached server data, if we have it.
 *
 * - We concatenate all of the events returned by each SyncPoint and return the result.
 */function id(t,e){var n;return(/**
 * Recursive helper for applyOperationToSyncPoints_
 */function t(e,n,r,i){if(ng(e.path))return(/**
 * Recursive helper for applyOperationToSyncPoints_
 */function t(e,n,r,i){var o=n.get(nu());null==r&&null!=o&&(r=it(o,nu()));var a=[];return n.children.inorderTraversal(function(n,o){var s=r?r.getImmediateChild(n):null,u=rH(i,n),c=e.operationForChild(n);c&&(a=a.concat(t(c,o,s,u)))}),o&&(a=a.concat(r8(o,e,i,r))),a}(e,n,r,i));var o=n.get(nu());null==r&&null!=o&&(r=it(o,nu()));var a=[],s=nc(e.path),u=e.operationForChild(s),c=n.children.get(s);if(c&&u){var h=r?r.getImmediateChild(s):null,l=rH(i,s);a=a.concat(t(u,c,h,l))}return o&&(a=a.concat(r8(o,e,i,r))),a}(e,t.syncPointTree_,/*serverCache=*/null,(n=t.pendingWriteTree_,rW(nu(),n))))}function iv(t,e){var n=e.query,r=ig(t,n);return{hashFn:function(){return(e.viewCache_.serverCache.getNode()||nW.EMPTY_NODE).hash()},onComplete:function(e){if("ok"===e)return r?/**
 * Apply a listen complete for a tagged query
 *
 * @returns Events to raise.
 */function(t,e,n){var r=iy(t,n);if(!r)return[];var i=i_(r),o=i.path,a=i.queryId,s=nm(o,e);return ib(t,o,new rd(rf(a),s))}(t,n._path,r):(i=n._path,id(t,new rd(rl(),i)));// If a listen failed, kill all of the listeners here, not just the one that triggered the error.
// Note that this may need to be scoped to just this listener if we change permissions on filtered children
var i,o,a,s=(o="Unknown Error","too_big"===e?o="The data requested exceeds the maximum size that can be accessed with a single request.":"permission_denied"===e?o="Client doesn't have permission to access the desired data.":"unavailable"===e&&(o="The service is unavailable"),// eslint-disable-next-line @typescript-eslint/no-explicit-any
(a=Error(e+" at "+n._path.toString()+": "+o)).code=e.toUpperCase(),a);return ih(t,n,/*eventRegistration*/null,s)}}}/**
 * Return the tag associated with the given query.
 */function ig(t,e){var n=im(e);return t.queryToTagMap.get(n)}/**
 * Given a query, computes a "queryKey" suitable for use in our queryToTagMap_.
 */function im(t){return t._path.toString()+"$"+t._queryIdentifier}/**
 * Return the query associated with the given tag, if we have one
 */function iy(t,e){return t.tagToQueryMap.get(e)}/**
 * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.
 */function i_(t){var e=t.indexOf("$");return Y(-1!==e&&e<t.length-1,"Bad queryKey."),{queryId:t.substr(e+1),path:new ns(t.substr(0,e))}}/**
 * A helper method to apply tagged operations
 */function ib(t,e,n){var r=t.syncPointTree_.get(e);return Y(r,"Missing sync point for query tag that we're tracking"),r8(r,n,rW(e,t.pendingWriteTree_),null)}/**
 * Normalizes a query to a query we send the server for listening
 *
 * @returns The normalized query
 */function iw(t){return t._queryParams.loadsAllData()&&!t._queryParams.isDefault()?new(Y(aR,"Reference.ts has not been loaded"),aR)(t._repo,t._path):t}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var iI=/** @class */function(){function t(t){this.node_=t}return t.prototype.getImmediateChild=function(e){var n=this.node_.getImmediateChild(e);return new t(n)},t.prototype.node=function(){return this.node_},t}(),iT=/** @class */function(){function t(t,e){this.syncTree_=t,this.path_=e}return t.prototype.getImmediateChild=function(e){var n=nv(this.path_,e);return new t(this.syncTree_,n)},t.prototype.node=function(){return ip(this.syncTree_,this.path_)},t}(),iE=function(t,e,n){return t&&"object"==typeof t?(Y(".sv"in t,"Unexpected leaf node or priority contents"),"string"==typeof t[".sv"])?iS(t[".sv"],e,n):"object"==typeof t[".sv"]?iC(t[".sv"],e):void Y(!1,"Unexpected server value: "+JSON.stringify(t,null,2)):t},iS=function(t,e,n){if("timestamp"===t)return n.timestamp;Y(!1,"Unexpected server value: "+t)},iC=function(t,e,n){t.hasOwnProperty("increment")||Y(!1,"Unexpected server value: "+JSON.stringify(t,null,2));var r=t.increment;"number"!=typeof r&&Y(!1,"Unexpected increment value: "+r);var i=e.node();// Incrementing a non-number sets the value to the incremented amount
if(Y(null!=i,"Expected ChildrenNode.EMPTY_NODE for nulls"),!i.isLeafNode())return r;var o=i.getValue();return"number"!=typeof o?r:o+r},ik=function(t,e,n,r){return iA(e,new iT(n,t),r)},iN=function(t,e,n){return iA(t,new iI(e),n)};function iA(t,e,n){var r,i=iE(t.getPriority().val(),e.getImmediateChild(".priority"),n);if(!t.isLeafNode())return r=t,i!==t.getPriority().val()&&(r=r.updatePriority(new nj(i))),t.forEachChild(nU,function(t,i){var o=iA(i,e.getImmediateChild(t),n);o!==i&&(r=r.updateImmediateChild(t,o))}),r;var o=iE(t.getValue(),e,n);return o!==t.getValue()||i!==t.getPriority().val()?new nj(o,nG(i)):t}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A light-weight tree, traversable by path.  Nodes can have both values and children.
 * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty
 * children.
 */var iR=/**
     * @param name - Optional name of the node.
     * @param parent - Optional parent node.
     * @param node - Optional node to wrap.
     */function(t,e,n){void 0===t&&(t=""),void 0===e&&(e=null),void 0===n&&(n={children:{},childCount:0}),this.name=t,this.parent=e,this.node=n};/**
 * Returns a sub-Tree for the given path.
 *
 * @param pathObj - Path to look up.
 * @returns Tree for path.
 */function ix(t,e){for(// TODO: Require pathObj to be Path?
var n=e instanceof ns?e:new ns(e),r=t,i=nc(n);null!==i;){var o=tC(r.node.children,i)||{children:{},childCount:0};r=new iR(i,r,o),i=nc(n=nl(n))}return r}/**
 * Returns the data associated with this tree node.
 *
 * @returns The data or null if no data exists.
 */function iP(t){return t.node.value}/**
 * Sets data to this tree node.
 *
 * @param value - Value to set.
 */function iD(t,e){t.node.value=e,/**
 * Adds or removes this child from its parent based on whether it's empty or not.
 */function t(e){var n,r,i,o,a;null!==e.parent&&(n=e.parent,r=e.name,o=void 0===iP(i=e)&&!iO(i),a=tS(n.node.children,r),o&&a?(delete n.node.children[r],n.node.childCount--,t(n)):o||a||(n.node.children[r]=i.node,n.node.childCount++,t(n)))}(t)}/**
 * @returns Whether the tree has any children.
 */function iO(t){return t.node.childCount>0}/**
 * Calls action for each child of this tree node.
 *
 * @param action - Action to be called for each child.
 */function iL(t,e){eB(t.node.children,function(n,r){e(new iR(n,t,r))})}/**
 * @returns The path of this tree node, as a Path.
 */function iM(t){return new ns(null===t.parent?t.name:iM(t.parent)+"/"+t.name)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * True for invalid Firebase keys
 */var iF=/[\[\].#$\/\u0000-\u001F\u007F]/,ij=/[\[\].#$\u0000-\u001F\u007F]/,iU=function(t){return"string"==typeof t&&0!==t.length&&!iF.test(t)},iq=function(t){return"string"==typeof t&&0!==t.length&&!ij.test(t)},iV=function(t){return null===t||"string"==typeof t||"number"==typeof t&&!eD(t)||t&&"object"==typeof t&&tS(t,".sv")},iB=function(t,e,n,r){r&&void 0===e||iK(tO(t,"value"),e,n)},iK=function(t,e,n){var r=n instanceof ns?new nw(n,t):n;if(void 0===e)throw Error(t+"contains undefined "+nT(r));if("function"==typeof e)throw Error(t+"contains a function "+nT(r)+" with contents = "+e.toString());if(eD(e))throw Error(t+"contains "+e.toString()+" "+nT(r));// Check max leaf size, but try to avoid the utf8 conversion if we can.
if("string"==typeof e&&e.length>10485760/3&&tj(e)>10485760)throw Error(t+"contains a string greater than 10485760 utf8 bytes "+nT(r)+" ('"+e.substring(0,50)+"...')");// TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON
// to save extra walking of large objects.
if(e&&"object"==typeof e){var i=!1,o=!1;if(eB(e,function(e,n){var a;if(".value"===e)i=!0;else if(".priority"!==e&&".sv"!==e&&(o=!0,!iU(e)))throw Error(t+" contains an invalid key ("+e+") "+nT(r)+'.  Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"');r.parts_.length>0&&(r.byteLength_+=1),r.parts_.push(e),r.byteLength_+=tj(e),nI(r),iK(t,n,r),a=r.parts_.pop(),r.byteLength_-=tj(a),r.parts_.length>0&&(r.byteLength_-=1)}),i&&o)throw Error(t+' contains ".value" child '+nT(r)+" in addition to actual children.")}},iH=function(t,e){for(n=0;n<e.length;n++)for(var n,r,i=np(r=e[n]),o=0;o<i.length;o++)if(".priority"===i[o]&&o===i.length-1);else if(!iU(i[o]))throw Error(t+"contains an invalid key ("+i[o]+") in path "+r.toString()+'. Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"');// Check that update keys are not descendants of each other.
// We rely on the property that sorting guarantees that ancestors come
// right before descendants.
e.sort(ny);var a=null;for(n=0;n<e.length;n++){if(r=e[n],null!==a&&nb(a,r))throw Error(t+"contains a path "+a.toString()+" that is ancestor of another path "+r.toString());a=r}},iW=function(t,e,n,r){if(!r||void 0!==e){var i=tO(t,"values");if(!(e&&"object"==typeof e)||Array.isArray(e))throw Error(i+" must be an object containing the children to replace.");var o=[];eB(e,function(t,e){var r=new ns(t);if(iK(i,e,nv(n,r)),".priority"===nf(r)&&!iV(e))throw Error(i+"contains an invalid value for '"+r.toString()+"', which must be a valid Firebase priority (a string, finite number, server value, or null).");o.push(r)}),iH(i,o)}},iz=function(t,e,n){if(!n||void 0!==e){if(eD(e))throw Error(tO(t,"priority")+"is "+e.toString()+", but must be a valid Firebase priority (a string, finite number, server value, or null).");// Special case to allow importing data with a .sv.
if(!iV(e))throw Error(tO(t,"priority")+"must be a valid Firebase priority (a string, finite number, server value, or null).")}},iG=function(t,e,n){if(!n||void 0!==e)switch(e){case"value":case"child_added":case"child_removed":case"child_changed":case"child_moved":break;default:throw Error(tO(t,"eventType")+'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".')}},iQ=function(t,e,n,r){if((!r||void 0!==n)&&!iU(n))throw Error(tO(t,e)+'was an invalid key = "'+n+'".  Firebase keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]").')},i$=function(t,e,n,r){if((!r||void 0!==n)&&!iq(n))throw Error(tO(t,e)+'was an invalid path = "'+n+'". Paths must be non-empty strings and can\'t contain ".", "#", "$", "[", or "]"')},iY=function(t,e,n,r){n&&(n=n.replace(/^\/*\.info(\/|$)/,"/")),i$(t,e,n,r)},iX=function(t,e){if(".info"===nc(e))throw Error(t+" failed = Can't modify data under /.info/")},iJ=function(t,e){// TODO = Validate server better.
var n,r=e.path.toString();if("string"!=typeof e.repoInfo.host||0===e.repoInfo.host.length||!iU(e.repoInfo.namespace)&&"localhost"!==e.repoInfo.host.split(":")[0]||0!==r.length&&((n=r)&&(n=n.replace(/^\/*\.info(\/|$)/,"/")),!iq(n)))throw Error(tO(t,"url")+'must be a valid firebase URL and the path can\'t contain ".", "#", "$", "[", or "]".')},iZ=function(t,e,n,r){if((!r||void 0!==n)&&"boolean"!=typeof n)throw Error(tO(t,e)+"must be a boolean.")},i0=function(){this.eventLists_=[],/**
         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.
         */this.recursionDepth_=0};/**
 * @param eventDataList - The new events to queue.
 */function i1(t,e){for(var n=null,r=0;r<e.length;r++){var i=e[r],o=i.getPath();null===n||n_(o,n.path)||(t.eventLists_.push(n),n=null),null===n&&(n={events:[],path:o}),n.events.push(i)}n&&t.eventLists_.push(n)}/**
 * Queues the specified events and synchronously raises all events (including previously queued ones)
 * for the specified path.
 *
 * It is assumed that the new events are all for the specified path.
 *
 * @param path - The path to raise events for.
 * @param eventDataList - The new events to raise.
 */function i2(t,e,n){i1(t,n),i3(t,function(t){return n_(t,e)})}/**
 * Queues the specified events and synchronously raises all events (including previously queued ones) for
 * locations related to the specified change path (i.e. all ancestors and descendants).
 *
 * It is assumed that the new events are all related (ancestor or descendant) to the specified path.
 *
 * @param changedPath - The path to raise events for.
 * @param eventDataList - The events to raise
 */function i4(t,e,n){i1(t,n),i3(t,function(t){return nb(t,e)||nb(e,t)})}function i3(t,e){t.recursionDepth_++;for(var n=!0,r=0;r<t.eventLists_.length;r++){var i=t.eventLists_[r];i&&(e(i.path)?(/**
 * Iterates through the list and raises each event
 */function(t){for(var e=0;e<t.events.length;e++){var n=t.events[e];if(null!==n){t.events[e]=null;var r=n.getEventRunner();eE&&ek("event: "+n.toString()),ez(r)}}}(t.eventLists_[r]),t.eventLists_[r]=null):n=!1)}n&&(t.eventLists_=[]),t.recursionDepth_--}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var i6="repo_interrupt",i5=/** @class */function(){function t(t,e,n,r){this.repoInfo_=t,this.forceRestClient_=e,this.authTokenProvider_=n,this.appCheckProvider_=r,this.dataUpdateCount=0,this.statsListener_=null,this.eventQueue_=new i0,this.nextWriteId_=1,this.interceptServerDataCallback_=null,/** A list of data pieces and paths to be set when this client disconnects. */this.onDisconnect_=ro(),/** Stores queues of outstanding transactions for Firebase locations. */this.transactionQueueTree_=new iR,// TODO: This should be @private but it's used by test_access.js and internal.js
this.persistentConnection_=null,// This key is intentionally not updated if RepoInfo is later changed or replaced
this.key=this.repoInfo_.toURLString()}return(/**
     * @returns The URL corresponding to the root of this Firebase.
     */t.prototype.toString=function(){return(this.repoInfo_.secure?"https://":"http://")+this.repoInfo_.host},t)}();/**
 * @returns The time in milliseconds, taking the server offset into account if we have one.
 */function i8(t){var e=t.infoData_.getNode(new ns(".info/serverTimeOffset")).val()||0;return new Date().getTime()+e}/**
 * Generate ServerValues using some variables from the repo object.
 */function i7(t){var e;return(e=e={timestamp:i8(t)}).timestamp=e.timestamp||new Date().getTime(),e}/**
 * Called by realtime when we get new messages from the server.
 */function i9(t,e,n,r,i){// For testing.
t.dataUpdateCount++;var o=new ns(e);n=t.interceptServerDataCallback_?t.interceptServerDataCallback_(e,n):n;var a=[];if(i){if(r){var s=tN(n,function(t){return nG(t)});a=/**
 * Apply server data to be merged in for the specified tagged query.
 *
 * @returns Events to raise.
 */function(t,e,n,r){var i=iy(t,r);if(!i)return[];var o=i_(i),a=o.path,s=o.queryId,u=nm(a,e),c=rS.fromObject(n);return ib(t,a,new rg(rf(s),u,c))}(t.serverSyncTree_,o,s,i)}else{var u=nG(n);a=/**
 * Apply new server data for the specified tagged query.
 *
 * @returns Events to raise.
 */function(t,e,n,r){var i=iy(t,r);if(null==i)return[];var o=i_(i),a=o.path,s=o.queryId,u=nm(a,e);return ib(t,a,new rv(rf(s),u,n))}(t.serverSyncTree_,o,u,i)}}else if(r){var c,h,l=tN(n,function(t){return nG(t)});c=t.serverSyncTree_,h=rS.fromObject(l),a=id(c,new rg(rl(),o,h))}else{var f=nG(n);a=ic(t.serverSyncTree_,o,f)}var p=o;a.length>0&&// is a proxy for some change having occurred.
(p=ol(t,o)),i4(t.eventQueue_,p,a)}function ot(t,e){var n,r,i;oe(t,"connected",e),!1===e&&(os(t,"onDisconnectEvents"),n=i7(t),r=ro(),rs(t.onDisconnect_,nu(),function(e,i){var o=ik(e,i,t.serverSyncTree_,n);ra(r,e,o)}),i=[],rs(r,nu(),function(e,n){i=i.concat(ic(t.serverSyncTree_,e,n));var r=ov(t,e);ol(t,r)}),t.onDisconnect_=ro(),i4(t.eventQueue_,nu(),i))}function oe(t,e,n){var r=new ns("/.info/"+e),i=nG(n);t.infoData_.updateSnapshot(r,i);var o=ic(t.infoSyncTree_,r,i);i4(t.eventQueue_,r,o)}function on(t){return t.nextWriteId_++}function or(t,e,n,r,i){os(t,"set",{path:e.toString(),value:n,priority:r});// TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or
// (b) store unresolved paths on JSON parse
var o=i7(t),a=nG(n,r),s=iN(a,ip(t.serverSyncTree_,e),o),u=on(t),c=is(t.serverSyncTree_,e,s,u,!0);i1(t.eventQueue_,c),t.server_.put(e.toString(),a.val(/*export=*/!0),function(n,r){var o="ok"===n;o||ex("set at "+e+" failed: "+n);var a=iu(t.serverSyncTree_,u,!o);i4(t.eventQueue_,e,a),ou(t,i,n,r)});var h=ov(t,e);ol(t,h),// We queued the events above, so just flush the queue here
i4(t.eventQueue_,h,[])}function oi(t,e,n,r){var i=nG(n);t.server_.onDisconnectPut(e.toString(),i.val(/*export=*/!0),function(n,o){"ok"===n&&ra(t.onDisconnect_,e,i),ou(t,r,n,o)})}function oo(t,e,n){// These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof
// a little bit by handling the return values anyways.
var r;r=".info"===nc(e._path)?ih(t.infoSyncTree_,e,n):ih(t.serverSyncTree_,e,n),i2(t.eventQueue_,e._path,r)}function oa(t){t.persistentConnection_&&t.persistentConnection_.interrupt(i6)}function os(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];var r="";t.persistentConnection_&&(r=t.persistentConnection_.id+":"),ek.apply(void 0,Q([r],G(e)))}function ou(t,e,n,r){e&&ez(function(){if("ok"===n)e(null);else{var t=(n||"error").toUpperCase(),i=t;r&&(i+=": "+r);var o=Error(i);// eslint-disable-next-line @typescript-eslint/no-explicit-any
o.code=t,e(o)}})}/**
 * @param excludeSets - A specific set to exclude
 */function oc(t,e,n){return ip(t.serverSyncTree_,e,n)||nW.EMPTY_NODE}/**
 * Sends any already-run transactions that aren't waiting for outstanding
 * transactions to complete.
 *
 * Externally it's called with no arguments, but it calls itself recursively
 * with a particular transactionQueueTree node to recurse through the tree.
 *
 * @param node - transactionQueueTree node to start at.
 */function oh(t,e){if(void 0===e&&(e=t.transactionQueueTree_),e||od(t,e),iP(e)){var n=op(t,e);Y(n.length>0,"Sending zero length transaction queue"),n.every(function(t){return 0/* RUN */===t.status})&&/**
 * Given a list of run transactions, send them to the server and then handle
 * the result (success or failure).
 *
 * @param path - The location of the queue.
 * @param queue - Queue of transactions under the specified location.
 */function(t,e,n){for(var r=oc(t,e,n.map(function(t){return t.currentWriteId})),i=r,o=r.hash(),a=0;a<n.length;a++){var s=n[a];Y(0/* RUN */===s.status,"tryToSendTransactionQueue_: items in queue should all be run."),s.status=1/* SENT */,s.retryCount++;var u=nm(e,s.path);// If we've gotten to this point, the output snapshot must be defined.
i=i.updateChild(u/** @type {!Node} */,s.currentOutputSnapshotRaw)}var c=i.val(!0);// Send the put.
t.server_.put(e.toString(),c,function(r){os(t,"transaction put response",{path:e.toString(),status:r});var i=[];if("ok"===r){for(var o=[],a=function(e){n[e].status=2/* COMPLETED */,i=i.concat(iu(t.serverSyncTree_,n[e].currentWriteId)),n[e].onComplete&&// transaction is complete, it should be set
o.push(function(){return n[e].onComplete(null,!0,n[e].currentOutputSnapshotResolved)}),n[e].unwatcher()},s=0;s<n.length;s++)a(s);// Now remove the completed transactions.
od(t,ix(t.transactionQueueTree_,e)),// There may be pending transactions that we can now send.
oh(t,t.transactionQueueTree_),i4(t.eventQueue_,e,i);// Finally, trigger onComplete callbacks.
for(var s=0;s<o.length;s++)ez(o[s])}else{// transactions are no longer sent.  Update their status appropriately.
if("datastale"===r)for(var s=0;s<n.length;s++)3/* SENT_NEEDS_ABORT */===n[s].status?n[s].status=4/* NEEDS_ABORT */:n[s].status=0/* RUN */;else{ex("transaction at "+e.toString()+" failed: "+r);for(var s=0;s<n.length;s++)n[s].status=4/* NEEDS_ABORT */,n[s].abortReason=r}ol(t,e)}},o)}(t,iM(e),n)}else iO(e)&&iL(e,function(e){oh(t,e)})}/**
 * Finds all transactions dependent on the data at changedPath and reruns them.
 *
 * Should be called any time cached data changes.
 *
 * Return the highest path that was affected by rerunning transactions. This
 * is the path at which events need to be raised for.
 *
 * @param changedPath - The path in mergedData that changed.
 * @returns The rootmost path that was affected by rerunning transactions.
 */function ol(t,e){var n=of(t,e),r=iM(n),i=op(t,n);return(/**
 * Does all the work of rerunning transactions (as well as cleans up aborted
 * transactions and whatnot).
 *
 * @param queue - The queue of transactions to run.
 * @param path - The path the queue is for.
 */function(t,e,n){if(0!==e.length){for(var r=[],i=[],o=e.filter(function(t){return 0/* RUN */===t.status}).map(function(t){return t.currentWriteId}),a=function(a){var s,u=e[a],c=nm(n,u.path),h=!1;if(Y(null!==c,"rerunTransactionsUnderNode_: relativePath should not be null."),4/* NEEDS_ABORT */===u.status)h=!0,s=u.abortReason,i=i.concat(iu(t.serverSyncTree_,u.currentWriteId,!0));else if(0/* RUN */===u.status){if(u.retryCount>=25)h=!0,s="maxretry",i=i.concat(iu(t.serverSyncTree_,u.currentWriteId,!0));else{// This code reruns a transaction
var l=oc(t,u.path,o);u.currentInputSnapshot=l;var f=e[a].update(l.val());if(void 0!==f){iK("transaction failed: Data returned ",f,u.path);var p=nG(f);"object"==typeof f&&null!=f&&tS(f,".priority")||(p=p.updatePriority(l.getPriority()));var d=u.currentWriteId,v=iN(p,l,i7(t));u.currentOutputSnapshotRaw=p,u.currentOutputSnapshotResolved=v,u.currentWriteId=on(t),// Mutates setsToIgnore in place
o.splice(o.indexOf(d),1),i=(i=i.concat(is(t.serverSyncTree_,u.path,v,u.currentWriteId,u.applyLocally))).concat(iu(t.serverSyncTree_,d,!0))}else h=!0,s="nodata",i=i.concat(iu(t.serverSyncTree_,u.currentWriteId,!0))}}i4(t.eventQueue_,n,i),i=[],h&&(// Abort.
e[a].status=2/* COMPLETED */,setTimeout(e[a].unwatcher,Math.floor(0)),e[a].onComplete&&("nodata"===s?r.push(function(){return e[a].onComplete(null,!1,e[a].currentInputSnapshot)}):r.push(function(){return e[a].onComplete(Error(s),!1,null)})))},s=0;s<e.length;s++)a(s);// Clean up completed transactions.
od(t,t.transactionQueueTree_);// Now fire callbacks, now that we're in a good, known state.
for(var s=0;s<r.length;s++)ez(r[s]);// Try to send the transaction result to the server.
oh(t,t.transactionQueueTree_)}// Nothing to do!
}(t,i,r),r)}/**
 * Returns the rootmost ancestor node of the specified path that has a pending
 * transaction on it, or just returns the node for the given path if there are
 * no pending transactions on any ancestor.
 *
 * @param path - The location to start at.
 * @returns The rootmost node with a transaction.
 */function of(t,e){// Start at the root and walk deeper into the tree towards path until we
// find a node with pending transactions.
var n,r=t.transactionQueueTree_;for(n=nc(e);null!==n&&void 0===iP(r);)r=ix(r,n),n=nc(e=nl(e));return r}/**
 * Builds the queue of all transactions at or below the specified
 * transactionNode.
 *
 * @param transactionNode
 * @returns The generated queue.
 */function op(t,e){// Walk any child transaction queues and aggregate them into a single queue.
var n=[];return function t(e,n,r){var i=iP(n);if(i)for(var o=0;o<i.length;o++)r.push(i[o]);iL(n,function(n){t(e,n,r)})}(t,e,n),// Sort them by the order the transactions were created.
n.sort(function(t,e){return t.order-e.order}),n}/**
 * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.
 */function od(t,e){var n=iP(e);if(n){for(var r=0,i=0;i<n.length;i++)2/* COMPLETED */!==n[i].status&&(n[r]=n[i],r++);n.length=r,iD(e,n.length>0?n:void 0)}iL(e,function(e){od(t,e)})}/**
 * Aborts all transactions on ancestors or descendants of the specified path.
 * Called when doing a set() or update() since we consider them incompatible
 * with transactions.
 *
 * @param path - Path for which we want to abort related transactions.
 */function ov(t,e){var n=iM(of(t,e)),r=ix(t.transactionQueueTree_,e);return!/**
 * Calls action on each ancestor node.
 *
 * @param action - Action to be called on each parent; return
 *   true to abort.
 * @param includeSelf - Whether to call action on this node as well.
 * @returns true if the action callback returned true.
 */function(t,e,n){for(var r=t.parent;null!==r;){if(e(r))return!0;r=r.parent}}(r,function(e){og(t,e)}),og(t,r),!/**
 * Does a depth-first traversal of this node's descendants, calling action for each one.
 *
 * @param action - Action to be called for each child.
 * @param includeSelf - Whether to call action on this node as well. Defaults to
 *   false.
 * @param childrenFirst - Whether to call action on children before calling it on
 *   parent.
 */function t(e,n,r,i){r&&!i&&n(e),iL(e,function(e){t(e,n,!0,i)}),r&&i&&n(e)}(r,function(e){og(t,e)}),n}/**
 * Abort transactions stored in this transaction queue node.
 *
 * @param node - Node to abort transactions for.
 */function og(t,e){var n=iP(e);if(n){for(var r=[],i=[],o=-1,a=0;a<n.length;a++)3/* SENT_NEEDS_ABORT */===n[a].status||(1/* SENT */===n[a].status?(Y(o===a-1,"All SENT items should be at beginning of queue."),o=a,// Mark transaction for abort when it comes back.
n[a].status=3/* SENT_NEEDS_ABORT */,n[a].abortReason="set"):(Y(0/* RUN */===n[a].status,"Unexpected transaction status in abort"),// We can abort it immediately.
n[a].unwatcher(),i=i.concat(iu(t.serverSyncTree_,n[a].currentWriteId,!0)),n[a].onComplete&&r.push(n[a].onComplete.bind(null,Error("set"),!1,null))));-1===o?iD(e,void 0):n.length=o+1,// Now fire the callbacks.
i4(t.eventQueue_,iM(e),i);for(var a=0;a<r.length;a++)ez(r[a])}}var om=function(t,e){var n=oy(t),r=n.namespace;"firebase.com"===n.domain&&eR(n.host+" is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead"),r&&"undefined"!==r||"localhost"===n.domain||eR("Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com"),n.secure||eP();var i="ws"===n.scheme||"wss"===n.scheme;return{repoInfo:new e0(n.host,n.secure,r,e,i,/*persistenceKey=*/"",/*includeNamespaceInQueryParams=*/r!==n.subdomain),path:new ns(n.pathString)}},oy=function(t){// Default to empty strings in the event of a malformed string.
var e="",n="",r="",i="",o="",a=!0,s="https",u=443;// Don't do any validation here. The caller is responsible for validating the result of parsing.
if("string"==typeof t){// Parse scheme.
var c=t.indexOf("//");c>=0&&(s=t.substring(0,c-1),t=t.substring(c+2));// Parse host, path, and query string.
var h=t.indexOf("/");-1===h&&(h=t.length);var l=t.indexOf("?");-1===l&&(l=t.length),e=t.substring(0,Math.min(h,l)),h<l&&(i=/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t){for(var e="",n=t.split("/"),r=0;r<n.length;r++)if(n[r].length>0){var i=n[r];try{i=decodeURIComponent(i.replace(/\+/g," "))}catch(t){}e+="/"+i}return e}(t.substring(h,l)));var f=/**
 * @returns key value hash
 */function(t){var e,n,r={};"?"===t.charAt(0)&&(t=t.substring(1));try{for(var i=z(t.split("&")),o=i.next();!o.done;o=i.next()){var a=o.value;if(0!==a.length){var s=a.split("=");2===s.length?r[decodeURIComponent(s[0])]=decodeURIComponent(s[1]):ex("Invalid query segment '"+a+"' in query '"+t+"'")}}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r}(t.substring(Math.min(t.length,l)));// If we have a port, use scheme for determining if it's secure.
(c=e.indexOf(":"))>=0?(a="https"===s||"wss"===s,u=parseInt(e.substring(c+1),10)):c=e.length;var p=e.slice(0,c);if("localhost"===p.toLowerCase())n="localhost";else if(p.split(".").length<=2)n=p;else{// Interpret the subdomain of a 3 or more component URL as the namespace name.
var d=e.indexOf(".");r=e.substring(0,d).toLowerCase(),n=e.substring(d+1),// Normalize namespaces to lowercase to share storage / connection.
o=r}"ns"in f&&(o=f.ns)}return{host:e,port:u,domain:n,subdomain:r,secure:a,scheme:s,pathString:i,namespace:o}},o_=/** @class */function(){/**
     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed
     * @param eventRegistration - The function to call to with the event data. User provided
     * @param snapshot - The data backing the event
     * @param prevName - Optional, the name of the previous child for child_* events.
     */function t(t,e,n,r){this.eventType=t,this.eventRegistration=e,this.snapshot=n,this.prevName=r}return t.prototype.getPath=function(){var t=this.snapshot.ref;return"value"===this.eventType?t._path:t.parent._path},t.prototype.getEventType=function(){return this.eventType},t.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this)},t.prototype.toString=function(){return this.getPath().toString()+":"+this.eventType+":"+tb(this.snapshot.exportVal())},t}(),ob=/** @class */function(){function t(t,e,n){this.eventRegistration=t,this.error=e,this.path=n}return t.prototype.getPath=function(){return this.path},t.prototype.getEventType=function(){return"cancel"},t.prototype.getEventRunner=function(){return this.eventRegistration.getEventRunner(this)},t.prototype.toString=function(){return this.path.toString()+":cancel"},t}(),ow=/** @class */function(){function t(t,e){this.snapshotCallback=t,this.cancelCallback=e}return t.prototype.onValue=function(t,e){this.snapshotCallback.call(null,t,e)},t.prototype.onCancel=function(t){return Y(this.hasCancelCallback,"Raising a cancel event on a listener with no cancel callback"),this.cancelCallback.call(null,t)},Object.defineProperty(t.prototype,"hasCancelCallback",{get:function(){return!!this.cancelCallback},enumerable:!1,configurable:!0}),t.prototype.matches=function(t){return this.snapshotCallback===t.snapshotCallback||void 0!==this.snapshotCallback.userCallback&&this.snapshotCallback.userCallback===t.snapshotCallback.userCallback&&this.snapshotCallback.context===t.snapshotCallback.context},t}(),oI=/** @class */function(){/** @hideconstructor */function t(t,e){this._repo=t,this._path=e}return(/**
     * Cancels all previously queued `onDisconnect()` set or update events for this
     * location and all children.
     *
     * If a write has been queued for this location via a `set()` or `update()` at a
     * parent location, the write at this location will be canceled, though writes
     * to sibling locations will still occur.
     *
     * @returns Resolves when synchronization to the server is complete.
     */t.prototype.cancel=function(){var t=new to;return function(t,e,n){t.server_.onDisconnectCancel(e.toString(),function(r,i){"ok"===r&&/**
 * Purge the data at path from the cache.
 *
 * @param path - Path to look up snapshot for.
 * @returns True if this node should now be removed.
 */function t(e,n){if(ng(n))return e.value=null,e.children.clear(),!0;if(null!==e.value){if(e.value.isLeafNode())return!1;var r=e.value;return e.value=null,r.forEachChild(nU,function(t,n){ra(e,new ns(t),n)}),t(e,n)}if(!(e.children.size>0))return!0;var i=nc(n);return n=nl(n),e.children.has(i)&&t(e.children.get(i),n)&&e.children.delete(i),0===e.children.size}(t.onDisconnect_,e),ou(t,n,r,i)})}(this._repo,this._path,t.wrapCallback(function(){})),t.promise},/**
     * Ensures the data at this location is deleted when the client is disconnected
     * (due to closing the browser, navigating to a new page, or network issues).
     *
     * @returns Resolves when synchronization to the server is complete.
     */t.prototype.remove=function(){iX("OnDisconnect.remove",this._path);var t=new to;return oi(this._repo,this._path,null,t.wrapCallback(function(){})),t.promise},/**
     * Ensures the data at this location is set to the specified value when the
     * client is disconnected (due to closing the browser, navigating to a new page,
     * or network issues).
     *
     * `set()` is especially useful for implementing "presence" systems, where a
     * value should be changed or cleared when a user disconnects so that they
     * appear "offline" to other users. See
     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}
     * for more information.
     *
     * Note that `onDisconnect` operations are only triggered once. If you want an
     * operation to occur each time a disconnect occurs, you'll need to re-establish
     * the `onDisconnect` operations each time.
     *
     * @param value - The value to be written to this location on disconnect (can
     * be an object, array, string, number, boolean, or null).
     * @returns Resolves when synchronization to the Database is complete.
     */t.prototype.set=function(t){iX("OnDisconnect.set",this._path),iB("OnDisconnect.set",t,this._path,!1);var e=new to;return oi(this._repo,this._path,t,e.wrapCallback(function(){})),e.promise},/**
     * Ensures the data at this location is set to the specified value and priority
     * when the client is disconnected (due to closing the browser, navigating to a
     * new page, or network issues).
     *
     * @param value - The value to be written to this location on disconnect (can
     * be an object, array, string, number, boolean, or null).
     * @param priority - The priority to be written (string, number, or null).
     * @returns Resolves when synchronization to the Database is complete.
     */t.prototype.setWithPriority=function(t,e){iX("OnDisconnect.setWithPriority",this._path),iB("OnDisconnect.setWithPriority",t,this._path,!1),iz("OnDisconnect.setWithPriority",e,!1);var n=new to;return function(t,e,n,r,i){var o=nG(n,r);t.server_.onDisconnectPut(e.toString(),o.val(/*export=*/!0),function(n,r){"ok"===n&&ra(t.onDisconnect_,e,o),ou(t,i,n,r)})}(this._repo,this._path,t,e,n.wrapCallback(function(){})),n.promise},/**
     * Writes multiple values at this location when the client is disconnected (due
     * to closing the browser, navigating to a new page, or network issues).
     *
     * The `values` argument contains multiple property-value pairs that will be
     * written to the Database together. Each child property can either be a simple
     * property (for example, "name") or a relative path (for example, "name/first")
     * from the current location to the data to update.
     *
     * As opposed to the `set()` method, `update()` can be use to selectively update
     * only the referenced properties at the current location (instead of replacing
     * all the child properties at the current location).
     *
     * @param values - Object containing multiple values.
     * @returns Resolves when synchronization to the Database is complete.
     */t.prototype.update=function(t){iX("OnDisconnect.update",this._path),iW("OnDisconnect.update",t,this._path,!1);var e=new to;return function(t,e,n,r){if(tk(n)){ek("onDisconnect().update() called with empty data.  Don't do anything."),ou(t,r,"ok",void 0);return}t.server_.onDisconnectMerge(e.toString(),n,function(i,o){"ok"===i&&eB(n,function(n,r){var i=nG(r);ra(t.onDisconnect_,nv(e,n),i)}),ou(t,r,i,o)})}(this._repo,this._path,t,e.wrapCallback(function(){})),e.promise},t)}(),oT=/** @class */function(){/**
     * @hideconstructor
     */function t(t,e,n,r){this._repo=t,this._path=e,this._queryParams=n,this._orderByCalled=r}return Object.defineProperty(t.prototype,"key",{get:function(){return ng(this._path)?null:nf(this._path)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"ref",{get:function(){return new ok(this._repo,this._path)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_queryIdentifier",{get:function(){var t=eq(rn(this._queryParams));return"{}"===t?"default":t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_queryObject",{/**
         * An object representation of the query parameters used by this Query.
         */get:function(){return rn(this._queryParams)},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(e){if(!((e=tq(e))instanceof t))return!1;var n=this._repo===e._repo,r=n_(this._path,e._path),i=this._queryIdentifier===e._queryIdentifier;return n&&r&&i},t.prototype.toJSON=function(){return this.toString()},t.prototype.toString=function(){return this._repo.toString()+function(t){for(var e="",n=t.pieceNum_;n<t.pieces_.length;n++)""!==t.pieces_[n]&&(e+="/"+encodeURIComponent(String(t.pieces_[n])));return e||"/"}(this._path)},t}();/**
 * Validates that no other order by call has been made
 */function oE(t,e){if(!0===t._orderByCalled)throw Error(e+": You can't combine multiple orderBy calls.")}/**
 * Validates start/end values for queries.
 */function oS(t){var e=null,n=null;if(t.hasStart()&&(e=t.getIndexStartValue()),t.hasEnd()&&(n=t.getIndexEndValue()),t.getIndex()===nA){var r="Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().",i="Query: When ordering by key, the argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() must be a string.";if(t.hasStart()){if(t.getIndexStartName()!==eL)throw Error(r);if("string"!=typeof e)throw Error(i)}if(t.hasEnd()){if(t.getIndexEndName()!==eM)throw Error(r);if("string"!=typeof n)throw Error(i)}}else if(t.getIndex()===nU){if(null!=e&&!iV(e)||null!=n&&!iV(n))throw Error("Query: When ordering by priority, the first argument passed to startAt(), startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value (null, a number, or a string).")}else if(Y(t.getIndex() instanceof nQ||t.getIndex()===n$,"unknown index type."),null!=e&&"object"==typeof e||null!=n&&"object"==typeof n)throw Error("Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() cannot be an object.")}/**
 * Validates that limit* has been called with the correct combination of parameters
 */function oC(t){if(t.hasStart()&&t.hasEnd()&&t.hasLimit()&&!t.hasAnchoredLimit())throw Error("Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use limitToFirst() or limitToLast() instead.")}/**
 * @internal
 */var ok=/** @class */function(t){/** @hideconstructor */function e(e,n){return t.call(this,e,n,new n8,!1)||this}return B(e,t),Object.defineProperty(e.prototype,"parent",{get:function(){var t=nd(this._path);return null===t?null:new e(this._repo,t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"root",{get:function(){for(var t=this;null!==t.parent;)t=t.parent;return t},enumerable:!1,configurable:!0}),e}(oT),oN=/** @class */function(){/**
     * @param _node - A SnapshotNode to wrap.
     * @param ref - The location this snapshot came from.
     * @param _index - The iteration order for this snapshot
     * @hideconstructor
     */function t(t,/**
     * The location of this DataSnapshot.
     */e,n){this._node=t,this.ref=e,this._index=n}return Object.defineProperty(t.prototype,"priority",{/**
         * Gets the priority value of the data in this `DataSnapshot`.
         *
         * Applications need not use priority but can order collections by
         * ordinary properties (see
         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}
         * ).
         */get:function(){// typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)
return this._node.getPriority().val()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"key",{/**
         * The key (last part of the path) of the location of this `DataSnapshot`.
         *
         * The last token in a Database location is considered its key. For example,
         * "ada" is the key for the /users/ada/ node. Accessing the key on any
         * `DataSnapshot` will return the key for the location that generated it.
         * However, accessing the key on the root URL of a Database will return
         * `null`.
         */get:function(){return this.ref.key},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{/** Returns the number of child properties of this `DataSnapshot`. */get:function(){return this._node.numChildren()},enumerable:!1,configurable:!0}),/**
     * Gets another `DataSnapshot` for the location at the specified relative path.
     *
     * Passing a relative path to the `child()` method of a DataSnapshot returns
     * another `DataSnapshot` for the location at the specified relative path. The
     * relative path can either be a simple child name (for example, "ada") or a
     * deeper, slash-separated path (for example, "ada/name/first"). If the child
     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`
     * whose value is `null`) is returned.
     *
     * @param path - A relative path to the location of child data.
     */t.prototype.child=function(e){var n=new ns(e),r=ox(this.ref,e);return new t(this._node.getChild(n),r,nU)},/**
     * Returns true if this `DataSnapshot` contains any data. It is slightly more
     * efficient than using `snapshot.val() !== null`.
     */t.prototype.exists=function(){return!this._node.isEmpty()},/**
     * Exports the entire contents of the DataSnapshot as a JavaScript object.
     *
     * The `exportVal()` method is similar to `val()`, except priority information
     * is included (if available), making it suitable for backing up your data.
     *
     * @returns The DataSnapshot's contents as a JavaScript value (Object,
     *   Array, string, number, boolean, or `null`).
     */// eslint-disable-next-line @typescript-eslint/no-explicit-any
t.prototype.exportVal=function(){return this._node.val(!0)},/**
     * Enumerates the top-level children in the `DataSnapshot`.
     *
     * Because of the way JavaScript objects work, the ordering of data in the
     * JavaScript object returned by `val()` is not guaranteed to match the
     * ordering on the server nor the ordering of `onChildAdded()` events. That is
     * where `forEach()` comes in handy. It guarantees the children of a
     * `DataSnapshot` will be iterated in their query order.
     *
     * If no explicit `orderBy*()` method is used, results are returned
     * ordered by key (unless priorities are used, in which case, results are
     * returned by priority).
     *
     * @param action - A function that will be called for each child DataSnapshot.
     * The callback can return true to cancel further enumeration.
     * @returns true if enumeration was canceled due to your callback returning
     * true.
     */t.prototype.forEach=function(e){var n=this;return!this._node.isLeafNode()&&!!this._node.forEachChild(this._index,function(r,i){return e(new t(i,ox(n.ref,r),nU))})},/**
     * Returns true if the specified child path has (non-null) data.
     *
     * @param path - A relative path to the location of a potential child.
     * @returns `true` if data exists at the specified child path; else
     *  `false`.
     */t.prototype.hasChild=function(t){var e=new ns(t);return!this._node.getChild(e).isEmpty()},/**
     * Returns whether or not the `DataSnapshot` has any non-`null` child
     * properties.
     *
     * You can use `hasChildren()` to determine if a `DataSnapshot` has any
     * children. If it does, you can enumerate them using `forEach()`. If it
     * doesn't, then either this snapshot contains a primitive value (which can be
     * retrieved with `val()`) or it is empty (in which case, `val()` will return
     * `null`).
     *
     * @returns true if this snapshot has any children; else false.
     */t.prototype.hasChildren=function(){return!this._node.isLeafNode()&&!this._node.isEmpty()},/**
     * Returns a JSON-serializable representation of this object.
     */t.prototype.toJSON=function(){return this.exportVal()},/**
     * Extracts a JavaScript value from a `DataSnapshot`.
     *
     * Depending on the data in a `DataSnapshot`, the `val()` method may return a
     * scalar type (string, number, or boolean), an array, or an object. It may
     * also return null, indicating that the `DataSnapshot` is empty (contains no
     * data).
     *
     * @returns The DataSnapshot's contents as a JavaScript value (Object,
     *   Array, string, number, boolean, or `null`).
     */// eslint-disable-next-line @typescript-eslint/no-explicit-any
t.prototype.val=function(){return this._node.val()},t}();/**
 *
 * Returns a `Reference` representing the location in the Database
 * corresponding to the provided path. If no path is provided, the `Reference`
 * will point to the root of the Database.
 *
 * @param db - The database instance to obtain a reference for.
 * @param path - Optional path representing the location the returned
 *   `Reference` will point. If not provided, the returned `Reference` will
 *   point to the root of the Database.
 * @returns If a path is provided, a `Reference`
 *   pointing to the provided path. Otherwise, a `Reference` pointing to the
 *   root of the Database.
 */function oA(t,e){return(t=tq(t))._checkNotDeleted("ref"),void 0!==e?ox(t._root,e):t._root}/**
 * Returns a `Reference` representing the location in the Database
 * corresponding to the provided Firebase URL.
 *
 * An exception is thrown if the URL is not a valid Firebase Database URL or it
 * has a different domain than the current `Database` instance.
 *
 * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored
 * and are not applied to the returned `Reference`.
 *
 * @param db - The database instance to obtain a reference for.
 * @param url - The Firebase URL at which the returned `Reference` will
 *   point.
 * @returns A `Reference` pointing to the provided
 *   Firebase URL.
 */function oR(t,e){(t=tq(t))._checkNotDeleted("refFromURL");var n=om(e,t._repo.repoInfo_.nodeAdmin);iJ("refFromURL",n);var r=n.repoInfo;return t._repo.repoInfo_.isCustomHost()||r.host===t._repo.repoInfo_.host||eR("refFromURL: Host name does not match the current database: (found "+r.host+" but expected "+t._repo.repoInfo_.host+")"),oA(t,n.path.toString())}/**
 * Gets a `Reference` for the location at the specified relative path.
 *
 * The relative path can either be a simple child name (for example, "ada") or
 * a deeper slash-separated path (for example, "ada/name/first").
 *
 * @param parent - The parent location.
 * @param path - A relative path from this location to the desired child
 *   location.
 * @returns The specified child location.
 */function ox(t,e){return null===nc((t=tq(t))._path)?iY("child","path",e,!1):i$("child","path",e,!1),new ok(t._repo,nv(t._path,e))}/**
 * Writes data to this Database location.
 *
 * This will overwrite any data at this location and all child locations.
 *
 * The effect of the write will be visible immediately, and the corresponding
 * events ("value", "child_added", etc.) will be triggered. Synchronization of
 * the data to the Firebase servers will also be started, and the returned
 * Promise will resolve when complete. If provided, the `onComplete` callback
 * will be called asynchronously after synchronization has finished.
 *
 * Passing `null` for the new value is equivalent to calling `remove()`; namely,
 * all data at this location and all child locations will be deleted.
 *
 * `set()` will remove any priority stored at this location, so if priority is
 * meant to be preserved, you need to use `setWithPriority()` instead.
 *
 * Note that modifying data with `set()` will cancel any pending transactions
 * at that location, so extreme care should be taken if mixing `set()` and
 * `transaction()` to modify the same data.
 *
 * A single `set()` will generate a single "value" event at the location where
 * the `set()` was performed.
 *
 * @param ref - The location to write to.
 * @param value - The value to be written (string, number, boolean, object,
 *   array, or null).
 * @returns Resolves when write to server is complete.
 */function oP(t,e){iX("set",(t=tq(t))._path),iB("set",e,t._path,!1);var n=new to;return or(t._repo,t._path,e,/*priority=*/null,n.wrapCallback(function(){})),n.promise}/**
 * Represents registration for 'value' events.
 */var oD=/** @class */function(){function t(t){this.callbackContext=t}return t.prototype.respondsTo=function(t){return"value"===t},t.prototype.createEvent=function(t,e){var n=e._queryParams.getIndex();return new o_("value",this,new oN(t.snapshotNode,new ok(e._repo,e._path),n))},t.prototype.getEventRunner=function(t){var e=this;return"cancel"===t.getEventType()?function(){return e.callbackContext.onCancel(t.error)}:function(){return e.callbackContext.onValue(t.snapshot,null)}},t.prototype.createCancelEvent=function(t,e){return this.callbackContext.hasCancelCallback?new ob(this,t,e):null},t.prototype.matches=function(e){return e instanceof t&&(!e.callbackContext||!this.callbackContext||e.callbackContext.matches(this.callbackContext))},t.prototype.hasAnyCallback=function(){return null!==this.callbackContext},t}(),oO=/** @class */function(){function t(t,e){this.eventType=t,this.callbackContext=e}return t.prototype.respondsTo=function(t){var e="children_added"===t?"child_added":t;return e="children_removed"===e?"child_removed":e,this.eventType===e},t.prototype.createCancelEvent=function(t,e){return this.callbackContext.hasCancelCallback?new ob(this,t,e):null},t.prototype.createEvent=function(t,e){Y(null!=t.childName,"Child events should have a childName.");var n=ox(new ok(e._repo,e._path),t.childName),r=e._queryParams.getIndex();return new o_(t.type,this,new oN(t.snapshotNode,n,r),t.prevName)},t.prototype.getEventRunner=function(t){var e=this;return"cancel"===t.getEventType()?function(){return e.callbackContext.onCancel(t.error)}:function(){return e.callbackContext.onValue(t.snapshot,t.prevName)}},t.prototype.matches=function(e){return e instanceof t&&this.eventType===e.eventType&&(!this.callbackContext||!e.callbackContext||this.callbackContext.matches(e.callbackContext))},t.prototype.hasAnyCallback=function(){return!!this.callbackContext},t}();function oL(t,e,n,r,i){if("object"==typeof r&&(s=void 0,i=r),"function"==typeof r&&(s=r),i&&i.onlyOnce){var o,a,s,u=n,c=function(e,n){oo(t._repo,t,l),u(e,n)};c.userCallback=n.userCallback,c.context=n.context,n=c}var h=new ow(n,s||void 0),l="value"===e?new oD(h):new oO(e,h);return o=t._repo,a=".info"===nc(t._path)?il(o.infoSyncTree_,t,l):il(o.serverSyncTree_,t,l),i2(o.eventQueue_,t._path,a),function(){return oo(t._repo,t,l)}}function oM(t,e,n,r){return oL(t,"value",e,n,r)}function oF(t,e,n,r){return oL(t,"child_added",e,n,r)}function oj(t,e,n,r){return oL(t,"child_changed",e,n,r)}function oU(t,e,n,r){return oL(t,"child_moved",e,n,r)}function oq(t,e,n,r){return oL(t,"child_removed",e,n,r)}/**
 * Detaches a callback previously attached with `on()`.
 *
 * Detach a callback previously attached with `on()`. Note that if `on()` was
 * called multiple times with the same eventType and callback, the callback
 * will be called multiple times for each event, and `off()` must be called
 * multiple times to remove the callback. Calling `off()` on a parent listener
 * will not automatically remove listeners registered on child nodes, `off()`
 * must also be called on any child listeners to remove the callback.
 *
 * If a callback is not specified, all callbacks for the specified eventType
 * will be removed. Similarly, if no eventType is specified, all callbacks
 * for the `Reference` will be removed.
 *
 * Individual listeners can also be removed by invoking their unsubscribe
 * callbacks.
 *
 * @param query - The query that the listener was registered with.
 * @param eventType - One of the following strings: "value", "child_added",
 * "child_changed", "child_removed", or "child_moved." If omitted, all callbacks
 * for the `Reference` will be removed.
 * @param callback - The callback function that was passed to `on()` or
 * `undefined` to remove all callbacks.
 */function oV(t,e,n){var r=null,i=n?new ow(n):null;"value"===e?r=new oD(i):e&&(r=new oO(e,i)),oo(t._repo,t,r)}/**
 * A `QueryConstraint` is used to narrow the set of documents returned by a
 * Database query. `QueryConstraint`s are created by invoking {@link endAt},
 * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link
 * limitToFirst}, {@link limitToLast}, {@link orderByChild},
 * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,
 * {@link orderByValue}  or {@link equalTo} and
 * can then be passed to {@link query} to create a new query instance that
 * also contains this `QueryConstraint`.
 */var oB=function(){},oK=/** @class */function(t){function e(e,n){var r=t.call(this)||this;return r._value=e,r._key=n,r}return B(e,t),e.prototype._apply=function(t){iB("endAt",this._value,t._path,!0);var e=n9(t._queryParams,this._value,this._key);if(oC(e),oS(e),t._queryParams.hasEnd())throw Error("endAt: Starting point was already set (by another call to endAt, endBefore or equalTo).");return new oT(t._repo,t._path,e,t._orderByCalled)},e}(oB),oH=/** @class */function(t){function e(e,n){var r=t.call(this)||this;return r._value=e,r._key=n,r}return B(e,t),e.prototype._apply=function(t){iB("endBefore",this._value,t._path,!1);var e,n,r,i,o=(e=t._queryParams,n=this._value,r=this._key,e.index_===nA?("string"==typeof n&&(n=nZ(n)),i=n9(e,n,r)):i=n9(e,n,null==r?eL:nZ(r)),i.endBeforeSet_=!0,i);if(oC(o),oS(o),t._queryParams.hasEnd())throw Error("endBefore: Starting point was already set (by another call to endAt, endBefore or equalTo).");return new oT(t._repo,t._path,o,t._orderByCalled)},e}(oB),oW=/** @class */function(t){function e(e,n){var r=t.call(this)||this;return r._value=e,r._key=n,r}return B(e,t),e.prototype._apply=function(t){iB("startAt",this._value,t._path,!0);var e=n7(t._queryParams,this._value,this._key);if(oC(e),oS(e),t._queryParams.hasStart())throw Error("startAt: Starting point was already set (by another call to startAt, startBefore or equalTo).");return new oT(t._repo,t._path,e,t._orderByCalled)},e}(oB),oz=/** @class */function(t){function e(e,n){var r=t.call(this)||this;return r._value=e,r._key=n,r}return B(e,t),e.prototype._apply=function(t){iB("startAfter",this._value,t._path,!1);var e,n,r,i,o=(e=t._queryParams,n=this._value,r=this._key,e.index_===nA?("string"==typeof n&&(n=nJ(n)),i=n7(e,n,r)):i=n7(e,n,null==r?eM:nJ(r)),i.startAfterSet_=!0,i);if(oC(o),oS(o),t._queryParams.hasStart())throw Error("startAfter: Starting point was already set (by another call to startAt, startAfter, or equalTo).");return new oT(t._repo,t._path,o,t._orderByCalled)},e}(oB),oG=/** @class */function(t){function e(e){var n=t.call(this)||this;return n._limit=e,n}return B(e,t),e.prototype._apply=function(t){var e,n,r;if(t._queryParams.hasLimit())throw Error("limitToFirst: Limit was already set (by another call to limitToFirst or limitToLast).");return new oT(t._repo,t._path,(e=t._queryParams,n=this._limit,(r=e.copy()).limitSet_=!0,r.limit_=n,r.viewFrom_="l"/* VIEW_FROM_LEFT */,r),t._orderByCalled)},e}(oB),oQ=/** @class */function(t){function e(e){var n=t.call(this)||this;return n._limit=e,n}return B(e,t),e.prototype._apply=function(t){var e,n,r;if(t._queryParams.hasLimit())throw Error("limitToLast: Limit was already set (by another call to limitToFirst or limitToLast).");return new oT(t._repo,t._path,(e=t._queryParams,n=this._limit,(r=e.copy()).limitSet_=!0,r.limit_=n,r.viewFrom_="r"/* VIEW_FROM_RIGHT */,r),t._orderByCalled)},e}(oB),o$=/** @class */function(t){function e(e){var n=t.call(this)||this;return n._path=e,n}return B(e,t),e.prototype._apply=function(t){oE(t,"orderByChild");var e=new ns(this._path);if(ng(e))throw Error("orderByChild: cannot pass in empty path. Use orderByValue() instead.");var n=new nQ(e),r=rt(t._queryParams,n);return oS(r),new oT(t._repo,t._path,r,/*orderByCalled=*/!0)},e}(oB),oY=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype._apply=function(t){oE(t,"orderByKey");var e=rt(t._queryParams,nA);return oS(e),new oT(t._repo,t._path,e,/*orderByCalled=*/!0)},e}(oB),oX=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype._apply=function(t){oE(t,"orderByPriority");var e=rt(t._queryParams,nU);return oS(e),new oT(t._repo,t._path,e,/*orderByCalled=*/!0)},e}(oB),oJ=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype._apply=function(t){oE(t,"orderByValue");var e=rt(t._queryParams,n$);return oS(e),new oT(t._repo,t._path,e,/*orderByCalled=*/!0)},e}(oB),oZ=/** @class */function(t){function e(e,n){var r=t.call(this)||this;return r._value=e,r._key=n,r}return B(e,t),e.prototype._apply=function(t){if(iB("equalTo",this._value,t._path,!1),t._queryParams.hasStart())throw Error("equalTo: Starting point was already set (by another call to startAt/startAfter or equalTo).");if(t._queryParams.hasEnd())throw Error("equalTo: Ending point was already set (by another call to endAt/endBefore or equalTo).");return new oK(this._value,this._key)._apply(new oW(this._value,this._key)._apply(t))},e}(oB);/**
 * Creates a new immutable instance of `Query` that is extended to also include
 * additional query constraints.
 *
 * @param query - The Query instance to use as a base for the new constraints.
 * @param queryConstraints - The list of `QueryConstraint`s to apply.
 * @throws if any of the provided query constraints cannot be combined with the
 * existing or new constraints.
 */function o0(t){for(var e,n,r=[],i=1;i<arguments.length;i++)r[i-1]=arguments[i];var o=tq(t);try{for(var a=z(r),s=a.next();!s.done;s=a.next())o=s.value._apply(o)}catch(t){e={error:t}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(e)throw e.error}}return o}Y(!aA,"__referenceConstructor has already been defined"),aA=ok,Y(!aR,"__referenceConstructor has already been defined"),aR=ok;/**
 * Creates and caches Repo instances.
 */var o1={},o2=!1;/**
 * This function should only ever be called to CREATE a new database instance.
 * @internal
 */function o4(t,e,n,r,i){var o,a,s,u,c,h=r||t.options.databaseURL;void 0===h&&(t.options.projectId||eR("Can't determine Firebase Database URL. Be sure to include  a Project ID when calling firebase.initializeApp()."),ek("Using default host for project ",t.options.projectId),h=t.options.projectId+"-default-rtdb.firebaseio.com");var l=om(h,i),f=l.repoInfo,p=void 0;void 0!==en&&(p=en.env.FIREBASE_DATABASE_EMULATOR_HOST),p?(c=!0,f=(l=om(h="http://"+p+"?ns="+f.namespace,i)).repoInfo):c=!l.repoInfo.secure;var d=i&&c?new eY(eY.OWNER):new e$(t.name,t.options,e);iJ("Invalid Firebase Database URL",l),ng(l.path)||eR("Database URL must point to the root of a Firebase Database (not including a child path).");var v=(o=f,a=new eQ(t.name,n),(s=o1[t.name])||(s={},o1[t.name]=s),(u=s[o.toURLString()])&&eR("Database initialized multiple times. Please make sure the format of the database URL matches with each database() call."),u=new i5(o,o2,d,a),s[o.toURLString()]=u,u);return new o3(v,t)}/**
 * Class representing a Firebase Realtime Database.
 */var o3=/** @class */function(){/** @hideconstructor */function t(t,/** The FirebaseApp associated with this Realtime Database instance. */e){this._repoInternal=t,this.app=e,/** Represents a database instance. */this.type="database",/** Track if the instance has been used (root or repo accessed) */this._instanceStarted=!1}return Object.defineProperty(t.prototype,"_repo",{get:function(){return this._instanceStarted||(function(t,e,n){var r;if(t.stats_=e6(t.repoInfo_),t.forceRestClient_||("object"==typeof window&&window.navigator&&window.navigator.userAgent||"").search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)>=0)t.server_=new rr(t.repoInfo_,function(e,n,r,i){i9(t,e,n,r,i)},t.authTokenProvider_,t.appCheckProvider_),// Minor hack: Fire onConnect immediately, since there's no actual connection.
setTimeout(function(){return ot(t,/* connectStatus= */!0)},0);else{// Validate authOverride
if(null!=n){if("object"!=typeof n)throw Error("Only objects are supported for option databaseAuthVariableOverride");try{tb(n)}catch(t){throw Error("Invalid authOverride provided: "+t)}}t.persistentConnection_=new nS(t.repoInfo_,e,function(e,n,r,i){i9(t,e,n,r,i)},function(e){ot(t,e)},function(e){eB(e,function(e,n){oe(t,e,n)})},t.authTokenProvider_,t.appCheckProvider_,n),t.server_=t.persistentConnection_}t.authTokenProvider_.addTokenChangeListener(function(e){t.server_.refreshAuthToken(e)}),t.appCheckProvider_.addTokenChangeListener(function(e){t.server_.refreshAppCheckToken(e.token)}),// In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),
// we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.
t.statsReporter_=(e3[r=t.repoInfo_.toString()]||(e3[r]=new rc(t.stats_,t.server_)),e3[r]),// Used for .info.
t.infoData_=new ri,t.infoSyncTree_=new ia({startListening:function(e,n,r,i){var o=[],a=t.infoData_.getNode(e._path);return a.isEmpty()||(o=ic(t.infoSyncTree_,e._path,a),setTimeout(function(){i("ok")},0)),o},stopListening:function(){}}),oe(t,"connected",!1),t.serverSyncTree_=new ia({startListening:function(e,n,r,i){// No synchronous events for network-backed sync trees
return t.server_.listen(e,r,n,function(n,r){var o=i(n,r);i4(t.eventQueue_,e._path,o)}),[]},stopListening:function(e,n){t.server_.unlisten(e,n)}})}(this._repoInternal,this.app.options.appId,this.app.options.databaseAuthVariableOverride),this._instanceStarted=!0),this._repoInternal},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_root",{get:function(){return this._rootInternal||(this._rootInternal=new ok(this._repo,nu())),this._rootInternal},enumerable:!1,configurable:!0}),t.prototype._delete=function(){if(null!==this._rootInternal){var t,e,n;t=this._repo,(n=o1[e=this.app.name])&&n[t.key]===t||eR("Database "+e+"("+t.repoInfo_+") has already been deleted."),oa(t),delete n[t.key],this._repoInternal=null,this._rootInternal=null}return Promise.resolve()},t.prototype._checkNotDeleted=function(t){null===this._rootInternal&&eR("Cannot call "+t+" on a deleted database.")},t}(),o6={".sv":"timestamp"},o5=/** @class */function(){/** @hideconstructor */function t(/** Whether the transaction was successfully committed. */t,/** The resulting data snapshot. */e){this.committed=t,this.snapshot=e}return(/** Returns a JSON-serializable representation of this object. */t.prototype.toJSON=function(){return{committed:this.committed,snapshot:this.snapshot.toJSON()}},t)}(),o8=/** @class */function(){function t(t){this._delegate=t}return t.prototype.cancel=function(t){tD("OnDisconnect.cancel",0,1,arguments.length),tL("OnDisconnect.cancel","onComplete",t,!0);var e=this._delegate.cancel();return t&&e.then(function(){return t(null)},function(e){return t(e)}),e},t.prototype.remove=function(t){tD("OnDisconnect.remove",0,1,arguments.length),tL("OnDisconnect.remove","onComplete",t,!0);var e=this._delegate.remove();return t&&e.then(function(){return t(null)},function(e){return t(e)}),e},t.prototype.set=function(t,e){tD("OnDisconnect.set",1,2,arguments.length),tL("OnDisconnect.set","onComplete",e,!0);var n=this._delegate.set(t);return e&&n.then(function(){return e(null)},function(t){return e(t)}),n},t.prototype.setWithPriority=function(t,e,n){tD("OnDisconnect.setWithPriority",2,3,arguments.length),tL("OnDisconnect.setWithPriority","onComplete",n,!0);var r=this._delegate.setWithPriority(t,e);return n&&r.then(function(){return n(null)},function(t){return n(t)}),r},t.prototype.update=function(t,e){if(tD("OnDisconnect.update",1,2,arguments.length),Array.isArray(t)){for(var n={},r=0;r<t.length;++r)n[""+r]=t[r];t=n,ex("Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.")}tL("OnDisconnect.update","onComplete",e,!0);var i=this._delegate.update(t);return e&&i.then(function(){return e(null)},function(t){return e(t)}),i},t}(),o7=/** @class */function(){/**
     * A type for the resolve value of Firebase.transaction.
     */function t(t,e){this.committed=t,this.snapshot=e}return(// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
// for end-users
t.prototype.toJSON=function(){return tD("TransactionResult.toJSON",0,1,arguments.length),{committed:this.committed,snapshot:this.snapshot.toJSON()}},t)}(),o9=/** @class */function(){function t(t,e){this._database=t,this._delegate=e}return(/**
     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is
     * empty.
     *
     * @returns JSON representation of the DataSnapshot contents, or null if empty.
     */t.prototype.val=function(){return tD("DataSnapshot.val",0,0,arguments.length),this._delegate.val()},/**
     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting
     * the entire node contents.
     * @returns JSON representation of the DataSnapshot contents, or null if empty.
     */t.prototype.exportVal=function(){return tD("DataSnapshot.exportVal",0,0,arguments.length),this._delegate.exportVal()},// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
// for end-users
t.prototype.toJSON=function(){return tD("DataSnapshot.toJSON",0,1,arguments.length),this._delegate.toJSON()},/**
     * Returns whether the snapshot contains a non-null value.
     *
     * @returns Whether the snapshot contains a non-null value, or is empty.
     */t.prototype.exists=function(){return tD("DataSnapshot.exists",0,0,arguments.length),this._delegate.exists()},/**
     * Returns a DataSnapshot of the specified child node's contents.
     *
     * @param path - Path to a child.
     * @returns DataSnapshot for child node.
     */t.prototype.child=function(e){return tD("DataSnapshot.child",0,1,arguments.length),i$("DataSnapshot.child","path",// Ensure the childPath is a string (can be a number)
e=String(e),!1),new t(this._database,this._delegate.child(e))},/**
     * Returns whether the snapshot contains a child at the specified path.
     *
     * @param path - Path to a child.
     * @returns Whether the child exists.
     */t.prototype.hasChild=function(t){return tD("DataSnapshot.hasChild",1,1,arguments.length),i$("DataSnapshot.hasChild","path",t,!1),this._delegate.hasChild(t)},/**
     * Returns the priority of the object, or null if no priority was set.
     *
     * @returns The priority.
     */t.prototype.getPriority=function(){return tD("DataSnapshot.getPriority",0,0,arguments.length),this._delegate.priority},/**
     * Iterates through child nodes and calls the specified action for each one.
     *
     * @param action - Callback function to be called
     * for each child.
     * @returns True if forEach was canceled by action returning true for
     * one of the child nodes.
     */t.prototype.forEach=function(e){var n=this;return tD("DataSnapshot.forEach",1,1,arguments.length),tL("DataSnapshot.forEach","action",e,!1),this._delegate.forEach(function(r){return e(new t(n._database,r))})},/**
     * Returns whether this DataSnapshot has children.
     * @returns True if the DataSnapshot contains 1 or more child nodes.
     */t.prototype.hasChildren=function(){return tD("DataSnapshot.hasChildren",0,0,arguments.length),this._delegate.hasChildren()},Object.defineProperty(t.prototype,"key",{get:function(){return this._delegate.key},enumerable:!1,configurable:!0}),/**
     * Returns the number of children for this DataSnapshot.
     * @returns The number of children that this DataSnapshot contains.
     */t.prototype.numChildren=function(){return tD("DataSnapshot.numChildren",0,0,arguments.length),this._delegate.size},/**
     * @returns The Firebase reference for the location this snapshot's data came
     * from.
     */t.prototype.getRef=function(){return tD("DataSnapshot.ref",0,0,arguments.length),new ae(this._database,this._delegate.ref)},Object.defineProperty(t.prototype,"ref",{get:function(){return this.getRef()},enumerable:!1,configurable:!0}),t)}(),at=/** @class */function(){function t(t,e){this.database=t,this._delegate=e}return t.prototype.on=function(e,n,r,i){var o,a=this;tD("Query.on",2,4,arguments.length),tL("Query.on","callback",n,!1);var s=t.getCancelAndContextArgs_("Query.on",r,i),u=function(t,e){n.call(s.context,new o9(a.database,t),e)};u.userCallback=n,u.context=s.context;var c=null===(o=s.cancel)||void 0===o?void 0:o.bind(s.context);switch(e){case"value":return oM(this._delegate,u,c),n;case"child_added":return oF(this._delegate,u,c),n;case"child_removed":return oq(this._delegate,u,c),n;case"child_changed":return oj(this._delegate,u,c),n;case"child_moved":return oU(this._delegate,u,c),n;default:throw Error(tO("Query.on","eventType")+'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".')}},t.prototype.off=function(t,e,n){if(tD("Query.off",0,3,arguments.length),iG("Query.off",t,!0),tL("Query.off","callback",e,!0),tM("Query.off","context",n,!0),e){var r=function(){};r.userCallback=e,r.context=n,oV(this._delegate,t,r)}else oV(this._delegate,t)},/**
     * Get the server-value for this query, or return a cached value if not connected.
     */t.prototype.get=function(){var t,e,n,r,i=this;return(e=(t=tq(t=this._delegate))._repo,n=t,null!=(r=function(t,e){var n,r=e._path,i=null;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.
// Consider optimizing this once there's a better understanding of what actual behavior will be.
t.syncPointTree_.foreachOnPath(r,function(t,e){var n=nm(t,r);i=i||it(e,n)});var o=t.syncPointTree_.get(r);o?i=i||it(o,nu()):(o=new r5,t.syncPointTree_=t.syncPointTree_.set(r,o));var a=null!=i,s=a?new rm(i,!0,!1):null,u=(n=t.pendingWriteTree_,rW(e._path,n));return rT(r7(o,e,u,a?s.getNode():nW.EMPTY_NODE,a).viewCache_)}(e.serverSyncTree_,n))?Promise.resolve(r):e.server_.get(n).then(function(t){var r=nG(t).withIndex(n._queryParams.getIndex()),i=ic(e.serverSyncTree_,n._path,r);return i2(e.eventQueue_,n._path,i),Promise.resolve(r)},function(t){return os(e,"get for query "+tb(n)+" failed: "+t),Promise.reject(Error(t))})).then(function(e){return new oN(e,new ok(t._repo,t._path),t._queryParams.getIndex())}).then(function(t){return new o9(i.database,t)})},/**
     * Attaches a listener, waits for the first event, and then removes the listener
     */t.prototype.once=function(e,n,r,i){var o=this;tD("Query.once",1,4,arguments.length),tL("Query.once","callback",n,!0);var a=t.getCancelAndContextArgs_("Query.once",r,i),s=new to,u=function(t,e){var r=new o9(o.database,t);n&&n.call(a.context,r,e),s.resolve(r)};u.userCallback=n,u.context=a.context;var c=function(t){a.cancel&&a.cancel.call(a.context,t),s.reject(t)};switch(e){case"value":oM(this._delegate,u,c,{onlyOnce:!0});break;case"child_added":oF(this._delegate,u,c,{onlyOnce:!0});break;case"child_removed":oq(this._delegate,u,c,{onlyOnce:!0});break;case"child_changed":oj(this._delegate,u,c,{onlyOnce:!0});break;case"child_moved":oU(this._delegate,u,c,{onlyOnce:!0});break;default:throw Error(tO("Query.once","eventType")+'must be a valid event type = "value", "child_added", "child_removed", "child_changed", or "child_moved".')}return s.promise},/**
     * Set a limit and anchor it to the start of the window.
     */t.prototype.limitToFirst=function(e){return tD("Query.limitToFirst",1,1,arguments.length),new t(this.database,o0(this._delegate,/**
 * Creates a new `QueryConstraint` that if limited to the first specific number
 * of children.
 *
 * The `limitToFirst()` method is used to set a maximum number of children to be
 * synced for a given callback. If we set a limit of 100, we will initially only
 * receive up to 100 `child_added` events. If we have fewer than 100 messages
 * stored in our Database, a `child_added` event will fire for each message.
 * However, if we have over 100 messages, we will only receive a `child_added`
 * event for the first 100 ordered messages. As items change, we will receive
 * `child_removed` events for each item that drops out of the active list so
 * that the total number stays at 100.
 *
 * You can read more about `limitToFirst()` in
 * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.
 *
 * @param limit - The maximum number of nodes to include in this query.
 */function(t){if("number"!=typeof t||Math.floor(t)!==t||t<=0)throw Error("limitToFirst: First argument must be a positive integer.");return new oG(t)}(e)))},/**
     * Set a limit and anchor it to the end of the window.
     */t.prototype.limitToLast=function(e){return tD("Query.limitToLast",1,1,arguments.length),new t(this.database,o0(this._delegate,/**
 * Creates a new `QueryConstraint` that is limited to return only the last
 * specified number of children.
 *
 * The `limitToLast()` method is used to set a maximum number of children to be
 * synced for a given callback. If we set a limit of 100, we will initially only
 * receive up to 100 `child_added` events. If we have fewer than 100 messages
 * stored in our Database, a `child_added` event will fire for each message.
 * However, if we have over 100 messages, we will only receive a `child_added`
 * event for the last 100 ordered messages. As items change, we will receive
 * `child_removed` events for each item that drops out of the active list so
 * that the total number stays at 100.
 *
 * You can read more about `limitToLast()` in
 * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.
 *
 * @param limit - The maximum number of nodes to include in this query.
 */function(t){if("number"!=typeof t||Math.floor(t)!==t||t<=0)throw Error("limitToLast: First argument must be a positive integer.");return new oQ(t)}(e)))},/**
     * Given a child path, return a new query ordered by the specified grandchild path.
     */t.prototype.orderByChild=function(e){return tD("Query.orderByChild",1,1,arguments.length),new t(this.database,o0(this._delegate,/**
 * Creates a new `QueryConstraint` that orders by the specified child key.
 *
 * Queries can only order by one key at a time. Calling `orderByChild()`
 * multiple times on the same query is an error.
 *
 * Firebase queries allow you to order your data by any child key on the fly.
 * However, if you know in advance what your indexes will be, you can define
 * them via the .indexOn rule in your Security Rules for better performance. See
 * the{@link https://firebase.google.com/docs/database/security/indexing-data}
 * rule for more information.
 *
 * You can read more about `orderByChild()` in
 * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.
 *
 * @param path - The path to order by.
 */function(t){if("$key"===t)throw Error('orderByChild: "$key" is invalid.  Use orderByKey() instead.');if("$priority"===t)throw Error('orderByChild: "$priority" is invalid.  Use orderByPriority() instead.');if("$value"===t)throw Error('orderByChild: "$value" is invalid.  Use orderByValue() instead.');return i$("orderByChild","path",t,!1),new o$(t)}(e)))},/**
     * Return a new query ordered by the KeyIndex
     */t.prototype.orderByKey=function(){return tD("Query.orderByKey",0,0,arguments.length),new t(this.database,o0(this._delegate,new oY))},/**
     * Return a new query ordered by the PriorityIndex
     */t.prototype.orderByPriority=function(){return tD("Query.orderByPriority",0,0,arguments.length),new t(this.database,o0(this._delegate,new oX))},/**
     * Return a new query ordered by the ValueIndex
     */t.prototype.orderByValue=function(){return tD("Query.orderByValue",0,0,arguments.length),new t(this.database,o0(this._delegate,new oJ))},t.prototype.startAt=function(e,n){var r;return void 0===e&&(e=null),tD("Query.startAt",0,2,arguments.length),new t(this.database,o0(this._delegate,(void 0===(r=e)&&(r=null),iQ("startAt","key",n,!0),new oW(r,n))))},t.prototype.startAfter=function(e,n){var r;return void 0===e&&(e=null),tD("Query.startAfter",0,2,arguments.length),new t(this.database,o0(this._delegate,(r=e,iQ("startAfter","key",n,!0),new oz(r,n))))},t.prototype.endAt=function(e,n){var r;return void 0===e&&(e=null),tD("Query.endAt",0,2,arguments.length),new t(this.database,o0(this._delegate,(r=e,iQ("endAt","key",n,!0),new oK(r,n))))},t.prototype.endBefore=function(e,n){var r;return void 0===e&&(e=null),tD("Query.endBefore",0,2,arguments.length),new t(this.database,o0(this._delegate,(r=e,iQ("endBefore","key",n,!0),new oH(r,n))))},/**
     * Load the selection of children with exactly the specified value, and, optionally,
     * the specified name.
     */t.prototype.equalTo=function(e,n){return tD("Query.equalTo",1,2,arguments.length),new t(this.database,o0(this._delegate,(iQ("equalTo","key",n,!0),new oZ(e,n))))},/**
     * @returns URL for this location.
     */t.prototype.toString=function(){return tD("Query.toString",0,0,arguments.length),this._delegate.toString()},// Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
// for end-users.
t.prototype.toJSON=function(){return tD("Query.toJSON",0,1,arguments.length),this._delegate.toJSON()},/**
     * Return true if this query and the provided query are equivalent; otherwise, return false.
     */t.prototype.isEqual=function(e){if(tD("Query.isEqual",1,1,arguments.length),!(e instanceof t))throw Error("Query.isEqual failed: First argument must be an instance of firebase.database.Query.");return this._delegate.isEqual(e._delegate)},/**
     * Helper used by .on and .once to extract the context and or cancel arguments.
     * @param fnName - The function name (on or once)
     *
     */t.getCancelAndContextArgs_=function(t,e,n){var r={cancel:void 0,context:void 0};if(e&&n)r.cancel=e,tL(t,"cancel",r.cancel,!0),r.context=n,tM(t,"context",r.context,!0);else if(e){// we have either a cancel callback or a context.
if("object"==typeof e&&null!==e)r.context=e;else if("function"==typeof e)r.cancel=e;else throw Error(tO(t,"cancelOrContext")+" must either be a cancel callback or a context object.")}return r},Object.defineProperty(t.prototype,"ref",{get:function(){return new ae(this.database,new ok(this._delegate._repo,this._delegate._path))},enumerable:!1,configurable:!0}),t}(),ae=/** @class */function(t){/**
     * Call options:
     *   new Reference(Repo, Path) or
     *   new Reference(url: string, string|RepoManager)
     *
     * Externally - this is the firebase.database.Reference type.
     */function e(e,n){var r=t.call(this,e,new oT(n._repo,n._path,new n8,!1))||this;return r.database=e,r._delegate=n,r}return B(e,t),/** @returns {?string} */e.prototype.getKey=function(){return tD("Reference.key",0,0,arguments.length),this._delegate.key},e.prototype.child=function(t){return tD("Reference.child",1,1,arguments.length),"number"==typeof t&&(t=String(t)),new e(this.database,ox(this._delegate,t))},/** @returns {?Reference} */e.prototype.getParent=function(){tD("Reference.parent",0,0,arguments.length);var t=this._delegate.parent;return t?new e(this.database,t):null},/** @returns {!Reference} */e.prototype.getRoot=function(){return tD("Reference.root",0,0,arguments.length),new e(this.database,this._delegate.root)},e.prototype.set=function(t,e){tD("Reference.set",1,2,arguments.length),tL("Reference.set","onComplete",e,!0);var n=oP(this._delegate,t);return e&&n.then(function(){return e(null)},function(t){return e(t)}),n},e.prototype.update=function(t,e){if(tD("Reference.update",1,2,arguments.length),Array.isArray(t)){for(var n,r,i,o={},a=0;a<t.length;++a)o[""+a]=t[a];t=o,ex("Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.")}iX("Reference.update",this._delegate._path),tL("Reference.update","onComplete",e,!0);var s=(n=this._delegate,iW("update",r=t,n._path,!1),i=new to,function(t,e,n,r){os(t,"update",{path:e.toString(),value:n});// Start with our existing data and merge each child into it.
var i=!0,o=i7(t),a={};if(eB(n,function(n,r){i=!1,a[n]=ik(nv(e,n),nG(r),t.serverSyncTree_,o)}),i)ek("update() called with empty data.  Don't do anything."),ou(t,r,"ok",void 0);else{var s,u,c,h=on(t),l=(Y(h>(u=(s=t.serverSyncTree_).pendingWriteTree_).lastWriteId,"Stacking an older merge on top of newer ones"),u.allWrites.push({path:e,children:a,writeId:h,visible:!0}),u.visibleWrites=rN(u.visibleWrites,e,a),u.lastWriteId=h,c=rS.fromObject(a),id(s,new rg(rh(),e,c)));i1(t.eventQueue_,l),t.server_.merge(e.toString(),n,function(n,i){var o="ok"===n;o||ex("update at "+e+" failed: "+n);var a=iu(t.serverSyncTree_,h,!o),s=a.length>0?ol(t,e):e;i4(t.eventQueue_,s,a),ou(t,r,n,i)}),eB(n,function(n){var r=ov(t,nv(e,n));ol(t,r)}),// We queued the events above, so just flush the queue here
i4(t.eventQueue_,e,[])}}(n._repo,n._path,r,i.wrapCallback(function(){})),i.promise);return e&&s.then(function(){return e(null)},function(t){return e(t)}),s},e.prototype.setWithPriority=function(t,e,n){tD("Reference.setWithPriority",2,3,arguments.length),tL("Reference.setWithPriority","onComplete",n,!0);var r=/**
 * Writes data the Database location. Like `set()` but also specifies the
 * priority for that data.
 *
 * Applications need not use priority but can order collections by
 * ordinary properties (see
 * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}
 * ).
 *
 * @param ref - The location to write to.
 * @param value - The value to be written (string, number, boolean, object,
 *   array, or null).
 * @param priority - The priority to be written (string, number, or null).
 * @returns Resolves when write to server is complete.
 */function(t,e,n){if(iX("setWithPriority",t._path),iB("setWithPriority",e,t._path,!1),iz("setWithPriority",n,!1),".length"===t.key||".keys"===t.key)throw"setWithPriority failed: "+t.key+" is a read-only object.";var r=new to;return or(t._repo,t._path,e,n,r.wrapCallback(function(){})),r.promise}(this._delegate,t,e);return n&&r.then(function(){return n(null)},function(t){return n(t)}),r},e.prototype.remove=function(t){tD("Reference.remove",0,1,arguments.length),tL("Reference.remove","onComplete",t,!0);var e,n=(iX("remove",(e=this._delegate)._path),oP(e,null));return t&&n.then(function(){return t(null)},function(e){return t(e)}),n},e.prototype.transaction=function(t,e,n){var r=this;tD("Reference.transaction",1,3,arguments.length),tL("Reference.transaction","transactionUpdate",t,!1),tL("Reference.transaction","onComplete",e,!0),iZ("Reference.transaction","applyLocally",n,!0);var i=/**
 * Atomically modifies the data at this location.
 *
 * Atomically modify the data at this location. Unlike a normal `set()`, which
 * just overwrites the data regardless of its previous value, `transaction()` is
 * used to modify the existing value to a new value, ensuring there are no
 * conflicts with other clients writing to the same location at the same time.
 *
 * To accomplish this, you pass `runTransaction()` an update function which is
 * used to transform the current value into a new value. If another client
 * writes to the location before your new value is successfully written, your
 * update function will be called again with the new current value, and the
 * write will be retried. This will happen repeatedly until your write succeeds
 * without conflict or you abort the transaction by not returning a value from
 * your update function.
 *
 * Note: Modifying data with `set()` will cancel any pending transactions at
 * that location, so extreme care should be taken if mixing `set()` and
 * `transaction()` to update the same data.
 *
 * Note: When using transactions with Security and Firebase Rules in place, be
 * aware that a client needs `.read` access in addition to `.write` access in
 * order to perform a transaction. This is because the client-side nature of
 * transactions requires the client to read the data in order to transactionally
 * update it.
 *
 * @param ref - The location to atomically modify.
 * @param transactionUpdate - A developer-supplied function which will be passed
 * the current data stored at this location (as a JavaScript object). The
 * function should return the new value it would like written (as a JavaScript
 * object). If `undefined` is returned (i.e. you return with no arguments) the
 * transaction will be aborted and the data at this location will not be
 * modified.
 * @param options - An options object to configure transactions.
 * @returns A Promise that can optionally be used instead of the onComplete
 * callback to handle success and failure.
 */(function(t,e,n){if(iX("Reference.transaction",(t=tq(t))._path),".length"===t.key||".keys"===t.key)throw"Reference.transaction failed: "+t.key+" is a read-only object.";var r,i=null===(r=null==n?void 0:n.applyLocally)||void 0===r||r,o=new to,a=oM(t,function(){});return(/**
 * Creates a new transaction, adds it to the transactions we're tracking, and
 * sends it to the server if possible.
 *
 * @param path - Path at which to do transaction.
 * @param transactionUpdate - Update callback.
 * @param onComplete - Completion callback.
 * @param unwatcher - Function that will be called when the transaction no longer
 * need data updates for `path`.
 * @param applyLocally - Whether or not to make intermediate results visible
 */function(t,e,n,r,i,o){os(t,"transaction on "+e);// Initialize transaction.
var a={path:e,update:n,onComplete:r,// One of TransactionStatus enums.
status:null,// Used when combining transactions at different locations to figure out
// which one goes first.
order:ew(),// Whether to raise local events for this transaction.
applyLocally:o,// Count of how many times we've retried the transaction.
retryCount:0,// Function to call to clean up our .on() listener.
unwatcher:i,// Stores why a transaction was aborted.
abortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null},s=oc(t,e,void 0);a.currentInputSnapshot=s;var u=a.update(s.val());if(void 0===u)// Abort transaction.
a.unwatcher(),a.currentOutputSnapshotRaw=null,a.currentOutputSnapshotResolved=null,a.onComplete&&a.onComplete(null,!1,a.currentInputSnapshot);else{iK("transaction failed: Data returned ",u,a.path),// Mark as run and add to our queue.
a.status=0/* RUN */;var c=ix(t.transactionQueueTree_,e),h=iP(c)||[];h.push(a),iD(c,h);// Update visibleData and raise events
// Note: We intentionally raise events after updating all of our
// transaction state, since the user could start new transactions from the
// event callbacks.
var l=void 0;"object"==typeof u&&null!==u&&tS(u,".priority")?Y(iV(// eslint-disable-next-line @typescript-eslint/no-explicit-any
l=tC(u,".priority")),"Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null."):l=(ip(t.serverSyncTree_,e)||nW.EMPTY_NODE).getPriority().val();var f=i7(t),p=nG(u,l),d=iN(p,s,f);a.currentOutputSnapshotRaw=p,a.currentOutputSnapshotResolved=d,a.currentWriteId=on(t);var v=is(t.serverSyncTree_,e,d,a.currentWriteId,a.applyLocally);i4(t.eventQueue_,e,v),oh(t,t.transactionQueueTree_)}}(t._repo,t._path,e,function(e,n,r){var i=null;e?o.reject(e):(i=new oN(r,new ok(t._repo,t._path),nU),o.resolve(new o5(n,i)))},a,i),o.promise)})(this._delegate,t,{applyLocally:n}).then(function(t){return new o7(t.committed,new o9(r.database,t.snapshot))});return e&&i.then(function(t){return e(null,t.committed,t.snapshot)},function(t){return e(t,!1,null)}),i},e.prototype.setPriority=function(t,e){tD("Reference.setPriority",1,2,arguments.length),tL("Reference.setPriority","onComplete",e,!0);var n,r,i=(iX("setPriority",(n=tq(n=this._delegate))._path),iz("setPriority",t,!1),r=new to,or(n._repo,nv(n._path,".priority"),t,null,r.wrapCallback(function(){})),r.promise);return e&&i.then(function(){return e(null)},function(t){return e(t)}),i},e.prototype.push=function(t,n){var r,i,o,a,s,u=this;tD("Reference.push",0,2,arguments.length),tL("Reference.push","onComplete",n,!0);var c=(iX("push",(r=tq(r=this._delegate))._path),iB("push",t,r._path,!0),o=nX(i8(r._repo)),a=ox(r,o),s=ox(r,o),i=null!=t?oP(s,t).then(function(){return s}):Promise.resolve(s),a.then=i.then.bind(i),a.catch=i.then.bind(i,void 0),a),h=c.then(function(t){return new e(u.database,t)});n&&h.then(function(){return n(null)},function(t){return n(t)});var l=new e(this.database,c);return l.then=h.then.bind(h),l.catch=h.catch.bind(h,void 0),l},e.prototype.onDisconnect=function(){return iX("Reference.onDisconnect",this._delegate._path),new o8(new oI(this._delegate._repo,this._delegate._path))},Object.defineProperty(e.prototype,"key",{get:function(){return this.getKey()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"parent",{get:function(){return this.getParent()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"root",{get:function(){return this.getRoot()},enumerable:!1,configurable:!0}),e}(at),an=/** @class */function(){/**
     * The constructor should not be called by users of our public API.
     */function t(t,e){var n=this;this._delegate=t,this.app=e,this.INTERNAL={delete:function(){return n._delegate._delete()}}}return(/**
     * Modify this instance to communicate with the Realtime Database emulator.
     *
     * <p>Note: This method must be called before performing any other operation.
     *
     * @param host - the emulator host (ex: localhost)
     * @param port - the emulator port (ex: 8080)
     * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules
     */t.prototype.useEmulator=function(t,e,n){void 0===n&&(n={}),/**
 * Modify the provided instance to communicate with the Realtime Database
 * emulator.
 *
 * <p>Note: This method must be called before performing any other operation.
 *
 * @param db - The instance to modify.
 * @param host - The emulator host (ex: localhost)
 * @param port - The emulator port (ex: 8080)
 * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules
 */function(t,e,n,r){void 0===r&&(r={}),(t=tq(t))._checkNotDeleted("useEmulator"),t._instanceStarted&&eR("Cannot call useEmulator() after instance has already been initialized.");var i,o=t._repoInternal,a=void 0;if(o.repoInfo_.nodeAdmin)r.mockUserToken&&eR('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the "firebase" package instead of "firebase-admin".'),a=new eY(eY.OWNER);else if(r.mockUserToken){var s="string"==typeof r.mockUserToken?r.mockUserToken:ta(r.mockUserToken,t.app.options.projectId);a=new eY(s)}i=a,o.repoInfo_=new e0(e+":"+n,/* secure= */!1,o.repoInfo_.namespace,o.repoInfo_.webSocketOnly,o.repoInfo_.nodeAdmin,o.repoInfo_.persistenceKey,o.repoInfo_.includeNamespaceInQueryParams),i&&(o.authTokenProvider_=i)}(this._delegate,t,e,n)},t.prototype.ref=function(t){if(tD("database.ref",0,1,arguments.length),t instanceof ae){var e=oR(this._delegate,t.toString());return new ae(this,e)}var e=oA(this._delegate,t);return new ae(this,e)},/**
     * Returns a reference to the root or the path specified in url.
     * We throw a exception if the url is not in the same domain as the
     * current repo.
     * @returns Firebase reference.
     */t.prototype.refFromURL=function(t){tD("database.refFromURL",1,1,arguments.length);var e=oR(this._delegate,t);return new ae(this,e)},// Make individual repo go offline.
t.prototype.goOffline=function(){var t;return tD("database.goOffline",0,0,arguments.length),void((t=tq(t=this._delegate))._checkNotDeleted("goOffline"),oa(t._repo))},t.prototype.goOnline=function(){var t,e;return tD("database.goOnline",0,0,arguments.length),void((t=tq(t=this._delegate))._checkNotDeleted("goOnline"),(e=t._repo).persistentConnection_&&e.persistentConnection_.resume(i6))},t.ServerValue={TIMESTAMP:o6,increment:function(t){return{".sv":{increment:t}}}},t)}(),ar=/*#__PURE__*/Object.freeze({__proto__:null,forceLongPolling:function(){ne.forceDisallow(),e7.forceAllow()},forceWebSockets:function(){e7.forceDisallow()},isWebSocketsAvailable:function(){return ne.isAvailable()},setSecurityDebugCallback:function(t,e){// eslint-disable-next-line @typescript-eslint/no-explicit-any
t._delegate._repo.persistentConnection_.securityDebugCallback_=e},stats:function(t,e){!function(t,e){if(void 0===e&&(e=!1),"undefined"!=typeof console){e?(t.statsListener_||(t.statsListener_=new ru(t.stats_)),n=t.statsListener_.get()):n=t.stats_.get();var n,r=Object.keys(n).reduce(function(t,e){return Math.max(e.length,t)},0);eB(n,function(t,e){// pad stat names to be the same length (plus 2 extra spaces).
for(var n=t,i=t.length;i<r+2;i++)n+=" ";console.log(n+e)})}}(t._delegate._repo,e)},statsIncrementCounter:function(t,e){var n;(n=t._delegate._repo).stats_.incrementCounter(e),n.statsReporter_.statsToReport_[e]=!0},dataUpdateCount:function(t){return t._delegate._repo.dataUpdateCount},interceptServerData:function(t,e){t._delegate._repo.interceptServerDataCallback_=e},initStandalone:/**
 * Used by console to create a database based on the app,
 * passed database URL and a custom auth implementation.
 *
 * @param app - A valid FirebaseApp-like object
 * @param url - A valid Firebase databaseURL
 * @param version - custom version e.g. firebase-admin version
 * @param customAuthImpl - custom auth implementation
 */function(t){var e=t.app,n=t.url,r=t.version,i=t.customAuthImpl,o=t.namespace,a=t.nodeAdmin,s=void 0!==a&&a;ed=r;/**
     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform
     * any actual function.
     */var u=new tK("auth-internal",new tH("database-standalone"));return u.setComponent(new tV("auth-internal",function(){return i},"PRIVATE"/* PRIVATE */)),{instance:new an(o4(e,u,/* appCheckProvider= */void 0,n,s),e),namespace:o}}});// eslint-disable-next-line @typescript-eslint/no-explicit-any
nS.prototype.simpleListen=function(t,e){this.sendRequest("q",{p:t},e)},// eslint-disable-next-line @typescript-eslint/no-explicit-any
nS.prototype.echo=function(t,e){this.sendRequest("echo",{d:t},e)};var ai=/*#__PURE__*/Object.freeze({__proto__:null,DataConnection:nS,RealTimeConnection:nr,hijackHash:function(t){var e=nS.prototype.put;return nS.prototype.put=function(n,r,i,o){void 0!==o&&(o=t()),e.call(this,n,r,i,o)},function(){nS.prototype.put=e}},ConnectionTarget:e0,queryIdentifier:function(t){return t._delegate._queryIdentifier},forceRestClient:function(t){o2=t}}),ao=an.ServerValue;ed=ee.SDK_VERSION,ee.INTERNAL.registerComponent(new tV("database",function(t,e){var n=e.instanceIdentifier,r=t.getProvider("app").getImmediate(),i=t.getProvider("auth-internal"),o=t.getProvider("app-check-internal");return new an(o4(r,i,o,n),r)},"PUBLIC"/* PUBLIC */).setServiceProps({Reference:ae,Query:at,Database:an,DataSnapshot:o9,enableLogging:eC,INTERNAL:ar,ServerValue:ao,TEST_ACCESS:ai}).setMultipleInstances(!0)),ee.registerVersion("@firebase/database","0.11.0"),tf();/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** *//* global Reflect, Promise */var aa=function(t,e){return(aa=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)};function as(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}var au,ac,ah,al,af,ap,ad,av,ag,am,ay,a_,ab,aw,aI,aT,aE,aS,aC,ak,aN,aA,aR,ax,aP="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==O?O:"undefined"!=typeof self?self:{},aD=aD||{},aO=aP||self;function aL(){}function aM(t){var e=typeof t;return"array"==(e="object"!=e?e:t?Array.isArray(t)?"array":e:"null")||"object"==e&&"number"==typeof t.length}function aF(t){var e=typeof t;return"object"==e&&null!=t||"function"==e}function aj(t,e,n){return t.call.apply(t.bind,arguments)}function aU(t,e,n){if(!t)throw Error();if(2<arguments.length){var r=Array.prototype.slice.call(arguments,2);return function(){var n=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(n,r),t.apply(e,n)}}return function(){return t.apply(e,arguments)}}function aq(t,e,n){return(aq=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?aj:aU).apply(null,arguments)}function aV(t,e){var n=Array.prototype.slice.call(arguments,1);return function(){var e=n.slice();return e.push.apply(e,arguments),t.apply(this,e)}}function aB(t,e){function n(){}n.prototype=e.prototype,t.Z=e.prototype,t.prototype=new n,t.prototype.constructor=t,t.Vb=function(t,n,r){for(var i=Array(arguments.length-2),o=2;o<arguments.length;o++)i[o-2]=arguments[o];return e.prototype[n].apply(t,i)}}function aK(){this.s=this.s,this.o=this.o}aK.prototype.s=!1,aK.prototype.na=function(){this.s||(this.s=!0,this.M())},aK.prototype.M=function(){if(this.o)for(;this.o.length;)this.o.shift()()};var aH=Array.prototype.indexOf?function(t,e){return Array.prototype.indexOf.call(t,e,void 0)}:function(t,e){if("string"==typeof t)return"string"!=typeof e||1!=e.length?-1:t.indexOf(e,0);for(var n=0;n<t.length;n++)if(n in t&&t[n]===e)return n;return -1},aW=Array.prototype.forEach?function(t,e,n){Array.prototype.forEach.call(t,e,n)}:function(t,e,n){for(var r=t.length,i="string"==typeof t?t.split(""):t,o=0;o<r;o++)o in i&&e.call(n,i[o],o,t)};function az(t){return Array.prototype.concat.apply([],arguments)}function aG(t){var e=t.length;if(0<e){for(var n=Array(e),r=0;r<e;r++)n[r]=t[r];return n}return[]}function aQ(t){return/^[\s\xa0]*$/.test(t)}var a$=String.prototype.trim?function(t){return t.trim()}:function(t){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(t)[1]};function aY(t,e){return -1!=t.indexOf(e)}function aX(t,e){return t<e?-1:t>e?1:0}t:{var aJ=aO.navigator;if(aJ){var aZ=aJ.userAgent;if(aZ){lT=aZ;break t}}lT=""}function a0(t,e,n){for(var r in t)e.call(n,t[r],r,t)}function a1(t){var e={};for(var n in t)e[n]=t[n];return e}var a2="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function a4(t,e){for(var n,r,i=1;i<arguments.length;i++){for(n in r=arguments[i])t[n]=r[n];for(var o=0;o<a2.length;o++)n=a2[o],Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}}function a3(t){return a3[" "](t),t}a3[" "]=aL;var a6=aY(lT,"Opera"),a5=aY(lT,"Trident")||aY(lT,"MSIE"),a8=aY(lT,"Edge"),a7=a8||a5,a9=aY(lT,"Gecko")&&!(aY(lT.toLowerCase(),"webkit")&&!aY(lT,"Edge"))&&!(aY(lT,"Trident")||aY(lT,"MSIE"))&&!aY(lT,"Edge"),st=aY(lT.toLowerCase(),"webkit")&&!aY(lT,"Edge");function se(){var t=aO.document;return t?t.documentMode:void 0}t:{var sn,sr="",si=(sn=lT,a9?/rv:([^\);]+)(\)|;)/.exec(sn):a8?/Edge\/([\d\.]+)/.exec(sn):a5?/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(sn):st?/WebKit\/(\S+)/.exec(sn):a6?/(?:Version)[ \/]?(\S+)/.exec(sn):void 0);if(si&&(sr=si?si[1]:""),a5){var so=se();if(null!=so&&so>parseFloat(sr)){lE=String(so);break t}}lE=sr}var sa={},ss=aO.document&&a5&&(se()||parseInt(lE,10))||void 0,su=function(){if(!aO.addEventListener||!Object.defineProperty)return!1;var t=!1,e=Object.defineProperty({},"passive",{get:function(){t=!0}});try{aO.addEventListener("test",aL,e),aO.removeEventListener("test",aL,e)}catch(t){}return t}();function sc(t,e){this.type=t,this.g=this.target=e,this.defaultPrevented=!1}function sh(t,e){if(sc.call(this,t?t.type:""),this.relatedTarget=this.g=this.target=null,this.button=this.screenY=this.screenX=this.clientY=this.clientX=0,this.key="",this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1,this.state=null,this.pointerId=0,this.pointerType="",this.i=null,t){var n=this.type=t.type,r=t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:null;if(this.target=t.target||t.srcElement,this.g=e,e=t.relatedTarget){if(a9){t:{try{a3(e.nodeName);var i=!0;break t}catch(t){}i=!1}i||(e=null)}}else"mouseover"==n?e=t.fromElement:"mouseout"==n&&(e=t.toElement);this.relatedTarget=e,r?(this.clientX=void 0!==r.clientX?r.clientX:r.pageX,this.clientY=void 0!==r.clientY?r.clientY:r.pageY,this.screenX=r.screenX||0,this.screenY=r.screenY||0):(this.clientX=void 0!==t.clientX?t.clientX:t.pageX,this.clientY=void 0!==t.clientY?t.clientY:t.pageY,this.screenX=t.screenX||0,this.screenY=t.screenY||0),this.button=t.button,this.key=t.key||"",this.ctrlKey=t.ctrlKey,this.altKey=t.altKey,this.shiftKey=t.shiftKey,this.metaKey=t.metaKey,this.pointerId=t.pointerId||0,this.pointerType="string"==typeof t.pointerType?t.pointerType:sl[t.pointerType]||"",this.state=t.state,this.i=t,t.defaultPrevented&&sh.Z.h.call(this)}}sc.prototype.h=function(){this.defaultPrevented=!0},aB(sh,sc);var sl={2:"touch",3:"pen",4:"mouse"};sh.prototype.h=function(){sh.Z.h.call(this);var t=this.i;t.preventDefault?t.preventDefault():t.returnValue=!1};var sf="closure_listenable_"+(1e6*Math.random()|0),sp=0;function sd(t,e,n,r,i){this.listener=t,this.proxy=null,this.src=e,this.type=n,this.capture=!!r,this.ia=i,this.key=++sp,this.ca=this.fa=!1}function sv(t){t.ca=!0,t.listener=null,t.proxy=null,t.src=null,t.ia=null}function sg(t){this.src=t,this.g={},this.h=0}function sm(t,e){var n=e.type;if(n in t.g){var r,i=t.g[n],o=aH(i,e);(r=0<=o)&&Array.prototype.splice.call(i,o,1),r&&(sv(e),0==t.g[n].length&&(delete t.g[n],t.h--))}}function sy(t,e,n,r){for(var i=0;i<t.length;++i){var o=t[i];if(!o.ca&&o.listener==e&&!!n==o.capture&&o.ia==r)return i}return -1}sg.prototype.add=function(t,e,n,r,i){var o=t.toString();(t=this.g[o])||(t=this.g[o]=[],this.h++);var a=sy(t,e,r,i);return -1<a?(e=t[a],n||(e.fa=!1)):((e=new sd(e,this.src,o,!!r,i)).fa=n,t.push(e)),e};var s_="closure_lm_"+(1e6*Math.random()|0),sb={};function sw(t,e,n,r,i,o){if(!e)throw Error("Invalid event type");var a=aF(i)?!!i.capture:!!i,s=sS(t);if(s||(t[s_]=s=new sg(t)),(n=s.add(e,n,r,a,o)).proxy)return n;if(r=function t(e){return sE.call(t.src,t.listener,e)},n.proxy=r,r.src=t,r.listener=n,t.addEventListener)su||(i=a),void 0===i&&(i=!1),t.addEventListener(e.toString(),r,i);else if(t.attachEvent)t.attachEvent(sT(e.toString()),r);else if(t.addListener&&t.removeListener)t.addListener(r);else throw Error("addEventListener and attachEvent are unavailable.");return n}function sI(t){if("number"!=typeof t&&t&&!t.ca){var e=t.src;if(e&&e[sf])sm(e.i,t);else{var n=t.type,r=t.proxy;e.removeEventListener?e.removeEventListener(n,r,t.capture):e.detachEvent?e.detachEvent(sT(n),r):e.addListener&&e.removeListener&&e.removeListener(r),(n=sS(e))?(sm(n,t),0==n.h&&(n.src=null,e[s_]=null)):sv(t)}}}function sT(t){return t in sb?sb[t]:sb[t]="on"+t}function sE(t,e){if(t.ca)t=!0;else{e=new sh(e,this);var n=t.listener,r=t.ia||t.src;t.fa&&sI(t),t=n.call(r,e)}return t}function sS(t){return(t=t[s_])instanceof sg?t:null}var sC="__closure_events_fn_"+(1e9*Math.random()>>>0);function sk(t){return"function"==typeof t?t:(t[sC]||(t[sC]=function(e){return t.handleEvent(e)}),t[sC])}function sN(){aK.call(this),this.i=new sg(this),this.P=this,this.I=null}function sA(t,e){var n,r=t.I;if(r)for(n=[];r;r=r.I)n.push(r);if(t=t.P,r=e.type||e,"string"==typeof e)e=new sc(e,t);else if(e instanceof sc)e.target=e.target||t;else{var i=e;a4(e=new sc(r,t),i)}if(i=!0,n)for(var o=n.length-1;0<=o;o--){var a=e.g=n[o];i=sR(a,r,!0,e)&&i}if(i=sR(a=e.g=t,r,!0,e)&&i,i=sR(a,r,!1,e)&&i,n)for(o=0;o<n.length;o++)i=sR(a=e.g=n[o],r,!1,e)&&i}function sR(t,e,n,r){if(!(e=t.i.g[String(e)]))return!0;e=e.concat();for(var i=!0,o=0;o<e.length;++o){var a=e[o];if(a&&!a.ca&&a.capture==n){var s=a.listener,u=a.ia||a.src;a.fa&&sm(t.i,a),i=!1!==s.call(u,r)&&i}}return i&&!r.defaultPrevented}aB(sN,aK),sN.prototype[sf]=!0,sN.prototype.removeEventListener=function(t,e,n,r){!function t(e,n,r,i,o){if(Array.isArray(n))for(var a=0;a<n.length;a++)t(e,n[a],r,i,o);else(i=aF(i)?!!i.capture:!!i,r=sk(r),e&&e[sf])?(e=e.i,(n=String(n).toString())in e.g&&-1<(r=sy(a=e.g[n],r,i,o))&&(sv(a[r]),Array.prototype.splice.call(a,r,1),0==a.length&&(delete e.g[n],e.h--))):e&&(e=sS(e))&&(n=e.g[n.toString()],e=-1,n&&(e=sy(n,r,i,o)),(r=-1<e?n[e]:null)&&sI(r))}(this,t,e,n,r)},sN.prototype.M=function(){if(sN.Z.M.call(this),this.i){var t,e=this.i;for(t in e.g){for(var n=e.g[t],r=0;r<n.length;r++)sv(n[r]);delete e.g[t],e.h--}}this.I=null},sN.prototype.N=function(t,e,n,r){return this.i.add(String(t),e,!1,n,r)},sN.prototype.O=function(t,e,n,r){return this.i.add(String(t),e,!0,n,r)};var sx=aO.JSON.stringify,sP=/** @class */function(){function t(){this.h=this.g=null}return t.prototype.add=function(t,e){var n=sD.get();n.set(t,e),this.h?this.h.next=n:this.g=n,this.h=n},t}(),sD=new/** @class */(function(){function t(t,e){this.i=t,this.j=e,this.h=0,this.g=null}return t.prototype.get=function(){var t;return 0<this.h?(this.h--,t=this.g,this.g=t.next,t.next=null):t=this.i(),t},t}())(function(){return new sO},function(t){return t.reset()}),sO=/** @class */function(){function t(){this.next=this.g=this.h=null}return t.prototype.set=function(t,e){this.h=t,this.g=e,this.next=null},t.prototype.reset=function(){this.next=this.g=this.h=null},t}();function sL(t,e){var n;lC||(n=aO.Promise.resolve(void 0),lC=function(){n.then(sj)}),sM||(lC(),sM=!0),sF.add(t,e)}var sM=!1,sF=new sP;function sj(){for(var t,e;t=null,sF.g&&(t=sF.g,sF.g=sF.g.next,sF.g||(sF.h=null),t.next=null),e=t;){try{e.h.call(e.g)}catch(t){!function(t){aO.setTimeout(function(){throw t},0)}(t)}sD.j(e),100>sD.h&&(sD.h++,e.next=sD.g,sD.g=e)}sM=!1}function sU(t,e){sN.call(this),this.h=t||1,this.g=e||aO,this.j=aq(this.kb,this),this.l=Date.now()}function sq(t){t.da=!1,t.S&&(t.g.clearTimeout(t.S),t.S=null)}function sV(t,e,n){if("function"==typeof t)n&&(t=aq(t,n));else if(t&&"function"==typeof t.handleEvent)t=aq(t.handleEvent,t);else throw Error("Invalid listener argument");return 2147483647<Number(e)?-1:aO.setTimeout(t,e||0)}aB(sU,sN),(ax=sU.prototype).da=!1,ax.S=null,ax.kb=function(){if(this.da){var t=Date.now()-this.l;0<t&&t<.8*this.h?this.S=this.g.setTimeout(this.j,this.h-t):(this.S&&(this.g.clearTimeout(this.S),this.S=null),sA(this,"tick"),this.da&&(sq(this),this.start()))}},ax.start=function(){this.da=!0,this.S||(this.S=this.g.setTimeout(this.j,this.h),this.l=Date.now())},ax.M=function(){sU.Z.M.call(this),sq(this),delete this.g};var sB=/** @class */function(t){function e(e,n){var r=t.call(this)||this;return r.m=e,r.j=n,r.h=null,r.i=!1,r.g=null,r}return!function(t,e){if("function"!=typeof e&&null!==e)throw TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}aa(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}(e,t),e.prototype.l=function(t){this.h=arguments,this.g?this.i=!0:function t(e){e.g=sV(function(){e.g=null,e.i&&(e.i=!1,t(e))},e.j);var n=e.h;e.h=null,e.m.apply(null,n)}(this)},e.prototype.M=function(){t.prototype.M.call(this),this.g&&(aO.clearTimeout(this.g),this.g=null,this.i=!1,this.h=null)},e}(aK);function sK(t){aK.call(this),this.h=t,this.g={}}aB(sK,aK);var sH=[];function sW(t,e,n,r){Array.isArray(n)||(n&&(sH[0]=n.toString()),n=sH);for(var i=0;i<n.length;i++){var o=function t(e,n,r,i,o){if(i&&i.once)return function t(e,n,r,i,o){if(Array.isArray(n)){for(var a=0;a<n.length;a++)t(e,n[a],r,i,o);return null}return r=sk(r),e&&e[sf]?e.O(n,r,aF(i)?!!i.capture:!!i,o):sw(e,n,r,!0,i,o)}(e,n,r,i,o);if(Array.isArray(n)){for(var a=0;a<n.length;a++)t(e,n[a],r,i,o);return null}return r=sk(r),e&&e[sf]?e.N(n,r,aF(i)?!!i.capture:!!i,o):sw(e,n,r,!1,i,o)}(e,n[i],r||t.handleEvent,!1,t.h||t);if(!o)break;t.g[o.key]=o}}function sz(t){a0(t.g,function(t,e){this.g.hasOwnProperty(e)&&sI(t)},t),t.g={}}function sG(){this.g=!0}function sQ(t,e,n,r){t.info(function(){return"XMLHTTP TEXT ("+e+"): "+function(t,e){if(!t.g)return e;if(!e)return null;try{var n=JSON.parse(e);if(n){for(t=0;t<n.length;t++)if(Array.isArray(n[t])){var r=n[t];if(!(2>r.length)){var i=r[1];if(Array.isArray(i)&&!(1>i.length)){var o=i[0];if("noop"!=o&&"stop"!=o&&"close"!=o)for(var a=1;a<i.length;a++)i[a]=""}}}}return sx(n)}catch(t){return e}}(t,n)+(r?" "+r:"")})}sK.prototype.M=function(){sK.Z.M.call(this),sz(this)},sK.prototype.handleEvent=function(){throw Error("EventHandler.handleEvent not implemented")},sG.prototype.Aa=function(){this.g=!1},sG.prototype.info=function(){};var s$={},sY=null;function sX(){return sY=sY||new sN}function sJ(t){sc.call(this,s$.Ma,t)}function sZ(t){var e=sX();sA(e,new sJ(e,t))}function s0(t,e){sc.call(this,s$.STAT_EVENT,t),this.stat=e}function s1(t){var e=sX();sA(e,new s0(e,t))}function s2(t,e){sc.call(this,s$.Na,t),this.size=e}function s4(t,e){if("function"!=typeof t)throw Error("Fn must not be null and must be a function");return aO.setTimeout(function(){t()},e)}s$.Ma="serverreachability",aB(sJ,sc),s$.STAT_EVENT="statevent",aB(s0,sc),s$.Na="timingevent",aB(s2,sc);var s3={NO_ERROR:0,TIMEOUT:8},s6={};function s5(){}function s8(t){return t.h||(t.h=t.i())}function s7(){}s5.prototype.h=null;var s9={OPEN:"a",pb:"b",Ka:"c",Bb:"d"};function ut(){sc.call(this,"d")}function ue(){sc.call(this,"c")}function un(){}function ur(t,e,n,r){this.l=t,this.j=e,this.m=n,this.X=r||1,this.V=new sK(this),this.P=uo,t=a7?125:void 0,this.W=new sU(t),this.H=null,this.i=!1,this.s=this.A=this.v=this.K=this.F=this.Y=this.B=null,this.D=[],this.g=null,this.C=0,this.o=this.u=null,this.N=-1,this.I=!1,this.O=0,this.L=null,this.aa=this.J=this.$=this.U=!1,this.h=new ui}function ui(){this.i=null,this.g="",this.h=!1}aB(ut,sc),aB(ue,sc),aB(un,s5),un.prototype.g=function(){return new XMLHttpRequest},un.prototype.i=function(){return{}},lk=new un;var uo=45e3,ua={},us={};function uu(t,e,n){t.K=1,t.v=uR(uE(e)),t.s=n,t.U=!0,uc(t,null)}function uc(t,e){t.F=Date.now(),uf(t),t.A=uE(t.v);var n=t.A,r=t.X;Array.isArray(r)||(r=[String(r)]),uK(n.h,"t",r),t.C=0,n=t.l.H,t.h=new ui,t.g=cD(t.l,n?e:null,!t.s),0<t.O&&(t.L=new sB(aq(t.Ia,t,t.g),t.O)),sW(t.V,t.g,"readystatechange",t.gb),e=t.H?a1(t.H):{},t.s?(t.u||(t.u="POST"),e["Content-Type"]="application/x-www-form-urlencoded",t.g.ea(t.A,t.u,t.s,e)):(t.u="GET",t.g.ea(t.A,t.u,null,e)),sZ(1),function(t,e,n,r,i,o){t.info(function(){if(t.g){if(o)for(var a="",s=o.split("&"),u=0;u<s.length;u++){var c=s[u].split("=");if(1<c.length){var h=c[0];c=c[1];var l=h.split("_");a=2<=l.length&&"type"==l[1]?a+(h+"=")+c+"&":a+(h+"=redacted&")}}else a=null}else a=o;return"XMLHTTP REQ ("+r+") [attempt "+i+"]: "+e+"\n"+n+"\n"+a})}(t.j,t.u,t.A,t.m,t.X,t.s)}function uh(t){return!!t.g&&"GET"==t.u&&2!=t.K&&t.l.Ba}function ul(t,e,n){for(var r,i=!0;!t.I&&t.C<n.length;)if((r=function(t,e){var n=t.C,r=e.indexOf("\n",n);return -1==r?us:isNaN(n=Number(e.substring(n,r)))?ua:(r+=1)+n>e.length?us:(e=e.substr(r,n),t.C=r+n,e)}(t,n))==us){4==e&&(t.o=4,s1(14),i=!1),sQ(t.j,t.m,null,"[Incomplete Response]");break}else if(r==ua){t.o=4,s1(15),sQ(t.j,t.m,n,"[Invalid Chunk]"),i=!1;break}else sQ(t.j,t.m,r,null),um(t,r);uh(t)&&r!=us&&r!=ua&&(t.h.g="",t.C=0),4!=e||0!=n.length||t.h.h||(t.o=1,s1(16),i=!1),t.i=t.i&&i,i?0<n.length&&!t.aa&&(t.aa=!0,(e=t.l).g==t&&e.$&&!e.L&&(e.h.info("Great, no buffering proxy detected. Bytes received: "+n.length),cS(e),e.L=!0,s1(11))):(sQ(t.j,t.m,n,"[Invalid Chunked Response]"),ug(t),uv(t))}function uf(t){t.Y=Date.now()+t.P,up(t,t.P)}function up(t,e){if(null!=t.B)throw Error("WatchDog timer not null");t.B=s4(aq(t.eb,t),e)}function ud(t){t.B&&(aO.clearTimeout(t.B),t.B=null)}function uv(t){0==t.l.G||t.I||cN(t.l,t)}function ug(t){ud(t);var e=t.L;e&&"function"==typeof e.na&&e.na(),t.L=null,sq(t.W),sz(t.V),t.g&&(e=t.g,t.g=null,e.abort(),e.na())}function um(t,e){try{var n=t.l;if(0!=n.G&&(n.g==t||uY(n.i,t))){if(n.I=t.N,!t.J&&uY(n.i,t)&&3==n.G){try{var r=n.Ca.g.parse(e)}catch(t){r=null}if(Array.isArray(r)&&3==r.length){var i=r;if(0==i[0]){t:if(!n.u){if(n.g){if(n.g.F+3e3<t.F)ck(n),cg(n);else break t}cE(n),s1(18)}}else n.ta=i[1],0<n.ta-n.U&&37500>i[2]&&n.N&&0==n.A&&!n.v&&(n.v=s4(aq(n.ab,n),6e3));if(1>=u$(n.i)&&n.ka){try{n.ka()}catch(t){}n.ka=void 0}}else cR(n,11)}else if((t.J||n.g==t)&&ck(n),!aQ(e))for(i=n.Ca.g.parse(e),e=0;e<i.length;e++){var o=i[e];if(n.U=o[0],o=o[1],2==n.G){if("c"==o[0]){n.J=o[1],n.la=o[2];var a=o[3];null!=a&&(n.ma=a,n.h.info("VER="+n.ma));var s=o[4];null!=s&&(n.za=s,n.h.info("SVER="+n.za));var u=o[5];null!=u&&"number"==typeof u&&0<u&&(r=1.5*u,n.K=r,n.h.info("backChannelRequestTimeoutMs_="+r)),r=n;var c=t.g;if(c){var h=c.g?c.g.getResponseHeader("X-Client-Wire-Protocol"):null;if(h){var l=r.i;!l.g&&(aY(h,"spdy")||aY(h,"quic")||aY(h,"h2"))&&(l.j=l.l,l.g=new Set,l.h&&(uX(l,l.h),l.h=null))}if(r.D){var f=c.g?c.g.getResponseHeader("X-HTTP-Session-Id"):null;f&&(r.sa=f,uA(r.F,r.D,f))}}if(n.G=3,n.j&&n.j.xa(),n.$&&(n.O=Date.now()-t.F,n.h.info("Handshake RTT: "+n.O+"ms")),(r=n).oa=cP(r,r.H?r.la:null,r.W),t.J){uJ(r.i,t);var p=r.K;p&&t.setTimeout(p),t.B&&(ud(t),uf(t)),r.g=t}else cT(r);0<n.l.length&&c_(n)}else"stop"!=o[0]&&"close"!=o[0]||cR(n,7)}else 3==n.G&&("stop"==o[0]||"close"==o[0]?"stop"==o[0]?cR(n,7):cv(n):"noop"!=o[0]&&n.j&&n.j.wa(o),n.A=0)}}sZ(4)}catch(t){}}function uy(t,e){if(t.forEach&&"function"==typeof t.forEach)t.forEach(e,void 0);else if(aM(t)||"string"==typeof t)aW(t,e,void 0);else{if(t.T&&"function"==typeof t.T)var n=t.T();else if(t.R&&"function"==typeof t.R)n=void 0;else if(aM(t)||"string"==typeof t){n=[];for(var r=t.length,i=0;i<r;i++)n.push(i)}else for(i in n=[],r=0,t)n[r++]=i;i=(r=function(t){if(t.R&&"function"==typeof t.R)return t.R();if("string"==typeof t)return t.split("");if(aM(t)){for(var e=[],n=t.length,r=0;r<n;r++)e.push(t[r]);return e}for(r in e=[],n=0,t)e[n++]=t[r];return e}(t)).length;for(var o=0;o<i;o++)e.call(void 0,r[o],n&&n[o],t)}}function u_(t,e){this.h={},this.g=[],this.i=0;var n=arguments.length;if(1<n){if(n%2)throw Error("Uneven number of arguments");for(var r=0;r<n;r+=2)this.set(arguments[r],arguments[r+1])}else if(t){if(t instanceof u_)for(n=t.T(),r=0;r<n.length;r++)this.set(n[r],t.get(n[r]));else for(r in t)this.set(r,t[r])}}function ub(t){if(t.i!=t.g.length){for(var e=0,n=0;e<t.g.length;){var r=t.g[e];uw(t.h,r)&&(t.g[n++]=r),e++}t.g.length=n}if(t.i!=t.g.length){var i={};for(n=e=0;e<t.g.length;)uw(i,r=t.g[e])||(t.g[n++]=r,i[r]=1),e++;t.g.length=n}}function uw(t,e){return Object.prototype.hasOwnProperty.call(t,e)}(ax=ur.prototype).setTimeout=function(t){this.P=t},ax.gb=function(t){t=t.target;var e=this.L;e&&3==ch(t)?e.l():this.Ia(t)},ax.Ia=function(t){try{if(t==this.g)t:{var e=ch(this.g),n=this.g.Da(),r=this.g.ba();if(!(3>e)&&(3!=e||a7||this.g&&(this.h.h||this.g.ga()||cl(this.g)))){this.I||4!=e||7==n||(8==n||0>=r?sZ(3):sZ(2)),ud(this);var i=this.g.ba();this.N=i;e:if(uh(this)){var o=cl(this.g);t="";var a=o.length,s=4==ch(this.g);if(!this.h.i){if("undefined"==typeof TextDecoder){ug(this),uv(this);var u="";break e}this.h.i=new aO.TextDecoder}for(n=0;n<a;n++)this.h.h=!0,t+=this.h.i.decode(o[n],{stream:s&&n==a-1});o.splice(0,a),this.h.g+=t,this.C=0,u=this.h.g}else u=this.g.ga();if(this.i=200==i,function(t,e,n,r,i,o,a){t.info(function(){return"XMLHTTP RESP ("+r+") [ attempt "+i+"]: "+e+"\n"+n+"\n"+o+" "+a})}(this.j,this.u,this.A,this.m,this.X,e,i),this.i){if(this.$&&!this.J){e:{if(this.g){var c,h=this.g;if((c=h.g?h.g.getResponseHeader("X-HTTP-Initial-Response"):null)&&!aQ(c)){var l=c;break e}}l=null}if(i=l)sQ(this.j,this.m,i,"Initial handshake response via X-HTTP-Initial-Response"),this.J=!0,um(this,i);else{this.i=!1,this.o=3,s1(12),ug(this),uv(this);break t}}this.U?(ul(this,e,u),a7&&this.i&&3==e&&(sW(this.V,this.W,"tick",this.fb),this.W.start())):(sQ(this.j,this.m,u,null),um(this,u)),4==e&&ug(this),this.i&&!this.I&&(4==e?cN(this.l,this):(this.i=!1,uf(this)))}else 400==i&&0<u.indexOf("Unknown SID")?(this.o=3,s1(12)):(this.o=0,s1(13)),ug(this),uv(this)}}}catch(t){}finally{}},ax.fb=function(){if(this.g){var t=ch(this.g),e=this.g.ga();this.C<e.length&&(ud(this),ul(this,t,e),this.i&&4!=t&&uf(this))}},ax.cancel=function(){this.I=!0,ug(this)},ax.eb=function(){this.B=null;var t=Date.now();0<=t-this.Y?(function(t,e){t.info(function(){return"TIMEOUT: "+e})}(this.j,this.A),2!=this.K&&(sZ(3),s1(17)),ug(this),this.o=2,uv(this)):up(this,this.Y-t)},(ax=u_.prototype).R=function(){ub(this);for(var t=[],e=0;e<this.g.length;e++)t.push(this.h[this.g[e]]);return t},ax.T=function(){return ub(this),this.g.concat()},ax.get=function(t,e){return uw(this.h,t)?this.h[t]:e},ax.set=function(t,e){uw(this.h,t)||(this.i++,this.g.push(t)),this.h[t]=e},ax.forEach=function(t,e){for(var n=this.T(),r=0;r<n.length;r++){var i=n[r],o=this.get(i);t.call(e,o,i,this)}};var uI=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function uT(t,e){if(this.i=this.s=this.j="",this.m=null,this.o=this.l="",this.g=!1,t instanceof uT){this.g=void 0!==e?e:t.g,uS(this,t.j),this.s=t.s,uC(this,t.i),uk(this,t.m),this.l=t.l,e=t.h;var n=new uU;n.i=e.i,e.g&&(n.g=new u_(e.g),n.h=e.h),uN(this,n),this.o=t.o}else t&&(n=String(t).match(uI))?(this.g=!!e,uS(this,n[1]||"",!0),this.s=ux(n[2]||""),uC(this,n[3]||"",!0),uk(this,n[4]),this.l=ux(n[5]||"",!0),uN(this,n[6]||"",!0),this.o=ux(n[7]||"")):(this.g=!!e,this.h=new uU(null,this.g))}function uE(t){return new uT(t)}function uS(t,e,n){t.j=n?ux(e,!0):e,t.j&&(t.j=t.j.replace(/:$/,""))}function uC(t,e,n){t.i=n?ux(e,!0):e}function uk(t,e){if(e){if(isNaN(e=Number(e))||0>e)throw Error("Bad port number "+e);t.m=e}else t.m=null}function uN(t,e,n){var r,i;e instanceof uU?(t.h=e,r=t.h,(i=t.g)&&!r.j&&(uq(r),r.i=null,r.g.forEach(function(t,e){var n=e.toLowerCase();e!=n&&(uV(this,e),uK(this,n,t))},r)),r.j=i):(n||(e=uP(e,uF)),t.h=new uU(e,t.g))}function uA(t,e,n){t.h.set(e,n)}function uR(t){return uA(t,"zx",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^Date.now()).toString(36)),t}function ux(t,e){return t?e?decodeURI(t.replace(/%25/g,"%2525")):decodeURIComponent(t):""}function uP(t,e,n){return"string"==typeof t?(t=encodeURI(t).replace(e,uD),n&&(t=t.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),t):null}function uD(t){return"%"+((t=t.charCodeAt(0))>>4&15).toString(16)+(15&t).toString(16)}uT.prototype.toString=function(){var t=[],e=this.j;e&&t.push(uP(e,uO,!0),":");var n=this.i;return(n||"file"==e)&&(t.push("//"),(e=this.s)&&t.push(uP(e,uO,!0),"@"),t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),null!=(n=this.m)&&t.push(":",String(n))),(n=this.l)&&(this.i&&"/"!=n.charAt(0)&&t.push("/"),t.push(uP(n,"/"==n.charAt(0)?uM:uL,!0))),(n=this.h.toString())&&t.push("?",n),(n=this.o)&&t.push("#",uP(n,uj)),t.join("")};var uO=/[#\/\?@]/g,uL=/[#\?:]/g,uM=/[#\?]/g,uF=/[#\?@]/g,uj=/#/g;function uU(t,e){this.h=this.g=null,this.i=t||null,this.j=!!e}function uq(t){t.g||(t.g=new u_,t.h=0,t.i&&function(t,e){if(t){t=t.split("&");for(var n=0;n<t.length;n++){var r=t[n].indexOf("="),i=null;if(0<=r){var o=t[n].substring(0,r);i=t[n].substring(r+1)}else o=t[n];e(o,i?decodeURIComponent(i.replace(/\+/g," ")):"")}}}(t.i,function(e,n){t.add(decodeURIComponent(e.replace(/\+/g," ")),n)}))}function uV(t,e){uq(t),e=uH(t,e),uw(t.g.h,e)&&(t.i=null,t.h-=t.g.get(e).length,uw((t=t.g).h,e)&&(delete t.h[e],t.i--,t.g.length>2*t.i&&ub(t)))}function uB(t,e){return uq(t),e=uH(t,e),uw(t.g.h,e)}function uK(t,e,n){uV(t,e),0<n.length&&(t.i=null,t.g.set(uH(t,e),aG(n)),t.h+=n.length)}function uH(t,e){return e=String(e),t.j&&(e=e.toLowerCase()),e}(ax=uU.prototype).add=function(t,e){uq(this),this.i=null,t=uH(this,t);var n=this.g.get(t);return n||this.g.set(t,n=[]),n.push(e),this.h+=1,this},ax.forEach=function(t,e){uq(this),this.g.forEach(function(n,r){aW(n,function(n){t.call(e,n,r,this)},this)},this)},ax.T=function(){uq(this);for(var t=this.g.R(),e=this.g.T(),n=[],r=0;r<e.length;r++)for(var i=t[r],o=0;o<i.length;o++)n.push(e[r]);return n},ax.R=function(t){uq(this);var e=[];if("string"==typeof t)uB(this,t)&&(e=az(e,this.g.get(uH(this,t))));else{t=this.g.R();for(var n=0;n<t.length;n++)e=az(e,t[n])}return e},ax.set=function(t,e){return uq(this),this.i=null,uB(this,t=uH(this,t))&&(this.h-=this.g.get(t).length),this.g.set(t,[e]),this.h+=1,this},ax.get=function(t,e){return t&&0<(t=this.R(t)).length?String(t[0]):e},ax.toString=function(){if(this.i)return this.i;if(!this.g)return"";for(var t=[],e=this.g.T(),n=0;n<e.length;n++){var r=e[n],i=encodeURIComponent(String(r));r=this.R(r);for(var o=0;o<r.length;o++){var a=i;""!==r[o]&&(a+="="+encodeURIComponent(String(r[o]))),t.push(a)}}return this.i=t.join("&")};var uW=function(t,e){this.h=t,this.g=e};function uz(t){this.l=t||uG,t=aO.PerformanceNavigationTiming?0<(t=aO.performance.getEntriesByType("navigation")).length&&("hq"==t[0].nextHopProtocol||"h2"==t[0].nextHopProtocol):!!(aO.g&&aO.g.Ea&&aO.g.Ea()&&aO.g.Ea().Zb),this.j=t?this.l:1,this.g=null,1<this.j&&(this.g=new Set),this.h=null,this.i=[]}var uG=10;function uQ(t){return!!t.h||!!t.g&&t.g.size>=t.j}function u$(t){return t.h?1:t.g?t.g.size:0}function uY(t,e){return t.h?t.h==e:!!t.g&&t.g.has(e)}function uX(t,e){t.g?t.g.add(e):t.h=e}function uJ(t,e){t.h&&t.h==e?t.h=null:t.g&&t.g.has(e)&&t.g.delete(e)}function uZ(t){var e,n;if(null!=t.h)return t.i.concat(t.h.D);if(null!=t.g&&0!==t.g.size){var r=t.i;try{for(var i=as(t.g.values()),o=i.next();!o.done;o=i.next()){var a=o.value;r=r.concat(a.D)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r}return aG(t.i)}function u0(){}function u1(){this.g=new u0}function u2(t,e,n,r,i){try{e.onload=null,e.onerror=null,e.onabort=null,e.ontimeout=null,i(r)}catch(t){}}function u4(t){this.l=t.$b||null,this.j=t.ib||!1}function u3(t,e){sN.call(this),this.D=t,this.u=e,this.m=void 0,this.readyState=u6,this.status=0,this.responseType=this.responseText=this.response=this.statusText="",this.onreadystatechange=null,this.v=new Headers,this.h=null,this.C="GET",this.B="",this.g=!1,this.A=this.j=this.l=null}uz.prototype.cancel=function(){var t,e;if(this.i=uZ(this),this.h)this.h.cancel(),this.h=null;else if(this.g&&0!==this.g.size){try{for(var n=as(this.g.values()),r=n.next();!r.done;r=n.next())r.value.cancel()}catch(e){t={error:e}}finally{try{r&&!r.done&&(e=n.return)&&e.call(n)}finally{if(t)throw t.error}}this.g.clear()}},u0.prototype.stringify=function(t){return aO.JSON.stringify(t,void 0)},u0.prototype.parse=function(t){return aO.JSON.parse(t,void 0)},aB(u4,s5),u4.prototype.g=function(){return new u3(this.l,this.j)},u4.prototype.i=(lI={},function(){return lI}),aB(u3,sN);var u6=0;function u5(t){t.j.read().then(t.Sa.bind(t)).catch(t.ha.bind(t))}function u8(t){t.readyState=4,t.l=null,t.j=null,t.A=null,u7(t)}function u7(t){t.onreadystatechange&&t.onreadystatechange.call(t)}(ax=u3.prototype).open=function(t,e){if(this.readyState!=u6)throw this.abort(),Error("Error reopening a connection");this.C=t,this.B=e,this.readyState=1,u7(this)},ax.send=function(t){if(1!=this.readyState)throw this.abort(),Error("need to call open() first. ");this.g=!0;var e={headers:this.v,method:this.C,credentials:this.m,cache:void 0};t&&(e.body=t),(this.D||aO).fetch(new Request(this.B,e)).then(this.Va.bind(this),this.ha.bind(this))},ax.abort=function(){this.response=this.responseText="",this.v=new Headers,this.status=0,this.j&&this.j.cancel("Request was aborted."),1<=this.readyState&&this.g&&4!=this.readyState&&(this.g=!1,u8(this)),this.readyState=u6},ax.Va=function(t){if(this.g&&(this.l=t,this.h||(this.status=this.l.status,this.statusText=this.l.statusText,this.h=t.headers,this.readyState=2,u7(this)),this.g&&(this.readyState=3,u7(this),this.g))){if("arraybuffer"===this.responseType)t.arrayBuffer().then(this.Ta.bind(this),this.ha.bind(this));else if(void 0!==aO.ReadableStream&&"body"in t){if(this.j=t.body.getReader(),this.u){if(this.responseType)throw Error('responseType must be empty for "streamBinaryChunks" mode responses.');this.response=[]}else this.response=this.responseText="",this.A=new TextDecoder;u5(this)}else t.text().then(this.Ua.bind(this),this.ha.bind(this))}},ax.Sa=function(t){if(this.g){if(this.u&&t.value)this.response.push(t.value);else if(!this.u){var e=t.value?t.value:new Uint8Array(0);(e=this.A.decode(e,{stream:!t.done}))&&(this.response=this.responseText+=e)}t.done?u8(this):u7(this),3==this.readyState&&u5(this)}},ax.Ua=function(t){this.g&&(this.response=this.responseText=t,u8(this))},ax.Ta=function(t){this.g&&(this.response=t,u8(this))},ax.ha=function(){this.g&&u8(this)},ax.setRequestHeader=function(t,e){this.v.append(t,e)},ax.getResponseHeader=function(t){return this.h&&this.h.get(t.toLowerCase())||""},ax.getAllResponseHeaders=function(){if(!this.h)return"";for(var t=[],e=this.h.entries(),n=e.next();!n.done;)t.push((n=n.value)[0]+": "+n[1]),n=e.next();return t.join("\r\n")},Object.defineProperty(u3.prototype,"withCredentials",{get:function(){return"include"===this.m},set:function(t){this.m=t?"include":"same-origin"}});var u9=aO.JSON.parse;function ct(t){sN.call(this),this.headers=new u_,this.u=t||null,this.h=!1,this.C=this.g=null,this.H="",this.m=0,this.j="",this.l=this.F=this.v=this.D=!1,this.B=0,this.A=null,this.J=ce,this.K=this.L=!1}aB(ct,sN);var ce="",cn=/^https?$/i,cr=["POST","PUT"];function ci(t){return"content-type"==t.toLowerCase()}function co(t,e){t.h=!1,t.g&&(t.l=!0,t.g.abort(),t.l=!1),t.j=e,t.m=5,ca(t),cu(t)}function ca(t){t.D||(t.D=!0,sA(t,"complete"),sA(t,"error"))}function cs(t){if(t.h&&void 0!==aD&&(!t.C[1]||4!=ch(t)||2!=t.ba())){if(t.v&&4==ch(t))sV(t.Fa,0,t);else if(sA(t,"readystatechange"),4==ch(t)){t.h=!1;try{var e,n,r=t.ba();switch(r){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var i=!0;break;default:i=!1}if(!(e=i)){if(n=0===r){var o=String(t.H).match(uI)[1]||null;if(!o&&aO.self&&aO.self.location){var a=aO.self.location.protocol;o=a.substr(0,a.length-1)}n=!cn.test(o?o.toLowerCase():"")}e=n}if(e)sA(t,"complete"),sA(t,"success");else{t.m=6;try{var s=2<ch(t)?t.g.statusText:""}catch(t){s=""}t.j=s+" ["+t.ba()+"]",ca(t)}}finally{cu(t)}}}}function cu(t,e){if(t.g){cc(t);var n=t.g,r=t.C[0]?aL:null;t.g=null,t.C=null,e||sA(t,"ready");try{n.onreadystatechange=r}catch(t){}}}function cc(t){t.g&&t.K&&(t.g.ontimeout=null),t.A&&(aO.clearTimeout(t.A),t.A=null)}function ch(t){return t.g?t.g.readyState:0}function cl(t){try{if(!t.g)return null;if("response"in t.g)return t.g.response;switch(t.J){case ce:case"text":return t.g.responseText;case"arraybuffer":if("mozResponseArrayBuffer"in t.g)return t.g.mozResponseArrayBuffer}return null}catch(t){return null}}function cf(t,e,n){t:{for(i in n){var r,i=!1;break t}i=!0}i||(r="",a0(n,function(t,e){r+=e+":"+t+"\r\n"}),n=r,"string"==typeof t?null!=n&&encodeURIComponent(String(n)):uA(t,e,n))}function cp(t,e,n){return n&&n.internalChannelParams&&n.internalChannelParams[t]||e}function cd(t){this.za=0,this.l=[],this.h=new sG,this.la=this.oa=this.F=this.W=this.g=this.sa=this.D=this.aa=this.o=this.P=this.s=null,this.Za=this.V=0,this.Xa=cp("failFast",!1,t),this.N=this.v=this.u=this.m=this.j=null,this.X=!0,this.I=this.ta=this.U=-1,this.Y=this.A=this.C=0,this.Pa=cp("baseRetryDelayMs",5e3,t),this.$a=cp("retryDelaySeedMs",1e4,t),this.Ya=cp("forwardChannelMaxRetries",2,t),this.ra=cp("forwardChannelRequestTimeoutMs",2e4,t),this.qa=t&&t.xmlHttpFactory||void 0,this.Ba=t&&t.Yb||!1,this.K=void 0,this.H=t&&t.supportsCrossDomainXhr||!1,this.J="",this.i=new uz(t&&t.concurrentRequestLimit),this.Ca=new u1,this.ja=t&&t.fastHandshake||!1,this.Ra=t&&t.Wb||!1,t&&t.Aa&&this.h.Aa(),t&&t.forceLongPolling&&(this.X=!1),this.$=!this.ja&&this.X&&t&&t.detectBufferingProxy||!1,this.ka=void 0,this.O=0,this.L=!1,this.B=null,this.Wa=!t||!1!==t.Xb}function cv(t){if(cm(t),3==t.G){var e=t.V++,n=uE(t.F);uA(n,"SID",t.J),uA(n,"RID",e),uA(n,"TYPE","terminate"),cw(t,n),(e=new ur(t,t.h,e,void 0)).K=2,e.v=uR(uE(n)),n=!1,aO.navigator&&aO.navigator.sendBeacon&&(n=aO.navigator.sendBeacon(e.v.toString(),"")),!n&&aO.Image&&((new Image).src=e.v,n=!0),n||(e.g=cD(e.l,null),e.g.ea(e.v)),e.F=Date.now(),uf(e)}cx(t)}function cg(t){t.g&&(cS(t),t.g.cancel(),t.g=null)}function cm(t){cg(t),t.u&&(aO.clearTimeout(t.u),t.u=null),ck(t),t.i.cancel(),t.m&&("number"==typeof t.m&&aO.clearTimeout(t.m),t.m=null)}function cy(t,e){t.l.push(new uW(t.Za++,e)),3==t.G&&c_(t)}function c_(t){uQ(t.i)||t.m||(t.m=!0,sL(t.Ha,t),t.C=0)}function cb(t,e){n=e?e.m:t.V++;var n,r=uE(t.F);uA(r,"SID",t.J),uA(r,"RID",n),uA(r,"AID",t.U),cw(t,r),t.o&&t.s&&cf(r,t.o,t.s),n=new ur(t,t.h,n,t.C+1),null===t.o&&(n.H=t.s),e&&(t.l=e.D.concat(t.l)),e=cI(t,n,1e3),n.setTimeout(Math.round(.5*t.ra)+Math.round(.5*t.ra*Math.random())),uX(t.i,n),uu(n,r,e)}function cw(t,e){t.j&&uy({},function(t,n){uA(e,n,t)})}function cI(t,e,n){n=Math.min(t.l.length,n);for(var r=t.j?aq(t.j.Oa,t.j,t):null,i=t.l,o=-1;;){var a=["count="+n];-1==o?0<n?(o=i[0].h,a.push("ofs="+o)):o=0:a.push("ofs="+o);for(var s=!0,u=0;u<n;u++){var c=i[u].h,h=i[u].g;if(0>(c-=o))o=Math.max(0,i[u].h-100),s=!1;else try{!function(t,e,n){var r=n||"";try{uy(t,function(t,n){var i=t;aF(t)&&(i=sx(t)),e.push(r+n+"="+encodeURIComponent(i))})}catch(t){throw e.push(r+"type="+encodeURIComponent("_badmap")),t}}(h,a,"req"+c+"_")}catch(t){r&&r(h)}}if(s){r=a.join("&");break}}return t=t.l.splice(0,n),e.D=t,r}function cT(t){t.g||t.u||(t.Y=1,sL(t.Ga,t),t.A=0)}function cE(t){return!t.g&&!t.u&&!(3<=t.A)&&(t.Y++,t.u=s4(aq(t.Ga,t),cA(t,t.A)),t.A++,!0)}function cS(t){null!=t.B&&(aO.clearTimeout(t.B),t.B=null)}function cC(t){t.g=new ur(t,t.h,"rpc",t.Y),null===t.o&&(t.g.H=t.s),t.g.O=0;var e=uE(t.oa);uA(e,"RID","rpc"),uA(e,"SID",t.J),uA(e,"CI",t.N?"0":"1"),uA(e,"AID",t.U),cw(t,e),uA(e,"TYPE","xmlhttp"),t.o&&t.s&&cf(e,t.o,t.s),t.K&&t.g.setTimeout(t.K);var n=t.g;t=t.la,n.K=1,n.v=uR(uE(e)),n.s=null,n.U=!0,uc(n,t)}function ck(t){null!=t.v&&(aO.clearTimeout(t.v),t.v=null)}function cN(t,e){var n=null;if(t.g==e){ck(t),cS(t),t.g=null;var r=2}else{if(!uY(t.i,e))return;n=e.D,uJ(t.i,e),r=1}if(t.I=e.N,0!=t.G){if(e.i){if(1==r){n=e.s?e.s.length:0,e=Date.now()-e.F;var i,o=t.C;sA(r=sX(),new s2(r,n,e,o)),c_(t)}else cT(t)}else if(3==(o=e.o)||0==o&&0<t.I||!(1==r&&(i=e,!(u$(t.i)>=t.i.j-(t.m?1:0))&&(t.m?(t.l=i.D.concat(t.l),!0):1!=t.G&&2!=t.G&&!(t.C>=(t.Xa?0:t.Ya))&&(t.m=s4(aq(t.Ha,t,i),cA(t,t.C)),t.C++,!0)))||2==r&&cE(t)))switch(n&&0<n.length&&((e=t.i).i=e.i.concat(n)),o){case 1:cR(t,5);break;case 4:cR(t,10);break;case 3:cR(t,6);break;default:cR(t,2)}}}function cA(t,e){var n=t.Pa+Math.floor(Math.random()*t.$a);return t.j||(n*=2),n*e}function cR(t,e){if(t.h.info("Error code "+e),2==e){var n=null;t.j&&(n=null);var r=aq(t.jb,t);n||(n=new uT("//www.google.com/images/cleardot.gif"),aO.location&&"http"==aO.location.protocol||uS(n,"https"),uR(n)),function(t,e){var n=new sG;if(aO.Image){var r=new Image;r.onload=aV(u2,n,r,"TestLoadImage: loaded",!0,e),r.onerror=aV(u2,n,r,"TestLoadImage: error",!1,e),r.onabort=aV(u2,n,r,"TestLoadImage: abort",!1,e),r.ontimeout=aV(u2,n,r,"TestLoadImage: timeout",!1,e),aO.setTimeout(function(){r.ontimeout&&r.ontimeout()},1e4),r.src=t}else e(!1)}(n.toString(),r)}else s1(2);t.G=0,t.j&&t.j.va(e),cx(t),cm(t)}function cx(t){t.G=0,t.I=-1,t.j&&((0!=uZ(t.i).length||0!=t.l.length)&&(t.i.i.length=0,aG(t.l),t.l.length=0),t.j.ua())}function cP(t,e,n){var r=(i=n)instanceof uT?uE(i):new uT(i,void 0);if(""!=r.i)e&&uC(r,e+"."+r.i),uk(r,r.m);else{var i,o,a,s,u,c,h=aO.location;o=h.protocol,a=e?e+"."+h.hostname:h.hostname,s=+h.port,u=n,c=new uT(null,void 0),o&&uS(c,o),a&&uC(c,a),s&&uk(c,s),u&&(c.l=u),r=c}return t.aa&&a0(t.aa,function(t,e){uA(r,e,t)}),e=t.D,n=t.sa,e&&n&&uA(r,e,n),uA(r,"VER",t.ma),cw(t,r),r}function cD(t,e,n){if(e&&!t.H)throw Error("Can't create secondary domain capable XhrIo object.");return(e=new ct(n&&t.Ba&&!t.qa?new u4({ib:!0}):t.qa)).L=t.H,e}function cO(){}function cL(){if(a5&&!(10<=Number(ss)))throw Error("Environmental error: no available transport.")}function cM(t,e){sN.call(this),this.g=new cd(e),this.l=t,this.h=e&&e.messageUrlParams||null,t=e&&e.messageHeaders||null,e&&e.clientProtocolHeaderRequired&&(t?t["X-Client-Protocol"]="webchannel":t={"X-Client-Protocol":"webchannel"}),this.g.s=t,t=e&&e.initMessageHeaders||null,e&&e.messageContentType&&(t?t["X-WebChannel-Content-Type"]=e.messageContentType:t={"X-WebChannel-Content-Type":e.messageContentType}),e&&e.ya&&(t?t["X-WebChannel-Client-Profile"]=e.ya:t={"X-WebChannel-Client-Profile":e.ya}),this.g.P=t,(t=e&&e.httpHeadersOverwriteParam)&&!aQ(t)&&(this.g.o=t),this.A=e&&e.supportsCrossDomainXhr||!1,this.v=e&&e.sendRawJson||!1,(e=e&&e.httpSessionIdParam)&&!aQ(e)&&(this.g.D=e,null!==(t=this.h)&&e in t&&e in(t=this.h)&&delete t[e]),this.j=new cU(this)}function cF(t){ut.call(this);var e=t.__sm__;if(e){t:{for(var n in e){t=n;break t}t=void 0}(this.i=t)&&(t=this.i,e=null!==e&&t in e?e[t]:void 0),this.data=e}else this.data=t}function cj(){ue.call(this),this.status=1}function cU(t){this.g=t}(ax=ct.prototype).ea=function(t,e,n,r){if(this.g)throw Error("[goog.net.XhrIo] Object is active with another request="+this.H+"; newUri="+t);e=e?e.toUpperCase():"GET",this.H=t,this.j="",this.m=0,this.D=!1,this.h=!0,this.g=this.u?this.u.g():lk.g(),this.C=this.u?s8(this.u):s8(lk),this.g.onreadystatechange=aq(this.Fa,this);try{this.F=!0,this.g.open(e,String(t),!0),this.F=!1}catch(t){co(this,t);return}t=n||"";var i,o=new u_(this.headers);r&&uy(r,function(t,e){o.set(e,t)}),r=function(t){t:{for(var e=ci,n=t.length,r="string"==typeof t?t.split(""):t,i=0;i<n;i++)if(i in r&&e.call(void 0,r[i],i,t)){e=i;break t}e=-1}return 0>e?null:"string"==typeof t?t.charAt(e):t[e]}(o.T()),n=aO.FormData&&t instanceof aO.FormData,!(0<=aH(cr,e))||r||n||o.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8"),o.forEach(function(t,e){this.g.setRequestHeader(e,t)},this),this.J&&(this.g.responseType=this.J),"withCredentials"in this.g&&this.g.withCredentials!==this.L&&(this.g.withCredentials=this.L);try{cc(this),0<this.B&&((this.K=(i=this.g,a5&&(Object.prototype.hasOwnProperty.call(sa,9)?sa[9]:sa[9]=function(){for(var t=0,e=a$(String(lE)).split("."),n=a$("9").split("."),r=Math.max(e.length,n.length),i=0;0==t&&i<r;i++){var o=e[i]||"",a=n[i]||"";do{if(o=/(\d*)(\D*)(.*)/.exec(o)||["","","",""],a=/(\d*)(\D*)(.*)/.exec(a)||["","","",""],0==o[0].length&&0==a[0].length)break;t=aX(0==o[1].length?0:parseInt(o[1],10),0==a[1].length?0:parseInt(a[1],10))||aX(0==o[2].length,0==a[2].length)||aX(o[2],a[2]),o=o[3],a=a[3]}while(0==t)}return 0<=t}(9))&&"number"==typeof i.timeout&&void 0!==i.ontimeout))?(this.g.timeout=this.B,this.g.ontimeout=aq(this.pa,this)):this.A=sV(this.pa,this.B,this)),this.v=!0,this.g.send(t),this.v=!1}catch(t){co(this,t)}},ax.pa=function(){void 0!==aD&&this.g&&(this.j="Timed out after "+this.B+"ms, aborting",this.m=8,sA(this,"timeout"),this.abort(8))},ax.abort=function(t){this.g&&this.h&&(this.h=!1,this.l=!0,this.g.abort(),this.l=!1,this.m=t||7,sA(this,"complete"),sA(this,"abort"),cu(this))},ax.M=function(){this.g&&(this.h&&(this.h=!1,this.l=!0,this.g.abort(),this.l=!1),cu(this,!0)),ct.Z.M.call(this)},ax.Fa=function(){this.s||(this.F||this.v||this.l?cs(this):this.cb())},ax.cb=function(){cs(this)},ax.ba=function(){try{return 2<ch(this)?this.g.status:-1}catch(t){return -1}},ax.ga=function(){try{return this.g?this.g.responseText:""}catch(t){return""}},ax.Qa=function(t){if(this.g){var e=this.g.responseText;return t&&0==e.indexOf(t)&&(e=e.substring(t.length)),u9(e)}},ax.Da=function(){return this.m},ax.La=function(){return"string"==typeof this.j?this.j:String(this.j)},(ax=cd.prototype).ma=8,ax.G=1,ax.hb=function(t){try{this.h.info("Origin Trials invoked: "+t)}catch(t){}},ax.Ha=function(t){if(this.m){if(this.m=null,1==this.G){if(!t){this.V=Math.floor(1e5*Math.random()),t=this.V++;var e=new ur(this,this.h,t,void 0),n=this.s;if(this.P&&(n?a4(n=a1(n),this.P):n=this.P),null===this.o&&(e.H=n),this.ja)t:{for(var r=0,i=0;i<this.l.length;i++){e:{var o=this.l[i];if("__data__"in o.g&&"string"==typeof(o=o.g.__data__)){o=o.length;break e}o=void 0}if(void 0===o)break;if(4096<(r+=o)){r=i;break t}if(4096===r||i===this.l.length-1){r=i+1;break t}}r=1e3}else r=1e3;r=cI(this,e,r),uA(i=uE(this.F),"RID",t),uA(i,"CVER",22),this.D&&uA(i,"X-HTTP-Session-Id",this.D),cw(this,i),this.o&&n&&cf(i,this.o,n),uX(this.i,e),this.Ra&&uA(i,"TYPE","init"),this.ja?(uA(i,"$req",r),uA(i,"SID","null"),e.$=!0,uu(e,i,null)):uu(e,i,r),this.G=2}}else 3==this.G&&(t?cb(this,t):0==this.l.length||uQ(this.i)||cb(this))}},ax.Ga=function(){if(this.u=null,cC(this),this.$&&!(this.L||null==this.g||0>=this.O)){var t=2*this.O;this.h.info("BP detection timer enabled: "+t),this.B=s4(aq(this.bb,this),t)}},ax.bb=function(){this.B&&(this.B=null,this.h.info("BP detection timeout reached."),this.h.info("Buffering proxy detected and switch to long-polling!"),this.N=!1,this.L=!0,s1(10),cg(this),cC(this))},ax.ab=function(){null!=this.v&&(this.v=null,cg(this),cE(this),s1(19))},ax.jb=function(t){t?(this.h.info("Successfully pinged google.com"),s1(2)):(this.h.info("Failed to ping google.com"),s1(1))},(ax=cO.prototype).xa=function(){},ax.wa=function(){},ax.va=function(){},ax.ua=function(){},ax.Oa=function(){},cL.prototype.g=function(t,e){return new cM(t,e)},aB(cM,sN),cM.prototype.m=function(){this.g.j=this.j,this.A&&(this.g.H=!0);var t=this.g,e=this.l,n=this.h||void 0;t.Wa&&(t.h.info("Origin Trials enabled."),sL(aq(t.hb,t,e))),s1(0),t.W=e,t.aa=n||{},t.N=t.X,t.F=cP(t,null,t.W),c_(t)},cM.prototype.close=function(){cv(this.g)},cM.prototype.u=function(t){if("string"==typeof t){var e={};e.__data__=t,cy(this.g,e)}else this.v?((e={}).__data__=sx(t),cy(this.g,e)):cy(this.g,t)},cM.prototype.M=function(){this.g.j=null,delete this.j,cv(this.g),delete this.g,cM.Z.M.call(this)},aB(cF,ut),aB(cj,ue),aB(cU,cO),cU.prototype.xa=function(){sA(this.g,"a")},cU.prototype.wa=function(t){sA(this.g,new cF(t))},cU.prototype.va=function(t){sA(this.g,new cj(t))},cU.prototype.ua=function(){sA(this.g,"b")},cL.prototype.createWebChannel=cL.prototype.g,cM.prototype.send=cM.prototype.u,cM.prototype.open=cM.prototype.m,cM.prototype.close=cM.prototype.close,s3.NO_ERROR=0,s3.TIMEOUT=8,s3.HTTP_ERROR=6,s6.COMPLETE="complete",s7.EventType=s9,s9.OPEN="a",s9.CLOSE="b",s9.ERROR="c",s9.MESSAGE="d",sN.prototype.listen=sN.prototype.N,ct.prototype.listenOnce=ct.prototype.O,ct.prototype.getLastError=ct.prototype.La,ct.prototype.getLastErrorCode=ct.prototype.Da,ct.prototype.getStatus=ct.prototype.ba,ct.prototype.getResponseJson=ct.prototype.Qa,ct.prototype.getResponseText=ct.prototype.ga,ct.prototype.send=ct.prototype.ea;var cq={PROXY:10,NOPROXY:11},cV=/** @class */function(){function t(t,e){var n=this;this.previousValue=t,e&&(e.sequenceNumberHandler=function(t){return n.t(t)},this.i=function(t){return e.writeSequenceNumber(t)})}return t.prototype.t=function(t){return this.previousValue=Math.max(t,this.previousValue),this.previousValue},t.prototype.next=function(){var t=++this.previousValue;return this.i&&this.i(t),t},t}();cV.o=-1;/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cB={// Causes are copied from:
// https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h
/** Not an error; returned on success. */OK:"ok",/** The operation was cancelled (typically by the caller). */CANCELLED:"cancelled",/** Unknown error or an error from a different error domain. */UNKNOWN:"unknown",/**
     * Client specified an invalid argument. Note that this differs from
     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are
     * problematic regardless of the state of the system (e.g., a malformed file
     * name).
     */INVALID_ARGUMENT:"invalid-argument",/**
     * Deadline expired before operation could complete. For operations that
     * change the state of the system, this error may be returned even if the
     * operation has completed successfully. For example, a successful response
     * from a server could have been delayed long enough for the deadline to
     * expire.
     */DEADLINE_EXCEEDED:"deadline-exceeded",/** Some requested entity (e.g., file or directory) was not found. */NOT_FOUND:"not-found",/**
     * Some entity that we attempted to create (e.g., file or directory) already
     * exists.
     */ALREADY_EXISTS:"already-exists",/**
     * The caller does not have permission to execute the specified operation.
     * PERMISSION_DENIED must not be used for rejections caused by exhausting
     * some resource (use RESOURCE_EXHAUSTED instead for those errors).
     * PERMISSION_DENIED must not be used if the caller can not be identified
     * (use UNAUTHENTICATED instead for those errors).
     */PERMISSION_DENIED:"permission-denied",/**
     * The request does not have valid authentication credentials for the
     * operation.
     */UNAUTHENTICATED:"unauthenticated",/**
     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the
     * entire file system is out of space.
     */RESOURCE_EXHAUSTED:"resource-exhausted",/**
     * Operation was rejected because the system is not in a state required for
     * the operation's execution. For example, directory to be deleted may be
     * non-empty, an rmdir operation is applied to a non-directory, etc.
     *
     * A litmus test that may help a service implementor in deciding
     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
     *  (a) Use UNAVAILABLE if the client can retry just the failing call.
     *  (b) Use ABORTED if the client should retry at a higher-level
     *      (e.g., restarting a read-modify-write sequence).
     *  (c) Use FAILED_PRECONDITION if the client should not retry until
     *      the system state has been explicitly fixed. E.g., if an "rmdir"
     *      fails because the directory is non-empty, FAILED_PRECONDITION
     *      should be returned since the client should not retry unless
     *      they have first fixed up the directory by deleting files from it.
     *  (d) Use FAILED_PRECONDITION if the client performs conditional
     *      REST Get/Update/Delete on a resource and the resource on the
     *      server does not match the condition. E.g., conflicting
     *      read-modify-write on the same resource.
     */FAILED_PRECONDITION:"failed-precondition",/**
     * The operation was aborted, typically due to a concurrency issue like
     * sequencer check failures, transaction aborts, etc.
     *
     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
     * and UNAVAILABLE.
     */ABORTED:"aborted",/**
     * Operation was attempted past the valid range. E.g., seeking or reading
     * past end of file.
     *
     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed
     * if the system state changes. For example, a 32-bit file system will
     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the
     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from
     * an offset past the current file size.
     *
     * There is a fair bit of overlap between FAILED_PRECONDITION and
     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)
     * when it applies so that callers who are iterating through a space can
     * easily look for an OUT_OF_RANGE error to detect when they are done.
     */OUT_OF_RANGE:"out-of-range",/** Operation is not implemented or not supported/enabled in this service. */UNIMPLEMENTED:"unimplemented",/**
     * Internal errors. Means some invariants expected by underlying System has
     * been broken. If you see one of these errors, Something is very broken.
     */INTERNAL:"internal",/**
     * The service is currently unavailable. This is a most likely a transient
     * condition and may be corrected by retrying with a backoff.
     *
     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
     * and UNAVAILABLE.
     */UNAVAILABLE:"unavailable",/** Unrecoverable data loss or corruption. */DATA_LOSS:"data-loss"},cK=/** @class */function(t){/** @hideconstructor */function e(/**
     * The backend error code associated with this error.
     */e,/**
     * A custom error description.
     */n){var r=this;return(r=t.call(this,n)||this).code=e,r.message=n,/** The custom name for all FirestoreErrors. */r.name="FirebaseError",// class and so inheritance does not work correctly. We could alternatively
// do the same "back-door inheritance" trick that FirebaseError does.
r.toString=function(){return r.name+": [code="+r.code+"]: "+r.message},r}return B(e,t),e}(Error),cH=new tX("@firebase/firestore");/** An error returned by a Firestore operation. */// Helper methods are needed because variables can't be exported as read/write
function cW(){return cH.logLevel}/**
 * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).
 *
 * @param logLevel - The verbosity you set for activity and error logging. Can
 *   be any of the following values:
 *
 *   <ul>
 *     <li>`debug` for the most verbose logging level, primarily for
 *     debugging.</li>
 *     <li>`error` to log errors only.</li>
 *     <li><code>`silent` to turn off logging.</li>
 *   </ul>
 */function cz(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(cH.logLevel<=ad.DEBUG){var r=e.map(c$);cH.debug.apply(cH,Q(["Firestore (8.10.1): "+t],r))}}function cG(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(cH.logLevel<=ad.ERROR){var r=e.map(c$);cH.error.apply(cH,Q(["Firestore (8.10.1): "+t],r))}}function cQ(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(cH.logLevel<=ad.WARN){var r=e.map(c$);cH.warn.apply(cH,Q(["Firestore (8.10.1): "+t],r))}}/**
 * Converts an additional log parameter to a string representation.
 */function c$(t){if("string"==typeof t)return t;try{return JSON.stringify(t)}catch(e){// Converting to JSON failed, just log the object directly
return t}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Unconditionally fails, throwing an Error with the given message.
 * Messages are stripped in production builds.
 *
 * Returns `never` and can be used in expressions:
 * @example
 * let futureVar = fail('not implemented yet');
 */function cY(t){void 0===t&&(t="Unexpected state");// Log the failure in addition to throw an exception, just in case the
// exception is swallowed.
var e="FIRESTORE (8.10.1) INTERNAL ASSERTION FAILED: "+t;// NOTE: We don't use FirestoreError here because these are internal failures
// that cannot be handled by the user. (Also it would create a circular
// dependency between the error and assert modules which doesn't work.)
throw cG(e),Error(e)/**
 * Fails if the given assertion condition is false, throwing an Error with the
 * given message if it did.
 *
 * Messages are stripped in production builds.
 */}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var cX=/** @class */function(){function t(){}return t.u=function(){for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",e=Math.floor(256/t.length)*t.length,n="";n.length<20;)for(var r=/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Generates `nBytes` of random bytes.
 *
 * If `nBytes < 0` , an error will be thrown.
 */function(t){// Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.
var e="undefined"!=typeof self&&(self.crypto||self.msCrypto),n=new Uint8Array(t);if(e&&"function"==typeof e.getRandomValues)e.getRandomValues(n);else for(var r=0;r<t;r++)n[r]=Math.floor(256*Math.random());return n}(40),i=0;i<r.length;++i)// be evenly mapped to indices of `chars` via a modulo operation.
n.length<20&&r[i]<e&&(n+=t.charAt(r[i]%t.length));return n},t}();function cJ(t,e){return t<e?-1:t>e?1:0}/** Helper to compare arrays using isEqual(). */function cZ(t,e,n){return t.length===e.length&&t.every(function(t,r){return n(t,e[r])})}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).
/**
 * A `Timestamp` represents a point in time independent of any time zone or
 * calendar, represented as seconds and fractions of seconds at nanosecond
 * resolution in UTC Epoch time.
 *
 * It is encoded using the Proleptic Gregorian Calendar which extends the
 * Gregorian calendar backwards to year one. It is encoded assuming all minutes
 * are 60 seconds long, i.e. leap seconds are "smeared" so that no leap second
 * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to
 * 9999-12-31T23:59:59.999999999Z.
 *
 * For examples and further specifications, refer to the
 * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.
 */var c0=/** @class */function(){/**
     * Creates a new timestamp.
     *
     * @param seconds - The number of seconds of UTC time since Unix epoch
     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
     *     9999-12-31T23:59:59Z inclusive.
     * @param nanoseconds - The non-negative fractions of a second at nanosecond
     *     resolution. Negative second values with fractions must still have
     *     non-negative nanoseconds values that count forward in time. Must be
     *     from 0 to 999,999,999 inclusive.
     */function t(/**
     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.
     */t,/**
     * The fractions of a second at nanosecond resolution.*
     */e){if(this.seconds=t,this.nanoseconds=e,e<0||e>=1e9)throw new cK(cB.INVALID_ARGUMENT,"Timestamp nanoseconds out of range: "+e);if(t<-62135596800||t>=253402300800)throw new cK(cB.INVALID_ARGUMENT,"Timestamp seconds out of range: "+t)}/**
     * Creates a new timestamp with the current date, with millisecond precision.
     *
     * @returns a new timestamp representing the current date.
     */return t.now=function(){return t.fromMillis(Date.now())},/**
     * Creates a new timestamp from the given date.
     *
     * @param date - The date to initialize the `Timestamp` from.
     * @returns A new `Timestamp` representing the same point in time as the given
     *     date.
     */t.fromDate=function(e){return t.fromMillis(e.getTime())},/**
     * Creates a new timestamp from the given number of milliseconds.
     *
     * @param milliseconds - Number of milliseconds since Unix epoch
     *     1970-01-01T00:00:00Z.
     * @returns A new `Timestamp` representing the same point in time as the given
     *     number of milliseconds.
     */t.fromMillis=function(e){var n=Math.floor(e/1e3);return new t(n,Math.floor(1e6*(e-1e3*n)))},/**
     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion
     * causes a loss of precision since `Date` objects only support millisecond
     * precision.
     *
     * @returns JavaScript `Date` object representing the same point in time as
     *     this `Timestamp`, with millisecond precision.
     */t.prototype.toDate=function(){return new Date(this.toMillis())},/**
     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since
     * epoch). This operation causes a loss of precision.
     *
     * @returns The point in time corresponding to this timestamp, represented as
     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.
     */t.prototype.toMillis=function(){return 1e3*this.seconds+this.nanoseconds/1e6},t.prototype._compareTo=function(t){return this.seconds===t.seconds?cJ(this.nanoseconds,t.nanoseconds):cJ(this.seconds,t.seconds)},/**
     * Returns true if this `Timestamp` is equal to the provided one.
     *
     * @param other - The `Timestamp` to compare against.
     * @returns true if this `Timestamp` is equal to the provided one.
     */t.prototype.isEqual=function(t){return t.seconds===this.seconds&&t.nanoseconds===this.nanoseconds},/** Returns a textual representation of this `Timestamp`. */t.prototype.toString=function(){return"Timestamp(seconds="+this.seconds+", nanoseconds="+this.nanoseconds+")"},/** Returns a JSON-serializable representation of this `Timestamp`. */t.prototype.toJSON=function(){return{seconds:this.seconds,nanoseconds:this.nanoseconds}},/**
     * Converts this object to a primitive string, which allows `Timestamp` objects
     * to be compared using the `>`, `<=`, `>=` and `>` operators.
     */t.prototype.valueOf=function(){// Note: Up to 12 decimal digits are required to represent all valid
// 'seconds' values.
return String(this.seconds- -62135596800).padStart(12,"0")+"."+String(this.nanoseconds).padStart(9,"0")},t}(),c1=/** @class */function(){function t(t){this.timestamp=t}return t.fromTimestamp=function(e){return new t(e)},t.min=function(){return new t(new c0(0,0))},t.prototype.compareTo=function(t){return this.timestamp._compareTo(t.timestamp)},t.prototype.isEqual=function(t){return this.timestamp.isEqual(t.timestamp)},/** Returns a number representation of the version for use in spec tests. */t.prototype.toMicroseconds=function(){// Convert to microseconds.
return 1e6*this.timestamp.seconds+this.timestamp.nanoseconds/1e3},t.prototype.toString=function(){return"SnapshotVersion("+this.timestamp.toString()+")"},t.prototype.toTimestamp=function(){return this.timestamp},t}();/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A version of a document in Firestore. This corresponds to the version
 * timestamp, such as update_time or read_time.
 *//**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function c2(t){var e=0;for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e++;return e}function c4(t,e){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e(n,t[n])}function c3(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Path represents an ordered sequence of string segments.
 */var c6=/** @class */function(){function t(t,e,n){void 0===e?e=0:e>t.length&&cY(),void 0===n?n=t.length-e:n>t.length-e&&cY(),this.segments=t,this.offset=e,this.len=n}return Object.defineProperty(t.prototype,"length",{get:function(){return this.len},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(e){return 0===t.comparator(this,e)},t.prototype.child=function(e){var n=this.segments.slice(this.offset,this.limit());return e instanceof t?e.forEach(function(t){n.push(t)}):n.push(e),this.construct(n)},/** The index of one past the last segment of the path. */t.prototype.limit=function(){return this.offset+this.length},t.prototype.popFirst=function(t){return t=void 0===t?1:t,this.construct(this.segments,this.offset+t,this.length-t)},t.prototype.popLast=function(){return this.construct(this.segments,this.offset,this.length-1)},t.prototype.firstSegment=function(){return this.segments[this.offset]},t.prototype.lastSegment=function(){return this.get(this.length-1)},t.prototype.get=function(t){return this.segments[this.offset+t]},t.prototype.isEmpty=function(){return 0===this.length},t.prototype.isPrefixOf=function(t){if(t.length<this.length)return!1;for(var e=0;e<this.length;e++)if(this.get(e)!==t.get(e))return!1;return!0},t.prototype.isImmediateParentOf=function(t){if(this.length+1!==t.length)return!1;for(var e=0;e<this.length;e++)if(this.get(e)!==t.get(e))return!1;return!0},t.prototype.forEach=function(t){for(var e=this.offset,n=this.limit();e<n;e++)t(this.segments[e])},t.prototype.toArray=function(){return this.segments.slice(this.offset,this.limit())},t.comparator=function(t,e){for(var n=Math.min(t.length,e.length),r=0;r<n;r++){var i=t.get(r),o=e.get(r);if(i<o)return -1;if(i>o)return 1}return t.length<e.length?-1:t.length>e.length?1:0},t}(),c5=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype.construct=function(t,n,r){return new e(t,n,r)},e.prototype.canonicalString=function(){// NOTE: The client is ignorant of any path segments containing escape
// sequences (e.g. __id123__) and just passes them through raw (they exist
// for legacy reasons and should not be used frequently).
return this.toArray().join("/")},e.prototype.toString=function(){return this.canonicalString()},/**
     * Creates a resource path from the given slash-delimited string. If multiple
     * arguments are provided, all components are combined. Leading and trailing
     * slashes from all components are ignored.
     */e.fromString=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];// NOTE: The client is ignorant of any path segments containing escape
// sequences (e.g. __id123__) and just passes them through raw (they exist
// for legacy reasons and should not be used frequently).
for(var r=[],i=0;i<t.length;i++){var o=t[i];if(o.indexOf("//")>=0)throw new cK(cB.INVALID_ARGUMENT,"Invalid segment ("+o+"). Paths must not contain // in them.");// Strip leading and traling slashed.
r.push.apply(r,o.split("/").filter(function(t){return t.length>0}))}return new e(r)},e.emptyPath=function(){return new e([])},e}(c6),c8=/^[_a-zA-Z][_a-zA-Z0-9]*$/,c7=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype.construct=function(t,n,r){return new e(t,n,r)},/**
     * Returns true if the string could be used as a segment in a field path
     * without escaping.
     */e.isValidIdentifier=function(t){return c8.test(t)},e.prototype.canonicalString=function(){return this.toArray().map(function(t){return t=t.replace(/\\/g,"\\\\").replace(/`/g,"\\`"),e.isValidIdentifier(t)||(t="`"+t+"`"),t}).join(".")},e.prototype.toString=function(){return this.canonicalString()},/**
     * Returns true if this field references the key of a document.
     */e.prototype.isKeyField=function(){return 1===this.length&&"__name__"===this.get(0)},/**
     * The field designating the key of a document.
     */e.keyField=function(){return new e(["__name__"])},/**
     * Parses a field string from the given server-formatted string.
     *
     * - Splitting the empty string is not allowed (for now at least).
     * - Empty segments within the string (e.g. if there are two consecutive
     *   separators) are not allowed.
     *
     * TODO(b/37244157): we should make this more strict. Right now, it allows
     * non-identifier path components, even if they aren't escaped.
     */e.fromServerFormat=function(t){for(var n=[],r="",i=0,o=function(){if(0===r.length)throw new cK(cB.INVALID_ARGUMENT,"Invalid field path ("+t+"). Paths must not be empty, begin with '.', end with '.', or contain '..'");n.push(r),r=""},a=!1;i<t.length;){var s=t[i];if("\\"===s){if(i+1===t.length)throw new cK(cB.INVALID_ARGUMENT,"Path has trailing escape character: "+t);var u=t[i+1];if("\\"!==u&&"."!==u&&"`"!==u)throw new cK(cB.INVALID_ARGUMENT,"Path has invalid escape sequence: "+t);r+=u,i+=2}else"`"===s?a=!a:"."!==s||a?r+=s:o(),i++}if(o(),a)throw new cK(cB.INVALID_ARGUMENT,"Unterminated ` in path: "+t);return new e(n)},e.emptyPath=function(){return new e([])},e}(c6),c9=/** @class */function(){function t(t){this.fields=t,// Sort the field mask to support `FieldMask.isEqual()` and assert below.
t.sort(c7.comparator)/**
     * Verifies that `fieldPath` is included by at least one field in this field
     * mask.
     *
     * This is an O(n) operation, where `n` is the size of the field mask.
     */}return t.prototype.covers=function(t){for(var e=0,n=this.fields;e<n.length;e++)if(n[e].isPrefixOf(t))return!0;return!1},t.prototype.isEqual=function(t){return cZ(this.fields,t.fields,function(t,e){return t.isEqual(e)})},t}(),ht=/** @class */function(){function t(t){this.binaryString=t}return t.fromBase64String=function(e){return new t(atob(e))},t.fromUint8Array=function(e){return new t(/**
 * Helper function to convert an Uint8array to a binary string.
 */function(t){for(var e="",n=0;n<t.length;++n)e+=String.fromCharCode(t[n]);return e}(e))},t.prototype.toBase64=function(){return btoa(this.binaryString);/** True if and only if the Base64 conversion functions are available. */},t.prototype.toUint8Array=function(){return function(t){for(var e=new Uint8Array(t.length),n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}(this.binaryString)},t.prototype.approximateByteSize=function(){return 2*this.binaryString.length},t.prototype.compareTo=function(t){return cJ(this.binaryString,t.binaryString)},t.prototype.isEqual=function(t){return this.binaryString===t.binaryString},t}();/**
 * A slash-separated path for navigating resources (documents and collections)
 * within Firestore.
 */ht.EMPTY_BYTE_STRING=new ht("");var he=new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);/**
 * Converts the possible Proto values for a timestamp value into a "seconds and
 * nanos" representation.
 */function hn(t){// The json interface (for the browser) will return an iso timestamp string,
// while the proto js library (for node) will return a
// google.protobuf.Timestamp instance.
if(t||cY(),"string"==typeof t){// The date string can have higher precision (nanos) than the Date class
// (millis), so we do some custom parsing here.
// Parse the nanos right out of the string.
var e=0,n=he.exec(t);if(n||cY(),n[1]){// Pad the fraction out to 9 digits (nanos).
var r=n[1];e=Number(r=(r+"000000000").substr(0,9))}return{seconds:Math.floor(new Date(t).getTime()/1e3),nanos:e}}return{seconds:hr(t.seconds),nanos:hr(t.nanos)}}/**
 * Converts the possible Proto types for numbers into a JavaScript number.
 * Returns 0 if the value is not numeric.
 */function hr(t){// TODO(bjornick): Handle int64 greater than 53 bits.
return"number"==typeof t?t:"string"==typeof t?Number(t):0}/** Converts the possible Proto types for Blobs into a ByteString. */function hi(t){return"string"==typeof t?ht.fromBase64String(t):ht.fromUint8Array(t)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Represents a locally-applied ServerTimestamp.
 *
 * Server Timestamps are backed by MapValues that contain an internal field
 * `__type__` with a value of `server_timestamp`. The previous value and local
 * write time are stored in its `__previous_value__` and `__local_write_time__`
 * fields respectively.
 *
 * Notes:
 * - ServerTimestampValue instances are created as the result of applying a
 *   transform. They can only exist in the local view of a document. Therefore
 *   they do not need to be parsed or serialized.
 * - When evaluated locally (e.g. for snapshot.data()), they by default
 *   evaluate to `null`. This behavior can be configured by passing custom
 *   FieldValueOptions to value().
 * - With respect to other ServerTimestampValues, they sort by their
 *   localWriteTime.
 */function ho(t){var e,n;return"server_timestamp"===(null===(n=((null===(e=null==t?void 0:t.mapValue)||void 0===e?void 0:e.fields)||{}).__type__)||void 0===n?void 0:n.stringValue)}/**
 * Returns the local time at which this timestamp was first set.
 */function ha(t){var e=hn(t.mapValue.fields.__local_write_time__.timestampValue);return new c0(e.seconds,e.nanos)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Sentinel value that sorts before any Mutation Batch ID. *//**
 * Returns whether a variable is either undefined or null.
 */function hs(t){return null==t}/** Returns whether the value represents -0. */function hu(t){// Detect if the value is -0.0. Based on polyfill from
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
return 0===t&&1/t==-1/0}/**
 * Returns whether a value is an integer and in the safe integer range
 * @param value - The value to test for being an integer and in the safe range
 */function hc(t){return"number"==typeof t&&Number.isInteger(t)&&!hu(t)&&t<=Number.MAX_SAFE_INTEGER&&t>=Number.MIN_SAFE_INTEGER}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var hh=/** @class */function(){function t(t){this.path=t}return t.fromPath=function(e){return new t(c5.fromString(e))},t.fromName=function(e){return new t(c5.fromString(e).popFirst(5))},/** Returns true if the document is in the specified collectionId. */t.prototype.hasCollectionId=function(t){return this.path.length>=2&&this.path.get(this.path.length-2)===t},t.prototype.isEqual=function(t){return null!==t&&0===c5.comparator(this.path,t.path)},t.prototype.toString=function(){return this.path.toString()},t.comparator=function(t,e){return c5.comparator(t.path,e.path)},t.isDocumentKey=function(t){return t.length%2==0},/**
     * Creates and returns a new document key with the given segments.
     *
     * @param segments - The segments of the path to the document
     * @returns A new instance of DocumentKey
     */t.fromSegments=function(e){return new t(new c5(e.slice()))},t}();/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Extracts the backend's type order for the provided value. */function hl(t){return"nullValue"in t?0/* NullValue */:"booleanValue"in t?1/* BooleanValue */:"integerValue"in t||"doubleValue"in t?2/* NumberValue */:"timestampValue"in t?3/* TimestampValue */:"stringValue"in t?5/* StringValue */:"bytesValue"in t?6/* BlobValue */:"referenceValue"in t?7/* RefValue */:"geoPointValue"in t?8/* GeoPointValue */:"arrayValue"in t?9/* ArrayValue */:"mapValue"in t?ho(t)?4/* ServerTimestampValue */:10/* ObjectValue */:cY()}/** Tests `left` and `right` for equality based on the backend semantics. */function hf(t,e){var n=hl(t);if(n!==hl(e))return!1;switch(n){case 0/* NullValue */:return!0;case 1/* BooleanValue */:return t.booleanValue===e.booleanValue;case 4/* ServerTimestampValue */:return ha(t).isEqual(ha(e));case 3/* TimestampValue */:return function(t,e){if("string"==typeof t.timestampValue&&"string"==typeof e.timestampValue&&t.timestampValue.length===e.timestampValue.length)return t.timestampValue===e.timestampValue;var n=hn(t.timestampValue),r=hn(e.timestampValue);return n.seconds===r.seconds&&n.nanos===r.nanos}(t,e);case 5/* StringValue */:return t.stringValue===e.stringValue;case 6/* BlobValue */:return hi(t.bytesValue).isEqual(hi(e.bytesValue));case 7/* RefValue */:return t.referenceValue===e.referenceValue;case 8/* GeoPointValue */:return hr(t.geoPointValue.latitude)===hr(e.geoPointValue.latitude)&&hr(t.geoPointValue.longitude)===hr(e.geoPointValue.longitude);case 2/* NumberValue */:return function(t,e){if("integerValue"in t&&"integerValue"in e)return hr(t.integerValue)===hr(e.integerValue);if("doubleValue"in t&&"doubleValue"in e){var n=hr(t.doubleValue),r=hr(e.doubleValue);return n===r?hu(n)===hu(r):isNaN(n)&&isNaN(r)}return!1}(t,e);case 9/* ArrayValue */:return cZ(t.arrayValue.values||[],e.arrayValue.values||[],hf);case 10/* ObjectValue */:return function(t,e){var n=t.mapValue.fields||{},r=e.mapValue.fields||{};if(c2(n)!==c2(r))return!1;for(var i in n)if(n.hasOwnProperty(i)&&(void 0===r[i]||!hf(n[i],r[i])))return!1;return!0}(t,e);default:return cY()}}function hp(t,e){return void 0!==(t.values||[]).find(function(t){return hf(t,e)})}function hd(t,e){var n,r,i,o,a,s,u,c,h,l=hl(t),f=hl(e);if(l!==f)return cJ(l,f);switch(l){case 0/* NullValue */:return 0;case 1/* BooleanValue */:return cJ(t.booleanValue,e.booleanValue);case 2/* NumberValue */:return(n=hr(t.integerValue||t.doubleValue))<(r=hr(e.integerValue||e.doubleValue))?-1:n>r?1:n===r?0:isNaN(n)?isNaN(r)?0:-1:1;case 3/* TimestampValue */:return hv(t.timestampValue,e.timestampValue);case 4/* ServerTimestampValue */:return hv(ha(t),ha(e));case 5/* StringValue */:return cJ(t.stringValue,e.stringValue);case 6/* BlobValue */:return i=t.bytesValue,o=e.bytesValue,a=hi(i),s=hi(o),a.compareTo(s);case 7/* RefValue */:return function(t,e){for(var n=t.split("/"),r=e.split("/"),i=0;i<n.length&&i<r.length;i++){var o=cJ(n[i],r[i]);if(0!==o)return o}return cJ(n.length,r.length)}(t.referenceValue,e.referenceValue);case 8/* GeoPointValue */:return u=t.geoPointValue,c=e.geoPointValue,0!==(h=cJ(hr(u.latitude),hr(c.latitude)))?h:cJ(hr(u.longitude),hr(c.longitude));case 9/* ArrayValue */:return function(t,e){for(var n=t.values||[],r=e.values||[],i=0;i<n.length&&i<r.length;++i){var o=hd(n[i],r[i]);if(o)return o}return cJ(n.length,r.length)}(t.arrayValue,e.arrayValue);case 10/* ObjectValue */:return function(t,e){var n=t.fields||{},r=Object.keys(n),i=e.fields||{},o=Object.keys(i);// Even though MapValues are likely sorted correctly based on their insertion
// order (e.g. when received from the backend), local modifications can bring
// elements out of order. We need to re-sort the elements to ensure that
// canonical IDs are independent of insertion order.
r.sort(),o.sort();for(var a=0;a<r.length&&a<o.length;++a){var s=cJ(r[a],o[a]);if(0!==s)return s;var u=hd(n[r[a]],i[o[a]]);if(0!==u)return u}return cJ(r.length,o.length)}(t.mapValue,e.mapValue);default:throw cY()}}function hv(t,e){if("string"==typeof t&&"string"==typeof e&&t.length===e.length)return cJ(t,e);var n=hn(t),r=hn(e),i=cJ(n.seconds,r.seconds);return 0!==i?i:cJ(n.nanos,r.nanos)}function hg(t){var e,n,r;return"nullValue"in t?"null":"booleanValue"in t?""+t.booleanValue:"integerValue"in t?""+t.integerValue:"doubleValue"in t?""+t.doubleValue:"timestampValue"in t?"time("+(r=hn(t.timestampValue)).seconds+","+r.nanos+")":"stringValue"in t?t.stringValue:"bytesValue"in t?hi(t.bytesValue).toBase64():"referenceValue"in t?(n=t.referenceValue,hh.fromName(n).toString()):"geoPointValue"in t?"geo("+(e=t.geoPointValue).latitude+","+e.longitude+")":"arrayValue"in t?function(t){for(var e="[",n=!0,r=0,i=t.values||[];r<i.length;r++)n?n=!1:e+=",",e+=hg(i[r]);return e+"]"}(t.arrayValue):"mapValue"in t?function(t){for(// matching canonical IDs for identical maps, we need to sort the keys.
var e="{",n=!0,r=0,i=Object.keys(t.fields||{}).sort();r<i.length;r++){var o=i[r];n?n=!1:e+=",",e+=o+":"+hg(t.fields[o])}return e+"}"}(t.mapValue):cY()}function hm(t,e){return{referenceValue:"projects/"+t.projectId+"/databases/"+t.database+"/documents/"+e.path.canonicalString()}}/** Returns true if `value` is an IntegerValue . */function hy(t){return!!t&&"integerValue"in t}/** Returns true if `value` is a DoubleValue. *//** Returns true if `value` is an ArrayValue. */function h_(t){return!!t&&"arrayValue"in t}/** Returns true if `value` is a NullValue. */function hb(t){return!!t&&"nullValue"in t}/** Returns true if `value` is NaN. */function hw(t){return!!t&&"doubleValue"in t&&isNaN(Number(t.doubleValue))}/** Returns true if `value` is a MapValue. */function hI(t){return!!t&&"mapValue"in t}/** Creates a deep copy of `source`. */function hT(t){if(t.geoPointValue)return{geoPointValue:Object.assign({},t.geoPointValue)};if(t.timestampValue&&"object"==typeof t.timestampValue)return{timestampValue:Object.assign({},t.timestampValue)};if(t.mapValue){var e={mapValue:{fields:{}}};return c4(t.mapValue.fields,function(t,n){return e.mapValue.fields[t]=hT(n)}),e}if(t.arrayValue){for(var n={arrayValue:{values:[]}},r=0;r<(t.arrayValue.values||[]).length;++r)n.arrayValue.values[r]=hT(t.arrayValue.values[r]);return n}return Object.assign({},t)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An ObjectValue represents a MapValue in the Firestore Proto and offers the
 * ability to add and remove fields (via the ObjectValueBuilder).
 */var hE=/** @class */function(){function t(t){this.value=t}return t.empty=function(){return new t({mapValue:{}})},/**
     * Returns the value at the given path or null.
     *
     * @param path - the path to search
     * @returns The value at the path or null if the path is not set.
     */t.prototype.field=function(t){if(t.isEmpty())return this.value;for(var e=this.value,n=0;n<t.length-1;++n)if(!hI(e=(e.mapValue.fields||{})[t.get(n)]))return null;return(e=(e.mapValue.fields||{})[t.lastSegment()])||null},/**
     * Sets the field to the provided value.
     *
     * @param path - The field path to set.
     * @param value - The value to set.
     */t.prototype.set=function(t,e){this.getFieldsMap(t.popLast())[t.lastSegment()]=hT(e)},/**
     * Sets the provided fields to the provided values.
     *
     * @param data - A map of fields to values (or null for deletes).
     */t.prototype.setAll=function(t){var e=this,n=c7.emptyPath(),r={},i=[];t.forEach(function(t,o){if(!n.isImmediateParentOf(o)){// Insert the accumulated changes at this parent location
var a=e.getFieldsMap(n);e.applyChanges(a,r,i),r={},i=[],n=o.popLast()}t?r[o.lastSegment()]=hT(t):i.push(o.lastSegment())});var o=this.getFieldsMap(n);this.applyChanges(o,r,i)},/**
     * Removes the field at the specified path. If there is no field at the
     * specified path, nothing is changed.
     *
     * @param path - The field path to remove.
     */t.prototype.delete=function(t){var e=this.field(t.popLast());hI(e)&&e.mapValue.fields&&delete e.mapValue.fields[t.lastSegment()]},t.prototype.isEqual=function(t){return hf(this.value,t.value)},/**
     * Returns the map that contains the leaf element of `path`. If the parent
     * entry does not yet exist, or if it is not a map, a new map will be created.
     */t.prototype.getFieldsMap=function(t){var e=this.value;e.mapValue.fields||(e.mapValue={fields:{}});for(var n=0;n<t.length;++n){var r=e.mapValue.fields[t.get(n)];hI(r)&&r.mapValue.fields||(r={mapValue:{fields:{}}},e.mapValue.fields[t.get(n)]=r),e=r}return e.mapValue.fields},/**
     * Modifies `fieldsMap` by adding, replacing or deleting the specified
     * entries.
     */t.prototype.applyChanges=function(t,e,n){c4(e,function(e,n){return t[e]=n});for(var r=0;r<n.length;r++){var i=n[r];delete t[i]}},t.prototype.clone=function(){return new t(hT(this.value))},t}(),hS=/** @class */function(){function t(t,e,n,r,i){this.key=t,this.documentType=e,this.version=n,this.data=r,this.documentState=i/**
     * Creates a document with no known version or data, but which can serve as
     * base document for mutations.
     */}return t.newInvalidDocument=function(e){return new t(e,0/* INVALID */,c1.min(),hE.empty(),0/* SYNCED */)},/**
     * Creates a new document that is known to exist with the given data at the
     * given version.
     */t.newFoundDocument=function(e,n,r){return new t(e,1/* FOUND_DOCUMENT */,n,r,0/* SYNCED */)},/** Creates a new document that is known to not exist at the given version. */t.newNoDocument=function(e,n){return new t(e,2/* NO_DOCUMENT */,n,hE.empty(),0/* SYNCED */)},/**
     * Creates a new document that is known to exist at the given version but
     * whose data is not known (e.g. a document that was updated without a known
     * base document).
     */t.newUnknownDocument=function(e,n){return new t(e,3/* UNKNOWN_DOCUMENT */,n,hE.empty(),2/* HAS_COMMITTED_MUTATIONS */)},/**
     * Changes the document type to indicate that it exists and that its version
     * and data are known.
     */t.prototype.convertToFoundDocument=function(t,e){return this.version=t,this.documentType=1/* FOUND_DOCUMENT */,this.data=e,this.documentState=0/* SYNCED */,this},/**
     * Changes the document type to indicate that it doesn't exist at the given
     * version.
     */t.prototype.convertToNoDocument=function(t){return this.version=t,this.documentType=2/* NO_DOCUMENT */,this.data=hE.empty(),this.documentState=0/* SYNCED */,this},/**
     * Changes the document type to indicate that it exists at a given version but
     * that its data is not known (e.g. a document that was updated without a known
     * base document).
     */t.prototype.convertToUnknownDocument=function(t){return this.version=t,this.documentType=3/* UNKNOWN_DOCUMENT */,this.data=hE.empty(),this.documentState=2/* HAS_COMMITTED_MUTATIONS */,this},t.prototype.setHasCommittedMutations=function(){return this.documentState=2/* HAS_COMMITTED_MUTATIONS */,this},t.prototype.setHasLocalMutations=function(){return this.documentState=1/* HAS_LOCAL_MUTATIONS */,this},Object.defineProperty(t.prototype,"hasLocalMutations",{get:function(){return 1/* HAS_LOCAL_MUTATIONS */===this.documentState},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"hasCommittedMutations",{get:function(){return 2/* HAS_COMMITTED_MUTATIONS */===this.documentState},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"hasPendingWrites",{get:function(){return this.hasLocalMutations||this.hasCommittedMutations},enumerable:!1,configurable:!0}),t.prototype.isValidDocument=function(){return 0/* INVALID */!==this.documentType},t.prototype.isFoundDocument=function(){return 1/* FOUND_DOCUMENT */===this.documentType},t.prototype.isNoDocument=function(){return 2/* NO_DOCUMENT */===this.documentType},t.prototype.isUnknownDocument=function(){return 3/* UNKNOWN_DOCUMENT */===this.documentType},t.prototype.isEqual=function(e){return e instanceof t&&this.key.isEqual(e.key)&&this.version.isEqual(e.version)&&this.documentType===e.documentType&&this.documentState===e.documentState&&this.data.isEqual(e.data)},t.prototype.clone=function(){return new t(this.key,this.documentType,this.version,this.data.clone(),this.documentState)},t.prototype.toString=function(){return"Document("+this.key+", "+this.version+", "+JSON.stringify(this.data.value)+", {documentType: "+this.documentType+"}), {documentState: "+this.documentState+"})"},t}(),hC=function(t,e,n,r,i,o,a){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=null),void 0===a&&(a=null),this.path=t,this.collectionGroup=e,this.orderBy=n,this.filters=r,this.limit=i,this.startAt=o,this.endAt=a,this.h=null};/**
 * Compares the value for field `field` in the provided documents. Throws if
 * the field does not exist in both documents.
 *//**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// Visible for testing
/**
 * Initializes a Target with a path and optional additional query constraints.
 * Path must currently be empty if this is a collection group query.
 *
 * NOTE: you should always construct `Target` from `Query.toTarget` instead of
 * using this factory method, because `Query` provides an implicit `orderBy`
 * property.
 */function hk(t,e,n,r,i,o,a){return void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=null),void 0===a&&(a=null),new hC(t,e,n,r,i,o,a)}function hN(t){if(null===t.h){var e=t.path.canonicalString();null!==t.collectionGroup&&(e+="|cg:"+t.collectionGroup),e+="|f:"+t.filters.map(function(t){return t.field.canonicalString()+t.op.toString()+hg(t.value)}).join(",")+"|ob:"+t.orderBy.map(function(t){return t.field.canonicalString()+t.dir}).join(","),hs(t.limit)||(e+="|l:"+t.limit),t.startAt&&(e+="|lb:"+hV(t.startAt)),t.endAt&&(e+="|ub:"+hV(t.endAt)),t.h=e}return t.h}function hA(t,e){if(t.limit!==e.limit||t.orderBy.length!==e.orderBy.length)return!1;for(var n,r,i,o,a=0;a<t.orderBy.length;a++)if(n=t.orderBy[a],r=e.orderBy[a],!(n.dir===r.dir&&n.field.isEqual(r.field)))return!1;if(t.filters.length!==e.filters.length)return!1;for(var s=0;s<t.filters.length;s++)if(i=t.filters[s],o=e.filters[s],i.op!==o.op||!i.field.isEqual(o.field)||!hf(i.value,o.value))return!1;return t.collectionGroup===e.collectionGroup&&!!t.path.isEqual(e.path)&&!!hH(t.startAt,e.startAt)&&hH(t.endAt,e.endAt)}function hR(t){return hh.isDocumentKey(t.path)&&null===t.collectionGroup&&0===t.filters.length}var hx=/** @class */function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).field=e,i.op=n,i.value=r,i}/**
     * Creates a filter based on the provided arguments.
     */return B(e,t),e.create=function(t,n,r){return t.isKeyField()?"in"/* IN */===n||"not-in"/* NOT_IN */===n?this.l(t,n,r):new hP(t,n,r):"array-contains"/* ARRAY_CONTAINS */===n?new hM(t,r):"in"/* IN */===n?new hF(t,r):"not-in"/* NOT_IN */===n?new hj(t,r):"array-contains-any"/* ARRAY_CONTAINS_ANY */===n?new hU(t,r):new e(t,n,r)},e.l=function(t,e,n){return"in"/* IN */===e?new hD(t,n):new hO(t,n)},e.prototype.matches=function(t){var e=t.data.field(this.field);// Types do not have to match in NOT_EQUAL filters.
return"!="/* NOT_EQUAL */===this.op?null!==e&&this.m(hd(e,this.value)):null!==e&&hl(this.value)===hl(e)&&this.m(hd(e,this.value));// Only compare types with matching backend order (such as double and int).
},e.prototype.m=function(t){switch(this.op){case"<"/* LESS_THAN */:return t<0;case"<="/* LESS_THAN_OR_EQUAL */:return t<=0;case"=="/* EQUAL */:return 0===t;case"!="/* NOT_EQUAL */:return 0!==t;case">"/* GREATER_THAN */:return t>0;case">="/* GREATER_THAN_OR_EQUAL */:return t>=0;default:return cY()}},e.prototype.g=function(){return["<"/* LESS_THAN */,"<="/* LESS_THAN_OR_EQUAL */,">"/* GREATER_THAN */,">="/* GREATER_THAN_OR_EQUAL */,"!="/* NOT_EQUAL */,"not-in"/* NOT_IN */].indexOf(this.op)>=0},e}(function(){}),hP=/** @class */function(t){function e(e,n,r){var i=this;return(i=t.call(this,e,n,r)||this).key=hh.fromName(r.referenceValue),i}return B(e,t),e.prototype.matches=function(t){var e=hh.comparator(t.key,this.key);return this.m(e)},e}(hx),hD=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this,e,"in"/* IN */,n)||this).keys=hL("in"/* IN */,n),r}return B(e,t),e.prototype.matches=function(t){return this.keys.some(function(e){return e.isEqual(t.key)})},e}(hx),hO=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this,e,"not-in"/* NOT_IN */,n)||this).keys=hL("not-in"/* NOT_IN */,n),r}return B(e,t),e.prototype.matches=function(t){return!this.keys.some(function(e){return e.isEqual(t.key)})},e}(hx);/** Filter that matches on key fields within an array. */function hL(t,e){var n;return((null===(n=e.arrayValue)||void 0===n?void 0:n.values)||[]).map(function(t){return hh.fromName(t.referenceValue)})}/** A Filter that implements the array-contains operator. */var hM=/** @class */function(t){function e(e,n){return t.call(this,e,"array-contains"/* ARRAY_CONTAINS */,n)||this}return B(e,t),e.prototype.matches=function(t){var e=t.data.field(this.field);return h_(e)&&hp(e.arrayValue,this.value)},e}(hx),hF=/** @class */function(t){function e(e,n){return t.call(this,e,"in"/* IN */,n)||this}return B(e,t),e.prototype.matches=function(t){var e=t.data.field(this.field);return null!==e&&hp(this.value.arrayValue,e)},e}(hx),hj=/** @class */function(t){function e(e,n){return t.call(this,e,"not-in"/* NOT_IN */,n)||this}return B(e,t),e.prototype.matches=function(t){if(hp(this.value.arrayValue,{nullValue:"NULL_VALUE"}))return!1;var e=t.data.field(this.field);return null!==e&&!hp(this.value.arrayValue,e)},e}(hx),hU=/** @class */function(t){function e(e,n){return t.call(this,e,"array-contains-any"/* ARRAY_CONTAINS_ANY */,n)||this}return B(e,t),e.prototype.matches=function(t){var e=this,n=t.data.field(this.field);return!(!h_(n)||!n.arrayValue.values)&&n.arrayValue.values.some(function(t){return hp(e.value.arrayValue,t)})},e}(hx),hq=function(t,e){this.position=t,this.before=e};/** A Filter that implements the IN operator. */function hV(t){// TODO(b/29183165): Make this collision robust.
return(t.before?"b":"a")+":"+t.position.map(function(t){return hg(t)}).join(",")}/**
 * An ordering on a field, in some Direction. Direction defaults to ASCENDING.
 */var hB=function(t,e/* ASCENDING */){void 0===e&&(e="asc"),this.field=t,this.dir=e};/**
 * Returns true if a document sorts before a bound using the provided sort
 * order.
 */function hK(t,e,n){for(var r=0,i=0;i<t.position.length;i++){var o=e[i],a=t.position[i];if(r=o.field.isKeyField()?hh.comparator(hh.fromName(a.referenceValue),n.key):hd(a,n.data.field(o.field)),"desc"/* DESCENDING */===o.dir&&(r*=-1),0!==r)break}return t.before?r<=0:r<0}function hH(t,e){if(null===t)return null===e;if(null===e||t.before!==e.before||t.position.length!==e.position.length)return!1;for(var n=0;n<t.position.length;n++)if(!hf(t.position[n],e.position[n]))return!1;return!0}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Query encapsulates all the query attributes we support in the SDK. It can
 * be run against the LocalStore, as well as be converted to a `Target` to
 * query the RemoteStore results.
 *
 * Visible for testing.
 */var hW=/**
     * Initializes a Query with a path and optional additional query constraints.
     * Path must currently be empty if this is a collection group query.
     */function(t,e,n,r,i,o/* First */,a,s){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o="F"),void 0===a&&(a=null),void 0===s&&(s=null),this.path=t,this.collectionGroup=e,this.explicitOrderBy=n,this.filters=r,this.limit=i,this.limitType=o,this.startAt=a,this.endAt=s,this.p=null,this.T=null,this.startAt,this.endAt};/** Creates a new Query for a query that matches all documents at `path` */function hz(t){return new hW(t)}/**
 * Helper to convert a collection group query into a collection query at a
 * specific path. This is used when executing collection group queries, since
 * we have to split the query into a set of collection queries at multiple
 * paths.
 */function hG(t){return!hs(t.limit)&&"F"/* First */===t.limitType}function hQ(t){return!hs(t.limit)&&"L"/* Last */===t.limitType}function h$(t){return t.explicitOrderBy.length>0?t.explicitOrderBy[0].field:null}function hY(t){for(var e=0,n=t.filters;e<n.length;e++){var r=n[e];if(r.g())return r.field}return null}/**
 * Checks if any of the provided Operators are included in the query and
 * returns the first one that is, or null if none are.
 *//**
 * Returns whether the query matches a collection group rather than a specific
 * collection.
 */function hX(t){return null!==t.collectionGroup}/**
 * Returns the implicit order by constraint that is used to execute the Query,
 * which can be different from the order by constraints the user provided (e.g.
 * the SDK and backend always orders by `__name__`).
 */function hJ(t){if(null===t.p){t.p=[];var e=hY(t),n=h$(t);if(null!==e&&null===n)// inequality filter field for it to be a valid query.
// Note that the default inequality field and key ordering is ascending.
e.isKeyField()||t.p.push(new hB(e)),t.p.push(new hB(c7.keyField(),"asc"/* ASCENDING */));else{for(var r=!1,i=0,o=t.explicitOrderBy;i<o.length;i++){var a=o[i];t.p.push(a),a.field.isKeyField()&&(r=!0)}if(!r){// The order of the implicit key ordering always matches the last
// explicit order by
var s=t.explicitOrderBy.length>0?t.explicitOrderBy[t.explicitOrderBy.length-1].dir:"asc"/* ASCENDING */;t.p.push(new hB(c7.keyField(),s))}}}return t.p}/**
 * Converts this `Query` instance to it's corresponding `Target` representation.
 */function hZ(t){if(!t.T){if("F"/* First */===t.limitType)t.T=hk(t.path,t.collectionGroup,hJ(t),t.filters,t.limit,t.startAt,t.endAt);else{for(var e=[],n=0,r=hJ(t);n<r.length;n++){var i=r[n],o="desc"/* DESCENDING */===i.dir?"asc"/* ASCENDING */:"desc"/* DESCENDING */;e.push(new hB(i.field,o))}// We need to swap the cursors to match the now-flipped query ordering.
var a=t.endAt?new hq(t.endAt.position,!t.endAt.before):null,s=t.startAt?new hq(t.startAt.position,!t.startAt.before):null;// Now return as a LimitType.First query.
t.T=hk(t.path,t.collectionGroup,e,t.filters,t.limit,a,s)}}return t.T}function h0(t,e,n){return new hW(t.path,t.collectionGroup,t.explicitOrderBy.slice(),t.filters.slice(),e,n,t.startAt,t.endAt)}function h1(t,e){return hA(hZ(t),hZ(e))&&t.limitType===e.limitType}// TODO(b/29183165): This is used to get a unique string from a query to, for
// example, use as a dictionary key, but the implementation is subject to
// collisions. Make it collision-free.
function h2(t){return hN(hZ(t))+"|lt:"+t.limitType}function h4(t){var e,n;return"Query(target="+(n=(e=hZ(t)).path.canonicalString(),null!==e.collectionGroup&&(n+=" collectionGroup="+e.collectionGroup),e.filters.length>0&&(n+=", filters: ["+e.filters.map(function(t){return t.field.canonicalString()+" "+t.op+" "+hg(t.value);/** Filter that matches on key fields (i.e. '__name__'). */}).join(", ")+"]"),hs(e.limit)||(n+=", limit: "+e.limit),e.orderBy.length>0&&(n+=", orderBy: ["+e.orderBy.map(function(t){return t.field.canonicalString()+" ("+t.dir+")"}).join(", ")+"]"),e.startAt&&(n+=", startAt: "+hV(e.startAt)),e.endAt&&(n+=", endAt: "+hV(e.endAt)),"Target("+n+")")+"; limitType="+t.limitType+")"}/** Returns whether `doc` matches the constraints of `query`. */function h3(t,e){var n;return e.isFoundDocument()&&(n=e.key.path,null!==t.collectionGroup?e.key.hasCollectionId(t.collectionGroup)&&t.path.isPrefixOf(n):hh.isDocumentKey(t.path)?t.path.isEqual(n):t.path.isImmediateParentOf(n))&&function(t,e){for(var n=0,r=t.explicitOrderBy;n<r.length;n++){var i=r[n];// order by key always matches
if(!i.field.isKeyField()&&null===e.data.field(i.field))return!1}return!0}(t,e)&&function(t,e){for(var n=0,r=t.filters;n<r.length;n++)if(!r[n].matches(e))return!1;return!0}(t,e)&&!(t.startAt&&!hK(t.startAt,hJ(t),e))&&(!t.endAt||!hK(t.endAt,hJ(t),e))}function h6(t){return function(e,n){for(var r=!1,i=0,o=hJ(t);i<o.length;i++){var a=o[i],s=function(t,e,n){var r,i,o,a=t.field.isKeyField()?hh.comparator(e.key,n.key):(r=t.field,i=e.data.field(r),o=n.data.field(r),null!==i&&null!==o?hd(i,o):cY());switch(t.dir){case"asc"/* ASCENDING */:return a;case"desc"/* DESCENDING */:return -1*a;default:return cY()}}(a,e,n);if(0!==s)return s;r=r||a.field.isKeyField()}return 0}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns an DoubleValue for `value` that is encoded based the serializer's
 * `useProto3Json` setting.
 */function h5(t,e){if(t.I){if(isNaN(e))return{doubleValue:"NaN"};if(e===1/0)return{doubleValue:"Infinity"};if(e===-1/0)return{doubleValue:"-Infinity"}}return{doubleValue:hu(e)?"-0":e}}/**
 * Returns an IntegerValue for `value`.
 */function h8(t){return{integerValue:""+t}}/**
 * Returns a value for a number that's appropriate to put into a proto.
 * The return value is an IntegerValue if it can safely represent the value,
 * otherwise a DoubleValue is returned.
 */function h7(t,e){return hc(e)?h8(e):h5(t,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Used to represent a field transform on a mutation. */var h9=function(){// Make sure that the structural type of `TransformOperation` is unique.
// See https://github.com/microsoft/TypeScript/issues/5451
this._=void 0};/**
 * If this transform operation is not idempotent, returns the base value to
 * persist for this transform. If a base value is returned, the transform
 * operation is always applied to this base value, even if document has
 * already been updated.
 *
 * Base values provide consistent behavior for non-idempotent transforms and
 * allow us to return the same latency-compensated value even if the backend
 * has already applied the transform operation. The base value is null for
 * idempotent transforms, as they can be re-played even if the backend has
 * already applied them.
 *
 * @returns a base value to store along with the mutation, or null for
 * idempotent transforms.
 */function lt(t,e){return t instanceof la?hy(e)||e&&"doubleValue"in e?e:{integerValue:0}:null}/** Transforms a value into a server-generated timestamp. */var le=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e}(h9),ln=/** @class */function(t){function e(e){var n=this;return(n=t.call(this)||this).elements=e,n}return B(e,t),e}(h9);/** Transforms an array value via a union operation. */function lr(t,e){for(var n=lu(e),r=function(t){n.some(function(e){return hf(e,t)})||n.push(t)},i=0,o=t.elements;i<o.length;i++)r(o[i]);return{arrayValue:{values:n}}}/** Transforms an array value via a remove operation. */var li=/** @class */function(t){function e(e){var n=this;return(n=t.call(this)||this).elements=e,n}return B(e,t),e}(h9);function lo(t,e){for(var n=lu(e),r=function(t){n=n.filter(function(e){return!hf(e,t)})},i=0,o=t.elements;i<o.length;i++)r(o[i]);return{arrayValue:{values:n}}}/**
 * Implements the backend semantics for locally computed NUMERIC_ADD (increment)
 * transforms. Converts all field values to integers or doubles, but unlike the
 * backend does not cap integer values at 2^63. Instead, JavaScript number
 * arithmetic is used and precision loss can occur for values greater than 2^53.
 */var la=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this)||this).R=e,r.A=n,r}return B(e,t),e}(h9);function ls(t){return hr(t.integerValue||t.doubleValue)}function lu(t){return h_(t)&&t.arrayValue.values?t.arrayValue.values.slice():[]}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** A field path and the TransformOperation to perform upon it. */var lc=function(t,e){this.field=t,this.transform=e},lh=function(/**
     * The version at which the mutation was committed:
     *
     * - For most operations, this is the updateTime in the WriteResult.
     * - For deletes, the commitTime of the WriteResponse (because deletes are
     *   not stored and have no updateTime).
     *
     * Note that these versions can be different: No-op writes will not change
     * the updateTime even though the commitTime advances.
     */t,/**
     * The resulting fields returned from the backend after a mutation
     * containing field transforms has been committed. Contains one FieldValue
     * for each FieldTransform that was in the mutation.
     *
     * Will be empty if the mutation did not contain any field transforms.
     */e){this.version=t,this.transformResults=e},ll=/** @class */function(){function t(t,e){this.updateTime=t,this.exists=e/** Creates a new empty Precondition. */}return t.none=function(){return new t},/** Creates a new Precondition with an exists flag. */t.exists=function(e){return new t(void 0,e)},/** Creates a new Precondition based on a version a document exists at. */t.updateTime=function(e){return new t(e)},Object.defineProperty(t.prototype,"isNone",{/** Returns whether this Precondition is empty. */get:function(){return void 0===this.updateTime&&void 0===this.exists},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(t){return this.exists===t.exists&&(this.updateTime?!!t.updateTime&&this.updateTime.isEqual(t.updateTime):!t.updateTime)},t}();/**
 * Encodes a precondition for a mutation. This follows the model that the
 * backend accepts with the special case of an explicit "empty" precondition
 * (meaning no precondition).
 *//** Returns true if the preconditions is valid for the given document. */function lf(t,e){return void 0!==t.updateTime?e.isFoundDocument()&&e.version.isEqual(t.updateTime):void 0===t.exists||t.exists===e.isFoundDocument()}/**
 * A mutation describes a self-contained change to a document. Mutations can
 * create, replace, delete, and update subsets of documents.
 *
 * Mutations not only act on the value of the document but also its version.
 *
 * For local mutations (mutations that haven't been committed yet), we preserve
 * the existing version for Set and Patch mutations. For Delete mutations, we
 * reset the version to 0.
 *
 * Here's the expected transition table.
 *
 * MUTATION           APPLIED TO            RESULTS IN
 *
 * SetMutation        Document(v3)          Document(v3)
 * SetMutation        NoDocument(v3)        Document(v0)
 * SetMutation        InvalidDocument(v0)   Document(v0)
 * PatchMutation      Document(v3)          Document(v3)
 * PatchMutation      NoDocument(v3)        NoDocument(v3)
 * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)
 * DeleteMutation     Document(v3)          NoDocument(v0)
 * DeleteMutation     NoDocument(v3)        NoDocument(v0)
 * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)
 *
 * For acknowledged mutations, we use the updateTime of the WriteResponse as
 * the resulting version for Set and Patch mutations. As deletes have no
 * explicit update time, we use the commitTime of the WriteResponse for
 * Delete mutations.
 *
 * If a mutation is acknowledged by the backend but fails the precondition check
 * locally, we transition to an `UnknownDocument` and rely on Watch to send us
 * the updated version.
 *
 * Field transforms are used only with Patch and Set Mutations. We use the
 * `updateTransforms` message to store transforms, rather than the `transforms`s
 * messages.
 *
 * ## Subclassing Notes
 *
 * Every type of mutation needs to implement its own applyToRemoteDocument() and
 * applyToLocalView() to implement the actual behavior of applying the mutation
 * to some source document (see `applySetMutationToRemoteDocument()` for an
 * example).
 */var lp=function(){};/**
 * Applies this mutation to the given document for the purposes of computing
 * the new local view of a document. If the input document doesn't match the
 * expected state, the document is not modified.
 *
 * @param mutation - The mutation to apply.
 * @param document - The document to mutate. The input document can be an
 *     invalid document if the client has no knowledge of the pre-mutation state
 *     of the document.
 * @param localWriteTime - A timestamp indicating the local write time of the
 *     batch this mutation is a part of.
 */function ld(t,e,n){t instanceof lm?function(t,e,n){if(lf(t.precondition,e)){var r=t.value.clone(),i=lw(t.fieldTransforms,n,e);r.setAll(i),e.convertToFoundDocument(lg(e),r).setHasLocalMutations()}}(t,e,n):t instanceof ly?function(t,e,n){if(lf(t.precondition,e)){var r=lw(t.fieldTransforms,n,e),i=e.data;i.setAll(l_(t)),i.setAll(r),e.convertToFoundDocument(lg(e),i).setHasLocalMutations()}}(t,e,n):lf(t.precondition,e)&&// We don't call `setHasLocalMutations()` since we want to be backwards
// compatible with the existing SDK behavior.
e.convertToNoDocument(c1.min())}function lv(t,e){var n,r;return t.type===e.type&&!!t.key.isEqual(e.key)&&!!t.precondition.isEqual(e.precondition)&&(n=t.fieldTransforms,r=e.fieldTransforms,!!(void 0===n&&void 0===r||!(!n||!r)&&cZ(n,r,function(t,e){var n,r;return t.field.isEqual(e.field)&&(n=t.transform,r=e.transform,n instanceof ln&&r instanceof ln||n instanceof li&&r instanceof li?cZ(n.elements,r.elements,hf):n instanceof la&&r instanceof la?hf(n.A,r.A):n instanceof le&&r instanceof le)})))&&(0/* Set */===t.type?t.value.isEqual(e.value):1/* Patch */!==t.type||t.data.isEqual(e.data)&&t.fieldMask.isEqual(e.fieldMask))}/**
 * Returns the version from the given document for use as the result of a
 * mutation. Mutations are defined to return the version of the base document
 * only if it is an existing document. Deleted and unknown documents have a
 * post-mutation version of SnapshotVersion.min().
 */function lg(t){return t.isFoundDocument()?t.version:c1.min()}/**
 * A mutation that creates or replaces the document at the given key with the
 * object value contents.
 */var lm=/** @class */function(t){function e(e,n,r,i){void 0===i&&(i=[]);var o=this;return(o=t.call(this)||this).key=e,o.value=n,o.precondition=r,o.fieldTransforms=i,o.type=0/* Set */,o}return B(e,t),e}(lp),ly=/** @class */function(t){function e(e,n,r,i,o){void 0===o&&(o=[]);var a=this;return(a=t.call(this)||this).key=e,a.data=n,a.fieldMask=r,a.precondition=i,a.fieldTransforms=o,a.type=1/* Patch */,a}return B(e,t),e}(lp);function l_(t){var e=new Map;return t.fieldMask.fields.forEach(function(n){if(!n.isEmpty()){var r=t.data.field(n);e.set(n,r)}}),e/**
 * Creates a list of "transform results" (a transform result is a field value
 * representing the result of applying a transform) for use after a mutation
 * containing transforms has been acknowledged by the server.
 *
 * @param fieldTransforms - The field transforms to apply the result to.
 * @param mutableDocument - The current state of the document after applying all
 * previous mutations.
 * @param serverTransformResults - The transform results received by the server.
 * @returns The transform results list.
 */}function lb(t,e,n){var r=new Map;t.length===n.length||cY();for(var i=0;i<n.length;i++){var o,a=t[i],s=a.transform,u=e.data.field(a.field);r.set(a.field,(o=n[i],s instanceof ln?lr(s,u):s instanceof li?lo(s,u):o))}return r}/**
 * Creates a list of "transform results" (a transform result is a field value
 * representing the result of applying a transform) for use when applying a
 * transform locally.
 *
 * @param fieldTransforms - The field transforms to apply the result to.
 * @param localWriteTime - The local time of the mutation (used to
 *     generate ServerTimestampValues).
 * @param mutableDocument - The current state of the document after applying all
 *     previous mutations.
 * @returns The transform results list.
 */function lw(t,e,n){for(var r=new Map,i=0;i<t.length;i++){var o=t[i],a=o.transform,s=n.data.field(o.field);r.set(o.field,/**
 * Computes the local transform result against the provided `previousValue`,
 * optionally using the provided localWriteTime.
 */function(t,e,n){var r,i,o;return t instanceof le?(r={fields:{__type__:{stringValue:"server_timestamp"},__local_write_time__:{timestampValue:{seconds:n.seconds,nanos:n.nanoseconds}}}},e&&(r.fields.__previous_value__=e),{mapValue:r}):t instanceof ln?lr(t,e):t instanceof li?lo(t,e):(o=ls(i=lt(t,e))+ls(t.A),hy(i)&&hy(t.A)?h8(o):h5(t.R,o))}(a,s,e))}return r}/** A mutation that deletes the document at the given key. */var lI,lT,lE,lS,lC,lk,lN,lA,lR=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this)||this).key=e,r.precondition=n,r.type=2/* Delete */,r.fieldTransforms=[],r}return B(e,t),e}(lp),lx=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this)||this).key=e,r.precondition=n,r.type=3/* Verify */,r.fieldTransforms=[],r}return B(e,t),e}(lp),lP=function(t){this.count=t};/**
 * Determines whether an error code represents a permanent error when received
 * in response to a non-write operation.
 *
 * See isPermanentWriteError for classifying write errors.
 */function lD(t){switch(t){case cB.OK:return cY();case cB.CANCELLED:case cB.UNKNOWN:case cB.DEADLINE_EXCEEDED:case cB.RESOURCE_EXHAUSTED:case cB.INTERNAL:case cB.UNAVAILABLE:// Unauthenticated means something went wrong with our token and we need
// to retry with new credentials which will happen automatically.
case cB.UNAUTHENTICATED:return!1;case cB.INVALID_ARGUMENT:case cB.NOT_FOUND:case cB.ALREADY_EXISTS:case cB.PERMISSION_DENIED:case cB.FAILED_PRECONDITION:// Aborted might be retried in some scenarios, but that is dependant on
// the context and should handled individually by the calling code.
// See https://cloud.google.com/apis/design/errors.
case cB.ABORTED:case cB.OUT_OF_RANGE:case cB.UNIMPLEMENTED:case cB.DATA_LOSS:return!0;default:return cY()}}/**
 * Determines whether an error code represents a permanent error when received
 * in response to a write operation.
 *
 * Write operations must be handled specially because as of b/119437764, ABORTED
 * errors on the write stream should be retried too (even though ABORTED errors
 * are not generally retryable).
 *
 * Note that during the initial handshake on the write stream an ABORTED error
 * signals that we should discard our stream token (i.e. it is permanent). This
 * means a handshake error should be classified with isPermanentError, above.
 *//**
 * Maps an error Code from GRPC status code number, like 0, 1, or 14. These
 * are not the same as HTTP status codes.
 *
 * @returns The Code equivalent to the given GRPC status code. Fails if there
 *     is no match.
 */function lO(t){if(void 0===t)// to send invalid proto messages) we may get an error with no GRPC code.
return cG("GRPC error has no .code"),cB.UNKNOWN;switch(t){case lN.OK:return cB.OK;case lN.CANCELLED:return cB.CANCELLED;case lN.UNKNOWN:return cB.UNKNOWN;case lN.DEADLINE_EXCEEDED:return cB.DEADLINE_EXCEEDED;case lN.RESOURCE_EXHAUSTED:return cB.RESOURCE_EXHAUSTED;case lN.INTERNAL:return cB.INTERNAL;case lN.UNAVAILABLE:return cB.UNAVAILABLE;case lN.UNAUTHENTICATED:return cB.UNAUTHENTICATED;case lN.INVALID_ARGUMENT:return cB.INVALID_ARGUMENT;case lN.NOT_FOUND:return cB.NOT_FOUND;case lN.ALREADY_EXISTS:return cB.ALREADY_EXISTS;case lN.PERMISSION_DENIED:return cB.PERMISSION_DENIED;case lN.FAILED_PRECONDITION:return cB.FAILED_PRECONDITION;case lN.ABORTED:return cB.ABORTED;case lN.OUT_OF_RANGE:return cB.OUT_OF_RANGE;case lN.UNIMPLEMENTED:return cB.UNIMPLEMENTED;case lN.DATA_LOSS:return cB.DATA_LOSS;default:return cY()}}/**
 * Converts an HTTP response's error status to the equivalent error code.
 *
 * @param status - An HTTP error response status ("FAILED_PRECONDITION",
 * "UNKNOWN", etc.)
 * @returns The equivalent Code. Non-matching responses are mapped to
 *     Code.UNKNOWN.
 */(lA=lN||(lN={}))[lA.OK=0]="OK",lA[lA.CANCELLED=1]="CANCELLED",lA[lA.UNKNOWN=2]="UNKNOWN",lA[lA.INVALID_ARGUMENT=3]="INVALID_ARGUMENT",lA[lA.DEADLINE_EXCEEDED=4]="DEADLINE_EXCEEDED",lA[lA.NOT_FOUND=5]="NOT_FOUND",lA[lA.ALREADY_EXISTS=6]="ALREADY_EXISTS",lA[lA.PERMISSION_DENIED=7]="PERMISSION_DENIED",lA[lA.UNAUTHENTICATED=16]="UNAUTHENTICATED",lA[lA.RESOURCE_EXHAUSTED=8]="RESOURCE_EXHAUSTED",lA[lA.FAILED_PRECONDITION=9]="FAILED_PRECONDITION",lA[lA.ABORTED=10]="ABORTED",lA[lA.OUT_OF_RANGE=11]="OUT_OF_RANGE",lA[lA.UNIMPLEMENTED=12]="UNIMPLEMENTED",lA[lA.INTERNAL=13]="INTERNAL",lA[lA.UNAVAILABLE=14]="UNAVAILABLE",lA[lA.DATA_LOSS=15]="DATA_LOSS";/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// An immutable sorted map implementation, based on a Left-leaning Red-Black
// tree.
var lL=/** @class */function(){function t(t,e){this.comparator=t,this.root=e||lF.EMPTY}// Returns a copy of the map, with the specified key/value added or replaced.
return t.prototype.insert=function(e,n){return new t(this.comparator,this.root.insert(e,n,this.comparator).copy(null,null,lF.BLACK,null,null))},t.prototype.remove=function(e){return new t(this.comparator,this.root.remove(e,this.comparator).copy(null,null,lF.BLACK,null,null))},t.prototype.get=function(t){for(var e=this.root;!e.isEmpty();){var n=this.comparator(t,e.key);if(0===n)return e.value;n<0?e=e.left:n>0&&(e=e.right)}return null},// exist.
t.prototype.indexOf=function(t){for(var e=0,n=this.root;!n.isEmpty();){var r=this.comparator(t,n.key);if(0===r)return e+n.left.size;r<0?n=n.left:(e+=n.left.size+1,n=n.right)}// Node not found
return -1},t.prototype.isEmpty=function(){return this.root.isEmpty()},Object.defineProperty(t.prototype,"size",{// Returns the total number of nodes in the map.
get:function(){return this.root.size},enumerable:!1,configurable:!0}),t.prototype.minKey=function(){return this.root.minKey()},t.prototype.maxKey=function(){return this.root.maxKey()},// for each key/value pair. If action returns true, traversal is aborted.
// Returns the first truthy value returned by action, or the last falsey
// value returned by action.
t.prototype.inorderTraversal=function(t){return this.root.inorderTraversal(t)},t.prototype.forEach=function(t){this.inorderTraversal(function(e,n){return t(e,n),!1})},t.prototype.toString=function(){var t=[];return this.inorderTraversal(function(e,n){return t.push(e+":"+n),!1}),"{"+t.join(", ")+"}"},// function for each key/value pair. If action returns true, traversal is
// aborted.
// Returns the first truthy value returned by action, or the last falsey
// value returned by action.
t.prototype.reverseTraversal=function(t){return this.root.reverseTraversal(t)},t.prototype.getIterator=function(){return new lM(this.root,null,this.comparator,!1)},t.prototype.getIteratorFrom=function(t){return new lM(this.root,t,this.comparator,!1)},t.prototype.getReverseIterator=function(){return new lM(this.root,null,this.comparator,!0)},t.prototype.getReverseIteratorFrom=function(t){return new lM(this.root,t,this.comparator,!0)},t}(),lM=/** @class */function(){function t(t,e,n,r){this.isReverse=r,this.nodeStack=[];for(var i=1;!t.isEmpty();)if(i=e?n(t.key,e):1,r&&(i*=-1),i<0)t=this.isReverse?t.left:t.right;else{if(0===i){// This node is exactly equal to our start key. Push it on the stack,
// but stop iterating;
this.nodeStack.push(t);break}// This node is greater than our start key, add it to the stack and move
// to the next one
this.nodeStack.push(t),t=this.isReverse?t.right:t.left}}return t.prototype.getNext=function(){var t=this.nodeStack.pop(),e={key:t.key,value:t.value};if(this.isReverse)for(t=t.left;!t.isEmpty();)this.nodeStack.push(t),t=t.right;else for(t=t.right;!t.isEmpty();)this.nodeStack.push(t),t=t.left;return e},t.prototype.hasNext=function(){return this.nodeStack.length>0},t.prototype.peek=function(){if(0===this.nodeStack.length)return null;var t=this.nodeStack[this.nodeStack.length-1];return{key:t.key,value:t.value}},t}(),lF=/** @class */function(){function t(e,n,r,i,o){this.key=e,this.value=n,this.color=null!=r?r:t.RED,this.left=null!=i?i:t.EMPTY,this.right=null!=o?o:t.EMPTY,this.size=this.left.size+1+this.right.size}// Returns a copy of the current node, optionally replacing pieces of it.
return t.prototype.copy=function(e,n,r,i,o){return new t(null!=e?e:this.key,null!=n?n:this.value,null!=r?r:this.color,null!=i?i:this.left,null!=o?o:this.right)},t.prototype.isEmpty=function(){return!1},// for each node. If action returns true, traversal is aborted.
// Returns the first truthy value returned by action, or the last falsey
// value returned by action.
t.prototype.inorderTraversal=function(t){return this.left.inorderTraversal(t)||t(this.key,this.value)||this.right.inorderTraversal(t)},// function for each node. If action returns true, traversal is aborted.
// Returns the first truthy value returned by action, or the last falsey
// value returned by action.
t.prototype.reverseTraversal=function(t){return this.right.reverseTraversal(t)||t(this.key,this.value)||this.left.reverseTraversal(t)},t.prototype.min=function(){return this.left.isEmpty()?this:this.left.min()},t.prototype.minKey=function(){return this.min().key},t.prototype.maxKey=function(){return this.right.isEmpty()?this.key:this.right.maxKey()},t.prototype.insert=function(t,e,n){var r=this,i=n(t,r.key);return(r=i<0?r.copy(null,null,null,r.left.insert(t,e,n),null):0===i?r.copy(null,e,null,null,null):r.copy(null,null,null,null,r.right.insert(t,e,n))).fixUp()},t.prototype.removeMin=function(){if(this.left.isEmpty())return t.EMPTY;var e=this;return e.left.isRed()||e.left.left.isRed()||(e=e.moveRedLeft()),(e=e.copy(null,null,null,e.left.removeMin(),null)).fixUp()},t.prototype.remove=function(e,n){var r,i=this;if(0>n(e,i.key))i.left.isEmpty()||i.left.isRed()||i.left.left.isRed()||(i=i.moveRedLeft()),i=i.copy(null,null,null,i.left.remove(e,n),null);else{if(i.left.isRed()&&(i=i.rotateRight()),i.right.isEmpty()||i.right.isRed()||i.right.left.isRed()||(i=i.moveRedRight()),0===n(e,i.key)){if(i.right.isEmpty())return t.EMPTY;r=i.right.min(),i=i.copy(r.key,r.value,null,null,i.right.removeMin())}i=i.copy(null,null,null,null,i.right.remove(e,n))}return i.fixUp()},t.prototype.isRed=function(){return this.color},t.prototype.fixUp=function(){var t=this;return t.right.isRed()&&!t.left.isRed()&&(t=t.rotateLeft()),t.left.isRed()&&t.left.left.isRed()&&(t=t.rotateRight()),t.left.isRed()&&t.right.isRed()&&(t=t.colorFlip()),t},t.prototype.moveRedLeft=function(){var t=this.colorFlip();return t.right.left.isRed()&&(t=(t=(t=t.copy(null,null,null,null,t.right.rotateRight())).rotateLeft()).colorFlip()),t},t.prototype.moveRedRight=function(){var t=this.colorFlip();return t.left.left.isRed()&&(t=(t=t.rotateRight()).colorFlip()),t},t.prototype.rotateLeft=function(){var e=this.copy(null,null,t.RED,null,this.right.left);return this.right.copy(null,null,this.color,e,null)},t.prototype.rotateRight=function(){var e=this.copy(null,null,t.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,e)},t.prototype.colorFlip=function(){var t=this.left.copy(null,null,!this.left.color,null,null),e=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,t,e)},t.prototype.checkMaxDepth=function(){return Math.pow(2,this.check())<=this.size+1},// leaves is equal on both sides.  This function verifies that or asserts.
t.prototype.check=function(){if(this.isRed()&&this.left.isRed()||this.right.isRed())throw cY();var t=this.left.check();if(t!==this.right.check())throw cY();return t+(this.isRed()?0:1)},t}();// end SortedMap
// An iterator over an LLRBNode.
// end LLRBNode
// Empty node is shared between all LLRB trees.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
lF.EMPTY=null,lF.RED=!0,lF.BLACK=!1,lF.EMPTY=new/** @class */(function(){function t(){this.size=0}return Object.defineProperty(t.prototype,"key",{get:function(){throw cY()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){throw cY()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){throw cY()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"left",{get:function(){throw cY()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"right",{get:function(){throw cY()},enumerable:!1,configurable:!0}),t.prototype.copy=function(t,e,n,r,i){return this},t.prototype.insert=function(t,e,n){return new lF(t,e)},t.prototype.remove=function(t,e){return this},t.prototype.isEmpty=function(){return!0},t.prototype.inorderTraversal=function(t){return!1},t.prototype.reverseTraversal=function(t){return!1},t.prototype.minKey=function(){return null},t.prototype.maxKey=function(){return null},t.prototype.isRed=function(){return!1},t.prototype.checkMaxDepth=function(){return!0},t.prototype.check=function(){return 0},t}());/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * SortedSet is an immutable (copy-on-write) collection that holds elements
 * in order specified by the provided comparator.
 *
 * NOTE: if provided comparator returns 0 for two elements, we consider them to
 * be equal!
 */var lj=/** @class */function(){function t(t){this.comparator=t,this.data=new lL(this.comparator)}return t.prototype.has=function(t){return null!==this.data.get(t)},t.prototype.first=function(){return this.data.minKey()},t.prototype.last=function(){return this.data.maxKey()},Object.defineProperty(t.prototype,"size",{get:function(){return this.data.size},enumerable:!1,configurable:!0}),t.prototype.indexOf=function(t){return this.data.indexOf(t)},/** Iterates elements in order defined by "comparator" */t.prototype.forEach=function(t){this.data.inorderTraversal(function(e,n){return t(e),!1})},/** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */t.prototype.forEachInRange=function(t,e){for(var n=this.data.getIteratorFrom(t[0]);n.hasNext();){var r=n.getNext();if(this.comparator(r.key,t[1])>=0)return;e(r.key)}},/**
     * Iterates over `elem`s such that: start &lt;= elem until false is returned.
     */t.prototype.forEachWhile=function(t,e){var n;for(n=void 0!==e?this.data.getIteratorFrom(e):this.data.getIterator();n.hasNext();)if(!t(n.getNext().key))return},/** Finds the least element greater than or equal to `elem`. */t.prototype.firstAfterOrEqual=function(t){var e=this.data.getIteratorFrom(t);return e.hasNext()?e.getNext().key:null},t.prototype.getIterator=function(){return new lU(this.data.getIterator())},t.prototype.getIteratorFrom=function(t){return new lU(this.data.getIteratorFrom(t))},/** Inserts or updates an element */t.prototype.add=function(t){return this.copy(this.data.remove(t).insert(t,!0))},/** Deletes an element */t.prototype.delete=function(t){return this.has(t)?this.copy(this.data.remove(t)):this},t.prototype.isEmpty=function(){return this.data.isEmpty()},t.prototype.unionWith=function(t){var e=this;// Make sure `result` always refers to the larger one of the two sets.
return e.size<t.size&&(e=t,t=this),t.forEach(function(t){e=e.add(t)}),e},t.prototype.isEqual=function(e){if(!(e instanceof t)||this.size!==e.size)return!1;for(var n=this.data.getIterator(),r=e.data.getIterator();n.hasNext();){var i=n.getNext().key,o=r.getNext().key;if(0!==this.comparator(i,o))return!1}return!0},t.prototype.toArray=function(){var t=[];return this.forEach(function(e){t.push(e)}),t},t.prototype.toString=function(){var t=[];return this.forEach(function(e){return t.push(e)}),"SortedSet("+t.toString()+")"},t.prototype.copy=function(e){var n=new t(this.comparator);return n.data=e,n},t}(),lU=/** @class */function(){function t(t){this.iter=t}return t.prototype.getNext=function(){return this.iter.getNext().key},t.prototype.hasNext=function(){return this.iter.hasNext()},t}(),lq=new lL(hh.comparator),lV=new lL(hh.comparator),lB=new lL(hh.comparator),lK=new lj(hh.comparator);function lH(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=lK,r=0;r<t.length;r++){var i=t[r];n=n.add(i)}return n}var lW=new lj(cJ),lz=/** @class */function(){function t(/**
     * The snapshot version this event brings us up to, or MIN if not set.
     */t,/**
     * A map from target to changes to the target. See TargetChange.
     */e,/**
     * A set of targets that is known to be inconsistent. Listens for these
     * targets should be re-established without resume tokens.
     */n,/**
     * A set of which documents have changed or been deleted, along with the
     * doc's new values (if not deleted).
     */r,/**
     * A set of which document updates are due only to limbo resolution targets.
     */i){this.snapshotVersion=t,this.targetChanges=e,this.targetMismatches=n,this.documentUpdates=r,this.resolvedLimboDocuments=i}/**
     * HACK: Views require RemoteEvents in order to determine whether the view is
     * CURRENT, but secondary tabs don't receive remote events. So this method is
     * used to create a synthesized RemoteEvent that can be used to apply a
     * CURRENT status change to a View, for queries executed in a different tab.
     */// PORTING NOTE: Multi-tab only
return t.createSynthesizedRemoteEventForCurrentChange=function(e,n){var r=new Map;return r.set(e,lG.createSynthesizedTargetChangeForCurrentChange(e,n)),new t(c1.min(),r,lW,lq,lH())},t}(),lG=/** @class */function(){function t(/**
     * An opaque, server-assigned token that allows watching a query to be resumed
     * after disconnecting without retransmitting all the data that matches the
     * query. The resume token essentially identifies a point in time from which
     * the server should resume sending results.
     */t,/**
     * The "current" (synced) status of this target. Note that "current"
     * has special meaning in the RPC protocol that implies that a target is
     * both up-to-date and consistent with the rest of the watch stream.
     */e,/**
     * The set of documents that were newly assigned to this target as part of
     * this remote event.
     */n,/**
     * The set of documents that were already assigned to this target but received
     * an update during this remote event.
     */r,/**
     * The set of documents that were removed from this target as part of this
     * remote event.
     */i){this.resumeToken=t,this.current=e,this.addedDocuments=n,this.modifiedDocuments=r,this.removedDocuments=i/**
     * This method is used to create a synthesized TargetChanges that can be used to
     * apply a CURRENT status change to a View (for queries executed in a different
     * tab) or for new queries (to raise snapshots with correct CURRENT status).
     */}return t.createSynthesizedTargetChangeForCurrentChange=function(e,n){return new t(ht.EMPTY_BYTE_STRING,n,lH(),lH(),lH())},t}(),lQ=function(/** The new document applies to all of these targets. */t,/** The new document is removed from all of these targets. */e,/** The key of the document for this change. */n,/**
     * The new document or NoDocument if it was deleted. Is null if the
     * document went out of view without the server sending a new document.
     */r){this.v=t,this.removedTargetIds=e,this.key=n,this.P=r},l$=function(t,e){this.targetId=t,this.V=e},lY=function(/** What kind of change occurred to the watch target. */t,/** The target IDs that were added/removed/set. */e,/**
     * An opaque, server-assigned token that allows watching a target to be
     * resumed after disconnecting without retransmitting all the data that
     * matches the target. The resume token essentially identifies a point in
     * time from which the server should resume sending results.
     */n,r){void 0===n&&(n=ht.EMPTY_BYTE_STRING),void 0===r&&(r=null),this.state=t,this.targetIds=e,this.resumeToken=n,this.cause=r},lX=/** @class */function(){function t(){/**
         * The number of pending responses (adds or removes) that we are waiting on.
         * We only consider targets active that have no pending responses.
         */this.S=0,/**
             * Keeps track of the document changes since the last raised snapshot.
             *
             * These changes are continuously updated as we receive document updates and
             * always reflect the current set of changes against the last issued snapshot.
             */this.D=l0(),/** See public getters for explanations of these fields. */this.C=ht.EMPTY_BYTE_STRING,this.N=!1,/**
             * Whether this target state should be included in the next snapshot. We
             * initialize to true so that newly-added targets are included in the next
             * RemoteEvent.
             */this.k=!0}return Object.defineProperty(t.prototype,"current",{/**
         * Whether this target has been marked 'current'.
         *
         * 'Current' has special meaning in the RPC protocol: It implies that the
         * Watch backend has sent us all changes up to the point at which the target
         * was added and that the target is consistent with the rest of the watch
         * stream.
         */get:function(){return this.N},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"resumeToken",{/** The last resume token sent to us for this target. */get:function(){return this.C},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"F",{/** Whether this target has pending target adds or target removes. */get:function(){return 0!==this.S},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"$",{/** Whether we have modified any state that should trigger a snapshot. */get:function(){return this.k},enumerable:!1,configurable:!0}),/**
     * Applies the resume token to the TargetChange, but only when it has a new
     * value. Empty resumeTokens are discarded.
     */t.prototype.O=function(t){t.approximateByteSize()>0&&(this.k=!0,this.C=t)},/**
     * Creates a target change from the current set of changes.
     *
     * To reset the document changes after raising this snapshot, call
     * `clearPendingChanges()`.
     */t.prototype.M=function(){var t=lH(),e=lH(),n=lH();return this.D.forEach(function(r,i){switch(i){case 0/* Added */:t=t.add(r);break;case 2/* Modified */:e=e.add(r);break;case 1/* Removed */:n=n.add(r);break;default:cY()}}),new lG(this.C,this.N,t,e,n)},/**
     * Resets the document changes and sets `hasPendingChanges` to false.
     */t.prototype.L=function(){this.k=!1,this.D=l0()},t.prototype.B=function(t,e){this.k=!0,this.D=this.D.insert(t,e)},t.prototype.q=function(t){this.k=!0,this.D=this.D.remove(t)},t.prototype.U=function(){this.S+=1},t.prototype.K=function(){this.S-=1},t.prototype.j=function(){this.k=!0,this.N=!0},t}(),lJ=/** @class */function(){function t(t){this.W=t,/** The internal state of all tracked targets. */this.G=new Map,/** Keeps track of the documents to update since the last raised snapshot. */this.H=lq,/** A mapping of document keys to their set of target IDs. */this.J=lZ(),/**
             * A list of targets with existence filter mismatches. These targets are
             * known to be inconsistent and their listens needs to be re-established by
             * RemoteStore.
             */this.Y=new lj(cJ)/**
     * Processes and adds the DocumentWatchChange to the current set of changes.
     */}return t.prototype.X=function(t){for(var e=0,n=t.v;e<n.length;e++){var r=n[e];t.P&&t.P.isFoundDocument()?this.Z(r,t.P):this.tt(r,t.key,t.P)}for(var i=0,o=t.removedTargetIds;i<o.length;i++)r=o[i],this.tt(r,t.key,t.P)},/** Processes and adds the WatchTargetChange to the current set of changes. */t.prototype.et=function(t){var e=this;this.forEachTarget(t,function(n){var r=e.nt(n);switch(t.state){case 0/* NoChange */:e.st(n)&&r.O(t.resumeToken);break;case 1/* Added */:// We need to decrement the number of pending acks needed from watch
// for this targetId.
r.K(),r.F||// We have a freshly added target, so we need to reset any state
// that we had previously. This can happen e.g. when remove and add
// back a target for existence filter mismatches.
r.L(),r.O(t.resumeToken);break;case 2/* Removed */:// We need to keep track of removed targets to we can post-filter and
// remove any target changes.
// We need to decrement the number of pending acks needed from watch
// for this targetId.
r.K(),r.F||e.removeTarget(n);break;case 3/* Current */:e.st(n)&&(r.j(),r.O(t.resumeToken));break;case 4/* Reset */:e.st(n)&&// Reset the target and synthesizes removes for all existing
// documents. The backend will re-add any documents that still
// match the target before it sends the next global snapshot.
(e.it(n),r.O(t.resumeToken));break;default:cY()}})},/**
     * Iterates over all targetIds that the watch change applies to: either the
     * targetIds explicitly listed in the change or the targetIds of all currently
     * active targets.
     */t.prototype.forEachTarget=function(t,e){var n=this;t.targetIds.length>0?t.targetIds.forEach(e):this.G.forEach(function(t,r){n.st(r)&&e(r)})},/**
     * Handles existence filters and synthesizes deletes for filter mismatches.
     * Targets that are invalidated by filter mismatches are added to
     * `pendingTargetResets`.
     */t.prototype.rt=function(t){var e=t.targetId,n=t.V.count,r=this.ot(e);if(r){var i=r.target;if(hR(i)){if(0===n){// The existence filter told us the document does not exist. We deduce
// that this document does not exist and apply a deleted document to
// our updates. Without applying this deleted document there might be
// another query that will raise this document as part of a snapshot
// until it is resolved, essentially exposing inconsistency between
// queries.
var o=new hh(i.path);this.tt(e,o,hS.newNoDocument(o,c1.min()))}else 1===n||cY()}else this.ct(e)!==n&&// Existence filter mismatch: We reset the mapping and raise a new
// snapshot with `isFromCache:true`.
(this.it(e),this.Y=this.Y.add(e))}},/**
     * Converts the currently accumulated state into a remote event at the
     * provided snapshot version. Resets the accumulated changes before returning.
     */t.prototype.ut=function(t){var e=this,n=new Map;this.G.forEach(function(r,i){var o=e.ot(i);if(o){if(r.current&&hR(o.target)){// Document queries for document that don't exist can produce an empty
// result set. To update our local cache, we synthesize a document
// delete if we have not previously received the document. This
// resolves the limbo state of the document, removing it from
// limboDocumentRefs.
// TODO(dimond): Ideally we would have an explicit lookup target
// instead resulting in an explicit delete message and we could
// remove this special logic.
var a=new hh(o.target.path);null!==e.H.get(a)||e.at(i,a)||e.tt(i,a,hS.newNoDocument(a,t))}r.$&&(n.set(i,r.M()),r.L())}});var r=lH();// We extract the set of limbo-only document updates as the GC logic
// special-cases documents that do not appear in the target cache.
// TODO(gsoltis): Expand on this comment once GC is available in the JS
// client.
this.J.forEach(function(t,n){var i=!0;n.forEachWhile(function(t){var n=e.ot(t);return!n||2/* LimboResolution */===n.purpose||(i=!1,!1)}),i&&(r=r.add(t))});var i=new lz(t,n,this.Y,this.H,r);return this.H=lq,this.J=lZ(),this.Y=new lj(cJ),i},/**
     * Adds the provided document to the internal list of document updates and
     * its document key to the given target's mapping.
     */// Visible for testing.
t.prototype.Z=function(t,e){if(this.st(t)){var n=this.at(t,e.key)?2/* Modified */:0/* Added */;this.nt(t).B(e.key,n),this.H=this.H.insert(e.key,e),this.J=this.J.insert(e.key,this.ht(e.key).add(t))}},/**
     * Removes the provided document from the target mapping. If the
     * document no longer matches the target, but the document's state is still
     * known (e.g. we know that the document was deleted or we received the change
     * that caused the filter mismatch), the new document can be provided
     * to update the remote document cache.
     */// Visible for testing.
t.prototype.tt=function(t,e,n){if(this.st(t)){var r=this.nt(t);this.at(t,e)?r.B(e,1/* Removed */):// snapshot, so we can just ignore the change.
r.q(e),this.J=this.J.insert(e,this.ht(e).delete(t)),n&&(this.H=this.H.insert(e,n))}},t.prototype.removeTarget=function(t){this.G.delete(t)},/**
     * Returns the current count of documents in the target. This includes both
     * the number of documents that the LocalStore considers to be part of the
     * target as well as any accumulated changes.
     */t.prototype.ct=function(t){var e=this.nt(t).M();return this.W.getRemoteKeysForTarget(t).size+e.addedDocuments.size-e.removedDocuments.size},/**
     * Increment the number of acks needed from watch before we can consider the
     * server to be 'in-sync' with the client's active targets.
     */t.prototype.U=function(t){this.nt(t).U()},t.prototype.nt=function(t){var e=this.G.get(t);return e||(e=new lX,this.G.set(t,e)),e},t.prototype.ht=function(t){var e=this.J.get(t);return e||(e=new lj(cJ),this.J=this.J.insert(t,e)),e},/**
     * Verifies that the user is still interested in this target (by calling
     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs
     * from watch.
     */t.prototype.st=function(t){var e=null!==this.ot(t);return e||cz("WatchChangeAggregator","Detected inactive target",t),e},/**
     * Returns the TargetData for an active target (i.e. a target that the user
     * is still interested in that has no outstanding target change requests).
     */t.prototype.ot=function(t){var e=this.G.get(t);return e&&e.F?null:this.W.lt(t)},/**
     * Resets the state of a Watch target to its initial state (e.g. sets
     * 'current' to false, clears the resume token and removes its target mapping
     * from all documents).
     */t.prototype.it=function(t){var e=this;this.G.set(t,new lX),this.W.getRemoteKeysForTarget(t).forEach(function(n){e.tt(t,n,/*updatedDocument=*/null)})},/**
     * Returns whether the LocalStore considers the document to be part of the
     * specified target.
     */t.prototype.at=function(t,e){return this.W.getRemoteKeysForTarget(t).has(e)},t}();/**
 * A TargetChange specifies the set of changes for a specific target as part of
 * a RemoteEvent. These changes track which documents are added, modified or
 * removed, as well as the target's resume token and whether the target is
 * marked CURRENT.
 * The actual changes *to* documents are not part of the TargetChange since
 * documents may be part of multiple targets.
 */function lZ(){return new lL(hh.comparator)}function l0(){return new lL(hh.comparator)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var l1={asc:"ASCENDING",desc:"DESCENDING"},l2={"<":"LESS_THAN","<=":"LESS_THAN_OR_EQUAL",">":"GREATER_THAN",">=":"GREATER_THAN_OR_EQUAL","==":"EQUAL","!=":"NOT_EQUAL","array-contains":"ARRAY_CONTAINS",in:"IN","not-in":"NOT_IN","array-contains-any":"ARRAY_CONTAINS_ANY"},l4=function(t,e){this.databaseId=t,this.I=e};/**
 * This class generates JsonObject values for the Datastore API suitable for
 * sending to either GRPC stub methods or via the JSON/HTTP REST API.
 *
 * The serializer supports both Protobuf.js and Proto3 JSON formats. By
 * setting `useProto3Json` to true, the serializer will use the Proto3 JSON
 * format.
 *
 * For a description of the Proto3 JSON format check
 * https://developers.google.com/protocol-buffers/docs/proto3#json
 *
 * TODO(klimt): We can remove the databaseId argument if we keep the full
 * resource name in documents.
 *//**
 * Returns a value for a Date that's appropriate to put into a proto.
 */function l3(t,e){return t.I?new Date(1e3*e.seconds).toISOString().replace(/\.\d*/,"").replace("Z","")+"."+("000000000"+e.nanoseconds).slice(-9)+"Z":{seconds:""+e.seconds,nanos:e.nanoseconds}}/**
 * Returns a value for bytes that's appropriate to put in a proto.
 *
 * Visible for testing.
 */function l6(t,e){return t.I?e.toBase64():e.toUint8Array()}function l5(t){var e;return t||cY(),c1.fromTimestamp((e=hn(t),new c0(e.seconds,e.nanos)))}function l8(t,e){return new c5(["projects",t.projectId,"databases",t.database]).child("documents").child(e).canonicalString()}function l7(t){var e=c5.fromString(t);return fg(e)||cY(),e}function l9(t,e){return l8(t.databaseId,e.path)}function ft(t,e){var n=l7(e);if(n.get(1)!==t.databaseId.projectId)throw new cK(cB.INVALID_ARGUMENT,"Tried to deserialize key from different project: "+n.get(1)+" vs "+t.databaseId.projectId);if(n.get(3)!==t.databaseId.database)throw new cK(cB.INVALID_ARGUMENT,"Tried to deserialize key from different database: "+n.get(3)+" vs "+t.databaseId.database);return new hh(fi(n))}function fe(t,e){return l8(t.databaseId,e)}function fn(t){var e=l7(t);// In v1beta1 queries for collections at the root did not have a trailing
// "/documents". In v1 all resource paths contain "/documents". Preserve the
// ability to read the v1beta1 form for compatibility with queries persisted
// in the local target cache.
return 4===e.length?c5.emptyPath():fi(e)}function fr(t){return new c5(["projects",t.databaseId.projectId,"databases",t.databaseId.database]).canonicalString()}function fi(t){return t.length>4&&"documents"===t.get(4)||cY(),t.popFirst(5)/** Creates a Document proto from key and fields (but no create/update time) */}function fo(t,e,n){return{name:l9(t,e),fields:n.value.mapValue.fields}}function fa(t,e,n){var r=ft(t,e.name),i=l5(e.updateTime),o=new hE({mapValue:{fields:e.fields}}),a=hS.newFoundDocument(r,i,o);return n&&a.setHasCommittedMutations(),n?a.setHasCommittedMutations():a}function fs(t,e){var n,r,i,o;if(e instanceof lm)n={update:fo(t,e.key,e.value)};else if(e instanceof lR)n={delete:l9(t,e.key)};else if(e instanceof ly)n={update:fo(t,e.key,e.data),updateMask:(i=e.fieldMask,o=[],i.fields.forEach(function(t){return o.push(t.canonicalString())}),{fieldPaths:o})};else{if(!(e instanceof lx))return cY();n={verify:l9(t,e.key)}}return e.fieldTransforms.length>0&&(n.updateTransforms=e.fieldTransforms.map(function(t){return function(t,e){var n=e.transform;if(n instanceof le)return{fieldPath:e.field.canonicalString(),setToServerValue:"REQUEST_TIME"};if(n instanceof ln)return{fieldPath:e.field.canonicalString(),appendMissingElements:{values:n.elements}};if(n instanceof li)return{fieldPath:e.field.canonicalString(),removeAllFromArray:{values:n.elements}};if(n instanceof la)return{fieldPath:e.field.canonicalString(),increment:n.A};throw cY()}(0,t)})),e.precondition.isNone||(n.currentDocument=void 0!==(r=e.precondition).updateTime?{updateTime:l3(t,r.updateTime.toTimestamp())}:void 0!==r.exists?{exists:r.exists}:cY()),n}function fu(t,e){var n=e.currentDocument?void 0!==(a=e.currentDocument).updateTime?ll.updateTime(l5(a.updateTime)):void 0!==a.exists?ll.exists(a.exists):ll.none():ll.none(),r=e.updateTransforms?e.updateTransforms.map(function(e){return function(t,e){var n=null;if("setToServerValue"in e)"REQUEST_TIME"===e.setToServerValue||cY(),n=new le;else if("appendMissingElements"in e){var r=e.appendMissingElements.values||[];n=new ln(r)}else if("removeAllFromArray"in e){var i=e.removeAllFromArray.values||[];n=new li(i)}else"increment"in e?n=new la(t,e.increment):cY();var o=c7.fromServerFormat(e.fieldPath);return new lc(o,n)}(t,e)}):[];if(e.update){e.update.name;var i=ft(t,e.update.name),o=new hE({mapValue:{fields:e.update.fields}});if(e.updateMask){var a,s,u=(s=e.updateMask.fieldPaths||[],new c9(s.map(function(t){return c7.fromServerFormat(t)})));return new ly(i,o,u,n,r)}return new lm(i,o,n,r)}if(e.delete){var c=ft(t,e.delete);return new lR(c,n)}if(e.verify){var h=ft(t,e.verify);return new lx(h,n)}return cY()}function fc(t,e){return{documents:[fe(t,e.path)]}}function fh(t,e){// Dissect the path into parent, collectionId, and optional key filter.
var n,r={structuredQuery:{}},i=e.path;null!==e.collectionGroup?(r.parent=fe(t,i),r.structuredQuery.from=[{collectionId:e.collectionGroup,allDescendants:!0}]):(r.parent=fe(t,i.popLast()),r.structuredQuery.from=[{collectionId:i.lastSegment()}]);var o=function(t){if(0!==t.length){var e=t.map(function(t){// visible for testing
return function(t){if("=="/* EQUAL */===t.op){if(hw(t.value))return{unaryFilter:{field:fd(t.field),op:"IS_NAN"}};if(hb(t.value))return{unaryFilter:{field:fd(t.field),op:"IS_NULL"}}}else if("!="/* NOT_EQUAL */===t.op){if(hw(t.value))return{unaryFilter:{field:fd(t.field),op:"IS_NOT_NAN"}};if(hb(t.value))return{unaryFilter:{field:fd(t.field),op:"IS_NOT_NULL"}}}return{fieldFilter:{field:fd(t.field),op:l2[t.op],value:t.value}}}(t)});return 1===e.length?e[0]:{compositeFilter:{op:"AND",filters:e}}}}(e.filters);o&&(r.structuredQuery.where=o);var a=function(t){if(0!==t.length)return t.map(function(t){// visible for testing
return{field:fd(t.field),direction:l1[t.dir]}})}(e.orderBy);a&&(r.structuredQuery.orderBy=a);var s=(n=e.limit,t.I||hs(n)?n:{value:n});return null!==s&&(r.structuredQuery.limit=s),e.startAt&&(r.structuredQuery.startAt=ff(e.startAt)),e.endAt&&(r.structuredQuery.endAt=ff(e.endAt)),r}function fl(t){var e,n,r,i,o,a,s,u,c,h=fn(t.parent),l=t.structuredQuery,f=l.from?l.from.length:0,p=null;if(f>0){1===f||cY();var d=l.from[0];d.allDescendants?p=d.collectionId:h=h.child(d.collectionId)}var v=[];l.where&&(v=function t(e){return e?void 0!==e.unaryFilter?[function(t){switch(t.unaryFilter.op){case"IS_NAN":var e=fv(t.unaryFilter.field);return hx.create(e,"=="/* EQUAL */,{doubleValue:NaN});case"IS_NULL":var n=fv(t.unaryFilter.field);return hx.create(n,"=="/* EQUAL */,{nullValue:"NULL_VALUE"});case"IS_NOT_NAN":var r=fv(t.unaryFilter.field);return hx.create(r,"!="/* NOT_EQUAL */,{doubleValue:NaN});case"IS_NOT_NULL":var i=fv(t.unaryFilter.field);return hx.create(i,"!="/* NOT_EQUAL */,{nullValue:"NULL_VALUE"});default:return cY()}}(e)]:void 0!==e.fieldFilter?[hx.create(fv(e.fieldFilter.field),function(t){switch(t){case"EQUAL":return"=="/* EQUAL */;case"NOT_EQUAL":return"!="/* NOT_EQUAL */;case"GREATER_THAN":return">"/* GREATER_THAN */;case"GREATER_THAN_OR_EQUAL":return">="/* GREATER_THAN_OR_EQUAL */;case"LESS_THAN":return"<"/* LESS_THAN */;case"LESS_THAN_OR_EQUAL":return"<="/* LESS_THAN_OR_EQUAL */;case"ARRAY_CONTAINS":return"array-contains"/* ARRAY_CONTAINS */;case"IN":return"in"/* IN */;case"NOT_IN":return"not-in"/* NOT_IN */;case"ARRAY_CONTAINS_ANY":return"array-contains-any"/* ARRAY_CONTAINS_ANY */;default:return cY()}}(e.fieldFilter.op),e.fieldFilter.value)]:void 0!==e.compositeFilter?e.compositeFilter.filters.map(function(e){return t(e)}).reduce(function(t,e){return t.concat(e)}):cY():[]}(l.where));var g=[];l.orderBy&&(g=l.orderBy.map(function(t){return new hB(fv(t.field),function(t){switch(t){case"ASCENDING":return"asc"/* ASCENDING */;case"DESCENDING":return"desc"/* DESCENDING */;default:return}}(t.direction))}));var m=null;l.limit&&(m=hs(n="object"==typeof(e=l.limit)?e.value:e)?null:n);var y=null;l.startAt&&(y=fp(l.startAt));var _=null;return l.endAt&&(_=fp(l.endAt)),r=h,i=p,o=g,a=v,s=m,u=y,c=_,new hW(r,i,o,a,s,"F"/* First */,u,c)}function ff(t){return{before:t.before,values:t.position}}function fp(t){var e=!!t.before,n=t.values||[];return new hq(n,e)}function fd(t){return{fieldPath:t.canonicalString()}}function fv(t){return c7.fromServerFormat(t.fieldPath)}function fg(t){// Resource names have at least 4 components (project ID, database ID)
return t.length>=4&&"projects"===t.get(0)&&"databases"===t.get(2)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Encodes a resource path into a IndexedDb-compatible string form.
 */function fm(t){for(var e,n,r="",i=0;i<t.length;i++)r.length>0&&(r+="\x01\x01"),r=/** Encodes a single segment of a resource path into the given result */function(t,e){for(var n=e,r=t.length,i=0;i<r;i++){var o=t.charAt(i);switch(o){case"\x00":n+="\x01\x10";break;case"\x01":n+="\x01\x11";break;default:n+=o}}return n}(t.get(i),r);return r+"\x01\x01"}/**
 * Decodes the given IndexedDb-compatible string form of a resource path into
 * a ResourcePath instance. Note that this method is not suitable for use with
 * decoding resource names from the server; those are One Platform format
 * strings.
 */function fy(t){// Event the empty path must encode as a path of at least length 2. A path
// with exactly 2 must be the empty path.
var e=t.length;if(e>=2||cY(),2===e)return"\x01"===t.charAt(0)&&"\x01"===t.charAt(1)||cY(),c5.emptyPath();// Escape characters cannot exist past the second-to-last position in the
// source value.
for(var n=e-2,r=[],i="",o=0;o<e;){// The last two characters of a valid encoded path must be a separator, so
// there must be an end to this segment.
var a=t.indexOf("\x01",o);switch((a<0||a>n)&&cY(),t.charAt(a+1)){case"\x01":var s=t.substring(o,a),u=void 0;0===i.length?// and \001
u=s:(u=i+=s,i=""),r.push(u);break;case"\x10":i+=t.substring(o,a)+"\x00";break;case"\x11":// The escape character can be used in the output to encode itself.
i+=t.substring(o,a+1);break;default:cY()}o=a+2}return new c5(r)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Schema Version for the Web client:
 * 1.  Initial version including Mutation Queue, Query Cache, and Remote
 *     Document Cache
 * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No
 *     longer required because migration 3 unconditionally clears it.
 * 3.  Dropped and re-created Query Cache to deal with cache corruption related
 *     to limbo resolution. Addresses
 *     https://github.com/firebase/firebase-ios-sdk/issues/1548
 * 4.  Multi-Tab Support.
 * 5.  Removal of held write acks.
 * 6.  Create document global for tracking document cache size.
 * 7.  Ensure every cached document has a sentinel row with a sequence number.
 * 8.  Add collection-parent index for Collection Group queries.
 * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than
 *     an auto-incrementing ID. This is required for Index-Free queries.
 * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.
 * 11. Add bundles and named_queries for bundle support.
 *//**
 * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.
 */var f_=function(t,e){this.seconds=t,this.nanoseconds=e},fb=function(t,/** Whether to allow shared access from multiple tabs. */e,n){this.ownerId=t,this.allowTabSynchronization=e,this.leaseTimestampMs=n};/**
 * A singleton object to be stored in the 'owner' store in IndexedDb.
 *
 * A given database can have a single primary tab assigned at a given time. That
 * tab must validate that it is still holding the primary lease before every
 * operation that requires locked access. The primary tab should regularly
 * write an updated timestamp to this lease to prevent other tabs from
 * "stealing" the primary lease
 *//**
 * Name of the IndexedDb object store.
 *
 * Note that the name 'owner' is chosen to ensure backwards compatibility with
 * older clients that only supported single locked access to the persistence
 * layer.
 */fb.store="owner",/**
     * The key string used for the single object that exists in the
     * DbPrimaryClient store.
     */fb.key="owner";/**
 * An object to be stored in the 'mutationQueues' store in IndexedDb.
 *
 * Each user gets a single queue of MutationBatches to apply to the server.
 * DbMutationQueue tracks the metadata about the queue.
 */var fw=function(/**
     * The normalized user ID to which this queue belongs.
     */t,/**
     * An identifier for the highest numbered batch that has been acknowledged
     * by the server. All MutationBatches in this queue with batchIds less
     * than or equal to this value are considered to have been acknowledged by
     * the server.
     *
     * NOTE: this is deprecated and no longer used by the code.
     */e,/**
     * A stream token that was previously sent by the server.
     *
     * See StreamingWriteRequest in datastore.proto for more details about
     * usage.
     *
     * After sending this token, earlier tokens may not be used anymore so
     * only a single stream token is retained.
     *
     * NOTE: this is deprecated and no longer used by the code.
     */n){this.userId=t,this.lastAcknowledgedBatchId=e,this.lastStreamToken=n};/** Name of the IndexedDb object store.  */fw.store="mutationQueues",/** Keys are automatically assigned via the userId property. */fw.keyPath="userId";/**
 * An object to be stored in the 'mutations' store in IndexedDb.
 *
 * Represents a batch of user-level mutations intended to be sent to the server
 * in a single write. Each user-level batch gets a separate DbMutationBatch
 * with a new batchId.
 */var fI=function(/**
     * The normalized user ID to which this batch belongs.
     */t,/**
     * An identifier for this batch, allocated using an auto-generated key.
     */e,/**
     * The local write time of the batch, stored as milliseconds since the
     * epoch.
     */n,/**
     * A list of "mutations" that represent a partial base state from when this
     * write batch was initially created. During local application of the write
     * batch, these baseMutations are applied prior to the real writes in order
     * to override certain document fields from the remote document cache. This
     * is necessary in the case of non-idempotent writes (e.g. `increment()`
     * transforms) to make sure that the local view of the modified documents
     * doesn't flicker if the remote document cache receives the result of the
     * non-idempotent write before the write is removed from the queue.
     *
     * These mutations are never sent to the backend.
     */r,/**
     * A list of mutations to apply. All mutations will be applied atomically.
     *
     * Mutations are serialized via toMutation().
     */i){this.userId=t,this.batchId=e,this.localWriteTimeMs=n,this.baseMutations=r,this.mutations=i};/** Name of the IndexedDb object store.  */fI.store="mutations",/** Keys are automatically assigned via the userId, batchId properties. */fI.keyPath="batchId",/** The index name for lookup of mutations by user. */fI.userMutationsIndex="userMutationsIndex",/** The user mutations index is keyed by [userId, batchId] pairs. */fI.userMutationsKeyPath=["userId","batchId"];/**
 * An object to be stored in the 'documentMutations' store in IndexedDb.
 *
 * A manually maintained index of all the mutation batches that affect a given
 * document key. The rows in this table are references based on the contents of
 * DbMutationBatch.mutations.
 */var fT=/** @class */function(){function t(){}/**
     * Creates a [userId] key for use in the DbDocumentMutations index to iterate
     * over all of a user's document mutations.
     */return t.prefixForUser=function(t){return[t]},/**
     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations
     * index to iterate over all at document mutations for a given path or lower.
     */t.prefixForPath=function(t,e){return[t,fm(e)]},/**
     * Creates a full index key of [userId, encodedPath, batchId] for inserting
     * and deleting into the DbDocumentMutations index.
     */t.key=function(t,e,n){return[t,fm(e),n]},t}();fT.store="documentMutations",/**
     * Because we store all the useful information for this store in the key,
     * there is no useful information to store as the value. The raw (unencoded)
     * path cannot be stored because IndexedDb doesn't store prototype
     * information.
     */fT.PLACEHOLDER=new fT;/**
 * Represents the known absence of a document at a particular version.
 * Stored in IndexedDb as part of a DbRemoteDocument object.
 */var fE=function(t,e){this.path=t,this.readTime=e},fS=function(t,e){this.path=t,this.version=e},fC=// (once as part of the primary key, once - partly - as `parentPath` and once
// inside the encoded documents). During our next migration, we should
// rewrite the primary key as parentPath + document ID which would allow us
// to drop one value.
function(/**
     * Set to an instance of DbUnknownDocument if the data for a document is
     * not known, but it is known that a document exists at the specified
     * version (e.g. it had a successful update applied to it)
     */t,/**
     * Set to an instance of a DbNoDocument if it is known that no document
     * exists.
     */e,/**
     * Set to an instance of a Document if there's a cached version of the
     * document.
     */n,/**
     * Documents that were written to the remote document store based on
     * a write acknowledgment are marked with `hasCommittedMutations`. These
     * documents are potentially inconsistent with the backend's copy and use
     * the write's commit version as their document version.
     */r,/**
     * When the document was read from the backend. Undefined for data written
     * prior to schema version 9.
     */i,/**
     * The path of the collection this document is part of. Undefined for data
     * written prior to schema version 9.
     */o){this.unknownDocument=t,this.noDocument=e,this.document=n,this.hasCommittedMutations=r,this.readTime=i,this.parentPath=o};/**
 * Represents a document that is known to exist but whose data is unknown.
 * Stored in IndexedDb as part of a DbRemoteDocument object.
 */fC.store="remoteDocuments",/**
     * An index that provides access to all entries sorted by read time (which
     * corresponds to the last modification time of each row).
     *
     * This index is used to provide a changelog for Multi-Tab.
     */fC.readTimeIndex="readTimeIndex",fC.readTimeIndexPath="readTime",/**
     * An index that provides access to documents in a collection sorted by read
     * time.
     *
     * This index is used to allow the RemoteDocumentCache to fetch newly changed
     * documents in a collection.
     */fC.collectionReadTimeIndex="collectionReadTimeIndex",fC.collectionReadTimeIndexPath=["parentPath","readTime"];/**
 * Contains a single entry that has metadata about the remote document cache.
 */var fk=/**
     * @param byteSize - Approximately the total size in bytes of all the
     * documents in the document cache.
     */function(t){this.byteSize=t};fk.store="remoteDocumentGlobal",fk.key="remoteDocumentGlobalKey";/**
 * An object to be stored in the 'targets' store in IndexedDb.
 *
 * This is based on and should be kept in sync with the proto used in the iOS
 * client.
 *
 * Each query the client listens to against the server is tracked on disk so
 * that the query can be efficiently resumed on restart.
 */var fN=function(/**
     * An auto-generated sequential numeric identifier for the query.
     *
     * Queries are stored using their canonicalId as the key, but these
     * canonicalIds can be quite long so we additionally assign a unique
     * queryId which can be used by referenced data structures (e.g.
     * indexes) to minimize the on-disk cost.
     */t,/**
     * The canonical string representing this query. This is not unique.
     */e,/**
     * The last readTime received from the Watch Service for this query.
     *
     * This is the same value as TargetChange.read_time in the protos.
     */n,/**
     * An opaque, server-assigned token that allows watching a query to be
     * resumed after disconnecting without retransmitting all the data
     * that matches the query. The resume token essentially identifies a
     * point in time from which the server should resume sending results.
     *
     * This is related to the snapshotVersion in that the resumeToken
     * effectively also encodes that value, but the resumeToken is opaque
     * and sometimes encodes additional information.
     *
     * A consequence of this is that the resumeToken should be used when
     * asking the server to reason about where this client is in the watch
     * stream, but the client should use the snapshotVersion for its own
     * purposes.
     *
     * This is the same value as TargetChange.resume_token in the protos.
     */r,/**
     * A sequence number representing the last time this query was
     * listened to, used for garbage collection purposes.
     *
     * Conventionally this would be a timestamp value, but device-local
     * clocks are unreliable and they must be able to create new listens
     * even while disconnected. Instead this should be a monotonically
     * increasing number that's incremented on each listen call.
     *
     * This is different from the queryId since the queryId is an
     * immutable identifier assigned to the Query on first use while
     * lastListenSequenceNumber is updated every time the query is
     * listened to.
     */i,/**
     * Denotes the maximum snapshot version at which the associated query view
     * contained no limbo documents.  Undefined for data written prior to
     * schema version 9.
     */o,/**
     * The query for this target.
     *
     * Because canonical ids are not unique we must store the actual query. We
     * use the proto to have an object we can persist without having to
     * duplicate translation logic to and from a `Query` object.
     */a){this.targetId=t,this.canonicalId=e,this.readTime=n,this.resumeToken=r,this.lastListenSequenceNumber=i,this.lastLimboFreeSnapshotVersion=o,this.query=a};fN.store="targets",/** Keys are automatically assigned via the targetId property. */fN.keyPath="targetId",/** The name of the queryTargets index. */fN.queryTargetsIndexName="queryTargetsIndex",/**
     * The index of all canonicalIds to the targets that they match. This is not
     * a unique mapping because canonicalId does not promise a unique name for all
     * possible queries, so we append the targetId to make the mapping unique.
     */fN.queryTargetsKeyPath=["canonicalId","targetId"];/**
 * An object representing an association between a target and a document, or a
 * sentinel row marking the last sequence number at which a document was used.
 * Each document cached must have a corresponding sentinel row before lru
 * garbage collection is enabled.
 *
 * The target associations and sentinel rows are co-located so that orphaned
 * documents and their sequence numbers can be identified efficiently via a scan
 * of this store.
 */var fA=function(/**
     * The targetId identifying a target or 0 for a sentinel row.
     */t,/**
     * The path to the document, as encoded in the key.
     */e,/**
     * If this is a sentinel row, this should be the sequence number of the last
     * time the document specified by `path` was used. Otherwise, it should be
     * `undefined`.
     */n){this.targetId=t,this.path=e,this.sequenceNumber=n};/** Name of the IndexedDb object store.  */fA.store="targetDocuments",/** Keys are automatically assigned via the targetId, path properties. */fA.keyPath=["targetId","path"],/** The index name for the reverse index. */fA.documentTargetsIndex="documentTargetsIndex",/** We also need to create the reverse index for these properties. */fA.documentTargetsKeyPath=["path","targetId"];/**
 * A record of global state tracked across all Targets, tracked separately
 * to avoid the need for extra indexes.
 *
 * This should be kept in-sync with the proto used in the iOS client.
 */var fR=function(/**
     * The highest numbered target id across all targets.
     *
     * See DbTarget.targetId.
     */t,/**
     * The highest numbered lastListenSequenceNumber across all targets.
     *
     * See DbTarget.lastListenSequenceNumber.
     */e,/**
     * A global snapshot version representing the last consistent snapshot we
     * received from the backend. This is monotonically increasing and any
     * snapshots received from the backend prior to this version (e.g. for
     * targets resumed with a resumeToken) should be suppressed (buffered)
     * until the backend has caught up to this snapshot version again. This
     * prevents our cache from ever going backwards in time.
     */n,/**
     * The number of targets persisted.
     */r){this.highestTargetId=t,this.highestListenSequenceNumber=e,this.lastRemoteSnapshotVersion=n,this.targetCount=r};/**
 * The key string used for the single object that exists in the
 * DbTargetGlobal store.
 */fR.key="targetGlobalKey",fR.store="targetGlobal";/**
 * An object representing an association between a Collection id (e.g. 'messages')
 * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.
 * This is used to efficiently find all collections to query when performing
 * a Collection Group query.
 */var fx=function(/**
     * The collectionId (e.g. 'messages')
     */t,/**
     * The path to the parent (either a document location or an empty path for
     * a root-level collection).
     */e){this.collectionId=t,this.parent=e};/** Name of the IndexedDb object store. */fx.store="collectionParents",/** Keys are automatically assigned via the collectionId, parent properties. */fx.keyPath=["collectionId","parent"];/**
 * A record of the metadata state of each client.
 *
 * PORTING NOTE: This is used to synchronize multi-tab state and does not need
 * to be ported to iOS or Android.
 */var fP=function(// "lastProcessedDocumentChangeId". Don't use anymore.
/** The auto-generated client id assigned at client startup. */t,/** The last time this state was updated. */e,/** Whether the client's network connection is enabled. */n,/** Whether this client is running in a foreground tab. */r){this.clientId=t,this.updateTimeMs=e,this.networkEnabled=n,this.inForeground=r};/** Name of the IndexedDb object store. */fP.store="clientMetadata",/** Keys are automatically assigned via the clientId properties. */fP.keyPath="clientId";/**
 * A object representing a bundle loaded by the SDK.
 */var fD=function(/** The ID of the loaded bundle. */t,/** The create time of the loaded bundle. */e,/** The schema version of the loaded bundle. */n){this.bundleId=t,this.createTime=e,this.version=n};/** Name of the IndexedDb object store. */fD.store="bundles",fD.keyPath="bundleId";/**
 * A object representing a named query loaded by the SDK via a bundle.
 */var fO=function(/** The name of the query. */t,/** The read time of the results saved in the bundle from the named query. */e,/** The query saved in the bundle. */n){this.name=t,this.readTime=e,this.bundledQuery=n};/** Name of the IndexedDb object store. */fO.store="namedQueries",fO.keyPath="name";// Visible for testing
var fL=Q(Q([],Q(Q([],Q(Q([],Q(Q([],[fw.store,fI.store,fT.store,fC.store,fN.store,fb.store,fR.store,fA.store]),[fP.store])),[fk.store])),[fx.store])),[fD.store,fO.store]),fM="The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.",fF=/** @class */function(){function t(){this.onCommittedListeners=[]}return t.prototype.addOnCommittedListener=function(t){this.onCommittedListeners.push(t)},t.prototype.raiseOnCommittedEvent=function(){this.onCommittedListeners.forEach(function(t){return t()})},t}(),fj=function(){var t=this;this.promise=new Promise(function(e,n){t.resolve=e,t.reject=n})},fU=/** @class */function(){function t(t){var e=this;// NOTE: next/catchCallback will always point to our own wrapper functions,
// not the user's raw next() or catch() callbacks.
this.nextCallback=null,this.catchCallback=null,this.result=void 0,this.error=void 0,this.isDone=!1,// chaining.
this.callbackAttached=!1,t(function(t){e.isDone=!0,e.result=t,e.nextCallback&&// value should be defined unless T is Void, but we can't express
// that in the type system.
e.nextCallback(t)},function(t){e.isDone=!0,e.error=t,e.catchCallback&&e.catchCallback(t)})}return t.prototype.catch=function(t){return this.next(void 0,t)},t.prototype.next=function(e,n){var r=this;return this.callbackAttached&&cY(),this.callbackAttached=!0,this.isDone?this.error?this.wrapFailure(n,this.error):this.wrapSuccess(e,this.result):new t(function(t,i){r.nextCallback=function(n){r.wrapSuccess(e,n).next(t,i)},r.catchCallback=function(e){r.wrapFailure(n,e).next(t,i)}})},t.prototype.toPromise=function(){var t=this;return new Promise(function(e,n){t.next(e,n)})},t.prototype.wrapUserFunction=function(e){try{var n=e();return n instanceof t?n:t.resolve(n)}catch(e){return t.reject(e)}},t.prototype.wrapSuccess=function(e,n){return e?this.wrapUserFunction(function(){return e(n)}):t.resolve(n)},t.prototype.wrapFailure=function(e,n){return e?this.wrapUserFunction(function(){return e(n)}):t.reject(n)},t.resolve=function(e){return new t(function(t,n){t(e)})},t.reject=function(e){return new t(function(t,n){n(e)})},t.waitFor=function(// eslint-disable-next-line @typescript-eslint/no-explicit-any
e){return new t(function(t,n){var r=0,i=0,o=!1;e.forEach(function(e){++r,e.next(function(){++i,o&&i===r&&t()},function(t){return n(t)})}),o=!0,i===r&&t()})},/**
     * Given an array of predicate functions that asynchronously evaluate to a
     * boolean, implements a short-circuiting `or` between the results. Predicates
     * will be evaluated until one of them returns `true`, then stop. The final
     * result will be whether any of them returned `true`.
     */t.or=function(e){for(var n=t.resolve(!1),r=function(e){n=n.next(function(n){return n?t.resolve(n):e()})},i=0;i<e.length;i++)r(e[i]);return n},t.forEach=function(t,e){var n=this,r=[];return t.forEach(function(t,i){r.push(e.call(n,t,i))}),this.waitFor(r)},t}(),fq=/** @class */function(){function t(t,e){var n=this;this.action=t,this.transaction=e,this.aborted=!1,/**
             * A `Promise` that resolves with the result of the IndexedDb transaction.
             */this.ft=new fj,this.transaction.oncomplete=function(){n.ft.resolve()},this.transaction.onabort=function(){e.error?n.ft.reject(new fK(t,e.error)):n.ft.resolve()},this.transaction.onerror=function(e){var r=fQ(e.target.error);n.ft.reject(new fK(t,r))}}return t.open=function(e,n,r,i){try{return new t(n,e.transaction(i,r))}catch(t){throw new fK(n,t)}},Object.defineProperty(t.prototype,"dt",{get:function(){return this.ft.promise},enumerable:!1,configurable:!0}),t.prototype.abort=function(t){t&&this.ft.reject(t),this.aborted||(cz("SimpleDb","Aborting transaction:",t?t.message:"Client-initiated abort"),this.aborted=!0,this.transaction.abort())},/**
     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All
     * operations performed on the SimpleDbStore happen within the context of this
     * transaction and it cannot be used anymore once the transaction is
     * completed.
     *
     * Note that we can't actually enforce that the KeyType and ValueType are
     * correct, but they allow type safety through the rest of the consuming code.
     */t.prototype.store=function(t){var e=this.transaction.objectStore(t);return new fW(e)},t}(),fV=/** @class */function(){/*
     * Creates a new SimpleDb wrapper for IndexedDb database `name`.
     *
     * Note that `version` must not be a downgrade. IndexedDB does not support
     * downgrading the schema version. We currently do not support any way to do
     * versioning outside of IndexedDB's versioning mechanism, as only
     * version-upgrade transactions are allowed to do things like create
     * objectstores.
     */function t(e,n,r){this.name=e,this.version=n,this.wt=r,// bug we're checking for should exist in iOS >= 12.2 and < 13, but for
// whatever reason it's much harder to hit after 12.2 so we only proactively
// log on 12.2.
12.2===t._t(ts())&&cG("Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.")}/** Deletes the specified database. */return t.delete=function(t){return cz("SimpleDb","Removing database:",t),fz(window.indexedDB.deleteDatabase(t)).toPromise()},/** Returns true if IndexedDB is available in the current environment. */t.yt=function(){if("undefined"==typeof indexedDB)return!1;if(t.gt())return!0;// We extensively use indexed array values and compound keys,
// which IE and Edge do not support. However, they still have indexedDB
// defined on the window, so we need to check for them here and make sure
// to return that persistence is not enabled for those browsers.
// For tracking support of this feature, see here:
// https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/
// Check the UA string to find out the browser.
var e=ts(),n=t._t(e),r=t.Et(e);// IE 10
// ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';
// IE 11
// ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';
// Edge
// ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,
// like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';
// iOS Safari: Disable for users running iOS version < 10.
return!(e.indexOf("MSIE ")>0||e.indexOf("Trident/")>0||e.indexOf("Edge/")>0||0<n&&n<10||0<r&&r<4.5)},/**
     * Returns true if the backing IndexedDB store is the Node IndexedDBShim
     * (see https://github.com/axemclion/IndexedDBShim).
     */t.gt=function(){return void 0!==en&&"YES"===({}).Tt},/** Helper to get a typed SimpleDbStore from a transaction. */t.It=function(t,e){return t.store(e)},/** Parse User Agent to determine iOS version. Returns -1 if not found. */t._t=function(t){var e=t.match(/i(?:phone|pad|pod) os ([\d_]+)/i);return Number(e?e[1].split("_").slice(0,2).join("."):"-1")},/** Parse User Agent to determine Android version. Returns -1 if not found. */t.Et=function(t){var e=t.match(/Android ([\d.]+)/i);return Number(e?e[1].split(".").slice(0,2).join("."):"-1")},/**
     * Opens the specified database, creating or upgrading it if necessary.
     */t.prototype.At=function(t){return H(this,void 0,void 0,function(){var e,n=this;return W(this,function(r){switch(r.label){case 0:return this.db?[3/*break*/,2]:(cz("SimpleDb","Opening database:",this.name),e=this,[4/*yield*/,new Promise(function(e,r){// TODO(mikelehen): Investigate browser compatibility.
// https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB
// suggests IE9 and older WebKit browsers handle upgrade
// differently. They expect setVersion, as described here:
// https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion
var i=indexedDB.open(n.name,n.version);i.onsuccess=function(t){e(t.target.result)},i.onblocked=function(){r(new fK(t,"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."))},i.onerror=function(e){var n=e.target.error;"VersionError"===n.name?r(new cK(cB.FAILED_PRECONDITION,"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.")):r(new fK(t,n))},i.onupgradeneeded=function(t){cz("SimpleDb",'Database "'+n.name+'" requires upgrade from version:',t.oldVersion);var e=t.target.result;n.wt.Rt(e,i.transaction,t.oldVersion,n.version).next(function(){cz("SimpleDb","Database upgrade to version "+n.version+" complete")})}})]);case 1:e.db=r.sent(),r.label=2;case 2:return[2/*return*/,(this.bt&&(this.db.onversionchange=function(t){return n.bt(t)}),this.db)]}})})},t.prototype.vt=function(t){this.bt=t,this.db&&(this.db.onversionchange=function(e){return t(e)})},t.prototype.runTransaction=function(t,e,n,r){return H(this,void 0,void 0,function(){var i,o,a,s,u;return W(this,function(c){switch(c.label){case 0:i="readonly"===e,o=0,a=function(){var e,a,u,c,h;return W(this,function(l){switch(l.label){case 0:++o,l.label=1;case 1:return l.trys.push([1,4,,5]),[4/*yield*/,s.At(t)];case 2:// Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
// fire), but still return the original transactionFnResult back to the
// caller.
return s.db=l.sent(),a=r(e=fq.open(s.db,t,i?"readonly":"readwrite",n)).catch(function(t){// Abort the transaction if there was an error.
return e.abort(t),fU.reject(t)}).toPromise(),u={},a.catch(function(){}),[4/*yield*/,e.dt];case 3:return[2/*return*/,(u.value=// fire), but still return the original transactionFnResult back to the
// caller.
(l.sent(),a),u)];case 4:return h="FirebaseError"!==(c=l.sent()).name&&o<3,cz("SimpleDb","Transaction failed with error:",c.message,"Retrying:",h),s.close(),h?[3/*break*/,5]:[2/*return*/,{value:Promise.reject(c)}];case 5:return[2/*return*/]}})},s=this,c.label=1;case 1:return[5/*yield**/,a()];case 2:if("object"==typeof(u=c.sent()))return[2/*return*/,u.value];c.label=3;case 3:return[3/*break*/,1];case 4:return[2/*return*/]}})})},t.prototype.close=function(){this.db&&this.db.close(),this.db=void 0},t}(),fB=/** @class */function(){function t(t){this.Pt=t,this.Vt=!1,this.St=null}return Object.defineProperty(t.prototype,"isDone",{get:function(){return this.Vt},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"Dt",{get:function(){return this.St},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"cursor",{set:function(t){this.Pt=t},enumerable:!1,configurable:!0}),/**
     * This function can be called to stop iteration at any point.
     */t.prototype.done=function(){this.Vt=!0},/**
     * This function can be called to skip to that next key, which could be
     * an index or a primary key.
     */t.prototype.Ct=function(t){this.St=t},/**
     * Delete the current cursor value from the object store.
     *
     * NOTE: You CANNOT do this with a keysOnly query.
     */t.prototype.delete=function(){return fz(this.Pt.delete())},t}(),fK=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this,cB.UNAVAILABLE,"IndexedDB transaction '"+e+"' failed: "+n)||this).name="IndexedDbTransactionError",r}return B(e,t),e}(cK);// V2 is no longer usable (see comment at top of file)
// Visible for testing
/**
 * A base class representing a persistence transaction, encapsulating both the
 * transaction's sequence numbers as well as a list of onCommitted listeners.
 *
 * When you call Persistence.runTransaction(), it will create a transaction and
 * pass it to your callback. You then pass it to any method that operates
 * on persistence.
 *//** Verifies whether `e` is an IndexedDbTransactionError. */function fH(t){// Use name equality, as instanceof checks on errors don't work with errors
// that wrap other errors.
return"IndexedDbTransactionError"===t.name}/**
 * A wrapper around an IDBObjectStore providing an API that:
 *
 * 1) Has generic KeyType / ValueType parameters to provide strongly-typed
 * methods for acting against the object store.
 * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every
 * method return a PersistencePromise instead.
 * 3) Provides a higher-level API to avoid needing to do excessive wrapping of
 * intermediate IndexedDB types (IDBCursorWithValue, etc.)
 */var fW=/** @class */function(){function t(t){this.store=t}return t.prototype.put=function(t,e){var n;return void 0!==e?(cz("SimpleDb","PUT",this.store.name,t,e),n=this.store.put(e,t)):(cz("SimpleDb","PUT",this.store.name,"<auto-key>",t),n=this.store.put(t)),fz(n)},/**
     * Adds a new value into an Object Store and returns the new key. Similar to
     * IndexedDb's `add()`, this method will fail on primary key collisions.
     *
     * @param value - The object to write.
     * @returns The key of the value to add.
     */t.prototype.add=function(t){return cz("SimpleDb","ADD",this.store.name,t,t),fz(this.store.add(t))},/**
     * Gets the object with the specified key from the specified store, or null
     * if no object exists with the specified key.
     *
     * @key The key of the object to get.
     * @returns The object with the specified key or null if no object exists.
     */t.prototype.get=function(t){var e=this;// We're doing an unsafe cast to ValueType.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
return fz(this.store.get(t)).next(function(n){// Normalize nonexistence to null.
return void 0===n&&(n=null),cz("SimpleDb","GET",e.store.name,t,n),n})},t.prototype.delete=function(t){return cz("SimpleDb","DELETE",this.store.name,t),fz(this.store.delete(t))},/**
     * If we ever need more of the count variants, we can add overloads. For now,
     * all we need is to count everything in a store.
     *
     * Returns the number of rows in the store.
     */t.prototype.count=function(){return cz("SimpleDb","COUNT",this.store.name),fz(this.store.count())},t.prototype.Nt=function(t,e){var n=this.cursor(this.options(t,e)),r=[];return this.xt(n,function(t,e){r.push(e)}).next(function(){return r})},t.prototype.kt=function(t,e){cz("SimpleDb","DELETE ALL",this.store.name);var n=this.options(t,e);n.Ft=!1;var r=this.cursor(n);return this.xt(r,function(t,e,n){return n.delete()})},t.prototype.$t=function(t,e){e?n=t:(n={},e=t);var n,r=this.cursor(n);return this.xt(r,e)},/**
     * Iterates over a store, but waits for the given callback to complete for
     * each entry before iterating the next entry. This allows the callback to do
     * asynchronous work to determine if this iteration should continue.
     *
     * The provided callback should return `true` to continue iteration, and
     * `false` otherwise.
     */t.prototype.Ot=function(t){var e=this.cursor({});return new fU(function(n,r){e.onerror=function(t){r(fQ(t.target.error))},e.onsuccess=function(e){var r=e.target.result;r?t(r.primaryKey,r.value).next(function(t){t?r.continue():n()}):n()}})},t.prototype.xt=function(t,e){var n=[];return new fU(function(r,i){t.onerror=function(t){i(t.target.error)},t.onsuccess=function(t){var i=t.target.result;if(i){var o=new fB(i),a=e(i.primaryKey,i.value,o);if(a instanceof fU){var s=a.catch(function(t){return o.done(),fU.reject(t)});n.push(s)}o.isDone?r():null===o.Dt?i.continue():i.continue(o.Dt)}else r()}}).next(function(){return fU.waitFor(n)})},t.prototype.options=function(t,e){var n;return void 0!==t&&("string"==typeof t?n=t:e=t),{index:n,range:e}},t.prototype.cursor=function(t){var e="next";if(t.reverse&&(e="prev"),t.index){var n=this.store.index(t.index);return t.Ft?n.openKeyCursor(t.range,e):n.openCursor(t.range,e)}return this.store.openCursor(t.range,e)},t}();/**
 * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror
 * handlers to resolve / reject the PersistencePromise as appropriate.
 */function fz(t){return new fU(function(e,n){t.onsuccess=function(t){e(t.target.result)},t.onerror=function(t){n(fQ(t.target.error))}})}// Guard so we only report the error once.
var fG=!1;function fQ(t){var e=fV._t(ts());if(e>=12.2&&e<13){var n="An internal error was encountered in the Indexed Database server";if(t.message.indexOf(n)>=0){// Wrap error in a more descriptive one.
var r=new cK("internal","IOS_INDEXEDDB_BUG1: IndexedDb has thrown '"+n+"'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");return fG||(fG=!0,// potentially catch.
setTimeout(function(){throw r},0)),r}}return t}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var f$=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this)||this).Mt=e,r.currentSequenceNumber=n,r}return B(e,t),e}(fF);function fY(t,e){return fV.It(t.Mt,e)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A batch of mutations that will be sent as one unit to the backend.
 */var fX=/** @class */function(){/**
     * @param batchId - The unique ID of this mutation batch.
     * @param localWriteTime - The original write time of this mutation.
     * @param baseMutations - Mutations that are used to populate the base
     * values when this mutation is applied locally. This can be used to locally
     * overwrite values that are persisted in the remote document cache. Base
     * mutations are never sent to the backend.
     * @param mutations - The user-provided mutations in this mutation batch.
     * User-provided mutations are applied both locally and remotely on the
     * backend.
     */function t(t,e,n,r){this.batchId=t,this.localWriteTime=e,this.baseMutations=n,this.mutations=r/**
     * Applies all the mutations in this MutationBatch to the specified document
     * to compute the state of the remote document
     *
     * @param document - The document to apply mutations to.
     * @param batchResult - The result of applying the MutationBatch to the
     * backend.
     */}return t.prototype.applyToRemoteDocument=function(t,e){for(var n=e.mutationResults,r=0;r<this.mutations.length;r++){var i=this.mutations[r];i.key.isEqual(t.key)&&/**
 * Applies this mutation to the given document for the purposes of computing a
 * new remote document. If the input document doesn't match the expected state
 * (e.g. it is invalid or outdated), the document type may transition to
 * unknown.
 *
 * @param mutation - The mutation to apply.
 * @param document - The document to mutate. The input document can be an
 *     invalid document if the client has no knowledge of the pre-mutation state
 *     of the document.
 * @param mutationResult - The result of applying the mutation from the backend.
 */function(t,e,n){var r,i;t instanceof lm?(r=t.value.clone(),i=lb(t.fieldTransforms,e,n.transformResults),r.setAll(i),e.convertToFoundDocument(n.version,r).setHasCommittedMutations()):t instanceof ly?function(t,e,n){if(lf(t.precondition,e)){var r=lb(t.fieldTransforms,e,n.transformResults),i=e.data;i.setAll(l_(t)),i.setAll(r),e.convertToFoundDocument(n.version,i).setHasCommittedMutations()}else e.convertToUnknownDocument(n.version)}(t,e,n):function(t,e,n){// Unlike applyToLocalView, if we're applying a mutation to a remote
// document the server has accepted the mutation so the precondition must
// have held.
e.convertToNoDocument(n.version).setHasCommittedMutations()}(0,e,n)}(i,t,n[r])}},/**
     * Computes the local view of a document given all the mutations in this
     * batch.
     *
     * @param document - The document to apply mutations to.
     */t.prototype.applyToLocalView=function(t){// First, apply the base state. This allows us to apply non-idempotent
// transform against a consistent set of values.
for(var e,n=0,r=this.baseMutations;n<r.length;n++)(e=r[n]).key.isEqual(t.key)&&ld(e,t,this.localWriteTime);// Second, apply all user-provided mutations.
for(var i=0,o=this.mutations;i<o.length;i++)(e=o[i]).key.isEqual(t.key)&&ld(e,t,this.localWriteTime)},/**
     * Computes the local view for all provided documents given the mutations in
     * this batch.
     */t.prototype.applyToLocalDocumentSet=function(t){var e=this;// TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations
// directly (as done in `applyToLocalView()`), we can reduce the complexity
// to O(n).
this.mutations.forEach(function(n){var r=t.get(n.key);// TODO(mutabledocuments): This method should take a MutableDocumentMap
// and we should remove this cast.
e.applyToLocalView(r),r.isValidDocument()||r.convertToNoDocument(c1.min())})},t.prototype.keys=function(){return this.mutations.reduce(function(t,e){return t.add(e.key)},lH())},t.prototype.isEqual=function(t){return this.batchId===t.batchId&&cZ(this.mutations,t.mutations,function(t,e){return lv(t,e)})&&cZ(this.baseMutations,t.baseMutations,function(t,e){return lv(t,e)})},t}(),fJ=/** @class */function(){function t(t,e,n,/**
     * A pre-computed mapping from each mutated document to the resulting
     * version.
     */r){this.batch=t,this.commitVersion=e,this.mutationResults=n,this.docVersions=r/**
     * Creates a new MutationBatchResult for the given batch and results. There
     * must be one result for each mutation in the batch. This static factory
     * caches a document=&gt;version mapping (docVersions).
     */}return t.from=function(e,n,r){e.mutations.length===r.length||cY();for(var i=lB,o=e.mutations,a=0;a<o.length;a++)i=i.insert(o[a].key,r[a].version);return new t(e,n,r,i)},t}(),fZ=/** @class */function(){function t(/** The target being listened to. */t,/**
     * The target ID to which the target corresponds; Assigned by the
     * LocalStore for user listens and by the SyncEngine for limbo watches.
     */e,/** The purpose of the target. */n,/**
     * The sequence number of the last transaction during which this target data
     * was modified.
     */r,/** The latest snapshot version seen for this target. */i,o,a){void 0===i&&(i=c1.min()),void 0===o&&(o=c1.min()),void 0===a&&(a=ht.EMPTY_BYTE_STRING),this.target=t,this.targetId=e,this.purpose=n,this.sequenceNumber=r,this.snapshotVersion=i,this.lastLimboFreeSnapshotVersion=o,this.resumeToken=a}/** Creates a new target data instance with an updated sequence number. */return t.prototype.withSequenceNumber=function(e){return new t(this.target,this.targetId,this.purpose,e,this.snapshotVersion,this.lastLimboFreeSnapshotVersion,this.resumeToken)},/**
     * Creates a new target data instance with an updated resume token and
     * snapshot version.
     */t.prototype.withResumeToken=function(e,n){return new t(this.target,this.targetId,this.purpose,this.sequenceNumber,n,this.lastLimboFreeSnapshotVersion,e)},/**
     * Creates a new target data instance with an updated last limbo free
     * snapshot version number.
     */t.prototype.withLastLimboFreeSnapshotVersion=function(e){return new t(this.target,this.targetId,this.purpose,this.sequenceNumber,this.snapshotVersion,e,this.resumeToken)},t}(),f0=function(t){this.Lt=t};/** The result of applying a mutation batch to the backend. *//** Decodes a remote document from storage locally to a Document. */function f1(t,e){if(e.document)return fa(t.Lt,e.document,!!e.hasCommittedMutations);if(e.noDocument){var n=hh.fromSegments(e.noDocument.path),r=f5(e.noDocument.readTime),i=hS.newNoDocument(n,r);return e.hasCommittedMutations?i.setHasCommittedMutations():i}if(e.unknownDocument){var o=hh.fromSegments(e.unknownDocument.path);return r=f5(e.unknownDocument.version),hS.newUnknownDocument(o,r)}return cY()}/** Encodes a document for storage locally. */function f2(t,e,n){var r=f4(n),i=e.key.path.popLast().toArray();if(e.isFoundDocument()){var o,a={name:l9(o=t.Lt,e.key),fields:e.data.value.mapValue.fields,updateTime:l3(o,e.version.toTimestamp())},s=e.hasCommittedMutations;return new fC(/* unknownDocument= */null,/* noDocument= */null,a,s,r,i)}if(e.isNoDocument()){var u=e.key.path.toArray(),c=f6(e.version);return s=e.hasCommittedMutations,new fC(/* unknownDocument= */null,new fE(u,c),/* document= */null,s,r,i)}if(e.isUnknownDocument()){var h=e.key.path.toArray(),l=f6(e.version);return new fC(new fS(h,l),/* noDocument= */null,/* document= */null,/* hasCommittedMutations= */!0,r,i)}return cY()}function f4(t){var e=t.toTimestamp();return[e.seconds,e.nanoseconds]}function f3(t){var e=new c0(t[0],t[1]);return c1.fromTimestamp(e)}function f6(t){var e=t.toTimestamp();return new f_(e.seconds,e.nanoseconds)}function f5(t){var e=new c0(t.seconds,t.nanoseconds);return c1.fromTimestamp(e)}/** Encodes a batch of mutations into a DbMutationBatch for local storage. *//** Decodes a DbMutationBatch into a MutationBatch */function f8(t,e){// Squash old transform mutations into existing patch or set mutations.
// The replacement of representing `transforms` with `update_transforms`
// on the SDK means that old `transform` mutations stored in IndexedDB need
// to be updated to `update_transforms`.
// TODO(b/174608374): Remove this code once we perform a schema migration.
for(var n=(e.baseMutations||[]).map(function(e){return fu(t.Lt,e)}),r=0;r<e.mutations.length-1;++r){var i=e.mutations[r];if(r+1<e.mutations.length&&void 0!==e.mutations[r+1].transform){var o=e.mutations[r+1];i.updateTransforms=o.transform.fieldTransforms,e.mutations.splice(r+1,1),++r}}var a=e.mutations.map(function(e){return fu(t.Lt,e)}),s=c0.fromMillis(e.localWriteTimeMs);return new fX(e.batchId,s,n,a)}/** Decodes a DbTarget into TargetData */function f7(t){var e,n,r=f5(t.readTime),i=void 0!==t.lastLimboFreeSnapshotVersion?f5(t.lastLimboFreeSnapshotVersion):c1.min();return void 0!==t.query.documents?(1===(n=t.query).documents.length||cY(),e=hZ(hz(fn(n.documents[0])))):e=hZ(fl(t.query)),new fZ(e,t.targetId,0/* Listen */,t.lastListenSequenceNumber,r,i,ht.fromBase64String(t.resumeToken))/** Encodes TargetData into a DbTarget for storage locally. */}function f9(t,e){var n,r=f6(e.snapshotVersion),i=f6(e.lastLimboFreeSnapshotVersion);n=hR(e.target)?fc(t.Lt,e.target):fh(t.Lt,e.target);// We can't store the resumeToken as a ByteString in IndexedDb, so we
// convert it to a base64 string for storage.
var o=e.resumeToken.toBase64();// lastListenSequenceNumber is always 0 until we do real GC.
return new fN(e.targetId,hN(e.target),r,o,e.sequenceNumber,i,n)}/**
 * A helper function for figuring out what kind of query has been stored.
 *//**
 * Encodes a `BundledQuery` from bundle proto to a Query object.
 *
 * This reconstructs the original query used to build the bundle being loaded,
 * including features exists only in SDKs (for example: limit-to-last).
 */function pt(t){var e=fl({parent:t.parent,structuredQuery:t.structuredQuery});return"LAST"===t.limitType?h0(e,e.limit,"L"/* Last */):e}/** Encodes a NamedQuery proto object to a NamedQuery model object. *//**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var pe=/** @class */function(){function t(){}return t.prototype.getBundleMetadata=function(t,e){return pn(t).get(e).next(function(t){if(t)return{id:t.bundleId,createTime:f5(t.createTime),version:t.version};/** Encodes a BundleMetadata to a DbBundle. */})},t.prototype.saveBundleMetadata=function(t,e){return pn(t).put({bundleId:e.id,createTime:f6(l5(e.createTime)),version:e.version});/** Encodes a DbNamedQuery to a NamedQuery. */},t.prototype.getNamedQuery=function(t,e){return pr(t).get(e).next(function(t){if(t)return{name:t.name,query:pt(t.bundledQuery),readTime:f5(t.readTime)};/** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */})},t.prototype.saveNamedQuery=function(t,e){return pr(t).put({name:e.name,readTime:f6(l5(e.readTime)),bundledQuery:e.bundledQuery})},t}();/**
 * Helper to get a typed SimpleDbStore for the bundles object store.
 */function pn(t){return fY(t,fD.store)}/**
 * Helper to get a typed SimpleDbStore for the namedQueries object store.
 */function pr(t){return fY(t,fO.store)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An in-memory implementation of IndexManager.
 */var pi=/** @class */function(){function t(){this.Bt=new po}return t.prototype.addToCollectionParentIndex=function(t,e){return this.Bt.add(e),fU.resolve()},t.prototype.getCollectionParents=function(t,e){return fU.resolve(this.Bt.getEntries(e))},t}(),po=/** @class */function(){function t(){this.index={}}// Returns false if the entry already existed.
return t.prototype.add=function(t){var e=t.lastSegment(),n=t.popLast(),r=this.index[e]||new lj(c5.comparator),i=!r.has(n);return this.index[e]=r.add(n),i},t.prototype.has=function(t){var e=t.lastSegment(),n=t.popLast(),r=this.index[e];return r&&r.has(n)},t.prototype.getEntries=function(t){return(this.index[t]||new lj(c5.comparator)).toArray()},t}(),pa=/** @class */function(){function t(){/**
         * An in-memory copy of the index entries we've already written since the SDK
         * launched. Used to avoid re-writing the same entry repeatedly.
         *
         * This is *NOT* a complete cache of what's in persistence and so can never be used to
         * satisfy reads.
         */this.qt=new po}/**
     * Adds a new entry to the collection parent index.
     *
     * Repeated calls for the same collectionPath should be avoided within a
     * transaction as IndexedDbIndexManager only caches writes once a transaction
     * has been committed.
     */return t.prototype.addToCollectionParentIndex=function(t,e){var n=this;if(!this.qt.has(e)){var r=e.lastSegment(),i=e.popLast();t.addOnCommittedListener(function(){// Add the collection to the in memory cache only if the transaction was
// successfully committed.
n.qt.add(e)});var o={collectionId:r,parent:fm(i)};return ps(t).put(o)}return fU.resolve()},t.prototype.getCollectionParents=function(t,e){var n=[],r=IDBKeyRange.bound([e,""],[e+"\x00",""],/*lowerOpen=*/!1,/*upperOpen=*/!0);return ps(t).Nt(r).next(function(t){for(var r=0;r<t.length;r++){var i=t[r];// This collectionId guard shouldn't be necessary (and isn't as long
// as we're running in a real browser), but there's a bug in
// indexeddbshim that breaks our range in our tests running in node:
// https://github.com/axemclion/IndexedDBShim/issues/334
if(i.collectionId!==e)break;n.push(fy(i.parent))}return n})},t}();/**
 * Internal implementation of the collection-parent index exposed by MemoryIndexManager.
 * Also used for in-memory caching by IndexedDbIndexManager and initial index population
 * in indexeddb_schema.ts
 *//**
 * Helper to get a typed SimpleDbStore for the collectionParents
 * document store.
 */function ps(t){return fY(t,fx.store)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var pu={didRun:!1,sequenceNumbersCollected:0,targetsRemoved:0,documentsRemoved:0},pc=/** @class */function(){function t(// threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.
t,e,// us from collecting a huge number of sequence numbers if the cache has grown very large.
n){this.cacheSizeCollectionThreshold=t,this.percentileToCollect=e,this.maximumSequenceNumbersToCollect=n}return t.withCacheSize=function(e){return new t(e,t.DEFAULT_COLLECTION_PERCENTILE,t.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT)},t}();/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Delete a mutation batch and the associated document mutations.
 * @returns A PersistencePromise of the document mutations that were removed.
 */function ph(t,e,n){var r=t.store(fI.store),i=t.store(fT.store),o=[],a=IDBKeyRange.only(n.batchId),s=0,u=r.$t({range:a},function(t,e,n){return s++,n.delete()});o.push(u.next(function(){1===s||cY()}));for(var c=[],h=0,l=n.mutations;h<l.length;h++){var f=l[h],p=fT.key(e,f.key.path,n.batchId);o.push(i.delete(p)),c.push(f.key)}return fU.waitFor(o).next(function(){return c})}/**
 * Returns an approximate size for the given document.
 */function pl(t){var e;if(!t)return 0;if(t.document)e=t.document;else if(t.unknownDocument)e=t.unknownDocument;else{if(!t.noDocument)throw cY();e=t.noDocument}return JSON.stringify(e).length}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** A mutation queue for a specific user, backed by IndexedDB. */pc.DEFAULT_COLLECTION_PERCENTILE=10,pc.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT=1e3,pc.DEFAULT=new pc(41943040,pc.DEFAULT_COLLECTION_PERCENTILE,pc.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT),pc.DISABLED=new pc(-1,0,0);var pf=/** @class */function(){function t(/**
     * The normalized userId (e.g. null UID => "" userId) used to store /
     * retrieve mutations.
     */t,e,n,r){this.userId=t,this.R=e,this.Ut=n,this.referenceDelegate=r,/**
             * Caches the document keys for pending mutation batches. If the mutation
             * has been removed from IndexedDb, the cached value may continue to
             * be used to retrieve the batch's document keys. To remove a cached value
             * locally, `removeCachedMutationKeys()` should be invoked either directly
             * or through `removeMutationBatches()`.
             *
             * With multi-tab, when the primary client acknowledges or rejects a mutation,
             * this cache is used by secondary clients to invalidate the local
             * view of the documents that were previously affected by the mutation.
             */// PORTING NOTE: Multi-tab only.
this.Kt={}/**
     * Creates a new mutation queue for the given user.
     * @param user - The user for which to create a mutation queue.
     * @param serializer - The serializer to use when persisting to IndexedDb.
     */}return t.Qt=function(e,n,r,i){// TODO(mcg): Figure out what constraints there are on userIDs
// In particular, are there any reserved characters? are empty ids allowed?
// For the moment store these together in the same mutations table assuming
// that empty userIDs aren't allowed.
return""!==e.uid||cY(),new t(e.isAuthenticated()?e.uid:"",n,r,i)},t.prototype.checkEmpty=function(t){var e=!0,n=IDBKeyRange.bound([this.userId,Number.NEGATIVE_INFINITY],[this.userId,Number.POSITIVE_INFINITY]);return pd(t).$t({index:fI.userMutationsIndex,range:n},function(t,n,r){e=!1,r.done()}).next(function(){return e})},t.prototype.addMutationBatch=function(t,e,n,r){var i=this,o=pv(t),a=pd(t);// The IndexedDb implementation in Chrome (and Firefox) does not handle
// compound indices that include auto-generated keys correctly. To ensure
// that the index entry is added correctly in all browsers, we perform two
// writes: The first write is used to retrieve the next auto-generated Batch
// ID, and the second write populates the index and stores the actual
// mutation batch.
// See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972
// We write an empty object to obtain key
// eslint-disable-next-line @typescript-eslint/no-explicit-any
return a.add({}).next(function(s){"number"==typeof s||cY();for(var u,c,h,l,f=new fX(s,e,n,r),p=(u=i.R,c=i.userId,h=f.baseMutations.map(function(t){return fs(u.Lt,t)}),l=f.mutations.map(function(t){return fs(u.Lt,t)}),new fI(c,f.batchId,f.localWriteTime.toMillis(),h,l)),d=[],v=new lj(function(t,e){return cJ(t.canonicalString(),e.canonicalString())}),g=0;g<r.length;g++){var m=r[g],y=fT.key(i.userId,m.key.path,s);v=v.add(m.key.path.popLast()),d.push(a.put(p)),d.push(o.put(y,fT.PLACEHOLDER))}return v.forEach(function(e){d.push(i.Ut.addToCollectionParentIndex(t,e))}),t.addOnCommittedListener(function(){i.Kt[s]=f.keys()}),fU.waitFor(d).next(function(){return f})})},t.prototype.lookupMutationBatch=function(t,e){var n=this;return pd(t).get(e).next(function(t){return t?(t.userId===n.userId||cY(),f8(n.R,t)):null})},/**
     * Returns the document keys for the mutation batch with the given batchId.
     * For primary clients, this method returns `null` after
     * `removeMutationBatches()` has been called. Secondary clients return a
     * cached result until `removeCachedMutationKeys()` is invoked.
     */// PORTING NOTE: Multi-tab only.
t.prototype.jt=function(t,e){var n=this;return this.Kt[e]?fU.resolve(this.Kt[e]):this.lookupMutationBatch(t,e).next(function(t){if(t){var r=t.keys();return n.Kt[e]=r,r}return null})},t.prototype.getNextMutationBatchAfterBatchId=function(t,e){var n=this,r=e+1,i=IDBKeyRange.lowerBound([this.userId,r]),o=null;return pd(t).$t({index:fI.userMutationsIndex,range:i},function(t,e,i){e.userId===n.userId&&(e.batchId>=r||cY(),o=f8(n.R,e)),i.done()}).next(function(){return o})},t.prototype.getHighestUnacknowledgedBatchId=function(t){var e=IDBKeyRange.upperBound([this.userId,Number.POSITIVE_INFINITY]),n=-1;return pd(t).$t({index:fI.userMutationsIndex,range:e,reverse:!0},function(t,e,r){n=e.batchId,r.done()}).next(function(){return n})},t.prototype.getAllMutationBatches=function(t){var e=this,n=IDBKeyRange.bound([this.userId,-1],[this.userId,Number.POSITIVE_INFINITY]);return pd(t).Nt(fI.userMutationsIndex,n).next(function(t){return t.map(function(t){return f8(e.R,t)})})},t.prototype.getAllMutationBatchesAffectingDocumentKey=function(t,e){var n=this,r=fT.prefixForPath(this.userId,e.path),i=IDBKeyRange.lowerBound(r),o=[];// Scan the document-mutation index starting with a prefix starting with
// the given documentKey.
return pv(t).$t({range:i},function(r,i,a){var s=r[0],u=r[1],c=r[2],h=fy(u);// Only consider rows matching exactly the specific key of
// interest. Note that because we order by path first, and we
// order terminators before path separators, we'll encounter all
// the index rows for documentKey contiguously. In particular, all
// the rows for documentKey will occur before any rows for
// documents nested in a subcollection beneath documentKey so we
// can stop as soon as we hit any such row.
if(s===n.userId&&e.path.isEqual(h))return pd(t).get(c).next(function(t){if(!t)throw cY();t.userId===n.userId||cY(),o.push(f8(n.R,t))});a.done()}).next(function(){return o})},t.prototype.getAllMutationBatchesAffectingDocumentKeys=function(t,e){var n=this,r=new lj(cJ),i=[];return e.forEach(function(e){var o=fT.prefixForPath(n.userId,e.path),a=IDBKeyRange.lowerBound(o),s=pv(t).$t({range:a},function(t,i,o){var a=t[0],s=t[1],u=t[2],c=fy(s);// Only consider rows matching exactly the specific key of
// interest. Note that because we order by path first, and we
// order terminators before path separators, we'll encounter all
// the index rows for documentKey contiguously. In particular, all
// the rows for documentKey will occur before any rows for
// documents nested in a subcollection beneath documentKey so we
// can stop as soon as we hit any such row.
a===n.userId&&e.path.isEqual(c)?r=r.add(u):o.done()});i.push(s)}),fU.waitFor(i).next(function(){return n.Wt(t,r)})},t.prototype.getAllMutationBatchesAffectingQuery=function(t,e){var n=this,r=e.path,i=r.length+1,o=fT.prefixForPath(this.userId,r),a=IDBKeyRange.lowerBound(o),s=new lj(cJ);return pv(t).$t({range:a},function(t,e,o){var a=t[0],u=t[1],c=t[2],h=fy(u);a===n.userId&&r.isPrefixOf(h)?// query path can't be matches. For example, a query on 'rooms'
// can't match the document /rooms/abc/messages/xyx.
// TODO(mcg): we'll need a different scanner when we implement
// ancestor queries.
h.length===i&&(s=s.add(c)):o.done()}).next(function(){return n.Wt(t,s)})},t.prototype.Wt=function(t,e){var n=this,r=[],i=[];// TODO(rockwood): Implement this using iterate.
return e.forEach(function(e){i.push(pd(t).get(e).next(function(t){if(null===t)throw cY();t.userId===n.userId||cY(),r.push(f8(n.R,t))}))}),fU.waitFor(i).next(function(){return r})},t.prototype.removeMutationBatch=function(t,e){var n=this;return ph(t.Mt,this.userId,e).next(function(r){return t.addOnCommittedListener(function(){n.Gt(e.batchId)}),fU.forEach(r,function(e){return n.referenceDelegate.markPotentiallyOrphaned(t,e)})})},/**
     * Clears the cached keys for a mutation batch. This method should be
     * called by secondary clients after they process mutation updates.
     *
     * Note that this method does not have to be called from primary clients as
     * the corresponding cache entries are cleared when an acknowledged or
     * rejected batch is removed from the mutation queue.
     */// PORTING NOTE: Multi-tab only
t.prototype.Gt=function(t){delete this.Kt[t]},t.prototype.performConsistencyCheck=function(t){var e=this;return this.checkEmpty(t).next(function(n){if(!n)return fU.resolve();// Verify that there are no entries in the documentMutations index if
// the queue is empty.
var r=IDBKeyRange.lowerBound(fT.prefixForUser(e.userId)),i=[];return pv(t).$t({range:r},function(t,n,r){if(t[0]===e.userId){var o=fy(t[1]);i.push(o)}else r.done()}).next(function(){0===i.length||cY()})})},t.prototype.containsKey=function(t,e){return pp(t,this.userId,e)},/** Returns the mutation queue's metadata from IndexedDb. */t.prototype.zt=function(t){var e=this;return pg(t).get(this.userId).next(function(t){return t||new fw(e.userId,-1,/*lastStreamToken=*/"")})},t}();/**
 * @returns true if the mutation queue for the given user contains a pending
 *         mutation for the given key.
 */function pp(t,e,n){var r=fT.prefixForPath(e,n.path),i=r[1],o=IDBKeyRange.lowerBound(r),a=!1;return pv(t).$t({range:o,Ft:!0},function(t,n,r){var o=t[0],s=t[1];/*batchID*/t[2],o===e&&s===i&&(a=!0),r.done()}).next(function(){return a})}/** Returns true if any mutation queue contains the given document. *//**
 * Helper to get a typed SimpleDbStore for the mutations object store.
 */function pd(t){return fY(t,fI.store)}/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */function pv(t){return fY(t,fT.store)}/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */function pg(t){return fY(t,fw.store)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Offset to ensure non-overlapping target ids. *//**
 * Generates monotonically increasing target IDs for sending targets to the
 * watch stream.
 *
 * The client constructs two generators, one for the target cache, and one for
 * for the sync engine (to generate limbo documents targets). These
 * generators produce non-overlapping IDs (by using even and odd IDs
 * respectively).
 *
 * By separating the target ID space, the query cache can generate target IDs
 * that persist across client restarts, while sync engine can independently
 * generate in-memory target IDs that are transient and can be reused after a
 * restart.
 */var pm=/** @class */function(){function t(t){this.Ht=t}return t.prototype.next=function(){return this.Ht+=2,this.Ht},t.Jt=function(){// The target cache generator must return '2' in its first call to `next()`
// as there is no differentiation in the protocol layer between an unset
// number and the number '0'. If we were to sent a target with target ID
// '0', the backend would consider it unset and replace it with its own ID.
return new t(0)},t.Yt=function(){// Sync engine assigns target IDs for limbo document detection.
return new t(-1)},t}(),py=/** @class */function(){function t(t,e){this.referenceDelegate=t,this.R=e}// PORTING NOTE: We don't cache global metadata for the target cache, since
// some of it (in particular `highestTargetId`) can be modified by secondary
// tabs. We could perhaps be more granular (and e.g. still cache
// `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go
// to IndexedDb whenever we need to read metadata. We can revisit if it turns
// out to have a meaningful performance impact.
return t.prototype.allocateTargetId=function(t){var e=this;return this.Xt(t).next(function(n){var r=new pm(n.highestTargetId);return n.highestTargetId=r.next(),e.Zt(t,n).next(function(){return n.highestTargetId})})},t.prototype.getLastRemoteSnapshotVersion=function(t){return this.Xt(t).next(function(t){return c1.fromTimestamp(new c0(t.lastRemoteSnapshotVersion.seconds,t.lastRemoteSnapshotVersion.nanoseconds))})},t.prototype.getHighestSequenceNumber=function(t){return this.Xt(t).next(function(t){return t.highestListenSequenceNumber})},t.prototype.setTargetsMetadata=function(t,e,n){var r=this;return this.Xt(t).next(function(i){return i.highestListenSequenceNumber=e,n&&(i.lastRemoteSnapshotVersion=n.toTimestamp()),e>i.highestListenSequenceNumber&&(i.highestListenSequenceNumber=e),r.Zt(t,i)})},t.prototype.addTargetData=function(t,e){var n=this;return this.te(t,e).next(function(){return n.Xt(t).next(function(r){return r.targetCount+=1,n.ee(e,r),n.Zt(t,r)})})},t.prototype.updateTargetData=function(t,e){return this.te(t,e)},t.prototype.removeTargetData=function(t,e){var n=this;return this.removeMatchingKeysForTargetId(t,e.targetId).next(function(){return p_(t).delete(e.targetId)}).next(function(){return n.Xt(t)}).next(function(e){return e.targetCount>0||cY(),e.targetCount-=1,n.Zt(t,e)})},/**
     * Drops any targets with sequence number less than or equal to the upper bound, excepting those
     * present in `activeTargetIds`. Document associations for the removed targets are also removed.
     * Returns the number of targets removed.
     */t.prototype.removeTargets=function(t,e,n){var r=this,i=0,o=[];return p_(t).$t(function(a,s){var u=f7(s);u.sequenceNumber<=e&&null===n.get(u.targetId)&&(i++,o.push(r.removeTargetData(t,u)))}).next(function(){return fU.waitFor(o)}).next(function(){return i})},/**
     * Call provided function with each `TargetData` that we have cached.
     */t.prototype.forEachTarget=function(t,e){return p_(t).$t(function(t,n){e(f7(n))})},t.prototype.Xt=function(t){return pb(t).get(fR.key).next(function(t){return null!==t||cY(),t})},t.prototype.Zt=function(t,e){return pb(t).put(fR.key,e)},t.prototype.te=function(t,e){return p_(t).put(f9(this.R,e))},/**
     * In-place updates the provided metadata to account for values in the given
     * TargetData. Saving is done separately. Returns true if there were any
     * changes to the metadata.
     */t.prototype.ee=function(t,e){var n=!1;return t.targetId>e.highestTargetId&&(e.highestTargetId=t.targetId,n=!0),t.sequenceNumber>e.highestListenSequenceNumber&&(e.highestListenSequenceNumber=t.sequenceNumber,n=!0),n},t.prototype.getTargetCount=function(t){return this.Xt(t).next(function(t){return t.targetCount})},t.prototype.getTargetData=function(t,e){// Iterating by the canonicalId may yield more than one result because
// canonicalId values are not required to be unique per target. This query
// depends on the queryTargets index to be efficient.
var n=hN(e),r=IDBKeyRange.bound([n,Number.NEGATIVE_INFINITY],[n,Number.POSITIVE_INFINITY]),i=null;return p_(t).$t({range:r,index:fN.queryTargetsIndexName},function(t,n,r){var o=f7(n);// After finding a potential match, check that the target is
// actually equal to the requested target.
hA(e,o.target)&&(i=o,r.done())}).next(function(){return i})},t.prototype.addMatchingKeys=function(t,e,n){var r=this,i=[],o=pw(t);// PORTING NOTE: The reverse index (documentsTargets) is maintained by
// IndexedDb.
return e.forEach(function(e){var a=fm(e.path);i.push(o.put(new fA(n,a))),i.push(r.referenceDelegate.addReference(t,n,e))}),fU.waitFor(i)},t.prototype.removeMatchingKeys=function(t,e,n){var r=this,i=pw(t);// PORTING NOTE: The reverse index (documentsTargets) is maintained by
// IndexedDb.
return fU.forEach(e,function(e){var o=fm(e.path);return fU.waitFor([i.delete([n,o]),r.referenceDelegate.removeReference(t,n,e)])})},t.prototype.removeMatchingKeysForTargetId=function(t,e){var n=pw(t),r=IDBKeyRange.bound([e],[e+1],/*lowerOpen=*/!1,/*upperOpen=*/!0);return n.delete(r)},t.prototype.getMatchingKeysForTargetId=function(t,e){var n=IDBKeyRange.bound([e],[e+1],/*lowerOpen=*/!1,/*upperOpen=*/!0),r=pw(t),i=lH();return r.$t({range:n,Ft:!0},function(t,e,n){var r=fy(t[1]),o=new hh(r);i=i.add(o)}).next(function(){return i})},t.prototype.containsKey=function(t,e){var n=fm(e.path),r=IDBKeyRange.bound([n],[n+"\x00"],/*lowerOpen=*/!1,/*upperOpen=*/!0),i=0;return pw(t).$t({index:fA.documentTargetsIndex,Ft:!0,range:r},function(t,e,n){var r=t[0];t[1],// For the target cache, containing the document means the document is part of some
// target.
0!==r&&(i++,n.done())}).next(function(){return i>0})},/**
     * Looks up a TargetData entry by target ID.
     *
     * @param targetId - The target ID of the TargetData entry to look up.
     * @returns The cached TargetData entry, or null if the cache has no entry for
     * the target.
     */// PORTING NOTE: Multi-tab only.
t.prototype.lt=function(t,e){return p_(t).get(e).next(function(t){return t?f7(t):null})},t}();/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Helper to get a typed SimpleDbStore for the queries object store.
 */function p_(t){return fY(t,fN.store)}/**
 * Helper to get a typed SimpleDbStore for the target globals object store.
 */function pb(t){return fY(t,fR.store)}/**
 * Helper to get a typed SimpleDbStore for the document target object store.
 */function pw(t){return fY(t,fA.store)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Verifies the error thrown by a LocalStore operation. If a LocalStore
 * operation fails because the primary lease has been taken by another client,
 * we ignore the error (the persistence layer will immediately call
 * `applyPrimaryLease` to propagate the primary state change). All other errors
 * are re-thrown.
 *
 * @param err - An error returned by a LocalStore operation.
 * @returns A Promise that resolves after we recovered, or the original error.
 */function pI(t){return H(this,void 0,void 0,function(){return W(this,function(e){if(t.code!==cB.FAILED_PRECONDITION||t.message!==fM)throw t;return cz("LocalStore","Unexpectedly lost primary lease"),[2/*return*/]})})}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function pT(t,e){var n=t[0],r=t[1],i=e[0],o=e[1],a=cJ(n,i);return 0===a?cJ(r,o):a}/**
 * Used to calculate the nth sequence number. Keeps a rolling buffer of the
 * lowest n values passed to `addElement`, and finally reports the largest of
 * them in `maxValue`.
 */var pE=/** @class */function(){function t(t){this.ne=t,this.buffer=new lj(pT),this.se=0}return t.prototype.ie=function(){return++this.se},t.prototype.re=function(t){var e=[t,this.ie()];if(this.buffer.size<this.ne)this.buffer=this.buffer.add(e);else{var n=this.buffer.last();0>pT(e,n)&&(this.buffer=this.buffer.delete(n).add(e))}},Object.defineProperty(t.prototype,"maxValue",{get:function(){// Guaranteed to be non-empty. If we decide we are not collecting any
// sequence numbers, nthSequenceNumber below short-circuits. If we have
// decided that we are collecting n sequence numbers, it's because n is some
// percentage of the existing sequence numbers. That means we should never
// be in a situation where we are collecting sequence numbers but don't
// actually have any.
return this.buffer.last()[0]},enumerable:!1,configurable:!0}),t}(),pS=/** @class */function(){function t(t,e){this.garbageCollector=t,this.asyncQueue=e,this.oe=!1,this.ce=null}return t.prototype.start=function(t){-1!==this.garbageCollector.params.cacheSizeCollectionThreshold&&this.ue(t)},t.prototype.stop=function(){this.ce&&(this.ce.cancel(),this.ce=null)},Object.defineProperty(t.prototype,"started",{get:function(){return null!==this.ce},enumerable:!1,configurable:!0}),t.prototype.ue=function(t){var e=this,n=this.oe?3e5:6e4;cz("LruGarbageCollector","Garbage collection scheduled in "+n+"ms"),this.ce=this.asyncQueue.enqueueAfterDelay("lru_garbage_collection"/* LruGarbageCollection */,n,function(){return H(e,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:this.ce=null,this.oe=!0,n.label=1;case 1:return n.trys.push([1,3,,7]),[4/*yield*/,t.collectGarbage(this.garbageCollector)];case 2:return n.sent(),[3/*break*/,7];case 3:return fH(e=n.sent())?(cz("LruGarbageCollector","Ignoring IndexedDB error during garbage collection: ",e),[3/*break*/,6]):[3/*break*/,4];case 4:return[4/*yield*/,pI(e)];case 5:n.sent(),n.label=6;case 6:return[3/*break*/,7];case 7:return[4/*yield*/,this.ue(t)];case 8:return n.sent(),[2/*return*/]}})})})},t}(),pC=/** @class */function(){function t(t,e){this.ae=t,this.params=e}return t.prototype.calculateTargetCount=function(t,e){return this.ae.he(t).next(function(t){return Math.floor(e/100*t)})},t.prototype.nthSequenceNumber=function(t,e){var n=this;if(0===e)return fU.resolve(cV.o);var r=new pE(e);return this.ae.forEachTarget(t,function(t){return r.re(t.sequenceNumber)}).next(function(){return n.ae.le(t,function(t){return r.re(t)})}).next(function(){return r.maxValue})},t.prototype.removeTargets=function(t,e,n){return this.ae.removeTargets(t,e,n)},t.prototype.removeOrphanedDocuments=function(t,e){return this.ae.removeOrphanedDocuments(t,e)},t.prototype.collect=function(t,e){var n=this;return -1===this.params.cacheSizeCollectionThreshold?(cz("LruGarbageCollector","Garbage collection skipped; disabled"),fU.resolve(pu)):this.getCacheSize(t).next(function(r){return r<n.params.cacheSizeCollectionThreshold?(cz("LruGarbageCollector","Garbage collection skipped; Cache size "+r+" is lower than threshold "+n.params.cacheSizeCollectionThreshold),pu):n.fe(t,e)})},t.prototype.getCacheSize=function(t){return this.ae.getCacheSize(t)},t.prototype.fe=function(t,e){var n,r,i,o,a,s,u,c=this,h=Date.now();return this.calculateTargetCount(t,this.params.percentileToCollect).next(function(e){// Cap at the configured max
return e>c.params.maximumSequenceNumbersToCollect?(cz("LruGarbageCollector","Capping sequence numbers to collect down to the maximum of "+c.params.maximumSequenceNumbersToCollect+" from "+e),r=c.params.maximumSequenceNumbersToCollect):r=e,o=Date.now(),c.nthSequenceNumber(t,r)}).next(function(r){return n=r,a=Date.now(),c.removeTargets(t,n,e)}).next(function(e){return i=e,s=Date.now(),c.removeOrphanedDocuments(t,n)}).next(function(t){return u=Date.now(),cW()<=ad.DEBUG&&cz("LruGarbageCollector","LRU Garbage Collection\n	Counted targets in "+(o-h)+"ms\n	Determined least recently used "+r+" in "+(a-o)+"ms\n	Removed "+i+" targets in "+(s-a)+"ms\n	Removed "+t+" documents in "+(u-s)+"ms\nTotal Duration: "+(u-h)+"ms"),fU.resolve({didRun:!0,sequenceNumbersCollected:r,targetsRemoved:i,documentsRemoved:t})})},t}(),pk=/** @class */function(){function t(t,e){this.db=t,this.garbageCollector=new pC(this,e)}return t.prototype.he=function(t){var e=this.de(t);return this.db.getTargetCache().getTargetCount(t).next(function(t){return e.next(function(e){return t+e})})},t.prototype.de=function(t){var e=0;return this.le(t,function(t){e++}).next(function(){return e})},t.prototype.forEachTarget=function(t,e){return this.db.getTargetCache().forEachTarget(t,e)},t.prototype.le=function(t,e){return this.we(t,function(t,n){return e(n)})},t.prototype.addReference=function(t,e,n){return pN(t,n)},t.prototype.removeReference=function(t,e,n){return pN(t,n)},t.prototype.removeTargets=function(t,e,n){return this.db.getTargetCache().removeTargets(t,e,n)},t.prototype.markPotentiallyOrphaned=function(t,e){return pN(t,e)},/**
     * Returns true if anything would prevent this document from being garbage
     * collected, given that the document in question is not present in any
     * targets and has a sequence number less than or equal to the upper bound for
     * the collection run.
     */t.prototype._e=function(t,e){var n;return n=!1,pg(t).Ot(function(r){return pp(t,r,e).next(function(t){return t&&(n=!0),fU.resolve(!t)})}).next(function(){return n})},t.prototype.removeOrphanedDocuments=function(t,e){var n=this,r=this.db.getRemoteDocumentCache().newChangeBuffer(),i=[],o=0;return this.we(t,function(a,s){if(s<=e){var u=n._e(t,a).next(function(e){if(!e)// removing them.
return o++,r.getEntry(t,a).next(function(){return r.removeEntry(a),pw(t).delete([0,fm(a.path)])})});i.push(u)}}).next(function(){return fU.waitFor(i)}).next(function(){return r.apply(t)}).next(function(){return o})},t.prototype.removeTarget=function(t,e){var n=e.withSequenceNumber(t.currentSequenceNumber);return this.db.getTargetCache().updateTargetData(t,n)},t.prototype.updateLimboDocument=function(t,e){return pN(t,e)},/**
     * Call provided function for each document in the cache that is 'orphaned'. Orphaned
     * means not a part of any target, so the only entry in the target-document index for
     * that document will be the sentinel row (targetId 0), which will also have the sequence
     * number for the last time the document was accessed.
     */t.prototype.we=function(t,e){var n,r=pw(t),i=cV.o;return r.$t({index:fA.documentTargetsIndex},function(t,r){var o=t[0];t[1];var a=r.path,s=r.sequenceNumber;0===o?// last one must not be a member of any targets.
(i!==cV.o&&e(new hh(fy(n)),i),// might report, if we don't find any targets for this document.
// Note that the sequence number must be defined when the targetId
// is 0.
i=s,n=a):// this one since we found a target for it.
i=cV.o}).next(function(){// Since we report sequence numbers after getting to the next key, we
// need to check if the last key we iterated over was an orphaned
// document and report it.
i!==cV.o&&e(new hh(fy(n)),i)})},t.prototype.getCacheSize=function(t){return this.db.getRemoteDocumentCache().getSize(t)},t}();/**
 * This class is responsible for the scheduling of LRU garbage collection. It handles checking
 * whether or not GC is enabled, as well as which delay to use before the next run.
 */function pN(t,e){var n;return pw(t).put((n=t.currentSequenceNumber,new fA(0,fm(e.path),n)))}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A map implementation that uses objects as keys. Objects must have an
 * associated equals function and must be immutable. Entries in the map are
 * stored together with the key being produced from the mapKeyFn. This map
 * automatically handles collisions of keys.
 */var pA=/** @class */function(){function t(t,e){this.mapKeyFn=t,this.equalsFn=e,/**
             * The inner map for a key/value pair. Due to the possibility of collisions we
             * keep a list of entries that we do a linear search through to find an actual
             * match. Note that collisions should be rare, so we still expect near
             * constant time lookups in practice.
             */this.inner={}/** Get a value for this key, or undefined if it does not exist. */}return t.prototype.get=function(t){var e=this.mapKeyFn(t),n=this.inner[e];if(void 0!==n)for(var r=0;r<n.length;r++){var i=n[r],o=i[0],a=i[1];if(this.equalsFn(o,t))return a}},t.prototype.has=function(t){return void 0!==this.get(t)},/** Put this key and value in the map. */t.prototype.set=function(t,e){var n=this.mapKeyFn(t),r=this.inner[n];if(void 0!==r){for(var i=0;i<r.length;i++)if(this.equalsFn(r[i][0],t))return void(r[i]=[t,e]);r.push([t,e])}else this.inner[n]=[[t,e]]},/**
     * Remove this key from the map. Returns a boolean if anything was deleted.
     */t.prototype.delete=function(t){var e=this.mapKeyFn(t),n=this.inner[e];if(void 0===n)return!1;for(var r=0;r<n.length;r++)if(this.equalsFn(n[r][0],t))return 1===n.length?delete this.inner[e]:n.splice(r,1),!0;return!1},t.prototype.forEach=function(t){c4(this.inner,function(e,n){for(var r=0;r<n.length;r++){var i=n[r];t(i[0],i[1])}})},t.prototype.isEmpty=function(){return c3(this.inner)},t}(),pR=/** @class */function(){function t(){// A mapping of document key to the new cache entry that should be written (or null if any
// existing cache entry should be removed).
this.changes=new pA(function(t){return t.toString()},function(t,e){return t.isEqual(e)}),this.changesApplied=!1}return t.prototype.getReadTime=function(t){var e=this.changes.get(t);return e?e.readTime:c1.min()},/**
     * Buffers a `RemoteDocumentCache.addEntry()` call.
     *
     * You can only modify documents that have already been retrieved via
     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
     */t.prototype.addEntry=function(t,e){this.assertNotApplied(),this.changes.set(t.key,{document:t,readTime:e})},/**
     * Buffers a `RemoteDocumentCache.removeEntry()` call.
     *
     * You can only remove documents that have already been retrieved via
     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
     */t.prototype.removeEntry=function(t,e){void 0===e&&(e=null),this.assertNotApplied(),this.changes.set(t,{document:hS.newInvalidDocument(t),readTime:e})},/**
     * Looks up an entry in the cache. The buffered changes will first be checked,
     * and if no buffered change applies, this will forward to
     * `RemoteDocumentCache.getEntry()`.
     *
     * @param transaction - The transaction in which to perform any persistence
     *     operations.
     * @param documentKey - The key of the entry to look up.
     * @returns The cached document or an invalid document if we have nothing
     * cached.
     */t.prototype.getEntry=function(t,e){this.assertNotApplied();var n=this.changes.get(e);return void 0!==n?fU.resolve(n.document):this.getFromCache(t,e)},/**
     * Looks up several entries in the cache, forwarding to
     * `RemoteDocumentCache.getEntry()`.
     *
     * @param transaction - The transaction in which to perform any persistence
     *     operations.
     * @param documentKeys - The keys of the entries to look up.
     * @returns A map of cached documents, indexed by key. If an entry cannot be
     *     found, the corresponding key will be mapped to an invalid document.
     */t.prototype.getEntries=function(t,e){return this.getAllFromCache(t,e)},/**
     * Applies buffered changes to the underlying RemoteDocumentCache, using
     * the provided transaction.
     */t.prototype.apply=function(t){return this.assertNotApplied(),this.changesApplied=!0,this.applyChanges(t)},/** Helper to assert this.changes is not null  */t.prototype.assertNotApplied=function(){},t}(),px=/** @class */function(){/**
     * @param serializer - The document serializer.
     * @param indexManager - The query indexes that need to be maintained.
     */function t(t,e){this.R=t,this.Ut=e/**
     * Adds the supplied entries to the cache.
     *
     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
     */}return t.prototype.addEntry=function(t,e,n){return pO(t).put(pL(e),n)},/**
     * Removes a document from the cache.
     *
     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
     */t.prototype.removeEntry=function(t,e){var n=pO(t),r=pL(e);return n.delete(r)},/**
     * Updates the current cache size.
     *
     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the
     * cache's metadata.
     */t.prototype.updateMetadata=function(t,e){var n=this;return this.getMetadata(t).next(function(r){return r.byteSize+=e,n.me(t,r)})},t.prototype.getEntry=function(t,e){var n=this;return pO(t).get(pL(e)).next(function(t){return n.ye(e,t)})},/**
     * Looks up an entry in the cache.
     *
     * @param documentKey - The key of the entry to look up.
     * @returns The cached document entry and its size.
     */t.prototype.ge=function(t,e){var n=this;return pO(t).get(pL(e)).next(function(t){return{document:n.ye(e,t),size:pl(t)}})},t.prototype.getEntries=function(t,e){var n=this,r=lq;return this.pe(t,e,function(t,e){var i=n.ye(t,e);r=r.insert(t,i)}).next(function(){return r})},/**
     * Looks up several entries in the cache.
     *
     * @param documentKeys - The set of keys entries to look up.
     * @returns A map of documents indexed by key and a map of sizes indexed by
     *     key (zero if the document does not exist).
     */t.prototype.Ee=function(t,e){var n=this,r=lq,i=new lL(hh.comparator);return this.pe(t,e,function(t,e){var o=n.ye(t,e);r=r.insert(t,o),i=i.insert(t,pl(e))}).next(function(){return{documents:r,Te:i}})},t.prototype.pe=function(t,e,n){if(e.isEmpty())return fU.resolve();var r=IDBKeyRange.bound(e.first().path.toArray(),e.last().path.toArray()),i=e.getIterator(),o=i.getNext();return pO(t).$t({range:r},function(t,e,r){// Go through keys not found in cache.
for(var a=hh.fromSegments(t);o&&0>hh.comparator(o,a);)n(o,null),o=i.getNext();o&&o.isEqual(a)&&// Key found in cache.
(n(o,e),o=i.hasNext()?i.getNext():null),o?r.Ct(o.path.toArray()):r.done()}).next(function(){// The rest of the keys are not in the cache. One case where `iterate`
// above won't go through them is when the cache is empty.
for(;o;)n(o,null),o=i.hasNext()?i.getNext():null})},t.prototype.getDocumentsMatchingQuery=function(t,e,n){var r=this,i=lq,o=e.path.length+1,a={};if(n.isEqual(c1.min())){// Documents are ordered by key, so we can use a prefix scan to narrow
// down the documents we need to match the query against.
var s=e.path.toArray();a.range=IDBKeyRange.lowerBound(s)}else{// Execute an index-free query and filter by read time. This is safe
// since all document changes to queries that have a
// lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.
var u=e.path.toArray(),c=f4(n);a.range=IDBKeyRange.lowerBound([u,c],/* open= */!0),a.index=fC.collectionReadTimeIndex}return pO(t).$t(a,function(t,n,a){// The query is actually returning any path that starts with the query
// path prefix which may include documents in subcollections. For
// example, a query on 'rooms' will return rooms/abc/messages/xyx but we
// shouldn't match it. Fix this by discarding rows with document keys
// more than one segment longer than the query path.
if(t.length===o){var s=f1(r.R,n);e.path.isPrefixOf(s.key.path)?h3(e,s)&&(i=i.insert(s.key,s)):a.done()}}).next(function(){return i})},t.prototype.newChangeBuffer=function(t){return new pP(this,!!t&&t.trackRemovals)},t.prototype.getSize=function(t){return this.getMetadata(t).next(function(t){return t.byteSize})},t.prototype.getMetadata=function(t){return pD(t).get(fk.key).next(function(t){return t||cY(),t})},t.prototype.me=function(t,e){return pD(t).put(fk.key,e)},/**
     * Decodes `remoteDoc` and returns the document (or null, if the document
     * corresponds to the format used for sentinel deletes).
     */t.prototype.ye=function(t,e){if(e){var n=f1(this.R,e);// Whether the document is a sentinel removal and should only be used in the
// `getNewDocumentChanges()`
if(!n.isNoDocument()||!n.version.isEqual(c1.min()))return n}return hS.newInvalidDocument(t)},t}(),pP=/** @class */function(t){/**
     * @param documentCache - The IndexedDbRemoteDocumentCache to apply the changes to.
     * @param trackRemovals - Whether to create sentinel deletes that can be tracked by
     * `getNewDocumentChanges()`.
     */function e(e,n){var r=this;return(r=t.call(this)||this).Ie=e,r.trackRemovals=n,r.Ae=new pA(function(t){return t.toString()},function(t,e){return t.isEqual(e)}),r}return B(e,t),e.prototype.applyChanges=function(t){var e=this,n=[],r=0,i=new lj(function(t,e){return cJ(t.canonicalString(),e.canonicalString())});return this.changes.forEach(function(o,a){var s=e.Ae.get(o);if(a.document.isValidDocument()){var u=f2(e.Ie.R,a.document,e.getReadTime(o));i=i.add(o.path.popLast());var c=pl(u);r+=c-s,n.push(e.Ie.addEntry(t,o,u))}else if(r-=s,e.trackRemovals){// In order to track removals, we store a "sentinel delete" in the
// RemoteDocumentCache. This entry is represented by a NoDocument
// with a version of 0 and ignored by `maybeDecodeDocument()` but
// preserved in `getNewDocumentChanges()`.
var h=f2(e.Ie.R,hS.newNoDocument(o,c1.min()),e.getReadTime(o));n.push(e.Ie.addEntry(t,o,h))}else n.push(e.Ie.removeEntry(t,o))}),i.forEach(function(r){n.push(e.Ie.Ut.addToCollectionParentIndex(t,r))}),n.push(this.Ie.updateMetadata(t,r)),fU.waitFor(n)},e.prototype.getFromCache=function(t,e){var n=this;// Record the size of everything we load from the cache so we can compute a delta later.
return this.Ie.ge(t,e).next(function(t){return n.Ae.set(e,t.size),t.document})},e.prototype.getAllFromCache=function(t,e){var n=this;// Record the size of everything we load from the cache so we can compute
// a delta later.
return this.Ie.Ee(t,e).next(function(t){var e=t.documents;// Note: `getAllFromCache` returns two maps instead of a single map from
// keys to `DocumentSizeEntry`s. This is to allow returning the
// `MutableDocumentMap` directly, without a conversion.
return t.Te.forEach(function(t,e){n.Ae.set(t,e)}),e})},e}(pR);/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An in-memory buffer of entries to be written to a RemoteDocumentCache.
 * It can be used to batch up a set of changes to be written to the cache, but
 * additionally supports reading entries back with the `getEntry()` method,
 * falling back to the underlying RemoteDocumentCache if no entry is
 * buffered.
 *
 * Entries added to the cache *must* be read first. This is to facilitate
 * calculating the size delta of the pending changes.
 *
 * PORTING NOTE: This class was implemented then removed from other platforms.
 * If byte-counting ends up being needed on the other platforms, consider
 * porting this class as part of that implementation work.
 */function pD(t){return fY(t,fk.store)}/**
 * Helper to get a typed SimpleDbStore for the remoteDocuments object store.
 */function pO(t){return fY(t,fC.store)}function pL(t){return t.path.toArray()}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Performs database creation and schema upgrades. */var pM=/** @class */function(){function t(t){this.R=t}/**
     * Performs database creation and schema upgrades.
     *
     * Note that in production, this method is only ever used to upgrade the schema
     * to SCHEMA_VERSION. Different values of toVersion are only used for testing
     * and local feature development.
     */return t.prototype.Rt=function(t,e,n,r){var i=this;n<r&&n>=0&&r<=11||cY();var o=new fq("createOrUpgrade",e);n<1&&r>=1&&(function(t){t.createObjectStore(fb.store)}(t),t.createObjectStore(fw.store,{keyPath:fw.keyPath}),t.createObjectStore(fI.store,{keyPath:fI.keyPath,autoIncrement:!0}).createIndex(fI.userMutationsIndex,fI.userMutationsKeyPath,{unique:!0}),t.createObjectStore(fT.store),pF(t),function(t){t.createObjectStore(fC.store)}(t));// Migration 2 to populate the targetGlobal object no longer needed since
// migration 3 unconditionally clears it.
var a=fU.resolve();return n<3&&r>=3&&// Brand new clients don't need to drop and recreate--only clients that
// potentially have corrupt data.
(0!==n&&(t.deleteObjectStore(fA.store),t.deleteObjectStore(fN.store),t.deleteObjectStore(fR.store),pF(t)),a=a.next(function(){var t,e;/**
     * Creates the target global singleton row.
     *
     * @param txn - The version upgrade transaction for indexeddb
     */return t=o.store(fR.store),e=new fR(/*highestTargetId=*/0,/*lastListenSequenceNumber=*/0,c1.min().toTimestamp(),/*targetCount=*/0),t.put(fR.key,e)})),n<4&&r>=4&&(0!==n&&// Schema version 3 uses auto-generated keys to generate globally unique
// mutation batch IDs (this was previously ensured internally by the
// client). To migrate to the new schema, we have to read all mutations
// and write them back out. We preserve the existing batch IDs to guarantee
// consistency with other object stores. Any further mutation batch IDs will
// be auto-generated.
(a=a.next(function(){return o.store(fI.store).Nt().next(function(e){t.deleteObjectStore(fI.store),t.createObjectStore(fI.store,{keyPath:fI.keyPath,autoIncrement:!0}).createIndex(fI.userMutationsIndex,fI.userMutationsKeyPath,{unique:!0});var n=o.store(fI.store),r=e.map(function(t){return n.put(t)});return fU.waitFor(r)})})),a=a.next(function(){!function(t){t.createObjectStore(fP.store,{keyPath:fP.keyPath})}(t)})),n<5&&r>=5&&(a=a.next(function(){return i.Re(o)})),n<6&&r>=6&&(a=a.next(function(){return function(t){t.createObjectStore(fk.store)}(t),i.be(o)})),n<7&&r>=7&&(a=a.next(function(){return i.ve(o)})),n<8&&r>=8&&(a=a.next(function(){return i.Pe(t,o)})),n<9&&r>=9&&(a=a.next(function(){var n;// Multi-Tab used to manage its own changelog, but this has been moved
// to the DbRemoteDocument object store itself. Since the previous change
// log only contained transient data, we can drop its object store.
t.objectStoreNames.contains("remoteDocumentChanges")&&t.deleteObjectStore("remoteDocumentChanges"),(n=e.objectStore(fC.store)).createIndex(fC.readTimeIndex,fC.readTimeIndexPath,{unique:!1}),n.createIndex(fC.collectionReadTimeIndex,fC.collectionReadTimeIndexPath,{unique:!1})})),n<10&&r>=10&&(a=a.next(function(){return i.Ve(o)})),n<11&&r>=11&&(a=a.next(function(){(function(t){t.createObjectStore(fD.store,{keyPath:fD.keyPath})})(t),function(t){t.createObjectStore(fO.store,{keyPath:fO.keyPath})}(t)})),a},t.prototype.be=function(t){var e=0;return t.store(fC.store).$t(function(t,n){e+=pl(n)}).next(function(){var n=new fk(e);return t.store(fk.store).put(fk.key,n)})},t.prototype.Re=function(t){var e=this,n=t.store(fw.store),r=t.store(fI.store);return n.Nt().next(function(n){return fU.forEach(n,function(n){var i=IDBKeyRange.bound([n.userId,-1],[n.userId,n.lastAcknowledgedBatchId]);return r.Nt(fI.userMutationsIndex,i).next(function(r){return fU.forEach(r,function(r){r.userId===n.userId||cY();var i=f8(e.R,r);return ph(t,n.userId,i).next(function(){})})})})})},/**
     * Ensures that every document in the remote document cache has a corresponding sentinel row
     * with a sequence number. Missing rows are given the most recently used sequence number.
     */t.prototype.ve=function(t){var e=t.store(fA.store),n=t.store(fC.store);return t.store(fR.store).get(fR.key).next(function(t){var r=[];return n.$t(function(n,i){var o=new c5(n),a=[0,fm(o)];r.push(e.get(a).next(function(n){return n?fU.resolve():e.put(new fA(0,fm(o),t.highestListenSequenceNumber))}))}).next(function(){return fU.waitFor(r)})})},t.prototype.Pe=function(t,e){// Create the index.
t.createObjectStore(fx.store,{keyPath:fx.keyPath});var n=e.store(fx.store),r=new po,i=function(t){if(r.add(t)){var e=t.lastSegment(),i=t.popLast();return n.put({collectionId:e,parent:fm(i)})}};// Helper to add an index entry iff we haven't already written it.
// Index existing remote documents.
return e.store(fC.store).$t({Ft:!0},function(t,e){return i(new c5(t).popLast())}).next(function(){return e.store(fT.store).$t({Ft:!0},function(t,e){t[0];var n=t[1];return t[2],i(fy(n).popLast())})})},t.prototype.Ve=function(t){var e=this,n=t.store(fN.store);return n.$t(function(t,r){var i=f7(r),o=f9(e.R,i);return n.put(o)})},t}();function pF(t){t.createObjectStore(fA.store,{keyPath:fA.keyPath}).createIndex(fA.documentTargetsIndex,fA.documentTargetsKeyPath,{unique:!0}),t.createObjectStore(fN.store,{keyPath:fN.keyPath}).createIndex(fN.queryTargetsIndexName,fN.queryTargetsKeyPath,{unique:!0}),t.createObjectStore(fR.store)}var pj="Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.",pU=/** @class */function(){function t(/**
     * Whether to synchronize the in-memory state of multiple tabs and share
     * access to local persistence.
     */e,n,r,i,o,a,s,u,c,/**
     * If set to true, forcefully obtains database access. Existing tabs will
     * no longer be able to access IndexedDB.
     */h){var l,f;if(this.allowTabSynchronization=e,this.persistenceKey=n,this.clientId=r,this.Se=o,this.window=a,this.document=s,this.De=c,this.Ce=h,this.Ne=null,this.xe=!1,this.isPrimary=!1,this.networkEnabled=!0,/** Our window.unload handler, if registered. */this.ke=null,this.inForeground=!1,/** Our 'visibilitychange' listener if registered. */this.Fe=null,/** The client metadata refresh task. */this.$e=null,/** The last time we garbage collected the client metadata object store. */this.Oe=Number.NEGATIVE_INFINITY,/** A listener to notify on primary state changes. */this.Me=function(t){return Promise.resolve()},!t.yt())throw new cK(cB.UNIMPLEMENTED,"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.");this.referenceDelegate=new pk(this,i),this.Le=n+"main",this.R=new f0(u),this.Be=new fV(this.Le,11,new pM(this.R)),this.qe=new py(this.referenceDelegate,this.R),this.Ut=new pa,this.Ue=(l=this.R,f=this.Ut,new px(l,f)),this.Ke=new pe,this.window&&this.window.localStorage?this.Qe=this.window.localStorage:(this.Qe=null,!1===h&&cG("IndexedDbPersistence","LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page."))}/**
     * Attempt to start IndexedDb persistence.
     *
     * @returns Whether persistence was enabled.
     */return t.prototype.start=function(){var t=this;// NOTE: This is expected to fail sometimes (in the case of another tab
// already having the persistence lock), so it's the first thing we should
// do.
return this.je().then(function(){if(!t.isPrimary&&!t.allowTabSynchronization)// obtain the primary lease.
throw new cK(cB.FAILED_PRECONDITION,pj);return t.We(),t.Ge(),t.ze(),t.runTransaction("getHighestListenSequenceNumber","readonly",function(e){return t.qe.getHighestSequenceNumber(e)})}).then(function(e){t.Ne=new cV(e,t.De)}).then(function(){t.xe=!0}).catch(function(e){return t.Be&&t.Be.close(),Promise.reject(e)})},/**
     * Registers a listener that gets called when the primary state of the
     * instance changes. Upon registering, this listener is invoked immediately
     * with the current primary state.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */t.prototype.He=function(t){var e=this;return this.Me=function(n){return H(e,void 0,void 0,function(){return W(this,function(e){return this.started?[2/*return*/,t(n)]:[2/*return*/]})})},t(this.isPrimary)},/**
     * Registers a listener that gets called when the database receives a
     * version change event indicating that it has deleted.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */t.prototype.setDatabaseDeletedListener=function(t){var e=this;this.Be.vt(function(n){return H(e,void 0,void 0,function(){return W(this,function(e){switch(e.label){case 0:return null===n.newVersion?[4/*yield*/,t()]:[3/*break*/,2];case 1:e.sent(),e.label=2;case 2:return[2/*return*/]}})})})},/**
     * Adjusts the current network state in the client's metadata, potentially
     * affecting the primary lease.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */t.prototype.setNetworkEnabled=function(t){var e=this;this.networkEnabled!==t&&(this.networkEnabled=t,// lease update will be propagated via `primaryStateListener`.
this.Se.enqueueAndForget(function(){return H(e,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:return this.started?[4/*yield*/,this.je()]:[3/*break*/,2];case 1:t.sent(),t.label=2;case 2:return[2/*return*/]}})})}))},/**
     * Updates the client metadata in IndexedDb and attempts to either obtain or
     * extend the primary lease for the local client. Asynchronously notifies the
     * primary state listener if the client either newly obtained or released its
     * primary lease.
     */t.prototype.je=function(){var t=this;return this.runTransaction("updateClientMetadataAndTryBecomePrimary","readwrite",function(e){return pV(e).put(new fP(t.clientId,Date.now(),t.networkEnabled,t.inForeground)).next(function(){if(t.isPrimary)return t.Je(e).next(function(e){e||(t.isPrimary=!1,t.Se.enqueueRetryable(function(){return t.Me(!1)}))})}).next(function(){return t.Ye(e)}).next(function(n){return t.isPrimary&&!n?t.Xe(e).next(function(){return!1}):!!n&&t.Ze(e).next(function(){return!0})})}).catch(function(e){if(fH(e))// IndexedDB will verify the lease.
return cz("IndexedDbPersistence","Failed to extend owner lease: ",e),t.isPrimary;if(!t.allowTabSynchronization)throw e;return cz("IndexedDbPersistence","Releasing owner lease after error during lease refresh",e),/* isPrimary= */!1}).then(function(e){t.isPrimary!==e&&t.Se.enqueueRetryable(function(){return t.Me(e)}),t.isPrimary=e})},t.prototype.Je=function(t){var e=this;return pq(t).get(fb.key).next(function(t){return fU.resolve(e.tn(t))})},t.prototype.en=function(t){return pV(t).delete(this.clientId)},/**
     * If the garbage collection threshold has passed, prunes the
     * RemoteDocumentChanges and the ClientMetadata store based on the last update
     * time of all clients.
     */t.prototype.nn=function(){return H(this,void 0,void 0,function(){var t,e,n,r,i=this;return W(this,function(o){switch(o.label){case 0:return!this.isPrimary||this.sn(this.Oe,18e5)?[3/*break*/,2]:(this.Oe=Date.now(),[4/*yield*/,this.runTransaction("maybeGarbageCollectMultiClientState","readwrite-primary",function(t){var e=fY(t,fP.store);return e.Nt().next(function(t){var n=i.rn(t,18e5),r=t.filter(function(t){return -1===n.indexOf(t)});// Delete metadata for clients that are no longer considered active.
return fU.forEach(r,function(t){return e.delete(t.clientId)}).next(function(){return r})})}).catch(function(){return[]})]);case 1:// Delete potential leftover entries that may continue to mark the
// inactive clients as zombied in LocalStorage.
// Ideally we'd delete the IndexedDb and LocalStorage zombie entries for
// the client atomically, but we can't. So we opt to delete the IndexedDb
// entries first to avoid potentially reviving a zombied client.
if(t=o.sent(),this.Qe)for(e=0,n=t;e<n.length;e++)r=n[e],this.Qe.removeItem(this.on(r.clientId));o.label=2;case 2:return[2/*return*/]}})})},/**
     * Schedules a recurring timer to update the client metadata and to either
     * extend or acquire the primary lease if the client is eligible.
     */t.prototype.ze=function(){var t=this;this.$e=this.Se.enqueueAfterDelay("client_metadata_refresh"/* ClientMetadataRefresh */,4e3,function(){return t.je().then(function(){return t.nn()}).then(function(){return t.ze()})})},/** Checks whether `client` is the local client. */t.prototype.tn=function(t){return!!t&&t.ownerId===this.clientId},/**
     * Evaluate the state of all active clients and determine whether the local
     * client is or can act as the holder of the primary lease. Returns whether
     * the client is eligible for the lease, but does not actually acquire it.
     * May return 'false' even if there is no active leaseholder and another
     * (foreground) client should become leaseholder instead.
     */t.prototype.Ye=function(t){var e=this;return this.Ce?fU.resolve(!0):pq(t).get(fb.key).next(function(n){// A client is eligible for the primary lease if:
// - its network is enabled and the client's tab is in the foreground.
// - its network is enabled and no other client's tab is in the
//   foreground.
// - every clients network is disabled and the client's tab is in the
//   foreground.
// - every clients network is disabled and no other client's tab is in
//   the foreground.
// - the `forceOwningTab` setting was passed in.
if(null!==n&&e.sn(n.leaseTimestampMs,5e3)&&!e.cn(n.ownerId)){if(e.tn(n)&&e.networkEnabled)return!0;if(!e.tn(n)){if(!n.allowTabSynchronization)// not opted into multi-tab synchronization. If this happens at
// client startup, we reject the Promise returned by
// `enablePersistence()` and the user can continue to use Firestore
// with in-memory persistence.
// If this fails during a lease refresh, we will instead block the
// AsyncQueue from executing further operations. Note that this is
// acceptable since mixing & matching different `synchronizeTabs`
// settings is not supported.
// TODO(b/114226234): Remove this check when `synchronizeTabs` can
// no longer be turned off.
throw new cK(cB.FAILED_PRECONDITION,pj);return!1}}return!(!e.networkEnabled||!e.inForeground)||pV(t).Nt().next(function(t){return void 0===e.rn(t,5e3).find(function(t){if(e.clientId!==t.clientId){var n=!e.networkEnabled&&t.networkEnabled,r=!e.inForeground&&t.inForeground,i=e.networkEnabled===t.networkEnabled;if(n||r&&i)return!0}return!1})})}).next(function(t){return e.isPrimary!==t&&cz("IndexedDbPersistence","Client "+(t?"is":"is not")+" eligible for a primary lease."),t})},t.prototype.shutdown=function(){return H(this,void 0,void 0,function(){var t=this;return W(this,function(e){switch(e.label){case 0:// Use `SimpleDb.runTransaction` directly to avoid failing if another tab
// has obtained the primary lease.
// The shutdown() operations are idempotent and can be called even when
// start() aborted (e.g. because it couldn't acquire the persistence lease).
return this.xe=!1,this.un(),this.$e&&(this.$e.cancel(),this.$e=null),this.an(),this.hn(),[4/*yield*/,this.Be.runTransaction("shutdown","readwrite",[fb.store,fP.store],function(e){var n=new f$(e,cV.o);return t.Xe(n).next(function(){return t.en(n)})})];case 1:// The shutdown() operations are idempotent and can be called even when
// start() aborted (e.g. because it couldn't acquire the persistence lease).
// Use `SimpleDb.runTransaction` directly to avoid failing if another tab
// has obtained the primary lease.
return e.sent(),this.Be.close(),// we successfully deleted its metadata from IndexedDb.
this.ln(),[2/*return*/]}})})},/**
     * Returns clients that are not zombied and have an updateTime within the
     * provided threshold.
     */t.prototype.rn=function(t,e){var n=this;return t.filter(function(t){return n.sn(t.updateTimeMs,e)&&!n.cn(t.clientId)})},/**
     * Returns the IDs of the clients that are currently active. If multi-tab
     * is not supported, returns an array that only contains the local client's
     * ID.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */t.prototype.fn=function(){var t=this;return this.runTransaction("getActiveClients","readonly",function(e){return pV(e).Nt().next(function(e){return t.rn(e,18e5).map(function(t){return t.clientId})})})},Object.defineProperty(t.prototype,"started",{get:function(){return this.xe},enumerable:!1,configurable:!0}),t.prototype.getMutationQueue=function(t){return pf.Qt(t,this.R,this.Ut,this.referenceDelegate)},t.prototype.getTargetCache=function(){return this.qe},t.prototype.getRemoteDocumentCache=function(){return this.Ue},t.prototype.getIndexManager=function(){return this.Ut},t.prototype.getBundleCache=function(){return this.Ke},t.prototype.runTransaction=function(t,e,n){var r,i=this;// Do all transactions as readwrite against all object stores, since we
// are the only reader/writer.
return cz("IndexedDbPersistence","Starting transaction:",t),this.Be.runTransaction(t,"readonly"===e?"readonly":"readwrite",fL,function(o){return r=new f$(o,i.Ne?i.Ne.next():cV.o),"readwrite-primary"===e?i.Je(r).next(function(t){return!!t||i.Ye(r)}).next(function(e){if(!e)throw cG("Failed to obtain primary lease for action '"+t+"'."),i.isPrimary=!1,i.Se.enqueueRetryable(function(){return i.Me(!1)}),new cK(cB.FAILED_PRECONDITION,fM);return n(r)}).next(function(t){return i.Ze(r).next(function(){return t})}):i.dn(r).next(function(){return n(r)})}).then(function(t){return r.raiseOnCommittedEvent(),t})},/**
     * Verifies that the current tab is the primary leaseholder or alternatively
     * that the leaseholder has opted into multi-tab synchronization.
     */// TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer
// be turned off.
t.prototype.dn=function(t){var e=this;return pq(t).get(fb.key).next(function(t){if(null!==t&&e.sn(t.leaseTimestampMs,5e3)&&!e.cn(t.ownerId)&&!e.tn(t)&&!(e.Ce||e.allowTabSynchronization&&t.allowTabSynchronization))throw new cK(cB.FAILED_PRECONDITION,pj)})},/**
     * Obtains or extends the new primary lease for the local client. This
     * method does not verify that the client is eligible for this lease.
     */t.prototype.Ze=function(t){var e=new fb(this.clientId,this.allowTabSynchronization,Date.now());return pq(t).put(fb.key,e)},t.yt=function(){return fV.yt()},/** Checks the primary lease and removes it if we are the current primary. */t.prototype.Xe=function(t){var e=this,n=pq(t);return n.get(fb.key).next(function(t){return e.tn(t)?(cz("IndexedDbPersistence","Releasing primary lease."),n.delete(fb.key)):fU.resolve()})},/** Verifies that `updateTimeMs` is within `maxAgeMs`. */t.prototype.sn=function(t,e){var n=Date.now();return!(t<n-e||t>n&&(cG("Detected an update time that is in the future: "+t+" > "+n),1))},t.prototype.We=function(){var t=this;null!==this.document&&"function"==typeof this.document.addEventListener&&(this.Fe=function(){t.Se.enqueueAndForget(function(){return t.inForeground="visible"===t.document.visibilityState,t.je()})},this.document.addEventListener("visibilitychange",this.Fe),this.inForeground="visible"===this.document.visibilityState)},t.prototype.an=function(){this.Fe&&(this.document.removeEventListener("visibilitychange",this.Fe),this.Fe=null)},/**
     * Attaches a window.unload handler that will synchronously write our
     * clientId to a "zombie client id" location in LocalStorage. This can be used
     * by tabs trying to acquire the primary lease to determine that the lease
     * is no longer valid even if the timestamp is recent. This is particularly
     * important for the refresh case (so the tab correctly re-acquires the
     * primary lease). LocalStorage is used for this rather than IndexedDb because
     * it is a synchronous API and so can be used reliably from  an unload
     * handler.
     */t.prototype.Ge=function(){var t,e=this;"function"==typeof(null===(t=this.window)||void 0===t?void 0:t.addEventListener)&&(this.ke=function(){// Note: In theory, this should be scheduled on the AsyncQueue since it
// accesses internal state. We execute this code directly during shutdown
// to make sure it gets a chance to run.
e.un(),!tc()&&navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome")&&navigator.appVersion.match("Version/14")&&// On Safari 14, we do not run any cleanup actions as it might trigger
// a bug that prevents Safari from re-opening IndexedDB during the
// next page load.
// See https://bugs.webkit.org/show_bug.cgi?id=226547
e.Se.enterRestrictedMode(/* purgeExistingTasks= */!0),e.Se.enqueueAndForget(function(){return e.shutdown()})},this.window.addEventListener("pagehide",this.ke))},t.prototype.hn=function(){this.ke&&(this.window.removeEventListener("pagehide",this.ke),this.ke=null)},/**
     * Returns whether a client is "zombied" based on its LocalStorage entry.
     * Clients become zombied when their tab closes without running all of the
     * cleanup logic in `shutdown()`.
     */t.prototype.cn=function(t){var e;try{var n=null!==(null===(e=this.Qe)||void 0===e?void 0:e.getItem(this.on(t)));return cz("IndexedDbPersistence","Client '"+t+"' "+(n?"is":"is not")+" zombied in LocalStorage"),n}catch(t){// Gracefully handle if LocalStorage isn't working.
return cG("IndexedDbPersistence","Failed to get zombied client id.",t),!1}},/**
     * Record client as zombied (a client that had its tab closed). Zombied
     * clients are ignored during primary tab selection.
     */t.prototype.un=function(){if(this.Qe)try{this.Qe.setItem(this.on(this.clientId),String(Date.now()))}catch(t){// Gracefully handle if LocalStorage isn't available / working.
cG("Failed to set zombie client id.",t)}},/** Removes the zombied client entry if it exists. */t.prototype.ln=function(){if(this.Qe)try{this.Qe.removeItem(this.on(this.clientId))}catch(t){// Ignore
}},t.prototype.on=function(t){return"firestore_zombie_"+this.persistenceKey+"_"+t},t}();/**
 * Oldest acceptable age in milliseconds for client metadata before the client
 * is considered inactive and its associated data is garbage collected.
 *//**
 * An IndexedDB-backed instance of Persistence. Data is stored persistently
 * across sessions.
 *
 * On Web only, the Firestore SDKs support shared access to its persistence
 * layer. This allows multiple browser tabs to read and write to IndexedDb and
 * to synchronize state even without network connectivity. Shared access is
 * currently optional and not enabled unless all clients invoke
 * `enablePersistence()` with `{synchronizeTabs:true}`.
 *
 * In multi-tab mode, if multiple clients are active at the same time, the SDK
 * will designate one client as the “primary client”. An effort is made to pick
 * a visible, network-connected and active client, and this client is
 * responsible for letting other clients know about its presence. The primary
 * client writes a unique client-generated identifier (the client ID) to
 * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to
 * update this entry, another client can acquire the lease and take over as
 * primary.
 *
 * Some persistence operations in the SDK are designated as primary-client only
 * operations. This includes the acknowledgment of mutations and all updates of
 * remote documents. The effects of these operations are written to persistence
 * and then broadcast to other tabs via LocalStorage (see
 * `WebStorageSharedClientState`), which then refresh their state from
 * persistence.
 *
 * Similarly, the primary client listens to notifications sent by secondary
 * clients to discover persistence changes written by secondary clients, such as
 * the addition of new mutations and query targets.
 *
 * If multi-tab is not enabled and another tab already obtained the primary
 * lease, IndexedDbPersistence enters a failed state and all subsequent
 * operations will automatically fail.
 *
 * Additionally, there is an optimization so that when a tab is closed, the
 * primary lease is released immediately (this is especially important to make
 * sure that a refreshed tab is able to immediately re-acquire the primary
 * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload
 * since it is an asynchronous API. So in addition to attempting to give up the
 * lease, the leaseholder writes its client ID to a "zombiedClient" entry in
 * LocalStorage which acts as an indicator that another tab should go ahead and
 * take the primary lease immediately regardless of the current lease timestamp.
 *
 * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no
 * longer optional.
 *//**
 * Helper to get a typed SimpleDbStore for the primary client object store.
 */function pq(t){return fY(t,fb.store)}/**
 * Helper to get a typed SimpleDbStore for the client metadata object store.
 */function pV(t){return fY(t,fP.store)}/**
 * Generates a string used as a prefix when storing data in IndexedDB and
 * LocalStorage.
 */function pB(t,e){// Use two different prefix formats:
//   * firestore / persistenceKey / projectID . databaseID / ...
//   * firestore / persistenceKey / projectID / ...
// projectIDs are DNS-compatible names and cannot contain dots
// so there's no danger of collisions.
var n=t.projectId;return t.isDefaultDatabase||(n+="."+t.database),"firestore/"+e+"/"+n+"/"/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */}var pK=function(t,e){this.progress=t,this.wn=e},pH=/** @class */function(){function t(t,e,n){this.Ue=t,this._n=e,this.Ut=n/**
     * Get the local view of the document identified by `key`.
     *
     * @returns Local view of the document or null if we don't have any cached
     * state for it.
     */}return t.prototype.mn=function(t,e){var n=this;return this._n.getAllMutationBatchesAffectingDocumentKey(t,e).next(function(r){return n.yn(t,e,r)})},/** Internal version of `getDocument` that allows reusing batches. */t.prototype.yn=function(t,e,n){return this.Ue.getEntry(t,e).next(function(t){for(var e=0;e<n.length;e++)n[e].applyToLocalView(t);return t})},// all mutations in the given `batches`.
t.prototype.gn=function(t,e){t.forEach(function(t,n){for(var r=0;r<e.length;r++)e[r].applyToLocalView(n)})},/**
     * Gets the local view of the documents identified by `keys`.
     *
     * If we don't have cached state for a document in `keys`, a NoDocument will
     * be stored for that key in the resulting set.
     */t.prototype.pn=function(t,e){var n=this;return this.Ue.getEntries(t,e).next(function(e){return n.En(t,e).next(function(){return e})})},/**
     * Applies the local view the given `baseDocs` without retrieving documents
     * from the local store.
     */t.prototype.En=function(t,e){var n=this;return this._n.getAllMutationBatchesAffectingDocumentKeys(t,e).next(function(t){return n.gn(e,t)})},/**
     * Performs a query against the local view of all documents.
     *
     * @param transaction - The persistence transaction.
     * @param query - The query to match documents against.
     * @param sinceReadTime - If not set to SnapshotVersion.min(), return only
     *     documents that have been read since this snapshot version (exclusive).
     */t.prototype.getDocumentsMatchingQuery=function(t,e,n){/**
 * Returns whether the query matches a single document by path (rather than a
 * collection).
 */return hh.isDocumentKey(e.path)&&null===e.collectionGroup&&0===e.filters.length?this.Tn(t,e.path):hX(e)?this.In(t,e,n):this.An(t,e,n)},t.prototype.Tn=function(t,e){// Just do a simple document lookup.
return this.mn(t,new hh(e)).next(function(t){var e=lV;return t.isFoundDocument()&&(e=e.insert(t.key,t)),e})},t.prototype.In=function(t,e,n){var r=this,i=e.collectionGroup,o=lV;return this.Ut.getCollectionParents(t,i).next(function(a){return fU.forEach(a,function(a){var s,u=(s=a.child(i),new hW(s,/*collectionGroup=*/null,e.explicitOrderBy.slice(),e.filters.slice(),e.limit,e.limitType,e.startAt,e.endAt));return r.An(t,u,n).next(function(t){t.forEach(function(t,e){o=o.insert(t,e)})})}).next(function(){return o})})},t.prototype.An=function(t,e,n){var r,i,o=this;// Query the remote documents and overlay mutations.
return this.Ue.getDocumentsMatchingQuery(t,e,n).next(function(n){return r=n,o._n.getAllMutationBatchesAffectingQuery(t,e)}).next(function(e){return i=e,o.Rn(t,i,r).next(function(t){r=t;for(var e=0;e<i.length;e++)for(var n=i[e],o=0,a=n.mutations;o<a.length;o++){var s=a[o],u=s.key,c=r.get(u);null==c&&// Create invalid document to apply mutations on top of
(c=hS.newInvalidDocument(u),r=r.insert(u,c)),ld(s,c,n.localWriteTime),c.isFoundDocument()||(r=r.remove(u))}})}).next(function(){// Finally, filter out any documents that don't actually match
// the query.
return r.forEach(function(t,n){h3(e,n)||(r=r.remove(t))}),r})},t.prototype.Rn=function(t,e,n){for(var r=lH(),i=0;i<e.length;i++)for(var o=0,a=e[i].mutations;o<a.length;o++){var s=a[o];s instanceof ly&&null===n.get(s.key)&&(r=r.add(s.key))}var u=n;return this.Ue.getEntries(t,r).next(function(t){return t.forEach(function(t,e){e.isFoundDocument()&&(u=u.insert(t,e))}),u})},t}(),pW=/** @class */function(){function t(t,e,n,r){this.targetId=t,this.fromCache=e,this.bn=n,this.vn=r}return t.Pn=function(e,n){for(var r=lH(),i=lH(),o=0,a=n.docChanges;o<a.length;o++){var s=a[o];switch(s.type){case 0/* Added */:r=r.add(s.doc.key);break;case 1/* Removed */:i=i.add(s.doc.key)}}return new t(e,n.fromCache,r,i)},t}(),pz=/** @class */function(){function t(){}/** Sets the document view to query against. */return t.prototype.Vn=function(t){this.Sn=t},/** Returns all local documents matching the specified query. */t.prototype.getDocumentsMatchingQuery=function(t,e,n,r){var i=this;// Queries that match all documents don't benefit from using
// key-based lookups. It is more efficient to scan all documents in a
// collection, rather than to perform individual lookups.
return 0===e.filters.length&&null===e.limit&&null==e.startAt&&null==e.endAt&&(0===e.explicitOrderBy.length||1===e.explicitOrderBy.length&&e.explicitOrderBy[0].field.isKeyField())||n.isEqual(c1.min())?this.Dn(t,e):this.Sn.pn(t,r).next(function(o){var a=i.Cn(e,o);return(hG(e)||hQ(e))&&i.Nn(e.limitType,a,r,n)?i.Dn(t,e):(cW()<=ad.DEBUG&&cz("QueryEngine","Re-using previous result from %s to execute query: %s",n.toString(),h4(e)),i.Sn.getDocumentsMatchingQuery(t,e,n).next(function(t){// We merge `previousResults` into `updateResults`, since
// `updateResults` is already a DocumentMap. If a document is
// contained in both lists, then its contents are the same.
return a.forEach(function(e){t=t.insert(e.key,e)}),t}))});// Queries that have never seen a snapshot without limbo free documents
// should also be run as a full collection scan.
},/** Applies the query filter and sorting to the provided documents.  */t.prototype.Cn=function(t,e){// Sort the documents and re-apply the query filter since previously
// matching documents do not necessarily still match the query.
var n=new lj(h6(t));return e.forEach(function(e,r){h3(t,r)&&(n=n.add(r))}),n},/**
     * Determines if a limit query needs to be refilled from cache, making it
     * ineligible for index-free execution.
     *
     * @param sortedPreviousResults - The documents that matched the query when it
     * was last synchronized, sorted by the query's comparator.
     * @param remoteKeys - The document keys that matched the query at the last
     * snapshot.
     * @param limboFreeSnapshotVersion - The version of the snapshot when the
     * query was last synchronized.
     */t.prototype.Nn=function(t,e,n,r){// The query needs to be refilled if a previously matching document no
// longer matches.
if(n.size!==e.size)return!0;// Limit queries are not eligible for index-free query execution if there is
// a potential that an older document from cache now sorts before a document
// that was previously part of the limit. This, however, can only happen if
// the document at the edge of the limit goes out of limit.
// If a document that is not the limit boundary sorts differently,
// the boundary of the limit itself did not change and documents from cache
// will continue to be "rejected" by this boundary. Therefore, we can ignore
// any modifications that don't affect the last document.
var i="F"/* First */===t?e.last():e.first();return!!i&&(i.hasPendingWrites||i.version.compareTo(r)>0)},t.prototype.Dn=function(t,e){return cW()<=ad.DEBUG&&cz("QueryEngine","Using full collection scan to execute query:",h4(e)),this.Sn.getDocumentsMatchingQuery(t,e,c1.min())},t}(),pG=/** @class */function(){function t(/** Manages our in-memory or durable persistence. */t,e,n,r){this.persistence=t,this.xn=e,this.R=r,/**
             * Maps a targetID to data about its target.
             *
             * PORTING NOTE: We are using an immutable data structure on Web to make re-runs
             * of `applyRemoteEvent()` idempotent.
             */this.kn=new lL(cJ),/** Maps a target to its targetID. */this.Fn=new pA(function(t){return hN(t)},hA),/**
             * The read time of the last entry processed by `getNewDocumentChanges()`.
             *
             * PORTING NOTE: This is only used for multi-tab synchronization.
             */this.$n=c1.min(),this._n=t.getMutationQueue(n),this.On=t.getRemoteDocumentCache(),this.qe=t.getTargetCache(),this.Mn=new pH(this.On,this._n,this.persistence.getIndexManager()),this.Ke=t.getBundleCache(),this.xn.Vn(this.Mn)}return t.prototype.collectGarbage=function(t){var e=this;return this.persistence.runTransaction("Collect garbage","readwrite-primary",function(n){return t.collect(n,e.kn)})},t}();/**
 * Tells the LocalStore that the currently authenticated user has changed.
 *
 * In response the local store switches the mutation queue to the new user and
 * returns any resulting document changes.
 */// PORTING NOTE: Android and iOS only return the documents affected by the
// change.
function pQ(t,e){return H(this,void 0,void 0,function(){var n,r,i,o;return W(this,function(a){switch(a.label){case 0:return r=(n=t)._n,i=n.Mn,[4/*yield*/,n.persistence.runTransaction("Handle user change","readonly",function(t){// Swap out the mutation queue, grabbing the pending mutation batches
// before and after.
var o;return n._n.getAllMutationBatches(t).next(function(a){return o=a,r=n.persistence.getMutationQueue(e),// MutationQueue.
i=new pH(n.On,r,n.persistence.getIndexManager()),r.getAllMutationBatches(t)}).next(function(e){for(var n=[],r=[],a=lH(),s=0,u=o;s<u.length;s++){var c=u[s];n.push(c.batchId);for(var h=0,l=c.mutations;h<l.length;h++){var f=l[h];a=a.add(f.key)}}for(var p=0;p<e.length;p++){var d=e[p];r.push(d.batchId);for(var v=0,g=d.mutations;v<g.length;v++){var m=g[v];a=a.add(m.key)}}// Return the set of all (potentially) changed documents and the list
// of mutation batch IDs that were affected by change.
return i.pn(t,a).next(function(t){return{Ln:t,removedBatchIds:n,addedBatchIds:r}})})})];case 1:return o=a.sent(),[2/*return*/,(n._n=r,n.Mn=i,n.xn.Vn(n.Mn),o)]}})})}/**
 * Removes mutations from the MutationQueue for the specified batch;
 * LocalDocuments will be recalculated.
 *
 * @returns The resulting modified documents.
 *//**
 * Returns the last consistent snapshot processed (used by the RemoteStore to
 * determine whether to buffer incoming snapshots from the backend).
 */function p$(t){return t.persistence.runTransaction("Get last remote snapshot version","readonly",function(e){return t.qe.getLastRemoteSnapshotVersion(e)})}/**
 * Populates document change buffer with documents from backend or a bundle.
 * Returns the document changes resulting from applying those documents.
 *
 * @param txn - Transaction to use to read existing documents from storage.
 * @param documentBuffer - Document buffer to collect the resulted changes to be
 *        applied to storage.
 * @param documents - Documents to be applied.
 * @param globalVersion - A `SnapshotVersion` representing the read time if all
 *        documents have the same read time.
 * @param documentVersions - A DocumentKey-to-SnapshotVersion map if documents
 *        have their own read time.
 *
 * Note: this function will use `documentVersions` if it is defined;
 * when it is not defined, resorts to `globalVersion`.
 */function pY(t,e,n,r,// this parameter.
i){var o=lH();return n.forEach(function(t){return o=o.add(t)}),e.getEntries(t,o).next(function(t){var o=lq;return n.forEach(function(n,a){var s=t.get(n),u=(null==i?void 0:i.get(n))||r;// Note: The order of the steps below is important, since we want
// to ensure that rejected limbo resolutions (which fabricate
// NoDocuments with SnapshotVersion.min()) never add documents to
// cache.
a.isNoDocument()&&a.version.isEqual(c1.min())?// events. We remove these documents from cache since we lost
// access.
(e.removeEntry(n,u),o=o.insert(n,a)):!s.isValidDocument()||a.version.compareTo(s.version)>0||0===a.version.compareTo(s.version)&&s.hasPendingWrites?(e.addEntry(a,u),o=o.insert(n,a)):cz("LocalStore","Ignoring outdated watch update for ",n,". Current version:",s.version," Watch version:",a.version)}),o})/**
 * Gets the mutation batch after the passed in batchId in the mutation queue
 * or null if empty.
 * @param afterBatchId - If provided, the batch to search after.
 * @returns The next mutation or null if there wasn't one.
 */}/**
 * Reads the current value of a Document with a given key or null if not
 * found - used for testing.
 *//**
 * Assigns the given target an internal ID so that its results can be pinned so
 * they don't get GC'd. A target must be allocated in the local store before
 * the store can be used to manage its view.
 *
 * Allocating an already allocated `Target` will return the existing `TargetData`
 * for that `Target`.
 */function pX(t,e){return t.persistence.runTransaction("Allocate target","readwrite",function(n){var r;return t.qe.getTargetData(n,e).next(function(i){return i?// previous targetID.
// TODO(mcg): freshen last accessed date?
(r=i,fU.resolve(r)):t.qe.allocateTargetId(n).next(function(i){return r=new fZ(e,i,0/* Listen */,n.currentSequenceNumber),t.qe.addTargetData(n,r).next(function(){return r})})})}).then(function(n){// If Multi-Tab is enabled, the existing target data may be newer than
// the in-memory data
var r=t.kn.get(n.targetId);return(null===r||n.snapshotVersion.compareTo(r.snapshotVersion)>0)&&(t.kn=t.kn.insert(n.targetId,n),t.Fn.set(e,n.targetId)),n})}/**
 * Returns the TargetData as seen by the LocalStore, including updates that may
 * have not yet been persisted to the TargetCache.
 */// Visible for testing.
/**
 * Unpins all the documents associated with the given target. If
 * `keepPersistedTargetData` is set to false and Eager GC enabled, the method
 * directly removes the associated target data from the target cache.
 *
 * Releasing a non-existing `Target` is a no-op.
 */// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.
function pJ(t,e,n){return H(this,void 0,void 0,function(){var r,i,o,a;return W(this,function(s){switch(s.label){case 0:i=(r=t).kn.get(e),o=n?"readwrite":"readwrite-primary",s.label=1;case 1:return s.trys.push([1,4,,5]),n?[3/*break*/,3]:[4/*yield*/,r.persistence.runTransaction("Release target",o,function(t){return r.persistence.referenceDelegate.removeTarget(t,i)})];case 2:s.sent(),s.label=3;case 3:return[3/*break*/,5];case 4:if(!fH(a=s.sent()))throw a;// All `releaseTarget` does is record the final metadata state for the
// target, but we've been recording this periodically during target
// activity. If we lose this write this could cause a very slight
// difference in the order of target deletion during GC, but we
// don't define exact LRU semantics so this is acceptable.
return cz("LocalStore","Failed to update sequence numbers for target "+e+": "+a),[3/*break*/,5];case 5:return r.kn=r.kn.remove(e),r.Fn.delete(i.target),[2/*return*/]}})})}/**
 * Runs the specified query against the local store and returns the results,
 * potentially taking advantage of query data from previous executions (such
 * as the set of remote keys).
 *
 * @param usePreviousResults - Whether results from previous executions can
 * be used to optimize this query execution.
 */function pZ(t,e,n){var r=c1.min(),i=lH();return t.persistence.runTransaction("Execute query","readonly",function(o){var a,s;return(a=hZ(e),void 0!==(s=t.Fn.get(a))?fU.resolve(t.kn.get(s)):t.qe.getTargetData(o,a)).next(function(e){if(e)return r=e.lastLimboFreeSnapshotVersion,t.qe.getMatchingKeysForTargetId(o,e.targetId).next(function(t){i=t})}).next(function(){return t.xn.getDocumentsMatchingQuery(o,e,n?r:c1.min(),n?i:lH())}).next(function(t){return{documents:t,Bn:i}})})}// PORTING NOTE: Multi-Tab only.
function p0(t,e){var n=t.qe,r=t.kn.get(e);return r?Promise.resolve(r.target):t.persistence.runTransaction("Get target data","readonly",function(t){return n.lt(t,e).next(function(t){return t?t.target:null})})}/**
 * Returns the set of documents that have been updated since the last call.
 * If this is the first call, returns the set of changes since client
 * initialization. Further invocations will return document that have changed
 * since the prior call.
 */// PORTING NOTE: Multi-Tab only.
function p1(t){return t.persistence.runTransaction("Get new document changes","readonly",function(e){var n,r,i,o,a,s;return n=t.On,r=t.$n,i=lq,o=f4(r),a=pO(e),s=IDBKeyRange.lowerBound(o,!0),a.$t({index:fC.readTimeIndex,range:s},function(t,e){// Unlike `getEntry()` and others, `getNewDocumentChanges()` parses
// the documents directly since we want to keep sentinel deletes.
var r=f1(n.R,e);i=i.insert(r.key,r),o=e.readTime}).next(function(){return{wn:i,readTime:f3(o)}})}).then(function(e){var n=e.wn,r=e.readTime;return t.$n=r,n})}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var p2=/** @class */function(){function t(t){this.R=t,this.Qn=new Map,this.jn=new Map}return t.prototype.getBundleMetadata=function(t,e){return fU.resolve(this.Qn.get(e))},t.prototype.saveBundleMetadata=function(t,e){return this.Qn.set(e.id,{id:e.id,version:e.version,createTime:l5(e.createTime)}),fU.resolve()},t.prototype.getNamedQuery=function(t,e){return fU.resolve(this.jn.get(e))},t.prototype.saveNamedQuery=function(t,e){return this.jn.set(e.name,{name:e.name,query:pt(e.bundledQuery),readTime:l5(e.readTime)}),fU.resolve()},t}(),p4=/** @class */function(){function t(){// A set of outstanding references to a document sorted by key.
this.Wn=new lj(p3.Gn),this.zn=new lj(p3.Hn)/** Returns true if the reference set contains no references. */}return t.prototype.isEmpty=function(){return this.Wn.isEmpty()},/** Adds a reference to the given document key for the given ID. */t.prototype.addReference=function(t,e){var n=new p3(t,e);this.Wn=this.Wn.add(n),this.zn=this.zn.add(n)},/** Add references to the given document keys for the given ID. */t.prototype.Jn=function(t,e){var n=this;t.forEach(function(t){return n.addReference(t,e)})},/**
     * Removes a reference to the given document key for the given
     * ID.
     */t.prototype.removeReference=function(t,e){this.Yn(new p3(t,e))},t.prototype.Xn=function(t,e){var n=this;t.forEach(function(t){return n.removeReference(t,e)})},/**
     * Clears all references with a given ID. Calls removeRef() for each key
     * removed.
     */t.prototype.Zn=function(t){var e=this,n=new hh(new c5([])),r=new p3(n,t),i=new p3(n,t+1),o=[];return this.zn.forEachInRange([r,i],function(t){e.Yn(t),o.push(t.key)}),o},t.prototype.ts=function(){var t=this;this.Wn.forEach(function(e){return t.Yn(e)})},t.prototype.Yn=function(t){this.Wn=this.Wn.delete(t),this.zn=this.zn.delete(t)},t.prototype.es=function(t){var e=new hh(new c5([])),n=new p3(e,t),r=new p3(e,t+1),i=lH();return this.zn.forEachInRange([n,r],function(t){i=i.add(t.key)}),i},t.prototype.containsKey=function(t){var e=new p3(t,0),n=this.Wn.firstAfterOrEqual(e);return null!==n&&t.isEqual(n.key)},t}(),p3=/** @class */function(){function t(t,e){this.key=t,this.ns=e/** Compare by key then by ID */}return t.Gn=function(t,e){return hh.comparator(t.key,e.key)||cJ(t.ns,e.ns)},/** Compare by ID then by key */t.Hn=function(t,e){return cJ(t.ns,e.ns)||hh.comparator(t.key,e.key)},t}(),p6=/** @class */function(){function t(t,e){this.Ut=t,this.referenceDelegate=e,/**
             * The set of all mutations that have been sent but not yet been applied to
             * the backend.
             */this._n=[],/** Next value to use when assigning sequential IDs to each mutation batch. */this.ss=1,/** An ordered mapping between documents and the mutations batch IDs. */this.rs=new lj(p3.Gn)}return t.prototype.checkEmpty=function(t){return fU.resolve(0===this._n.length)},t.prototype.addMutationBatch=function(t,e,n,r){var i=this.ss;this.ss++,this._n.length>0&&this._n[this._n.length-1];var o=new fX(i,e,n,r);this._n.push(o);// Track references by document key and index collection parents.
for(var a=0;a<r.length;a++){var s=r[a];this.rs=this.rs.add(new p3(s.key,i)),this.Ut.addToCollectionParentIndex(t,s.key.path.popLast())}return fU.resolve(o)},t.prototype.lookupMutationBatch=function(t,e){return fU.resolve(this.os(e))},t.prototype.getNextMutationBatchAfterBatchId=function(t,e){var n=this.cs(e+1),r=n<0?0:n;// The requested batchId may still be out of range so normalize it to the
// start of the queue.
return fU.resolve(this._n.length>r?this._n[r]:null)},t.prototype.getHighestUnacknowledgedBatchId=function(){return fU.resolve(0===this._n.length?-1:this.ss-1)},t.prototype.getAllMutationBatches=function(t){return fU.resolve(this._n.slice())},t.prototype.getAllMutationBatchesAffectingDocumentKey=function(t,e){var n=this,r=new p3(e,0),i=new p3(e,Number.POSITIVE_INFINITY),o=[];return this.rs.forEachInRange([r,i],function(t){var e=n.os(t.ns);o.push(e)}),fU.resolve(o)},t.prototype.getAllMutationBatchesAffectingDocumentKeys=function(t,e){var n=this,r=new lj(cJ);return e.forEach(function(t){var e=new p3(t,0),i=new p3(t,Number.POSITIVE_INFINITY);n.rs.forEachInRange([e,i],function(t){r=r.add(t.ns)})}),fU.resolve(this.us(r))},t.prototype.getAllMutationBatchesAffectingQuery=function(t,e){// Use the query path as a prefix for testing if a document matches the
// query.
var n=e.path,r=n.length+1,i=n;// Construct a document reference for actually scanning the index. Unlike
// the prefix the document key in this reference must have an even number of
// segments. The empty segment can be used a suffix of the query path
// because it precedes all other segments in an ordered traversal.
hh.isDocumentKey(i)||(i=i.child(""));var o=new p3(new hh(i),0),a=new lj(cJ);// Find unique batchIDs referenced by all documents potentially matching the
// query.
return this.rs.forEachWhile(function(t){var e=t.key.path;return!!n.isPrefixOf(e)&&// Rows with document keys more than one segment longer than the query
// path can't be matches. For example, a query on 'rooms' can't match
// the document /rooms/abc/messages/xyx.
// TODO(mcg): we'll need a different scanner when we implement
// ancestor queries.
(e.length===r&&(a=a.add(t.ns)),!0)},o),fU.resolve(this.us(a))},t.prototype.us=function(t){var e=this,n=[];// Construct an array of matching batches, sorted by batchID to ensure that
// multiple mutations affecting the same document key are applied in order.
return t.forEach(function(t){var r=e.os(t);null!==r&&n.push(r)}),n},t.prototype.removeMutationBatch=function(t,e){var n=this;0===this.hs(e.batchId,"removed")||cY(),this._n.shift();var r=this.rs;return fU.forEach(e.mutations,function(i){var o=new p3(i.key,e.batchId);return r=r.delete(o),n.referenceDelegate.markPotentiallyOrphaned(t,i.key)}).next(function(){n.rs=r})},t.prototype.Gt=function(t){// No-op since the memory mutation queue does not maintain a separate cache.
},t.prototype.containsKey=function(t,e){var n=new p3(e,0),r=this.rs.firstAfterOrEqual(n);return fU.resolve(e.isEqual(r&&r.key))},t.prototype.performConsistencyCheck=function(t){return this._n.length,fU.resolve()},/**
     * Finds the index of the given batchId in the mutation queue and asserts that
     * the resulting index is within the bounds of the queue.
     *
     * @param batchId - The batchId to search for
     * @param action - A description of what the caller is doing, phrased in passive
     * form (e.g. "acknowledged" in a routine that acknowledges batches).
     */t.prototype.hs=function(t,e){return this.cs(t)},/**
     * Finds the index of the given batchId in the mutation queue. This operation
     * is O(1).
     *
     * @returns The computed index of the batch with the given batchId, based on
     * the state of the queue. Note this index can be negative if the requested
     * batchId has already been remvoed from the queue or past the end of the
     * queue if the batchId is larger than the last added batch.
     */t.prototype.cs=function(t){return 0===this._n.length?0:t-this._n[0].batchId;// Examine the front of the queue to figure out the difference between the
// batchId and indexes in the array. Note that since the queue is ordered
// by batchId, if the first batch has a larger batchId then the requested
// batchId doesn't exist in the queue.
},/**
     * A version of lookupMutationBatch that doesn't return a promise, this makes
     * other functions that uses this code easier to read and more efficent.
     */t.prototype.os=function(t){var e=this.cs(t);return e<0||e>=this._n.length?null:this._n[e]},t}(),p5=/** @class */function(){/**
     * @param sizer - Used to assess the size of a document. For eager GC, this is
     * expected to just return 0 to avoid unnecessarily doing the work of
     * calculating the size.
     */function t(t,e){this.Ut=t,this.ls=e,/** Underlying cache of documents and their read times. */this.docs=new lL(hh.comparator),/** Size of all cached documents. */this.size=0/**
     * Adds the supplied entry to the cache and updates the cache size as appropriate.
     *
     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()`.
     */}return t.prototype.addEntry=function(t,e,n){var r=e.key,i=this.docs.get(r),o=i?i.size:0,a=this.ls(e);return this.docs=this.docs.insert(r,{document:e.clone(),size:a,readTime:n}),this.size+=a-o,this.Ut.addToCollectionParentIndex(t,r.path.popLast())},/**
     * Removes the specified entry from the cache and updates the cache size as appropriate.
     *
     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()`.
     */t.prototype.removeEntry=function(t){var e=this.docs.get(t);e&&(this.docs=this.docs.remove(t),this.size-=e.size)},t.prototype.getEntry=function(t,e){var n=this.docs.get(e);return fU.resolve(n?n.document.clone():hS.newInvalidDocument(e))},t.prototype.getEntries=function(t,e){var n=this,r=lq;return e.forEach(function(t){var e=n.docs.get(t);r=r.insert(t,e?e.document.clone():hS.newInvalidDocument(t))}),fU.resolve(r)},t.prototype.getDocumentsMatchingQuery=function(t,e,n){for(var r=lq,i=new hh(e.path.child("")),o=this.docs.getIteratorFrom(i);o.hasNext();){var a=o.getNext(),s=a.key,u=a.value,c=u.document,h=u.readTime;if(!e.path.isPrefixOf(s.path))break;0>=h.compareTo(n)||h3(e,c)&&(r=r.insert(c.key,c.clone()))}return fU.resolve(r)},t.prototype.fs=function(t,e){return fU.forEach(this.docs,function(t){return e(t)})},t.prototype.newChangeBuffer=function(t){// `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps
// a separate changelog and does not need special handling for removals.
return new p8(this)},t.prototype.getSize=function(t){return fU.resolve(this.size)},t}(),p8=/** @class */function(t){function e(e){var n=this;return(n=t.call(this)||this).Ie=e,n}return B(e,t),e.prototype.applyChanges=function(t){var e=this,n=[];return this.changes.forEach(function(r,i){i.document.isValidDocument()?n.push(e.Ie.addEntry(t,i.document,e.getReadTime(r))):e.Ie.removeEntry(r)}),fU.waitFor(n)},e.prototype.getFromCache=function(t,e){return this.Ie.getEntry(t,e)},e.prototype.getAllFromCache=function(t,e){return this.Ie.getEntries(t,e)},e}(pR),p7=/** @class */function(){function t(t){this.persistence=t,/**
             * Maps a target to the data about that target
             */this.ds=new pA(function(t){return hN(t)},hA),/** The last received snapshot version. */this.lastRemoteSnapshotVersion=c1.min(),/** The highest numbered target ID encountered. */this.highestTargetId=0,/** The highest sequence number encountered. */this.ws=0,/**
             * A ordered bidirectional mapping between documents and the remote target
             * IDs.
             */this._s=new p4,this.targetCount=0,this.ys=pm.Jt()}return t.prototype.forEachTarget=function(t,e){return this.ds.forEach(function(t,n){return e(n)}),fU.resolve()},t.prototype.getLastRemoteSnapshotVersion=function(t){return fU.resolve(this.lastRemoteSnapshotVersion)},t.prototype.getHighestSequenceNumber=function(t){return fU.resolve(this.ws)},t.prototype.allocateTargetId=function(t){return this.highestTargetId=this.ys.next(),fU.resolve(this.highestTargetId)},t.prototype.setTargetsMetadata=function(t,e,n){return n&&(this.lastRemoteSnapshotVersion=n),e>this.ws&&(this.ws=e),fU.resolve()},t.prototype.te=function(t){this.ds.set(t.target,t);var e=t.targetId;e>this.highestTargetId&&(this.ys=new pm(e),this.highestTargetId=e),t.sequenceNumber>this.ws&&(this.ws=t.sequenceNumber)},t.prototype.addTargetData=function(t,e){return this.te(e),this.targetCount+=1,fU.resolve()},t.prototype.updateTargetData=function(t,e){return this.te(e),fU.resolve()},t.prototype.removeTargetData=function(t,e){return this.ds.delete(e.target),this._s.Zn(e.targetId),this.targetCount-=1,fU.resolve()},t.prototype.removeTargets=function(t,e,n){var r=this,i=0,o=[];return this.ds.forEach(function(a,s){s.sequenceNumber<=e&&null===n.get(s.targetId)&&(r.ds.delete(a),o.push(r.removeMatchingKeysForTargetId(t,s.targetId)),i++)}),fU.waitFor(o).next(function(){return i})},t.prototype.getTargetCount=function(t){return fU.resolve(this.targetCount)},t.prototype.getTargetData=function(t,e){var n=this.ds.get(e)||null;return fU.resolve(n)},t.prototype.addMatchingKeys=function(t,e,n){return this._s.Jn(e,n),fU.resolve()},t.prototype.removeMatchingKeys=function(t,e,n){this._s.Xn(e,n);var r=this.persistence.referenceDelegate,i=[];return r&&e.forEach(function(e){i.push(r.markPotentiallyOrphaned(t,e))}),fU.waitFor(i)},t.prototype.removeMatchingKeysForTargetId=function(t,e){return this._s.Zn(e),fU.resolve()},t.prototype.getMatchingKeysForTargetId=function(t,e){var n=this._s.es(e);return fU.resolve(n)},t.prototype.containsKey=function(t,e){return fU.resolve(this._s.containsKey(e))},t}(),p9=/** @class */function(){/**
     * The constructor accepts a factory for creating a reference delegate. This
     * allows both the delegate and this instance to have strong references to
     * each other without having nullable fields that would then need to be
     * checked or asserted on every access.
     */function t(t,e){var n,r=this;this.gs={},this.Ne=new cV(0),this.xe=!1,this.xe=!0,this.referenceDelegate=t(this),this.qe=new p7(this),this.Ut=new pi,this.Ue=(n=this.Ut,new p5(n,function(t){return r.referenceDelegate.ps(t)})),this.R=new f0(e),this.Ke=new p2(this.R)}return t.prototype.start=function(){return Promise.resolve()},t.prototype.shutdown=function(){// No durable state to ensure is closed on shutdown.
return this.xe=!1,Promise.resolve()},Object.defineProperty(t.prototype,"started",{get:function(){return this.xe},enumerable:!1,configurable:!0}),t.prototype.setDatabaseDeletedListener=function(){// No op.
},t.prototype.setNetworkEnabled=function(){// No op.
},t.prototype.getIndexManager=function(){return this.Ut},t.prototype.getMutationQueue=function(t){var e=this.gs[t.toKey()];return e||(e=new p6(this.Ut,this.referenceDelegate),this.gs[t.toKey()]=e),e},t.prototype.getTargetCache=function(){return this.qe},t.prototype.getRemoteDocumentCache=function(){return this.Ue},t.prototype.getBundleCache=function(){return this.Ke},t.prototype.runTransaction=function(t,e,n){var r=this;cz("MemoryPersistence","Starting transaction:",t);var i=new dt(this.Ne.next());return this.referenceDelegate.Es(),n(i).next(function(t){return r.referenceDelegate.Ts(i).next(function(){return t})}).toPromise().then(function(t){return i.raiseOnCommittedEvent(),t})},t.prototype.Is=function(t,e){return fU.or(Object.values(this.gs).map(function(n){return function(){return n.containsKey(t,e)}}))},t}(),dt=/** @class */function(t){function e(e){var n=this;return(n=t.call(this)||this).currentSequenceNumber=e,n}return B(e,t),e}(fF),de=/** @class */function(){function t(t){this.persistence=t,/** Tracks all documents that are active in Query views. */this.As=new p4,/** The list of documents that are potentially GCed after each transaction. */this.Rs=null}return t.bs=function(e){return new t(e)},Object.defineProperty(t.prototype,"vs",{get:function(){if(this.Rs)return this.Rs;throw cY()},enumerable:!1,configurable:!0}),t.prototype.addReference=function(t,e,n){return this.As.addReference(n,e),this.vs.delete(n.toString()),fU.resolve()},t.prototype.removeReference=function(t,e,n){return this.As.removeReference(n,e),this.vs.add(n.toString()),fU.resolve()},t.prototype.markPotentiallyOrphaned=function(t,e){return this.vs.add(e.toString()),fU.resolve()},t.prototype.removeTarget=function(t,e){var n=this;this.As.Zn(e.targetId).forEach(function(t){return n.vs.add(t.toString())});var r=this.persistence.getTargetCache();return r.getMatchingKeysForTargetId(t,e.targetId).next(function(t){t.forEach(function(t){return n.vs.add(t.toString())})}).next(function(){return r.removeTargetData(t,e)})},t.prototype.Es=function(){this.Rs=new Set},t.prototype.Ts=function(t){var e=this,n=this.persistence.getRemoteDocumentCache().newChangeBuffer();// Remove newly orphaned documents.
return fU.forEach(this.vs,function(r){var i=hh.fromPath(r);return e.Ps(t,i).next(function(t){t||n.removeEntry(i)})}).next(function(){return e.Rs=null,n.apply(t)})},t.prototype.updateLimboDocument=function(t,e){var n=this;return this.Ps(t,e).next(function(t){t?n.vs.delete(e.toString()):n.vs.add(e.toString())})},t.prototype.ps=function(t){// For eager GC, we don't care about the document size, there are no size thresholds.
return 0},t.prototype.Ps=function(t,e){var n=this;return fU.or([function(){return fU.resolve(n.As.containsKey(e))},function(){return n.persistence.getTargetCache().containsKey(t,e)},function(){return n.persistence.Is(t,e)}])},t}(),dn=/** @class */function(){function t(t){this.uid=t}return t.prototype.isAuthenticated=function(){return null!=this.uid},/**
     * Returns a key representing this user, suitable for inclusion in a
     * dictionary.
     */t.prototype.toKey=function(){return this.isAuthenticated()?"uid:"+this.uid:"anonymous-user"},t.prototype.isEqual=function(t){return t.uid===this.uid},t}();/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A collection of references to a document from some kind of numbered entity
 * (either a target ID or batch ID). As references are added to or removed from
 * the set corresponding events are emitted to a registered garbage collector.
 *
 * Each reference is represented by a DocumentReference object. Each of them
 * contains enough information to uniquely identify the reference. They are all
 * stored primarily in a set sorted by key. A document is considered garbage if
 * there's no references in that set (this can be efficiently checked thanks to
 * sorting by key).
 *
 * ReferenceSet also keeps a secondary set that contains references sorted by
 * IDs. This one is used to efficiently implement removal of all references by
 * some target ID.
 *//** Assembles the key for a client state in WebStorage */function dr(t,e){return"firestore_clients_"+t+"_"+e}// The format of the WebStorage key that stores the mutation state is:
//     firestore_mutations_<persistence_prefix>_<batch_id>
//     (for unauthenticated users)
// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>
// 'user_uid' is last to avoid needing to escape '_' characters that it might
// contain.
/** Assembles the key for a mutation batch in WebStorage */function di(t,e,n){var r="firestore_mutations_"+t+"_"+n;return e.isAuthenticated()&&(r+="_"+e.uid),r}// The format of the WebStorage key that stores a query target's metadata is:
//     firestore_targets_<persistence_prefix>_<target_id>
/** Assembles the key for a query state in WebStorage */function da(t,e){return"firestore_targets_"+t+"_"+e}// The WebStorage prefix that stores the primary tab's online state. The
// format of the key is:
//     firestore_online_state_<persistence_prefix>
/**
 * Holds the state of a mutation batch, including its user ID, batch ID and
 * whether the batch is 'pending', 'acknowledged' or 'rejected'.
 */// Visible for testing
/** A user with a null UID. */dn.UNAUTHENTICATED=new dn(null),// non-FirebaseAuth providers.
dn.GOOGLE_CREDENTIALS=new dn("google-credentials-uid"),dn.FIRST_PARTY=new dn("first-party-uid"),dn.MOCK_USER=new dn("mock-user");var ds=/** @class */function(){function t(t,e,n,r){this.user=t,this.batchId=e,this.state=n,this.error=r/**
     * Parses a MutationMetadata from its JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */}return t.Vs=function(e,n,r){var i,o=JSON.parse(r),a="object"==typeof o&&-1!==["pending","acknowledged","rejected"].indexOf(o.state)&&(void 0===o.error||"object"==typeof o.error);return a&&o.error&&(a="string"==typeof o.error.message&&"string"==typeof o.error.code)&&(i=new cK(o.error.code,o.error.message)),a?new t(e,n,o.state,i):(cG("SharedClientState","Failed to parse mutation state for ID '"+n+"': "+r),null)},t.prototype.Ss=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t)},t}(),du=/** @class */function(){function t(t,e,n){this.targetId=t,this.state=e,this.error=n/**
     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */}return t.Vs=function(e,n){var r,i=JSON.parse(n),o="object"==typeof i&&-1!==["not-current","current","rejected"].indexOf(i.state)&&(void 0===i.error||"object"==typeof i.error);return o&&i.error&&(o="string"==typeof i.error.message&&"string"==typeof i.error.code)&&(r=new cK(i.error.code,i.error.message)),o?new t(e,i.state,r):(cG("SharedClientState","Failed to parse target state for ID '"+e+"': "+n),null)},t.prototype.Ss=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t)},t}(),dc=/** @class */function(){function t(t,e){this.clientId=t,this.activeTargetIds=e/**
     * Parses a RemoteClientState from the JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */}return t.Vs=function(e,n){for(var r=JSON.parse(n),i="object"==typeof r&&r.activeTargetIds instanceof Array,o=lW,a=0;i&&a<r.activeTargetIds.length;++a)i=hc(r.activeTargetIds[a]),o=o.add(r.activeTargetIds[a]);return i?new t(e,o):(cG("SharedClientState","Failed to parse client data for instance '"+e+"': "+n),null)},t}(),dh=/** @class */function(){function t(t,e){this.clientId=t,this.onlineState=e/**
     * Parses a SharedOnlineState from its JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */}return t.Vs=function(e){var n=JSON.parse(e);return"object"==typeof n&&-1!==["Unknown","Online","Offline"].indexOf(n.onlineState)&&"string"==typeof n.clientId?new t(n.clientId,n.onlineState):(cG("SharedClientState","Failed to parse online state: "+e),null)},t}(),dl=/** @class */function(){function t(){this.activeTargetIds=lW}return t.prototype.Ds=function(t){this.activeTargetIds=this.activeTargetIds.add(t)},t.prototype.Cs=function(t){this.activeTargetIds=this.activeTargetIds.delete(t)},/**
     * Converts this entry into a JSON-encoded format we can use for WebStorage.
     * Does not encode `clientId` as it is part of the key in WebStorage.
     */t.prototype.Ss=function(){return JSON.stringify({activeTargetIds:this.activeTargetIds.toArray(),updateTimeMs:Date.now()})},t}(),df=/** @class */function(){function t(t,e,n,r,i){this.window=t,this.Se=e,this.persistenceKey=n,this.Ns=r,this.syncEngine=null,this.onlineStateHandler=null,this.sequenceNumberHandler=null,this.xs=this.ks.bind(this),this.Fs=new lL(cJ),this.started=!1,/**
             * Captures WebStorage events that occur before `start()` is called. These
             * events are replayed once `WebStorageSharedClientState` is started.
             */this.$s=[];// Escape the special characters mentioned here:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
var o=n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");this.storage=this.window.localStorage,this.currentUser=i,this.Os=dr(this.persistenceKey,this.Ns),this.Ms="firestore_sequence_number_"+this.persistenceKey,this.Fs=this.Fs.insert(this.Ns,new dl),this.Ls=RegExp("^firestore_clients_"+o+"_([^_]*)$"),this.Bs=RegExp("^firestore_mutations_"+o+"_(\\d+)(?:_(.*))?$"),this.qs=RegExp("^firestore_targets_"+o+"_(\\d+)$"),this.Us="firestore_online_state_"+this.persistenceKey,this.Ks="firestore_bundle_loaded_"+this.persistenceKey,// storage observer during initialization. This ensures that we collect
// events before other components populate their initial state (during their
// respective start() calls). Otherwise, we might for example miss a
// mutation that is added after LocalStore's start() processed the existing
// mutations but before we observe WebStorage events.
this.window.addEventListener("storage",this.xs)}/** Returns 'true' if WebStorage is available in the current environment. */return t.yt=function(t){return!(!t||!t.localStorage)},t.prototype.start=function(){return H(this,void 0,void 0,function(){var t,e,n,r,i,o,a,s,u,c,h,l=this;return W(this,function(f){switch(f.label){case 0:return[4/*yield*/,this.syncEngine.fn()];case 1:for(t=f.sent(),e=0,n=t;e<n.length;e++)(r=n[e])!==this.Ns&&(i=this.getItem(dr(this.persistenceKey,r)))&&(o=dc.Vs(r,i))&&(this.Fs=this.Fs.insert(o.clientId,o));for(this.Qs(),(a=this.storage.getItem(this.Us))&&(s=this.js(a))&&this.Ws(s),u=0,c=this.$s;u<c.length;u++)h=c[u],this.ks(h);return this.$s=[],// WebStorage even if `shutdown()` was not called.
this.window.addEventListener("pagehide",function(){return l.shutdown()}),this.started=!0,[2/*return*/]}})})},t.prototype.writeSequenceNumber=function(t){this.setItem(this.Ms,JSON.stringify(t))},t.prototype.getAllActiveQueryTargets=function(){return this.Gs(this.Fs)},t.prototype.isActiveQueryTarget=function(t){var e=!1;return this.Fs.forEach(function(n,r){r.activeTargetIds.has(t)&&(e=!0)}),e},t.prototype.addPendingMutation=function(t){this.zs(t,"pending")},t.prototype.updateMutationState=function(t,e,n){this.zs(t,e,n),// access the mutation's metadata entry. Since WebStorage replays events
// in order, it is safe to delete the entry right after updating it.
this.Hs(t)},t.prototype.addLocalQueryTarget=function(t){var e="not-current";// Lookup an existing query state if the target ID was already registered
// by another tab
if(this.isActiveQueryTarget(t)){var n=this.storage.getItem(da(this.persistenceKey,t));if(n){var r=du.Vs(t,n);r&&(e=r.state)}}return this.Js.Ds(t),this.Qs(),e},t.prototype.removeLocalQueryTarget=function(t){this.Js.Cs(t),this.Qs()},t.prototype.isLocalQueryTarget=function(t){return this.Js.activeTargetIds.has(t)},t.prototype.clearQueryState=function(t){this.removeItem(da(this.persistenceKey,t))},t.prototype.updateQueryState=function(t,e,n){this.Ys(t,e,n)},t.prototype.handleUserChange=function(t,e,n){var r=this;e.forEach(function(t){r.Hs(t)}),this.currentUser=t,n.forEach(function(t){r.addPendingMutation(t)})},t.prototype.setOnlineState=function(t){this.Xs(t)},t.prototype.notifyBundleLoaded=function(){this.Zs()},t.prototype.shutdown=function(){this.started&&(this.window.removeEventListener("storage",this.xs),this.removeItem(this.Os),this.started=!1)},t.prototype.getItem=function(t){var e=this.storage.getItem(t);return cz("SharedClientState","READ",t,e),e},t.prototype.setItem=function(t,e){cz("SharedClientState","SET",t,e),this.storage.setItem(t,e)},t.prototype.removeItem=function(t){cz("SharedClientState","REMOVE",t),this.storage.removeItem(t)},t.prototype.ks=function(t){var e=this;// Note: The function is typed to take Event to be interface-compatible with
// `Window.addEventListener`.
if(t.storageArea===this.storage){if(cz("SharedClientState","EVENT",t.key,t.newValue),t.key===this.Os)return void cG("Received WebStorage notification for local change. Another client might have garbage-collected our state");this.Se.enqueueRetryable(function(){return H(e,void 0,void 0,function(){var e,n,r,i,o,a;return W(this,function(s){if(this.started){if(null!==t.key){if(this.Ls.test(t.key)){if(null==t.newValue)return e=this.ti(t.key),[2/*return*/,this.ei(e,null)];if(n=this.ni(t.key,t.newValue))return[2/*return*/,this.ei(n.clientId,n)]}else if(this.Bs.test(t.key)){if(null!==t.newValue&&(r=this.si(t.key,t.newValue)))return[2/*return*/,this.ii(r)]}else if(this.qs.test(t.key)){if(null!==t.newValue&&(i=this.ri(t.key,t.newValue)))return[2/*return*/,this.oi(i)]}else if(t.key===this.Us){if(null!==t.newValue&&(o=this.js(t.newValue)))return[2/*return*/,this.Ws(o)]}else if(t.key===this.Ms)(a=function(t){var e=cV.o;if(null!=t)try{var n=JSON.parse(t);"number"==typeof n||cY(),e=n}catch(t){cG("SharedClientState","Failed to read sequence number from WebStorage",t)}return e}(t.newValue))!==cV.o&&this.sequenceNumberHandler(a);else if(t.key===this.Ks)return[2/*return*/,this.syncEngine.ci()]}}else this.$s.push(t);return[2/*return*/]})})})}},Object.defineProperty(t.prototype,"Js",{get:function(){return this.Fs.get(this.Ns)},enumerable:!1,configurable:!0}),t.prototype.Qs=function(){this.setItem(this.Os,this.Js.Ss())},t.prototype.zs=function(t,e,n){var r=new ds(this.currentUser,t,e,n),i=di(this.persistenceKey,this.currentUser,t);this.setItem(i,r.Ss())},t.prototype.Hs=function(t){var e=di(this.persistenceKey,this.currentUser,t);this.removeItem(e)},t.prototype.Xs=function(t){var e={clientId:this.Ns,onlineState:t};this.storage.setItem(this.Us,JSON.stringify(e))},t.prototype.Ys=function(t,e,n){var r=da(this.persistenceKey,t),i=new du(t,e,n);this.setItem(r,i.Ss())},t.prototype.Zs=function(){this.setItem(this.Ks,"value-not-used")},/**
     * Parses a client state key in WebStorage. Returns null if the key does not
     * match the expected key format.
     */t.prototype.ti=function(t){var e=this.Ls.exec(t);return e?e[1]:null},/**
     * Parses a client state in WebStorage. Returns 'null' if the value could not
     * be parsed.
     */t.prototype.ni=function(t,e){var n=this.ti(t);return dc.Vs(n,e)},/**
     * Parses a mutation batch state in WebStorage. Returns 'null' if the value
     * could not be parsed.
     */t.prototype.si=function(t,e){var n=this.Bs.exec(t),r=Number(n[1]),i=void 0!==n[2]?n[2]:null;return ds.Vs(new dn(i),r,e)},/**
     * Parses a query target state from WebStorage. Returns 'null' if the value
     * could not be parsed.
     */t.prototype.ri=function(t,e){var n=Number(this.qs.exec(t)[1]);return du.Vs(n,e)},/**
     * Parses an online state from WebStorage. Returns 'null' if the value
     * could not be parsed.
     */t.prototype.js=function(t){return dh.Vs(t)},t.prototype.ii=function(t){return H(this,void 0,void 0,function(){return W(this,function(e){return t.user.uid===this.currentUser.uid?[2/*return*/,this.syncEngine.ui(t.batchId,t.state,t.error)]:(cz("SharedClientState","Ignoring mutation for non-active user "+t.user.uid),[2/*return*/])})})},t.prototype.oi=function(t){return this.syncEngine.ai(t.targetId,t.state,t.error)},t.prototype.ei=function(t,e){var n=this,r=e?this.Fs.insert(t,e):this.Fs.remove(t),i=this.Gs(this.Fs),o=this.Gs(r),a=[],s=[];return o.forEach(function(t){i.has(t)||a.push(t)}),i.forEach(function(t){o.has(t)||s.push(t)}),this.syncEngine.hi(a,s).then(function(){n.Fs=r})},t.prototype.Ws=function(t){// We check whether the client that wrote this online state is still active
// by comparing its client ID to the list of clients kept active in
// IndexedDb. If a client does not update their IndexedDb client state
// within 5 seconds, it is considered inactive and we don't emit an online
// state event.
this.Fs.get(t.clientId)&&this.onlineStateHandler(t.onlineState)},t.prototype.Gs=function(t){var e=lW;return t.forEach(function(t,n){e=e.unionWith(n.activeTargetIds)}),e},t}(),dp=/** @class */function(){function t(){this.li=new dl,this.fi={},this.onlineStateHandler=null,this.sequenceNumberHandler=null}return t.prototype.addPendingMutation=function(t){// No op.
},t.prototype.updateMutationState=function(t,e,n){// No op.
},t.prototype.addLocalQueryTarget=function(t){return this.li.Ds(t),this.fi[t]||"not-current"},t.prototype.updateQueryState=function(t,e,n){this.fi[t]=e},t.prototype.removeLocalQueryTarget=function(t){this.li.Cs(t)},t.prototype.isLocalQueryTarget=function(t){return this.li.activeTargetIds.has(t)},t.prototype.clearQueryState=function(t){delete this.fi[t]},t.prototype.getAllActiveQueryTargets=function(){return this.li.activeTargetIds},t.prototype.isActiveQueryTarget=function(t){return this.li.activeTargetIds.has(t)},t.prototype.start=function(){return this.li=new dl,Promise.resolve()},t.prototype.handleUserChange=function(t,e,n){// No op.
},t.prototype.setOnlineState=function(t){// No op.
},t.prototype.shutdown=function(){},t.prototype.writeSequenceNumber=function(t){},t.prototype.notifyBundleLoaded=function(){// No op.
},t}(),dd=/** @class */function(){function t(){}return t.prototype.di=function(t){// No-op.
},t.prototype.shutdown=function(){// No-op.
},t}(),dv=/** @class */function(){function t(){var t=this;this.wi=function(){return t._i()},this.mi=function(){return t.yi()},this.gi=[],this.pi()}return t.prototype.di=function(t){this.gi.push(t)},t.prototype.shutdown=function(){window.removeEventListener("online",this.wi),window.removeEventListener("offline",this.mi)},t.prototype.pi=function(){window.addEventListener("online",this.wi),window.addEventListener("offline",this.mi)},t.prototype._i=function(){cz("ConnectivityMonitor","Network connectivity changed: AVAILABLE");for(var t=0,e=this.gi;t<e.length;t++)(0,e[t])(0/* AVAILABLE */)},t.prototype.yi=function(){cz("ConnectivityMonitor","Network connectivity changed: UNAVAILABLE");for(var t=0,e=this.gi;t<e.length;t++)(0,e[t])(1/* UNAVAILABLE */)},// here for testing via FakeWindow.
/** Checks that all used attributes of window are available. */t.yt=function(){return"undefined"!=typeof window&&void 0!==window.addEventListener&&void 0!==window.removeEventListener},t}(),dg={BatchGetDocuments:"batchGet",Commit:"commit",RunQuery:"runQuery"},dm=/** @class */function(){function t(t){this.Ei=t.Ei,this.Ti=t.Ti}return t.prototype.Ii=function(t){this.Ai=t},t.prototype.Ri=function(t){this.bi=t},t.prototype.onMessage=function(t){this.vi=t},t.prototype.close=function(){this.Ti()},t.prototype.send=function(t){this.Ei(t)},t.prototype.Pi=function(){this.Ai()},t.prototype.Vi=function(t){this.bi(t)},t.prototype.Si=function(t){this.vi(t)},t}(),dy=/** @class */function(t){function e(e){var n=this;return(n=t.call(this,e)||this).forceLongPolling=e.forceLongPolling,n.autoDetectLongPolling=e.autoDetectLongPolling,n.useFetchStreams=e.useFetchStreams,n}/**
     * Base class for all Rest-based connections to the backend (WebChannel and
     * HTTP).
     */return B(e,t),e.prototype.Fi=function(t,e,n,r){return new Promise(function(i,o){var a=new ct;a.listenOnce(s6.COMPLETE,function(){try{switch(a.getLastErrorCode()){case s3.NO_ERROR:var e=a.getResponseJson();cz("Connection","XHR received:",JSON.stringify(e)),i(e);break;case s3.TIMEOUT:cz("Connection",'RPC "'+t+'" timed out'),o(new cK(cB.DEADLINE_EXCEEDED,"Request time out"));break;case s3.HTTP_ERROR:var n=a.getStatus();if(cz("Connection",'RPC "'+t+'" failed with status:',n,"response text:",a.getResponseText()),n>0){var r=a.getResponseJson().error;if(r&&r.status&&r.message){var s,u=(s=r.status.toLowerCase().replace(/_/g,"-"),Object.values(cB).indexOf(s)>=0?s:cB.UNKNOWN);o(new cK(u,r.message))}else o(new cK(cB.UNKNOWN,"Server responded with status "+a.getStatus()))}else // it's most probably a connection issue
o(new cK(cB.UNAVAILABLE,"Connection failed."));break;default:cY()}}finally{cz("Connection",'RPC "'+t+'" completed.')}});var s=JSON.stringify(r);a.send(e,"POST",s,n,15)})},e.prototype.Oi=function(t,e){var n,r=[this.Di,"/","google.firestore.v1.Firestore","/",t,"/channel"],i=new cL,o=sX(),a={// Required for backend stickiness, routing behavior is based on this
// parameter.
httpSessionIdParam:"gsessionid",initMessageHeaders:{},messageUrlParams:{// This param is used to improve routing and project isolation by the
// backend and must be included in every request.
database:"projects/"+this.databaseId.projectId+"/databases/"+this.databaseId.database},sendRawJson:!0,supportsCrossDomainXhr:!0,internalChannelParams:{// Override the default timeout (randomized between 10-20 seconds) since
// a large write batch on a slow internet connection may take a long
// time to send to the backend. Rather than have WebChannel impose a
// tight timeout which could lead to infinite timeouts and retries, we
// set it very large (5-10 minutes) and rely on the browser's builtin
// timeouts to kick in if the request isn't working.
forwardChannelRequestTimeoutMs:6e5},forceLongPolling:this.forceLongPolling,detectBufferingProxy:this.autoDetectLongPolling};this.useFetchStreams&&(a.xmlHttpFactory=new u4({})),this.ki(a.initMessageHeaders,e),tu()||tl()||ts().indexOf("Electron/")>=0||(n=ts()).indexOf("MSIE ")>=0||n.indexOf("Trident/")>=0||ts().indexOf("MSAppHost/")>=0||th()||(a.httpHeadersOverwriteParam="$httpHeaders");var s=r.join("");cz("Connection","Creating WebChannel: "+s,a);var u=i.createWebChannel(s,a),c=!1,h=!1,l=new dm({Ei:function(t){h?cz("Connection","Not sending because WebChannel is closed:",t):(c||(cz("Connection","Opening WebChannel transport."),u.open(),c=!0),cz("Connection","WebChannel sending:",t),u.send(t))},Ti:function(){return u.close()}}),f=function(t,e,n){// TODO(dimond): closure typing seems broken because WebChannel does
// not implement goog.events.Listenable
t.listen(e,function(t){try{n(t)}catch(t){setTimeout(function(){throw t},0)}})};// WebChannel supports sending the first message with the handshake - saving
// a network round trip. However, it will have to call send in the same
// JS event loop as open. In order to enforce this, we delay actually
// opening the WebChannel until send is called. Whether we have called
// open is tracked with this variable.
// Closure events are guarded and exceptions are swallowed, so catch any
// exception and rethrow using a setTimeout so they become visible again.
// Note that eventually this function could go away if we are confident
// enough the code is exception free.
return f(u,s7.EventType.OPEN,function(){h||cz("Connection","WebChannel transport opened.")}),f(u,s7.EventType.CLOSE,function(){h||(h=!0,cz("Connection","WebChannel transport closed"),l.Vi())}),f(u,s7.EventType.ERROR,function(t){h||(h=!0,cQ("Connection","WebChannel transport errored:",t),l.Vi(new cK(cB.UNAVAILABLE,"The operation could not be completed")))}),f(u,s7.EventType.MESSAGE,function(t){var e;if(!h){var n=t.data[0];n||cY();// TODO(b/35143891): There is a bug in One Platform that caused errors
// (and only errors) to be wrapped in an extra array. To be forward
// compatible with the bug we need to check either condition. The latter
// can be removed once the fix has been rolled out.
// Use any because msgData.error is not typed.
var r=n.error||(null===(e=n[0])||void 0===e?void 0:e.error);if(r){cz("Connection","WebChannel received error:",r);// error.status will be a string like 'OK' or 'NOT_FOUND'.
var i=r.status,o=/**
 * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.
 *
 * @returns The Code equivalent to the given status string or undefined if
 *     there is no match.
 */function(t){// lookup by string
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var e=lN[t];if(void 0!==e)return lO(e)}(i),a=r.message;void 0===o&&(o=cB.INTERNAL,a="Unknown error status: "+i+" with message "+r.message),h=!0,l.Vi(new cK(o,a)),u.close()}else cz("Connection","WebChannel received:",n),l.Si(n)}}),f(o,s$.STAT_EVENT,function(t){t.stat===cq.PROXY?cz("Connection","Detected buffering proxy"):t.stat===cq.NOPROXY&&cz("Connection","Detected no buffering proxy")}),setTimeout(function(){// Technically we could/should wait for the WebChannel opened event,
// but because we want to send the first message with the WebChannel
// handshake we pretend the channel opened here (asynchronously), and
// then delay the actual open until the first message is sent.
l.Pi()},0),l},e}(/** @class */function(){function t(t){this.databaseInfo=t,this.databaseId=t.databaseId;var e=t.ssl?"https":"http";this.Di=e+"://"+t.host,this.Ci="projects/"+this.databaseId.projectId+"/databases/"+this.databaseId.database+"/documents"}return t.prototype.Ni=function(t,e,n,r){var i=this.xi(t,e);cz("RestConnection","Sending: ",i,n);var o={};return this.ki(o,r),this.Fi(t,i,o,n).then(function(t){return cz("RestConnection","Received: ",t),t},function(e){throw cQ("RestConnection",t+" failed with error: ",e,"url: ",i,"request:",n),e})},t.prototype.$i=function(t,e,n,r){// The REST API automatically aggregates all of the streamed results, so we
// can just use the normal invoke() method.
return this.Ni(t,e,n,r)},/**
     * Modifies the headers for a request, adding any authorization token if
     * present and any additional headers for the request.
     */t.prototype.ki=function(t,e){if(t["X-Goog-Api-Client"]="gl-js/ fire/8.10.1",// mess with CORS and redirects by proxies. If we add custom headers
// we will need to change this code to potentially use the $httpOverwrite
// parameter supported by ESF to avoid triggering preflight requests.
t["Content-Type"]="text/plain",this.databaseInfo.appId&&(t["X-Firebase-GMPID"]=this.databaseInfo.appId),e)for(var n in e.authHeaders)e.authHeaders.hasOwnProperty(n)&&(t[n]=e.authHeaders[n])},t.prototype.xi=function(t,e){var n=dg[t];return this.Di+"/v1/"+e+":"+n},t}());/**
 * Holds the state of a query target, including its target ID and whether the
 * target is 'not-current', 'current' or 'rejected'.
 */// Visible for testing
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Initializes the WebChannelConnection for the browser. *//**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** The Platform's 'window' implementation or null if not available. */function d_(){// `window` is not always available, e.g. in ReactNative and WebWorkers.
// eslint-disable-next-line no-restricted-globals
return"undefined"!=typeof window?window:null}/** The Platform's 'document' implementation or null if not available. */function db(){// `document` is not always available, e.g. in ReactNative and WebWorkers.
// eslint-disable-next-line no-restricted-globals
return"undefined"!=typeof document?document:null}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function dw(t){return new l4(t,/* useProto3Json= */!0)}/**
 * An instance of the Platform's 'TextEncoder' implementation.
 *//**
 * A helper for running delayed tasks following an exponential backoff curve
 * between attempts.
 *
 * Each delay is made up of a "base" delay which follows the exponential
 * backoff curve, and a +/- 50% "jitter" that is calculated and added to the
 * base delay. This prevents clients from accidentally synchronizing their
 * delays causing spikes of load to the backend.
 */var dI=/** @class */function(){function t(/**
     * The AsyncQueue to run backoff operations on.
     */t,/**
     * The ID to use when scheduling backoff operations on the AsyncQueue.
     */e,/**
     * The initial delay (used as the base delay on the first retry attempt).
     * Note that jitter will still be applied, so the actual delay could be as
     * little as 0.5*initialDelayMs.
     */n,r,i){void 0===n&&(n=1e3),void 0===r&&(r=1.5),void 0===i&&(i=6e4),this.Se=t,this.timerId=e,this.Mi=n,this.Li=r,this.Bi=i,this.qi=0,this.Ui=null,/** The last backoff attempt, as epoch milliseconds. */this.Ki=Date.now(),this.reset()}/**
     * Resets the backoff delay.
     *
     * The very next backoffAndWait() will have no delay. If it is called again
     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and
     * subsequent ones will increase according to the backoffFactor.
     */return t.prototype.reset=function(){this.qi=0},/**
     * Resets the backoff delay to the maximum delay (e.g. for use after a
     * RESOURCE_EXHAUSTED error).
     */t.prototype.Qi=function(){this.qi=this.Bi},/**
     * Returns a promise that resolves after currentDelayMs, and increases the
     * delay for any subsequent attempts. If there was a pending backoff operation
     * already, it will be canceled.
     */t.prototype.ji=function(t){var e=this;// Cancel any pending backoff operation.
this.cancel();// First schedule using the current base (which may be 0 and should be
// honored as such).
var n=Math.floor(this.qi+this.Wi()),r=Math.max(0,Date.now()-this.Ki),i=Math.max(0,n-r);// Guard against lastAttemptTime being in the future due to a clock change.
i>0&&cz("ExponentialBackoff","Backing off for "+i+" ms (base delay: "+this.qi+" ms, delay with jitter: "+n+" ms, last attempt: "+r+" ms ago)"),this.Ui=this.Se.enqueueAfterDelay(this.timerId,i,function(){return e.Ki=Date.now(),t()}),// bounds.
this.qi*=this.Li,this.qi<this.Mi&&(this.qi=this.Mi),this.qi>this.Bi&&(this.qi=this.Bi)},t.prototype.Gi=function(){null!==this.Ui&&(this.Ui.skipDelay(),this.Ui=null)},t.prototype.cancel=function(){null!==this.Ui&&(this.Ui.cancel(),this.Ui=null)},/** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */t.prototype.Wi=function(){return(Math.random()-.5)*this.qi},t}(),dT=/** @class */function(){function t(t,e,n,r,i,o){this.Se=t,this.zi=n,this.Hi=r,this.Ji=i,this.listener=o,this.state=0/* Initial */,/**
             * A close count that's incremented every time the stream is closed; used by
             * getCloseGuardedDispatcher() to invalidate callbacks that happen after
             * close.
             */this.Yi=0,this.Xi=null,this.stream=null,this.Zi=new dI(t,e)/**
     * Returns true if start() has been called and no error has occurred. True
     * indicates the stream is open or in the process of opening (which
     * encompasses respecting backoff, getting auth tokens, and starting the
     * actual RPC). Use isOpen() to determine if the stream is open and ready for
     * outbound requests.
     */}return t.prototype.tr=function(){return 1/* Starting */===this.state||2/* Open */===this.state||4/* Backoff */===this.state},/**
     * Returns true if the underlying RPC is open (the onOpen() listener has been
     * called) and the stream is ready for outbound requests.
     */t.prototype.er=function(){return 2/* Open */===this.state},/**
     * Starts the RPC. Only allowed if isStarted() returns false. The stream is
     * not immediately ready for use: onOpen() will be invoked when the RPC is
     * ready for outbound requests, at which point isOpen() will return true.
     *
     * When start returns, isStarted() will return true.
     */t.prototype.start=function(){3/* Error */!==this.state?this.auth():this.nr()},/**
     * Stops the RPC. This call is idempotent and allowed regardless of the
     * current isStarted() state.
     *
     * When stop returns, isStarted() and isOpen() will both return false.
     */t.prototype.stop=function(){return H(this,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:return this.tr()?[4/*yield*/,this.close(0/* Initial */)]:[3/*break*/,2];case 1:t.sent(),t.label=2;case 2:return[2/*return*/]}})})},/**
     * After an error the stream will usually back off on the next attempt to
     * start it. If the error warrants an immediate restart of the stream, the
     * sender can use this to indicate that the receiver should not back off.
     *
     * Each error will call the onClose() listener. That function can decide to
     * inhibit backoff if required.
     */t.prototype.sr=function(){this.state=0/* Initial */,this.Zi.reset()},/**
     * Marks this stream as idle. If no further actions are performed on the
     * stream for one minute, the stream will automatically close itself and
     * notify the stream's onClose() handler with Status.OK. The stream will then
     * be in a !isStarted() state, requiring the caller to start the stream again
     * before further use.
     *
     * Only streams that are in state 'Open' can be marked idle, as all other
     * states imply pending network operations.
     */t.prototype.ir=function(){var t=this;// Starts the idle time if we are in state 'Open' and are not yet already
// running a timer (in which case the previous idle timeout still applies).
this.er()&&null===this.Xi&&(this.Xi=this.Se.enqueueAfterDelay(this.zi,6e4,function(){return t.rr()}))},/** Sends a message to the underlying stream. */t.prototype.cr=function(t){this.ur(),this.stream.send(t)},/** Called by the idle timer when the stream should close due to inactivity. */t.prototype.rr=function(){return H(this,void 0,void 0,function(){return W(this,function(t){return this.er()?[2/*return*/,this.close(0/* Initial */)]:[2/*return*/]})})},/** Marks the stream as active again. */t.prototype.ur=function(){this.Xi&&(this.Xi.cancel(),this.Xi=null)},/**
     * Closes the stream and cleans up as necessary:
     *
     * * closes the underlying GRPC stream;
     * * calls the onClose handler with the given 'error';
     * * sets internal stream state to 'finalState';
     * * adjusts the backoff timer based on the error
     *
     * A new stream can be opened by calling start().
     *
     * @param finalState - the intended state of the stream after closing.
     * @param error - the error the connection was closed with.
     */t.prototype.close=function(t,e){return H(this,void 0,void 0,function(){return W(this,function(n){switch(n.label){case 0:// Notify the listener that the stream closed.
// Cancel any outstanding timers (they're guaranteed not to execute).
return this.ur(),this.Zi.cancel(),// underlying stream), guaranteeing they won't execute.
this.Yi++,3/* Error */!==t?this.Zi.reset():e&&e.code===cB.RESOURCE_EXHAUSTED?(cG(e.toString()),cG("Using maximum backoff delay to prevent overloading the backend."),this.Zi.Qi()):e&&e.code===cB.UNAUTHENTICATED&&// "unauthenticated" error means the token was rejected. Try force refreshing it in case it
// just expired.
this.Ji.invalidateToken(),null!==this.stream&&(this.ar(),this.stream.close(),this.stream=null),// inhibit backoff or otherwise manipulate the state in its non-started state.
this.state=t,[4/*yield*/,this.listener.Ri(e)];case 1:// Cancel any outstanding timers (they're guaranteed not to execute).
// Notify the listener that the stream closed.
return n.sent(),[2/*return*/]}})})},/**
     * Can be overridden to perform additional cleanup before the stream is closed.
     * Calling super.tearDown() is not required.
     */t.prototype.ar=function(){},t.prototype.auth=function(){var t=this;this.state=1/* Starting */;var e=this.hr(this.Yi),n=this.Yi;// TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.
this.Ji.getToken().then(function(e){// Stream can be stopped while waiting for authentication.
// TODO(mikelehen): We really should just use dispatchIfNotClosed
// and let this dispatch onto the queue, but that opened a spec test can
// of worms that I don't want to deal with in this PR.
t.Yi===n&&// Normally we'd have to schedule the callback on the AsyncQueue.
// However, the following calls are safe to be called outside the
// AsyncQueue since they don't chain asynchronous calls
t.lr(e)},function(n){e(function(){var e=new cK(cB.UNKNOWN,"Fetching auth token failed: "+n.message);return t.dr(e)})})},t.prototype.lr=function(t){var e=this,n=this.hr(this.Yi);this.stream=this.wr(t),this.stream.Ii(function(){n(function(){return e.state=2/* Open */,e.listener.Ii()})}),this.stream.Ri(function(t){n(function(){return e.dr(t)})}),this.stream.onMessage(function(t){n(function(){return e.onMessage(t)})})},t.prototype.nr=function(){var t=this;this.state=4/* Backoff */,this.Zi.ji(function(){return H(t,void 0,void 0,function(){return W(this,function(t){return this.state=0/* Initial */,this.start(),[2/*return*/]})})})},t.prototype.dr=function(t){// In theory the stream could close cleanly, however, in our current model
// we never expect this to happen because if we stop a stream ourselves,
// this callback will never be called. To prevent cases where we retry
// without a backoff accidentally, we set the stream to error in all cases.
return cz("PersistentStream","close with error: "+t),this.stream=null,this.close(3/* Error */,t)},/**
     * Returns a "dispatcher" function that dispatches operations onto the
     * AsyncQueue but only runs them if closeCount remains unchanged. This allows
     * us to turn auth / stream callbacks into no-ops if the stream is closed /
     * re-opened, etc.
     */t.prototype.hr=function(t){var e=this;return function(n){e.Se.enqueueAndForget(function(){return e.Yi===t?n():(cz("PersistentStream","stream callback skipped by getCloseGuardedDispatcher."),Promise.resolve())})}},t}(),dE=/** @class */function(t){function e(e,n,r,i,o){var a=this;return(a=t.call(this,e,"listen_stream_connection_backoff"/* ListenStreamConnectionBackoff */,"listen_stream_idle"/* ListenStreamIdle */,n,r,o)||this).R=i,a}return B(e,t),e.prototype.wr=function(t){return this.Hi.Oi("Listen",t)},e.prototype.onMessage=function(t){// A successful response means the stream is healthy
this.Zi.reset();var e=function(t,e){var n;if("targetChange"in e){e.targetChange;// proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'
// if unset
var r,i,o,a,s="NO_CHANGE"===(r=e.targetChange.targetChangeType||"NO_CHANGE")?0/* NoChange */:"ADD"===r?1/* Added */:"REMOVE"===r?2/* Removed */:"CURRENT"===r?3/* Current */:"RESET"===r?4/* Reset */:cY(),u=e.targetChange.targetIds||[],c=(i=e.targetChange.resumeToken,t.I?(void 0===i||"string"==typeof i||cY(),ht.fromBase64String(i||"")):(void 0===i||i instanceof Uint8Array||cY(),ht.fromUint8Array(i||new Uint8Array))),h=(l=e.targetChange.cause)&&(a=void 0===(o=l).code?cB.UNKNOWN:lO(o.code),new cK(a,o.message||""));n=new lY(s,u,c,h||null)}else if("documentChange"in e){e.documentChange,(s=e.documentChange).document,s.document.name,s.document.updateTime,u=ft(t,s.document.name),c=l5(s.document.updateTime);var l=new hE({mapValue:{fields:s.document.fields}}),f=(h=hS.newFoundDocument(u,c,l),s.targetIds||[]),p=s.removedTargetIds||[];n=new lQ(f,p,h.key,h)}else if("documentDelete"in e)e.documentDelete,(s=e.documentDelete).document,u=ft(t,s.document),c=s.readTime?l5(s.readTime):c1.min(),l=hS.newNoDocument(u,c),h=s.removedTargetIds||[],n=new lQ([],h,l.key,l);else if("documentRemove"in e)e.documentRemove,(s=e.documentRemove).document,u=ft(t,s.document),c=s.removedTargetIds||[],n=new lQ([],c,u,null);else{if(!("filter"in e))return cY();e.filter;var d=e.filter;d.targetId,s=d.count||0,u=new lP(s),c=d.targetId,n=new l$(c,u)}return n}(this.R,t),n=function(t){// We have only reached a consistent snapshot for the entire stream if there
// is a read_time set and it applies to all targets (i.e. the list of
// targets is empty). The backend is guaranteed to send such responses.
if(!("targetChange"in t))return c1.min();var e=t.targetChange;return e.targetIds&&e.targetIds.length?c1.min():e.readTime?l5(e.readTime):c1.min()}(t);return this.listener._r(e,n)},/**
     * Registers interest in the results of the given target. If the target
     * includes a resumeToken it will be included in the request. Results that
     * affect the target will be streamed back as WatchChange messages that
     * reference the targetId.
     */e.prototype.mr=function(t){var e,n,r,i,o={};o.database=fr(this.R),o.addTarget=(e=this.R,(n=hR(r=t.target)?{documents:fc(e,r)}:{query:fh(e,r)}).targetId=t.targetId,t.resumeToken.approximateByteSize()>0?n.resumeToken=l6(e,t.resumeToken):t.snapshotVersion.compareTo(c1.min())>0&&// TODO(wuandy): Consider removing above check because it is most likely true.
// Right now, many tests depend on this behaviour though (leaving min() out
// of serialization).
(n.readTime=l3(e,t.snapshotVersion.toTimestamp())),n);var a=(this.R,null==(i=function(t,e){switch(e){case 0/* Listen */:return null;case 1/* ExistenceFilterMismatch */:return"existence-filter-mismatch";case 2/* LimboResolution */:return"limbo-document";default:return cY()}}(0,t.purpose))?null:{"goog-listen-tags":i});a&&(o.labels=a),this.cr(o)},/**
     * Unregisters interest in the results of the target associated with the
     * given targetId.
     */e.prototype.yr=function(t){var e={};e.database=fr(this.R),e.removeTarget=t,this.cr(e)},e}(dT),dS=/** @class */function(t){function e(e,n,r,i,o){var a=this;return(a=t.call(this,e,"write_stream_connection_backoff"/* WriteStreamConnectionBackoff */,"write_stream_idle"/* WriteStreamIdle */,n,r,o)||this).R=i,a.gr=!1,a}return B(e,t),Object.defineProperty(e.prototype,"pr",{/**
         * Tracks whether or not a handshake has been successfully exchanged and
         * the stream is ready to accept mutations.
         */get:function(){return this.gr},enumerable:!1,configurable:!0}),e.prototype.start=function(){this.gr=!1,this.lastStreamToken=void 0,t.prototype.start.call(this)},e.prototype.ar=function(){this.gr&&this.Er([])},e.prototype.wr=function(t){return this.Hi.Oi("Write",t)},e.prototype.onMessage=function(t){if(t.streamToken||cY(),this.lastStreamToken=t.streamToken,this.gr){// A successful first write response means the stream is healthy,
// Note, that we could consider a successful handshake healthy, however,
// the write itself might be causing an error we want to back off from.
this.Zi.reset();var e,n,r=(e=t.writeResults,n=t.commitTime,e&&e.length>0?(void 0!==n||cY(),e.map(function(t){var e;return(e=t.updateTime?l5(t.updateTime):l5(n)).isEqual(c1.min())&&// The Firestore Emulator currently returns an update time of 0 for
// deletes of non-existing documents (rather than null). This breaks the
// test "get deleted doc while offline with source=cache" as NoDocuments
// with version 0 are filtered by IndexedDb's RemoteDocumentCache.
// TODO(#2149): Remove this when Emulator is fixed
(e=l5(n)),new lh(e,t.transformResults||[])})):[]),i=l5(t.commitTime);return this.listener.Tr(i,r)}// The first response is always the handshake response
return t.writeResults&&0!==t.writeResults.length&&cY(),this.gr=!0,this.listener.Ir()},/**
     * Sends an initial streamToken to the server, performing the handshake
     * required to make the StreamingWrite RPC work. Subsequent
     * calls should wait until onHandshakeComplete was called.
     */e.prototype.Ar=function(){// TODO(dimond): Support stream resumption. We intentionally do not set the
// stream token on the handshake, ignoring any stream token we might have.
var t={};t.database=fr(this.R),this.cr(t)},/** Sends a group of mutations to the Firestore backend to apply. */e.prototype.Er=function(t){var e=this,n={streamToken:this.lastStreamToken,writes:t.map(function(t){return fs(e.R,t)})};this.cr(n)},e}(dT),dC=/** @class */function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).credentials=e,i.Hi=n,i.R=r,i.Rr=!1,i}return B(e,t),e.prototype.br=function(){if(this.Rr)throw new cK(cB.FAILED_PRECONDITION,"The client has already been terminated.")},/** Gets an auth token and invokes the provided RPC. */e.prototype.Ni=function(t,e,n){var r=this;return this.br(),this.credentials.getToken().then(function(i){return r.Hi.Ni(t,e,n,i)}).catch(function(t){throw"FirebaseError"===t.name?(t.code===cB.UNAUTHENTICATED&&r.credentials.invalidateToken(),t):new cK(cB.UNKNOWN,t.toString())})},/** Gets an auth token and invokes the provided RPC with streamed results. */e.prototype.$i=function(t,e,n){var r=this;return this.br(),this.credentials.getToken().then(function(i){return r.Hi.$i(t,e,n,i)}).catch(function(t){throw"FirebaseError"===t.name?(t.code===cB.UNAUTHENTICATED&&r.credentials.invalidateToken(),t):new cK(cB.UNKNOWN,t.toString())})},e.prototype.terminate=function(){this.Rr=!0},e}(function(){}),dk=/** @class */function(){function t(t,e){this.asyncQueue=t,this.onlineStateHandler=e,/** The current OnlineState. */this.state="Unknown"/* Unknown */,/**
             * A count of consecutive failures to open the stream. If it reaches the
             * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to
             * Offline.
             */this.vr=0,/**
             * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we
             * transition from OnlineState.Unknown to OnlineState.Offline without waiting
             * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).
             */this.Pr=null,/**
             * Whether the client should log a warning message if it fails to connect to
             * the backend (initially true, cleared after a successful stream, or if we've
             * logged the message already).
             */this.Vr=!0/**
     * Called by RemoteStore when a watch stream is started (including on each
     * backoff attempt).
     *
     * If this is the first attempt, it sets the OnlineState to Unknown and starts
     * the onlineStateTimer.
     */}return t.prototype.Sr=function(){var t=this;0===this.vr&&(this.Dr("Unknown"/* Unknown */),this.Pr=this.asyncQueue.enqueueAfterDelay("online_state_timeout"/* OnlineStateTimeout */,1e4,function(){return t.Pr=null,t.Cr("Backend didn't respond within 10 seconds."),t.Dr("Offline"/* Offline */),Promise.resolve()}))},/**
     * Updates our OnlineState as appropriate after the watch stream reports a
     * failure. The first failure moves us to the 'Unknown' state. We then may
     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we
     * actually transition to the 'Offline' state.
     */t.prototype.Nr=function(t){"Online"/* Online */===this.state?this.Dr("Unknown"/* Unknown */):(this.vr++,this.vr>=1&&(this.kr(),this.Cr("Connection failed 1 times. Most recent error: "+t.toString()),this.Dr("Offline"/* Offline */)))},/**
     * Explicitly sets the OnlineState to the specified state.
     *
     * Note that this resets our timers / failure counters, etc. used by our
     * Offline heuristics, so must not be used in place of
     * handleWatchStreamStart() and handleWatchStreamFailure().
     */t.prototype.set=function(t){this.kr(),this.vr=0,"Online"/* Online */===t&&// We've connected to watch at least once. Don't warn the developer
// about being offline going forward.
(this.Vr=!1),this.Dr(t)},t.prototype.Dr=function(t){t!==this.state&&(this.state=t,this.onlineStateHandler(t))},t.prototype.Cr=function(t){var e="Could not reach Cloud Firestore backend. "+t+"\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.";this.Vr?(cG(e),this.Vr=!1):cz("OnlineStateTracker",e)},t.prototype.kr=function(){null!==this.Pr&&(this.Pr.cancel(),this.Pr=null)},t}(),dN=function(/**
     * The local store, used to fill the write pipeline with outbound mutations.
     */t,/** The client-side proxy for interacting with the backend. */e,n,r,i){var o=this;this.localStore=t,this.datastore=e,this.asyncQueue=n,this.remoteSyncer={},/**
             * A list of up to MAX_PENDING_WRITES writes that we have fetched from the
             * LocalStore via fillWritePipeline() and have or will send to the write
             * stream.
             *
             * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or
             * restart the write stream. When the stream is established the writes in the
             * pipeline will be sent in order.
             *
             * Writes remain in writePipeline until they are acknowledged by the backend
             * and thus will automatically be re-sent if the stream is interrupted /
             * restarted before they're acknowledged.
             *
             * Write responses from the backend are linked to their originating request
             * purely based on order, and so we can just shift() writes from the front of
             * the writePipeline as we receive responses.
             */this.Fr=[],/**
             * A mapping of watched targets that the client cares about tracking and the
             * user has explicitly called a 'listen' for this target.
             *
             * These targets may or may not have been sent to or acknowledged by the
             * server. On re-establishing the listen stream, these targets should be sent
             * to the server. The targets removed with unlistens are removed eagerly
             * without waiting for confirmation from the listen stream.
             */this.$r=new Map,/**
             * A set of reasons for why the RemoteStore may be offline. If empty, the
             * RemoteStore may start its network connections.
             */this.Or=new Set,/**
             * Event handlers that get called when the network is disabled or enabled.
             *
             * PORTING NOTE: These functions are used on the Web client to create the
             * underlying streams (to support tree-shakeable streams). On Android and iOS,
             * the streams are created during construction of RemoteStore.
             */this.Mr=[],this.Lr=i,this.Lr.di(function(t){n.enqueueAndForget(function(){return H(o,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:return dF(this)?(cz("RemoteStore","Restarting streams for network reachability change."),[4/*yield*/,function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return(e=t).Or.add(4/* ConnectivityChange */),[4/*yield*/,dR(e)];case 1:return n.sent(),e.Br.set("Unknown"/* Unknown */),e.Or.delete(4/* ConnectivityChange */),[4/*yield*/,dA(e)];case 2:return n.sent(),[2/*return*/]}})})}(this)]):[3/*break*/,2];case 1:t.sent(),t.label=2;case 2:return[2/*return*/]}})})})}),this.Br=new dk(n,r)};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A PersistentStream is an abstract base class that represents a streaming RPC
 * to the Firestore backend. It's built on top of the connections own support
 * for streaming RPCs, and adds several critical features for our clients:
 *
 *   - Exponential backoff on failure
 *   - Authentication via CredentialsProvider
 *   - Dispatching all callbacks into the shared worker queue
 *   - Closing idle streams after 60 seconds of inactivity
 *
 * Subclasses of PersistentStream implement serialization of models to and
 * from the JSON representation of the protocol buffers for a specific
 * streaming RPC.
 *
 * ## Starting and Stopping
 *
 * Streaming RPCs are stateful and need to be start()ed before messages can
 * be sent and received. The PersistentStream will call the onOpen() function
 * of the listener once the stream is ready to accept requests.
 *
 * Should a start() fail, PersistentStream will call the registered onClose()
 * listener with a FirestoreError indicating what went wrong.
 *
 * A PersistentStream can be started and stopped repeatedly.
 *
 * Generic types:
 *  SendType: The type of the outgoing message of the underlying
 *    connection stream
 *  ReceiveType: The type of the incoming message of the underlying
 *    connection stream
 *  ListenerType: The type of the listener that will be used for callbacks
 */function dA(t){return H(this,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:if(!dF(t))return[3/*break*/,4];e=0,n=t.Mr,r.label=1;case 1:return e<n.length?[4/*yield*/,(0,n[e])(/* enabled= */!0)]:[3/*break*/,4];case 2:r.sent(),r.label=3;case 3:return e++,[3/*break*/,1];case 4:return[2/*return*/]}})})}/**
 * Temporarily disables the network. The network can be re-enabled using
 * enableNetwork().
 */function dR(t){return H(this,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:e=0,n=t.Mr,r.label=1;case 1:return e<n.length?[4/*yield*/,(0,n[e])(/* enabled= */!1)]:[3/*break*/,4];case 2:r.sent(),r.label=3;case 3:return e++,[3/*break*/,1];case 4:return[2/*return*/]}})})}/**
 * Starts new listen for the given target. Uses resume token if provided. It
 * is a no-op if the target of given `TargetData` is already being listened to.
 */function dx(t,e){t.$r.has(e.targetId)||// Mark this as something the client is currently listening for.
(t.$r.set(e.targetId,e),dM(t)?dL(t):dX(t).er()&&dD(t,e))}/**
 * Removes the listen from server. It is a no-op if the given target id is
 * not being listened to.
 */function dP(t,e){var n=dX(t);t.$r.delete(e),n.er()&&dO(t,e),0===t.$r.size&&(n.er()?n.ir():dF(t)&&// Revert to OnlineState.Unknown if the watch stream is not open and we
// have no listeners, since without any listens to send we cannot
// confirm if the stream is healthy and upgrade to OnlineState.Online.
t.Br.set("Unknown"/* Unknown */))}/**
 * We need to increment the the expected number of pending responses we're due
 * from watch so we wait for the ack to process any messages from this target.
 */function dD(t,e){t.qr.U(e.targetId),dX(t).mr(e)/**
 * We need to increment the expected number of pending responses we're due
 * from watch so we wait for the removal on the server before we process any
 * messages from this target.
 */}function dO(t,e){t.qr.U(e),dX(t).yr(e)}function dL(t){t.qr=new lJ({getRemoteKeysForTarget:function(e){return t.remoteSyncer.getRemoteKeysForTarget(e)},lt:function(e){return t.$r.get(e)||null}}),dX(t).start(),t.Br.Sr()/**
 * Returns whether the watch stream should be started because it's necessary
 * and has not yet been started.
 */}function dM(t){return dF(t)&&!dX(t).tr()&&t.$r.size>0}function dF(t){return 0===t.Or.size}function dj(t){return H(this,void 0,void 0,function(){return W(this,function(e){return t.$r.forEach(function(e,n){dD(t,e)}),[2/*return*/]})})}function dU(t,e){return H(this,void 0,void 0,function(){return W(this,function(n){return t.qr=void 0,dM(t)?(t.Br.Nr(e),dL(t)):// The online state is set to unknown because there is no active attempt
// at establishing a connection
t.Br.set("Unknown"/* Unknown */),[2/*return*/]})})}function dq(t,e,n){return H(this,void 0,void 0,function(){var r,i,o;return W(this,function(a){switch(a.label){case 0:if(t.Br.set("Online"/* Online */),!(e instanceof lY&&2/* Removed */===e.state&&e.cause))return[3/*break*/,6];a.label=1;case 1:return a.trys.push([1,3,,5]),[4/*yield*/,/** Handles an error on a target */function(t,e){return H(this,void 0,void 0,function(){var n,r,i,o;return W(this,function(a){switch(a.label){case 0:n=e.cause,r=0,i=e.targetIds,a.label=1;case 1:return r<i.length?(o=i[r],t.$r.has(o)?[4/*yield*/,t.remoteSyncer.rejectListen(o,n)]:[3/*break*/,3]):[3/*break*/,5];case 2:a.sent(),t.$r.delete(o),t.qr.removeTarget(o),a.label=3;case 3:a.label=4;case 4:return r++,[3/*break*/,1];case 5:return[2/*return*/]}})})}(t,e)];case 2:case 4:return a.sent(),[3/*break*/,5];case 3:return r=a.sent(),cz("RemoteStore","Failed to remove targets %s: %s ",e.targetIds.join(","),r),[4/*yield*/,dV(t,r)];case 5:return[3/*break*/,13];case 6:if(e instanceof lQ?t.qr.X(e):e instanceof l$?t.qr.rt(e):t.qr.et(e),n.isEqual(c1.min()))return[3/*break*/,13];a.label=7;case 7:return a.trys.push([7,11,,13]),[4/*yield*/,p$(t.localStore)];case 8:var s;return i=a.sent(),n.compareTo(i)>=0?[4/*yield*/,((s=t.qr.ut(n)).targetChanges.forEach(function(e,r){if(e.resumeToken.approximateByteSize()>0){var i=t.$r.get(r);// A watched target might have been removed already.
i&&t.$r.set(r,i.withResumeToken(e.resumeToken,n))}}),// existence filter mismatches.
s.targetMismatches.forEach(function(e){var n=t.$r.get(e);n&&(// Clear the resume token for the target, since we're in a known mismatch
// state.
t.$r.set(e,n.withResumeToken(ht.EMPTY_BYTE_STRING,n.snapshotVersion)),// deliberately don't send a resume token so that we get a full update.
dO(t,e),dD(t,new fZ(n.target,e,1/* ExistenceFilterMismatch */,n.sequenceNumber)))}),t.remoteSyncer.applyRemoteEvent(s))]:[3/*break*/,10];// We have received a target change with a global snapshot if the snapshot
// version is not equal to SnapshotVersion.min().
case 9:// We have received a target change with a global snapshot if the snapshot
// version is not equal to SnapshotVersion.min().
a.sent(),a.label=10;case 10:return[3/*break*/,13];case 11:return cz("RemoteStore","Failed to raise snapshot:",o=a.sent()),[4/*yield*/,dV(t,o)];case 12:return a.sent(),[3/*break*/,13];case 13:return[2/*return*/]}})})}/**
 * Recovery logic for IndexedDB errors that takes the network offline until
 * `op` succeeds. Retries are scheduled with backoff using
 * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is
 * validated via a generic operation.
 *
 * The returned Promise is resolved once the network is disabled and before
 * any retry attempt.
 */function dV(t,e,n){return H(this,void 0,void 0,function(){var r=this;return W(this,function(i){switch(i.label){case 0:if(!fH(e))throw e;// Disable network and raise offline snapshots
return t.Or.add(1/* IndexedDbFailed */),[4/*yield*/,dR(t)];case 1:// Disable network and raise offline snapshots
return i.sent(),t.Br.set("Offline"/* Offline */),n||// Use a simple read operation to determine if IndexedDB recovered.
// Ideally, we would expose a health check directly on SimpleDb, but
// RemoteStore only has access to persistence through LocalStore.
(n=function(){return p$(t.localStore)}),t.asyncQueue.enqueueRetryable(function(){return H(r,void 0,void 0,function(){return W(this,function(e){switch(e.label){case 0:return cz("RemoteStore","Retrying IndexedDB access"),[4/*yield*/,n()];case 1:return e.sent(),t.Or.delete(1/* IndexedDbFailed */),[4/*yield*/,dA(t)];case 2:return e.sent(),[2/*return*/]}})})}),[2/*return*/]}})})}/**
 * Executes `op`. If `op` fails, takes the network offline until `op`
 * succeeds. Returns after the first attempt.
 */function dB(t,e){return e().catch(function(n){return dV(t,n,e)})}function dK(t){return H(this,void 0,void 0,function(){var e,n,r,i,o;return W(this,function(a){var s,u,c;switch(a.label){case 0:n=dJ(e=t),r=e.Fr.length>0?e.Fr[e.Fr.length-1].batchId:-1,a.label=1;case 1:if(!(dF(s=e)&&s.Fr.length<10))return[3/*break*/,7];a.label=2;case 2:return a.trys.push([2,4,,6]),[4/*yield*/,(u=e.localStore,c=r,u.persistence.runTransaction("Get next mutation batch","readonly",function(t){return void 0===c&&(c=-1),u._n.getNextMutationBatchAfterBatchId(t,c)}))];case 3:return null===(i=a.sent())?(0===e.Fr.length&&n.ir(),[3/*break*/,7]):(r=i.batchId,function(t,e){t.Fr.push(e);var n=dJ(t);n.er()&&n.pr&&n.Er(e.mutations)}(e,i),[3/*break*/,6]);case 4:return o=a.sent(),[4/*yield*/,dV(e,o)];case 5:return a.sent(),[3/*break*/,6];case 6:return[3/*break*/,1];case 7:return dH(e)&&dW(e),[2/*return*/]}})})}function dH(t){return dF(t)&&!dJ(t).tr()&&t.Fr.length>0}function dW(t){dJ(t).start()}function dz(t){return H(this,void 0,void 0,function(){return W(this,function(e){return dJ(t).Ar(),[2/*return*/]})})}function dG(t){return H(this,void 0,void 0,function(){var e,n,r,i;return W(this,function(o){// Send the write pipeline now that the stream is established.
for(e=dJ(t),n=0,r=t.Fr;n<r.length;n++)i=r[n],e.Er(i.mutations);return[2/*return*/]})})}function dQ(t,e,n){return H(this,void 0,void 0,function(){var r,i;return W(this,function(o){switch(o.label){case 0:return r=t.Fr.shift(),i=fJ.from(r,e,n),[4/*yield*/,dB(t,function(){return t.remoteSyncer.applySuccessfulWrite(i)})];case 1:// It's possible that with the completion of this mutation another
// slot has freed up.
return o.sent(),[4/*yield*/,dK(t)];case 2:// It's possible that with the completion of this mutation another
// slot has freed up.
return o.sent(),[2/*return*/]}})})}function d$(t,e){return H(this,void 0,void 0,function(){return W(this,function(n){switch(n.label){case 0:return e&&dJ(t).pr?[4/*yield*/,function(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){switch(i.label){case 0:return lD(r=e.code)&&r!==cB.ABORTED?(n=t.Fr.shift(),// down -- this was just a bad request so inhibit backoff on the next
// restart.
dJ(t).sr(),[4/*yield*/,dB(t,function(){return t.remoteSyncer.rejectFailedWrite(n.batchId,e)})]):[3/*break*/,3];case 1:// It's possible that with the completion of this mutation
// another slot has freed up.
return i.sent(),[4/*yield*/,dK(t)];case 2:// In this case it's also unlikely that the server itself is melting
// down -- this was just a bad request so inhibit backoff on the next
// restart.
// It's possible that with the completion of this mutation
// another slot has freed up.
i.sent(),i.label=3;case 3:return[2/*return*/]}})})}(t,e)]:[3/*break*/,2];// This error affects the actual write.
case 1:// This error affects the actual write.
n.sent(),n.label=2;case 2:// If the write stream closed after the write handshake completes, a write
// operation failed and we fail the pending operation.
// The write stream might have been started by refilling the write
// pipeline for failed writes
return dH(t)&&dW(t),[2/*return*/]}})})}/**
 * Toggles the network state when the client gains or loses its primary lease.
 */function dY(t,e){return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:return n=t,e?(n.Or.delete(2/* IsSecondary */),[4/*yield*/,dA(n)]):[3/*break*/,2];case 1:return r.sent(),[3/*break*/,5];case 2:return e?[3/*break*/,4]:(n.Or.add(2/* IsSecondary */),[4/*yield*/,dR(n)]);case 3:r.sent(),n.Br.set("Unknown"/* Unknown */),r.label=4;case 4:r.label=5;case 5:return[2/*return*/]}})})}/**
 * If not yet initialized, registers the WatchStream and its network state
 * callback with `remoteStoreImpl`. Returns the existing stream if one is
 * already available.
 *
 * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.
 * This is not done on Web to allow it to be tree-shaken.
 */function dX(t){var e,n,r,i=this;return t.Ur||// Create stream (but note that it is not started yet).
(t.Ur=(e=t.datastore,n=t.asyncQueue,r={Ii:dj.bind(null,t),Ri:dU.bind(null,t),_r:dq.bind(null,t)},e.br(),new dE(n,e.Hi,e.credentials,e.R,r)),t.Mr.push(function(e){return H(i,void 0,void 0,function(){return W(this,function(n){switch(n.label){case 0:return e?(t.Ur.sr(),dM(t)?dL(t):t.Br.set("Unknown"/* Unknown */),[3/*break*/,3]):[3/*break*/,1];case 1:return[4/*yield*/,t.Ur.stop()];case 2:n.sent(),t.qr=void 0,n.label=3;case 3:return[2/*return*/]}})})})),t.Ur/**
 * If not yet initialized, registers the WriteStream and its network state
 * callback with `remoteStoreImpl`. Returns the existing stream if one is
 * already available.
 *
 * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.
 * This is not done on Web to allow it to be tree-shaken.
 */}function dJ(t){var e,n,r,i=this;return t.Kr||// Create stream (but note that it is not started yet).
(t.Kr=(e=t.datastore,n=t.asyncQueue,r={Ii:dz.bind(null,t),Ri:d$.bind(null,t),Ir:dG.bind(null,t),Tr:dQ.bind(null,t)},e.br(),new dS(n,e.Hi,e.credentials,e.R,r)),t.Mr.push(function(e){return H(i,void 0,void 0,function(){return W(this,function(n){switch(n.label){case 0:return e?(t.Kr.sr(),[4/*yield*/,dK(t)]):[3/*break*/,2];case 1:// This will start the write stream if necessary.
return n.sent(),[3/*break*/,4];case 2:return[4/*yield*/,t.Kr.stop()];case 3:n.sent(),t.Fr.length>0&&(cz("RemoteStore","Stopping write stream with "+t.Fr.length+" pending writes"),t.Fr=[]),n.label=4;case 4:return[2/*return*/]}})})})),t.Kr/**
 * Represents an operation scheduled to be run in the future on an AsyncQueue.
 *
 * It is created via DelayedOperation.createAndSchedule().
 *
 * Supports cancellation (via cancel()) and early execution (via skipDelay()).
 *
 * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type
 * in newer versions of TypeScript defines `finally`, which is not available in
 * IE.
 */}var dZ=/** @class */function(){function t(t,e,n,r,i){this.asyncQueue=t,this.timerId=e,this.targetTimeMs=n,this.op=r,this.removalCallback=i,this.deferred=new fj,this.then=this.deferred.promise.then.bind(this.deferred.promise),// and so we attach a dummy catch callback to avoid
// 'UnhandledPromiseRejectionWarning' log spam.
this.deferred.promise.catch(function(t){})/**
     * Creates and returns a DelayedOperation that has been scheduled to be
     * executed on the provided asyncQueue after the provided delayMs.
     *
     * @param asyncQueue - The queue to schedule the operation on.
     * @param id - A Timer ID identifying the type of operation this is.
     * @param delayMs - The delay (ms) before the operation should be scheduled.
     * @param op - The operation to run.
     * @param removalCallback - A callback to be called synchronously once the
     *   operation is executed or canceled, notifying the AsyncQueue to remove it
     *   from its delayedOperations list.
     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and
     *   the DelayedOperation class public.
     */}return t.createAndSchedule=function(e,n,r,i,o){var a=new t(e,n,Date.now()+r,i,o);return a.start(r),a},/**
     * Starts the timer. This is called immediately after construction by
     * createAndSchedule().
     */t.prototype.start=function(t){var e=this;this.timerHandle=setTimeout(function(){return e.handleDelayElapsed()},t)},/**
     * Queues the operation to run immediately (if it hasn't already been run or
     * canceled).
     */t.prototype.skipDelay=function(){return this.handleDelayElapsed()},/**
     * Cancels the operation if it hasn't already been executed or canceled. The
     * promise will be rejected.
     *
     * As long as the operation has not yet been run, calling cancel() provides a
     * guarantee that the operation will not be run.
     */t.prototype.cancel=function(t){null!==this.timerHandle&&(this.clearTimeout(),this.deferred.reject(new cK(cB.CANCELLED,"Operation cancelled"+(t?": "+t:""))))},t.prototype.handleDelayElapsed=function(){var t=this;this.asyncQueue.enqueueAndForget(function(){return null!==t.timerHandle?(t.clearTimeout(),t.op().then(function(e){return t.deferred.resolve(e)})):Promise.resolve()})},t.prototype.clearTimeout=function(){null!==this.timerHandle&&(this.removalCallback(this),clearTimeout(this.timerHandle),this.timerHandle=null)},t}();/**
 * Returns a FirestoreError that can be surfaced to the user if the provided
 * error is an IndexedDbTransactionError. Re-throws the error otherwise.
 */function d0(t,e){if(cG("AsyncQueue",e+": "+t),fH(t))return new cK(cB.UNAVAILABLE,e+": "+t);throw t}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * DocumentSet is an immutable (copy-on-write) collection that holds documents
 * in order specified by the provided comparator. We always add a document key
 * comparator on top of what is provided to guarantee document equality based on
 * the key.
 */var d1=/** @class */function(){/** The default ordering is by key if the comparator is omitted */function t(t){// We are adding document key comparator to the end as it's the only
// guaranteed unique property of a document.
this.comparator=t?function(e,n){return t(e,n)||hh.comparator(e.key,n.key)}:function(t,e){return hh.comparator(t.key,e.key)},this.keyedMap=lV,this.sortedSet=new lL(this.comparator)/**
     * Returns an empty copy of the existing DocumentSet, using the same
     * comparator.
     */}return t.emptySet=function(e){return new t(e.comparator)},t.prototype.has=function(t){return null!=this.keyedMap.get(t)},t.prototype.get=function(t){return this.keyedMap.get(t)},t.prototype.first=function(){return this.sortedSet.minKey()},t.prototype.last=function(){return this.sortedSet.maxKey()},t.prototype.isEmpty=function(){return this.sortedSet.isEmpty()},/**
     * Returns the index of the provided key in the document set, or -1 if the
     * document key is not present in the set;
     */t.prototype.indexOf=function(t){var e=this.keyedMap.get(t);return e?this.sortedSet.indexOf(e):-1},Object.defineProperty(t.prototype,"size",{get:function(){return this.sortedSet.size},enumerable:!1,configurable:!0}),/** Iterates documents in order defined by "comparator" */t.prototype.forEach=function(t){this.sortedSet.inorderTraversal(function(e,n){return t(e),!1})},/** Inserts or updates a document with the same key */t.prototype.add=function(t){// First remove the element if we have it.
var e=this.delete(t.key);return e.copy(e.keyedMap.insert(t.key,t),e.sortedSet.insert(t,null))},/** Deletes a document with a given key */t.prototype.delete=function(t){var e=this.get(t);return e?this.copy(this.keyedMap.remove(t),this.sortedSet.remove(e)):this},t.prototype.isEqual=function(e){if(!(e instanceof t)||this.size!==e.size)return!1;for(var n=this.sortedSet.getIterator(),r=e.sortedSet.getIterator();n.hasNext();){var i=n.getNext().key,o=r.getNext().key;if(!i.isEqual(o))return!1}return!0},t.prototype.toString=function(){var t=[];return this.forEach(function(e){t.push(e.toString())}),0===t.length?"DocumentSet ()":"DocumentSet (\n  "+t.join("  \n")+"\n)"},t.prototype.copy=function(e,n){var r=new t;return r.comparator=this.comparator,r.keyedMap=e,r.sortedSet=n,r},t}(),d2=/** @class */function(){function t(){this.Qr=new lL(hh.comparator)}return t.prototype.track=function(t){var e=t.doc.key,n=this.Qr.get(e);n?0/* Added */!==t.type&&3/* Metadata */===n.type?this.Qr=this.Qr.insert(e,t):3/* Metadata */===t.type&&1/* Removed */!==n.type?this.Qr=this.Qr.insert(e,{type:n.type,doc:t.doc}):2/* Modified */===t.type&&2/* Modified */===n.type?this.Qr=this.Qr.insert(e,{type:2/* Modified */,doc:t.doc}):2/* Modified */===t.type&&0/* Added */===n.type?this.Qr=this.Qr.insert(e,{type:0/* Added */,doc:t.doc}):1/* Removed */===t.type&&0/* Added */===n.type?this.Qr=this.Qr.remove(e):1/* Removed */===t.type&&2/* Modified */===n.type?this.Qr=this.Qr.insert(e,{type:1/* Removed */,doc:n.doc}):0/* Added */===t.type&&1/* Removed */===n.type?this.Qr=this.Qr.insert(e,{type:2/* Modified */,doc:t.doc}):// Added->Added
// Removed->Removed
// Modified->Added
// Removed->Modified
// Metadata->Added
// Removed->Metadata
cY():this.Qr=this.Qr.insert(e,t)},t.prototype.jr=function(){var t=[];return this.Qr.inorderTraversal(function(e,n){t.push(n)}),t},t}(),d4=/** @class */function(){function t(t,e,n,r,i,o,a,s){this.query=t,this.docs=e,this.oldDocs=n,this.docChanges=r,this.mutatedKeys=i,this.fromCache=o,this.syncStateChanged=a,this.excludesMetadataChanges=s/** Returns a view snapshot as if all documents in the snapshot were added. */}return t.fromInitialDocuments=function(e,n,r,i){var o=[];return n.forEach(function(t){o.push({type:0/* Added */,doc:t})}),new t(e,n,d1.emptySet(n),o,r,i,/* syncStateChanged= */!0,/* excludesMetadataChanges= */!1)},Object.defineProperty(t.prototype,"hasPendingWrites",{get:function(){return!this.mutatedKeys.isEmpty()},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(t){if(!(this.fromCache===t.fromCache&&this.syncStateChanged===t.syncStateChanged&&this.mutatedKeys.isEqual(t.mutatedKeys)&&h1(this.query,t.query)&&this.docs.isEqual(t.docs)&&this.oldDocs.isEqual(t.oldDocs)))return!1;var e=this.docChanges,n=t.docChanges;if(e.length!==n.length)return!1;for(var r=0;r<e.length;r++)if(e[r].type!==n[r].type||!e[r].doc.isEqual(n[r].doc))return!1;return!0},t}(),d3=function(){this.Wr=void 0,this.listeners=[]},d6=function(){this.queries=new pA(function(t){return h2(t)},h1),this.onlineState="Unknown"/* Unknown */,this.Gr=new Set};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * DocumentChangeSet keeps track of a set of changes to docs in a query, merging
 * duplicate events for the same doc.
 */function d5(t,e){return H(this,void 0,void 0,function(){var n,r,i,o,a,s;return W(this,function(u){switch(u.label){case 0:if(n=t,r=e.query,i=!1,(o=n.queries.get(r))||(i=!0,o=new d3),!i)return[3/*break*/,4];u.label=1;case 1:return u.trys.push([1,3,,4]),a=o,[4/*yield*/,n.onListen(r)];case 2:return a.Wr=u.sent(),[3/*break*/,4];case 3:return s=d0(u.sent(),"Initialization of query '"+h4(e.query)+"' failed"),[2/*return*/,void e.onError(s)];case 4:return n.queries.set(r,o),o.listeners.push(e),e.zr(n.onlineState),o.Wr&&e.Hr(o.Wr)&&vt(n),[2/*return*/]}})})}function d8(t,e){return H(this,void 0,void 0,function(){var n,r,i,o,a;return W(this,function(s){return n=t,r=e.query,i=!1,(o=n.queries.get(r))&&(a=o.listeners.indexOf(e))>=0&&(o.listeners.splice(a,1),i=0===o.listeners.length),i?[2/*return*/,(n.queries.delete(r),n.onUnlisten(r))]:[2/*return*/]})})}function d7(t,e){for(var n=!1,r=0;r<e.length;r++){var i=e[r],o=i.query,a=t.queries.get(o);if(a){for(var s=0,u=a.listeners;s<u.length;s++)u[s].Hr(i)&&(n=!0);a.Wr=i}}n&&vt(t)}function d9(t,e,n){var r=t.queries.get(e);if(r)for(var i=0,o=r.listeners;i<o.length;i++)o[i].onError(n);// Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()
// after an error.
t.queries.delete(e)}// Call all global snapshot listeners that have been set.
function vt(t){t.Gr.forEach(function(t){t.next()})}/**
 * QueryListener takes a series of internal view snapshots and determines
 * when to raise the event.
 *
 * It uses an Observer to dispatch events.
 */var ve=/** @class */function(){function t(t,e,n){this.query=t,this.Jr=e,/**
             * Initial snapshots (e.g. from cache) may not be propagated to the wrapped
             * observer. This flag is set to true once we've actually raised an event.
             */this.Yr=!1,this.Xr=null,this.onlineState="Unknown"/* Unknown */,this.options=n||{}/**
     * Applies the new ViewSnapshot to this listener, raising a user-facing event
     * if applicable (depending on what changed, whether the user has opted into
     * metadata-only changes, etc.). Returns true if a user-facing event was
     * indeed raised.
     */}return t.prototype.Hr=function(t){if(!this.options.includeMetadataChanges){for(var e=[],n=0,r=t.docChanges;n<r.length;n++){var i=r[n];3/* Metadata */!==i.type&&e.push(i)}t=new d4(t.query,t.docs,t.oldDocs,e,t.mutatedKeys,t.fromCache,t.syncStateChanged,/* excludesMetadataChanges= */!0)}var o=!1;return this.Yr?this.Zr(t)&&(this.Jr.next(t),o=!0):this.eo(t,this.onlineState)&&(this.no(t),o=!0),this.Xr=t,o},t.prototype.onError=function(t){this.Jr.error(t)},/** Returns whether a snapshot was raised. */t.prototype.zr=function(t){this.onlineState=t;var e=!1;return this.Xr&&!this.Yr&&this.eo(this.Xr,t)&&(this.no(this.Xr),e=!0),e},t.prototype.eo=function(t,e){return(// Always raise the first event when we're synced
!t.fromCache||!(this.options.so&&"Offline"/* Offline */!==e||t.docs.isEmpty()&&"Offline"/* Offline */!==e));// Raise data from cache if we have any documents or we are offline
},t.prototype.Zr=function(t){// We don't need to handle includeDocumentMetadataChanges here because
// the Metadata only changes have already been stripped out if needed.
// At this point the only changes we will see are the ones we should
// propagate.
if(t.docChanges.length>0)return!0;var e=this.Xr&&this.Xr.hasPendingWrites!==t.hasPendingWrites;return!(!t.syncStateChanged&&!e)&&!0===this.options.includeMetadataChanges;// Generally we should have hit one of the cases above, but it's possible
// to get here if there were only metadata docChanges and they got
// stripped out.
},t.prototype.no=function(t){t=d4.fromInitialDocuments(t.query,t.docs,t.mutatedKeys,t.fromCache),this.Yr=!0,this.Jr.next(t)},t}(),vn=/** @class */function(){function t(t,e){this.payload=t,this.byteLength=e}return t.prototype.io=function(){return"metadata"in this.payload},t}(),vr=/** @class */function(){function t(t){this.R=t}return t.prototype.qn=function(t){return ft(this.R,t)},/**
     * Converts a BundleDocument to a MutableDocument.
     */t.prototype.Un=function(t){return t.metadata.exists?fa(this.R,t.document,!1):hS.newNoDocument(this.qn(t.metadata.name),this.Kn(t.metadata.readTime))},t.prototype.Kn=function(t){return l5(t)},t}(),vi=/** @class */function(){function t(t,e,n){this.ro=t,this.localStore=e,this.R=n,/** Batched queries to be saved into storage */this.queries=[],/** Batched documents to be saved into storage */this.documents=[],this.progress=vo(t)/**
     * Adds an element from the bundle to the loader.
     *
     * Returns a new progress if adding the element leads to a new progress,
     * otherwise returns null.
     */}return t.prototype.oo=function(t){this.progress.bytesLoaded+=t.byteLength;var e=this.progress.documentsLoaded;return t.payload.namedQuery?this.queries.push(t.payload.namedQuery):t.payload.documentMetadata?(this.documents.push({metadata:t.payload.documentMetadata}),t.payload.documentMetadata.exists||++e):t.payload.document&&(this.documents[this.documents.length-1].document=t.payload.document,++e),e!==this.progress.documentsLoaded?(this.progress.documentsLoaded=e,Object.assign({},this.progress)):null},t.prototype.co=function(t){for(var e=new Map,n=new vr(this.R),r=0;r<t.length;r++){var i=t[r];if(i.metadata.queries)for(var o=n.qn(i.metadata.name),a=0,s=i.metadata.queries;a<s.length;a++){var u=s[a],c=(e.get(u)||lH()).add(o);e.set(u,c)}}return e},/**
     * Update the progress to 'Success' and return the updated progress.
     */t.prototype.complete=function(){return H(this,void 0,void 0,function(){var t,e,n,r,i;return W(this,function(o){switch(o.label){case 0:return[4/*yield*/,/**
 * Creates a new target using the given bundle name, which will be used to
 * hold the keys of all documents from the bundle in query-document mappings.
 * This ensures that the loaded documents do not get garbage collected
 * right away.
 *//**
 * Applies the documents from a bundle to the "ground-state" (remote)
 * documents.
 *
 * LocalDocuments are re-calculated if there are remaining mutations in the
 * queue.
 */function(t,e,n,r){return H(this,void 0,void 0,function(){var i,o,a,s,u,c,h,l,f,p;return W(this,function(d){switch(d.label){case 0:for(i=t,o=lH(),a=lq,s=lB,u=0,c=n;u<c.length;u++)h=c[u],l=e.qn(h.metadata.name),h.document&&(o=o.add(l)),a=a.insert(l,e.Un(h)),s=s.insert(l,e.Kn(h.metadata.readTime));return f=i.On.newChangeBuffer({trackRemovals:!0}),[4/*yield*/,pX(i,hZ(hz(c5.fromString("__bundle__/docs/"+r))))];case 1:// Allocates a target to hold all document keys from the bundle, such that
// they will not get garbage collected right away.
return p=d.sent(),[2/*return*/,i.persistence.runTransaction("Apply bundle documents","readwrite",function(t){return pY(t,f,a,c1.min(),s).next(function(e){return f.apply(t),e}).next(function(e){return i.qe.removeMatchingKeysForTargetId(t,p.targetId).next(function(){return i.qe.addMatchingKeys(t,o,p.targetId)}).next(function(){return i.Mn.En(t,e)}).next(function(){return e})})})]}})})}(this.localStore,new vr(this.R),this.documents,this.ro.id)];case 1:t=o.sent(),e=this.co(this.documents),n=0,r=this.queries,o.label=2;case 2:return n<r.length?(i=r[n],[4/*yield*/,/**
 * Returns a promise of a boolean to indicate if the given bundle has already
 * been loaded and the create time is newer than the current loading bundle.
 *//**
 * Saves the given `NamedQuery` to local persistence.
 */function(t,e,n){return void 0===n&&(n=lH()),H(this,void 0,void 0,function(){var r,i;return W(this,function(o){switch(o.label){case 0:return[4/*yield*/,pX(t,hZ(pt(e.bundledQuery)))];case 1:return r=o.sent(),[2/*return*/,(i=t).persistence.runTransaction("Save named query","readwrite",function(t){var o=l5(e.readTime);// Simply save the query itself if it is older than what the SDK already
// has.
if(r.snapshotVersion.compareTo(o)>=0)return i.Ke.saveNamedQuery(t,e);// Update existing target data because the query from the bundle is newer.
var a=r.withResumeToken(ht.EMPTY_BYTE_STRING,o);return i.kn=i.kn.insert(a.targetId,a),i.qe.updateTargetData(t,a).next(function(){return i.qe.removeMatchingKeysForTargetId(t,r.targetId)}).next(function(){return i.qe.addMatchingKeys(t,n,r.targetId)}).next(function(){return i.Ke.saveNamedQuery(t,e)})})]}})})}(this.localStore,i,e.get(i.name))]):[3/*break*/,5];case 3:o.sent(),o.label=4;case 4:return n++,[3/*break*/,2];case 5:return[2/*return*/,(this.progress.taskState="Success",new pK(Object.assign({},this.progress),t))]}})})},t}();/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A complete element in the bundle stream, together with the byte length it
 * occupies in the stream.
 *//**
 * Returns a `LoadBundleTaskProgress` representing the initial progress of
 * loading a bundle.
 */function vo(t){return{taskState:"Running",documentsLoaded:0,bytesLoaded:0,totalDocuments:t.totalDocuments,totalBytes:t.totalBytes}}/**
 * Returns a `LoadBundleTaskProgress` representing the progress that the loading
 * has succeeded.
 *//**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var va=function(t){this.key=t},vs=function(t){this.key=t},vu=/** @class */function(){function t(t,/** Documents included in the remote target */e){this.query=t,this.uo=e,this.ao=null,/**
             * A flag whether the view is current with the backend. A view is considered
             * current after it has seen the current flag from the backend and did not
             * lose consistency within the watch stream (e.g. because of an existence
             * filter mismatch).
             */this.current=!1,/** Documents in the view but not in the remote target */this.ho=lH(),/** Document Keys that have local changes */this.mutatedKeys=lH(),this.lo=h6(t),this.fo=new d1(this.lo)}return Object.defineProperty(t.prototype,"wo",{/**
         * The set of remote documents that the server has told us belongs to the target associated with
         * this view.
         */get:function(){return this.uo},enumerable:!1,configurable:!0}),/**
     * Iterates over a set of doc changes, applies the query limit, and computes
     * what the new results should be, what the changes were, and whether we may
     * need to go back to the local cache for more results. Does not make any
     * changes to the view.
     * @param docChanges - The doc changes to apply to this view.
     * @param previousChanges - If this is being called with a refill, then start
     *        with this set of docs and changes instead of the current view.
     * @returns a new set of docs, changes, and refill flag.
     */t.prototype._o=function(t,e){var n=this,r=e?e.mo:new d2,i=e?e.fo:this.fo,o=e?e.mutatedKeys:this.mutatedKeys,a=i,s=!1,u=hG(this.query)&&i.size===this.query.limit?i.last():null,c=hQ(this.query)&&i.size===this.query.limit?i.first():null;// Drop documents out to meet limit/limitToLast requirement.
if(t.inorderTraversal(function(t,e){var h=i.get(t),l=h3(n.query,e)?e:null,f=!!h&&n.mutatedKeys.has(h.key),p=!!l&&(l.hasLocalMutations||// We only consider committed mutations for documents that were
// mutated during the lifetime of the view.
n.mutatedKeys.has(l.key)&&l.hasCommittedMutations),d=!1;// Calculate change
h&&l?h.data.isEqual(l.data)?f!==p&&(r.track({type:3/* Metadata */,doc:l}),d=!0):n.yo(h,l)||(r.track({type:2/* Modified */,doc:l}),d=!0,(u&&n.lo(l,u)>0||c&&0>n.lo(l,c))&&// This doc moved from inside the limit to outside the limit.
// That means there may be some other doc in the local cache
// that should be included instead.
(s=!0)):!h&&l?(r.track({type:0/* Added */,doc:l}),d=!0):h&&!l&&(r.track({type:1/* Removed */,doc:h}),d=!0,(u||c)&&// A doc was removed from a full limit query. We'll need to
// requery from the local cache to see if we know about some other
// doc that should be in the results.
(s=!0)),d&&(l?(a=a.add(l),o=p?o.add(t):o.delete(t)):(a=a.delete(t),o=o.delete(t)))}),hG(this.query)||hQ(this.query))for(;a.size>this.query.limit;){var h=hG(this.query)?a.last():a.first();a=a.delete(h.key),o=o.delete(h.key),r.track({type:1/* Removed */,doc:h})}return{fo:a,mo:r,Nn:s,mutatedKeys:o}},t.prototype.yo=function(t,e){// We suppress the initial change event for documents that were modified as
// part of a write acknowledgment (e.g. when the value of a server transform
// is applied) as Watch will send us the same document again.
// By suppressing the event, we only raise two user visible events (one with
// `hasPendingWrites` and the final state of the document) instead of three
// (one with `hasPendingWrites`, the modified document with
// `hasPendingWrites` and the final state of the document).
return t.hasLocalMutations&&e.hasCommittedMutations&&!e.hasLocalMutations},/**
     * Updates the view with the given ViewDocumentChanges and optionally updates
     * limbo docs and sync state from the provided target change.
     * @param docChanges - The set of changes to make to the view's docs.
     * @param updateLimboDocuments - Whether to update limbo documents based on
     *        this change.
     * @param targetChange - A target change to apply for computing limbo docs and
     *        sync state.
     * @returns A new ViewChange with the given docs, changes, and sync state.
     */// PORTING NOTE: The iOS/Android clients always compute limbo document changes.
t.prototype.applyChanges=function(t,e,n){var r=this,i=this.fo;this.fo=t.fo,this.mutatedKeys=t.mutatedKeys;// Sort changes based on type and query comparator
var o=t.mo.jr();o.sort(function(t,e){var n,i,o;return n=t.type,i=e.type,(o=function(t){switch(t){case 0/* Added */:return 1;case 2/* Modified */:case 3/* Metadata */:// A metadata change is converted to a modified change at the public
// api layer.  Since we sort by document key and then change type,
// metadata and modified changes must be sorted equivalently.
return 2;case 1/* Removed */:return 0;default:return cY()}})(n)-o(i)||r.lo(t.doc,e.doc)}),this.po(n);var a=e?this.Eo():[],s=0===this.ho.size&&this.current?1/* Synced */:0/* Local */,u=s!==this.ao;return this.ao=s,0!==o.length||u?{snapshot:new d4(this.query,t.fo,i,o,t.mutatedKeys,0/* Local */===s,u,/* excludesMetadataChanges= */!1),To:a}:{To:a};// no changes
},/**
     * Applies an OnlineState change to the view, potentially generating a
     * ViewChange if the view's syncState changes as a result.
     */t.prototype.zr=function(t){return this.current&&"Offline"/* Offline */===t?// to refresh our syncState and generate a ViewChange as appropriate. We
// are guaranteed to get a new TargetChange that sets `current` back to
// true once the client is back online.
(this.current=!1,this.applyChanges({fo:this.fo,mo:new d2,mutatedKeys:this.mutatedKeys,Nn:!1},/* updateLimboDocuments= */!1)):{To:[]}},/**
     * Returns whether the doc for the given key should be in limbo.
     */t.prototype.Io=function(t){// If the remote end says it's part of this query, it's not in limbo.
return!this.uo.has(t)&&// The local store doesn't think it's a result, so it shouldn't be in limbo.
!!this.fo.has(t)&&!this.fo.get(t).hasLocalMutations},/**
     * Updates syncedDocuments, current, and limbo docs based on the given change.
     * Returns the list of changes to which docs are in limbo.
     */t.prototype.po=function(t){var e=this;t&&(t.addedDocuments.forEach(function(t){return e.uo=e.uo.add(t)}),t.modifiedDocuments.forEach(function(t){}),t.removedDocuments.forEach(function(t){return e.uo=e.uo.delete(t)}),this.current=t.current)},t.prototype.Eo=function(){var t=this;// We can only determine limbo documents when we're in-sync with the server.
if(!this.current)return[];// TODO(klimt): Do this incrementally so that it's not quadratic when
// updating many documents.
var e=this.ho;this.ho=lH(),this.fo.forEach(function(e){t.Io(e.key)&&(t.ho=t.ho.add(e.key))});// Diff the new limbo docs with the old limbo docs.
var n=[];return e.forEach(function(e){t.ho.has(e)||n.push(new vs(e))}),this.ho.forEach(function(t){e.has(t)||n.push(new va(t))}),n},/**
     * Update the in-memory state of the current view with the state read from
     * persistence.
     *
     * We update the query view whenever a client's primary status changes:
     * - When a client transitions from primary to secondary, it can miss
     *   LocalStorage updates and its query views may temporarily not be
     *   synchronized with the state on disk.
     * - For secondary to primary transitions, the client needs to update the list
     *   of `syncedDocuments` since secondary clients update their query views
     *   based purely on synthesized RemoteEvents.
     *
     * @param queryResult.documents - The documents that match the query according
     * to the LocalStore.
     * @param queryResult.remoteKeys - The keys of the documents that match the
     * query according to the backend.
     *
     * @returns The ViewChange that resulted from this synchronization.
     */// PORTING NOTE: Multi-tab only.
t.prototype.Ao=function(t){this.uo=t.Bn,this.ho=lH();var e=this._o(t.documents);return this.applyChanges(e,/*updateLimboDocuments=*/!0)},/**
     * Returns a view snapshot as if this query was just listened to. Contains
     * a document add for every existing document and the `fromCache` and
     * `hasPendingWrites` status of the already established view.
     */// PORTING NOTE: Multi-tab only.
t.prototype.Ro=function(){return d4.fromInitialDocuments(this.query,this.fo,this.mutatedKeys,0/* Local */===this.ao)},t}(),vc=function(/**
     * The query itself.
     */t,/**
     * The target number created by the client that is used in the watch
     * stream to identify this query.
     */e,/**
     * The view is responsible for computing the final merged truth of what
     * docs are in the query. It gets notified of local and remote changes,
     * and applies the query filters and limits to determine the most correct
     * possible results.
     */n){this.query=t,this.targetId=e,this.view=n},vh=function(t){this.key=t,/**
             * Set to true once we've received a document. This is used in
             * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to
             * decide whether it needs to manufacture a delete event for the target once
             * the target is CURRENT.
             */this.bo=!1},vl=/** @class */function(){function t(t,e,n,r,i,o){this.localStore=t,this.remoteStore=e,this.eventManager=n,this.sharedClientState=r,this.currentUser=i,this.maxConcurrentLimboResolutions=o,this.vo={},this.Po=new pA(function(t){return h2(t)},h1),this.Vo=new Map,/**
             * The keys of documents that are in limbo for which we haven't yet started a
             * limbo resolution query. The strings in this set are the result of calling
             * `key.path.canonicalString()` where `key` is a `DocumentKey` object.
             *
             * The `Set` type was chosen because it provides efficient lookup and removal
             * of arbitrary elements and it also maintains insertion order, providing the
             * desired queue-like FIFO semantics.
             */this.So=new Set,/**
             * Keeps track of the target ID for each document that is in limbo with an
             * active target.
             */this.Do=new lL(hh.comparator),/**
             * Keeps track of the information about an active limbo resolution for each
             * active target ID that was started for the purpose of limbo resolution.
             */this.Co=new Map,this.No=new p4,/** Stores user completion handlers, indexed by User and BatchId. */this.xo={},/** Stores user callbacks waiting for all pending writes to be acknowledged. */this.ko=new Map,this.Fo=pm.Yt(),this.onlineState="Unknown"/* Unknown */,// startup. In the interim, a client should only be considered primary if
// `isPrimary` is true.
this.$o=void 0}return Object.defineProperty(t.prototype,"isPrimaryClient",{get:function(){return!0===this.$o},enumerable:!1,configurable:!0}),t}();/**
 * Initiates the new listen, resolves promise when listen enqueued to the
 * server. All the subsequent view snapshots or errors are sent to the
 * subscribed handlers. Returns the initial snapshot.
 */function vf(t,e){return H(this,void 0,void 0,function(){var n,r,i,o,a,s;return W(this,function(u){switch(u.label){case 0:return(o=(n=vj(t)).Po.get(e))?// already exists when EventManager calls us for the first time. This
// happens when the primary tab is already listening to this query on
// behalf of another tab and the user of the primary also starts listening
// to the query. EventManager will not have an assigned target ID in this
// case and calls `listen` to obtain this ID.
(r=o.targetId,n.sharedClientState.addLocalQueryTarget(r),i=o.view.Ro(),[3/*break*/,4]):[3/*break*/,1];case 1:return[4/*yield*/,pX(n.localStore,hZ(e))];case 2:return a=u.sent(),s=n.sharedClientState.addLocalQueryTarget(a.targetId),r=a.targetId,[4/*yield*/,vp(n,e,r,"current"===s)];case 3:i=u.sent(),n.isPrimaryClient&&dx(n.remoteStore,a),u.label=4;case 4:return[2/*return*/,i]}})})}/**
 * Registers a view for a previously unknown query and computes its initial
 * snapshot.
 */function vp(t,e,n,r){return H(this,void 0,void 0,function(){var i,o,a,s,u,c;return W(this,function(h){switch(h.label){case 0:// PORTING NOTE: On Web only, we inject the code that registers new Limbo
// targets based on view changes. This allows us to only depend on Limbo
// changes when user code includes queries.
return t.Oo=function(e,n,r){return function(t,e,n,r){return H(this,void 0,void 0,function(){var i,o,a;return W(this,function(s){switch(s.label){case 0:return(i=e.view._o(n)).Nn?[4/*yield*/,pZ(t.localStore,e.query,/* usePreviousResults= */!1).then(function(t){var n=t.documents;return e.view._o(n,i)})]:[3/*break*/,2];case 1:// The query has a limit and some docs were removed, so we need
// to re-run the query against the local store to make sure we
// didn't lose any good docs that had been past the limit.
i=s.sent(),s.label=2;case 2:return o=r&&r.targetChanges.get(e.targetId),a=e.view.applyChanges(i,/* updateLimboDocuments= */t.isPrimaryClient,o),[2/*return*/,(vC(t,e.targetId,a.To),a.snapshot)]}})})}(t,e,n,r)},[4/*yield*/,pZ(t.localStore,e,/* usePreviousResults= */!0)];case 1:return i=h.sent(),a=(o=new vu(e,i.Bn))._o(i.documents),s=lG.createSynthesizedTargetChangeForCurrentChange(n,r&&"Offline"/* Offline */!==t.onlineState),u=o.applyChanges(a,/* updateLimboDocuments= */t.isPrimaryClient,s),vC(t,n,u.To),c=new vc(e,n,o),[2/*return*/,(t.Po.set(e,c),t.Vo.has(n)?t.Vo.get(n).push(e):t.Vo.set(n,[e]),u.snapshot)]}})})}/** Stops listening to the query. */function vd(t,e){return H(this,void 0,void 0,function(){var n,r,i;return W(this,function(o){switch(o.label){case 0:return r=(n=t).Po.get(e),(i=n.Vo.get(r.targetId)).length>1?[2/*return*/,(n.Vo.set(r.targetId,i.filter(function(t){return!h1(t,e)})),void n.Po.delete(e))]:n.isPrimaryClient?// whether any other client is still interested in this target.
(n.sharedClientState.removeLocalQueryTarget(r.targetId),n.sharedClientState.isActiveQueryTarget(r.targetId)?[3/*break*/,2]:[4/*yield*/,pJ(n.localStore,r.targetId,/*keepPersistedTargetData=*/!1).then(function(){n.sharedClientState.clearQueryState(r.targetId),dP(n.remoteStore,r.targetId),vE(n,r.targetId)}).catch(pI)]):[3/*break*/,3];case 1:o.sent(),o.label=2;case 2:return[3/*break*/,5];case 3:return vE(n,r.targetId),[4/*yield*/,pJ(n.localStore,r.targetId,/*keepPersistedTargetData=*/!0)];case 4:o.sent(),o.label=5;case 5:return[2/*return*/]}})})}/**
 * Initiates the write of local mutation batch which involves adding the
 * writes to the mutation queue, notifying the remote store about new
 * mutations and raising events for any changes this write caused.
 *
 * The promise returned by this call is resolved when the above steps
 * have completed, *not* when the write was acked by the backend. The
 * userCallback is resolved once the write was acked/rejected by the
 * backend (or failed locally for any other reason).
 */function vv(t,e,n){return H(this,void 0,void 0,function(){var r,i,o;return W(this,function(a){var s,u,c,h,l,f,p;switch(a.label){case 0:r=vU(t),a.label=1;case 1:return a.trys.push([1,5,,6]),[4/*yield*/,(s=r.localStore,c=c0.now(),h=e.reduce(function(t,e){return t.add(e.key)},lH()),s.persistence.runTransaction("Locally write mutations","readwrite",function(t){return s.Mn.pn(t,h).next(function(n){u=n;for(// we record the base state in a separate patch mutation. This is
// later used to guarantee consistent values and prevents flicker
// even if the backend sends us an update that already includes our
// transform.
var r=[],i=0;i<e.length;i++){var o=e[i],a=/**
 * If this mutation is not idempotent, returns the base value to persist with
 * this mutation. If a base value is returned, the mutation is always applied
 * to this base value, even if document has already been updated.
 *
 * The base value is a sparse object that consists of only the document
 * fields for which this mutation contains a non-idempotent transformation
 * (e.g. a numeric increment). The provided value guarantees consistent
 * behavior for non-idempotent transforms and allow us to return the same
 * latency-compensated value even if the backend has already applied the
 * mutation. The base value is null for idempotent mutations, as they can be
 * re-played even if the backend has already applied them.
 *
 * @returns a base value to store along with the mutation, or null for
 * idempotent mutations.
 */function(t,e){for(var n=null,r=0,i=t.fieldTransforms;r<i.length;r++){var o=i[r],a=e.data.field(o.field),s=lt(o.transform,a||null);null!=s&&(null==n&&(n=hE.empty()),n.set(o.field,s))}return n||null}(o,u.get(o.key));null!=a&&// NOTE: The base state should only be applied if there's some
// existing document to override, so use a Precondition of
// exists=true
r.push(new ly(o.key,a,/**
 * Returns a FieldMask built from all fields in a MapValue.
 */function t(e){var n=[];return c4(e.fields,function(e,r){var i=new c7([e]);if(hI(r)){var o=t(r.mapValue).fields;if(0===o.length)n.push(i);else // leaf nodes.
for(var a=0;a<o.length;a++){var s=o[a];n.push(i.child(s))}}else // nodes.
n.push(i)}),new c9(n)/**
 * Represents a document in Firestore with a key, version, data and whether it
 * has local mutations applied to it.
 *
 * Documents can transition between states via `convertToFoundDocument()`,
 * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does
 * not transition to one of these states even after all mutations have been
 * applied, `isValidDocument()` returns false and the document should be removed
 * from all views.
 */}(a.value.mapValue),ll.exists(!0)))}return s._n.addMutationBatch(t,c,r,e)})}).then(function(t){return t.applyToLocalDocumentSet(u),{batchId:t.batchId,changes:u}}))];case 2:return i=a.sent(),r.sharedClientState.addPendingMutation(i.batchId),l=r,f=i.batchId,(p=l.xo[l.currentUser.toKey()])||(p=new lL(cJ)),p=p.insert(f,n),l.xo[l.currentUser.toKey()]=p,[4/*yield*/,vN(r,i.changes)];case 3:return a.sent(),[4/*yield*/,dK(r.remoteStore)];case 4:return a.sent(),[3/*break*/,6];case 5:return o=d0(a.sent(),"Failed to persist write"),n.reject(o),[3/*break*/,6];case 6:return[2/*return*/]}})})}/**
 * Applies one remote event to the sync engine, notifying any views of the
 * changes, and releasing any pending mutation batches that would become
 * visible because of the snapshot version the remote event contains.
 */function vg(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){var o,a,s;switch(i.label){case 0:n=t,i.label=1;case 1:return i.trys.push([1,4,,6]),[4/*yield*/,(o=n.localStore,a=e.snapshotVersion,s=o.kn,o.persistence.runTransaction("Apply remote event","readwrite-primary",function(t){var n=o.On.newChangeBuffer({trackRemovals:!0});// Reset newTargetDataByTargetMap in case this transaction gets re-run.
s=o.kn;var r=[];e.targetChanges.forEach(function(e,n){var i=s.get(n);if(i){// Only update the remote keys if the target is still active. This
// ensures that we can persist the updated target data along with
// the updated assignment.
r.push(o.qe.removeMatchingKeys(t,e.removedDocuments,n).next(function(){return o.qe.addMatchingKeys(t,e.addedDocuments,n)}));var u=e.resumeToken;// Update the resume token if the change includes one.
if(u.approximateByteSize()>0){var c=i.withResumeToken(u,a).withSequenceNumber(t.currentSequenceNumber);s=s.insert(n,c),c.resumeToken.approximateByteSize()>0||cY(),(0===i.resumeToken.approximateByteSize()||// Don't allow resume token changes to be buffered indefinitely. This
// allows us to be reasonably up-to-date after a crash and avoids needing
// to loop over all active queries on shutdown. Especially in the browser
// we may not get time to do anything interesting while the current tab is
// closing.
c.snapshotVersion.toMicroseconds()-i.snapshotVersion.toMicroseconds()>=3e8||e.addedDocuments.size+e.modifiedDocuments.size+e.removedDocuments.size>0)&&r.push(o.qe.updateTargetData(t,c))}}});var i=lq;// HACK: The only reason we allow a null snapshot version is so that we
// can synthesize remote events when we get permission denied errors while
// trying to resolve the state of a locally cached document that is in
// limbo.
if(e.documentUpdates.forEach(function(n,i){e.resolvedLimboDocuments.has(n)&&r.push(o.persistence.referenceDelegate.updateLimboDocument(t,n))}),// documents in advance in a single call.
r.push(pY(t,n,e.documentUpdates,a,void 0).next(function(t){i=t})),!a.isEqual(c1.min())){var u=o.qe.getLastRemoteSnapshotVersion(t).next(function(e){return o.qe.setTargetsMetadata(t,t.currentSequenceNumber,a)});r.push(u)}return fU.waitFor(r).next(function(){return n.apply(t)}).next(function(){return o.Mn.En(t,i)}).next(function(){return i})}).then(function(t){return o.kn=s,t}))];case 2:return r=i.sent(),e.targetChanges.forEach(function(t,e){var r=n.Co.get(e);r&&// Since this is a limbo resolution lookup, it's for a single document
// and it could be added, modified, or removed, but not a combination.
(t.addedDocuments.size+t.modifiedDocuments.size+t.removedDocuments.size<=1||cY(),t.addedDocuments.size>0?r.bo=!0:t.modifiedDocuments.size>0?r.bo||cY():t.removedDocuments.size>0&&(r.bo||cY(),r.bo=!1))}),[4/*yield*/,vN(n,r,e)];case 3:case 5:// Update `receivedDocument` as appropriate for any limbo targets.
return i.sent(),[3/*break*/,6];case 4:return[4/*yield*/,pI(i.sent())];case 6:return[2/*return*/]}})})}/**
 * Applies an OnlineState change to the sync engine and notifies any views of
 * the change.
 */function vm(t,e,n){// If we are the secondary client, we explicitly ignore the remote store's
// online state (the local client may go offline, even though the primary
// tab remains online) and only apply the primary tab's online state from
// SharedClientState.
if(t.isPrimaryClient&&0/* RemoteStore */===n||!t.isPrimaryClient&&1/* SharedClientState */===n){var r,i,o=[];t.Po.forEach(function(t,n){var r=n.view.zr(e);r.snapshot&&o.push(r.snapshot)}),(r=t.eventManager).onlineState=e,i=!1,r.queries.forEach(function(t,n){for(var r=0,o=n.listeners;r<o.length;r++)o[r].zr(e)&&(i=!0)}),i&&vt(r),o.length&&t.vo._r(o),t.onlineState=e,t.isPrimaryClient&&t.sharedClientState.setOnlineState(e)}}/**
 * Rejects the listen for the given targetID. This can be triggered by the
 * backend for any active target.
 *
 * @param syncEngine - The sync engine implementation.
 * @param targetId - The targetID corresponds to one previously initiated by the
 * user as part of TargetData passed to listen() on RemoteStore.
 * @param err - A description of the condition that has forced the rejection.
 * Nearly always this will be an indication that the user is no longer
 * authorized to see the data matching the target.
 */function vy(t,e,n){return H(this,void 0,void 0,function(){var r,i,o,a,s,u;return W(this,function(c){switch(c.label){case 0:// PORTING NOTE: Multi-tab only.
return(r=t).sharedClientState.updateQueryState(e,"rejected",n),(o=(i=r.Co.get(e))&&i.key)?(a=(a=new lL(hh.comparator)).insert(o,hS.newNoDocument(o,c1.min())),s=lH().add(o),u=new lz(c1.min(),/* targetChanges= */new Map,/* targetMismatches= */new lj(cJ),a,s),[4/*yield*/,vg(r,u)]):[3/*break*/,2];case 1:return c.sent(),// We only remove it from bookkeeping after we successfully applied the
// RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to
// this query when the RemoteStore restarts the Watch stream, which should
// re-trigger the target failure.
r.Do=r.Do.remove(o),r.Co.delete(e),vk(r),[3/*break*/,4];case 2:return[4/*yield*/,pJ(r.localStore,e,/* keepPersistedTargetData */!1).then(function(){return vE(r,e,n)}).catch(pI)];case 3:c.sent(),c.label=4;case 4:return[2/*return*/]}})})}function v_(t,e){return H(this,void 0,void 0,function(){var n,r,i;return W(this,function(o){var a;switch(o.label){case 0:n=t,r=e.batch.batchId,o.label=1;case 1:return o.trys.push([1,4,,6]),[4/*yield*/,(a=n.localStore).persistence.runTransaction("Acknowledge batch","readwrite-primary",function(t){var n,r,i,o=e.batch.keys(),s=a.On.newChangeBuffer({trackRemovals:!0});return(r=(n=e.batch).keys(),i=fU.resolve(),r.forEach(function(r){i=i.next(function(){return s.getEntry(t,r)}).next(function(t){var i=e.docVersions.get(r);null!==i||cY(),0>t.version.compareTo(i)&&(n.applyToRemoteDocument(t,e),t.isValidDocument()&&// We use the commitVersion as the readTime rather than the
// document's updateTime since the updateTime is not advanced
// for updates that do not modify the underlying document.
s.addEntry(t,e.commitVersion))})}),i.next(function(){return a._n.removeMutationBatch(t,n)})).next(function(){return s.apply(t)}).next(function(){return a._n.performConsistencyCheck(t)}).next(function(){return a.Mn.pn(t,o)})})];case 2:return i=o.sent(),// raise events immediately (depending on whether the watcher is caught
// up), so we raise user callbacks first so that they consistently happen
// before listen events.
vT(n,r,/*error=*/null),vI(n,r),n.sharedClientState.updateMutationState(r,"acknowledged"),[4/*yield*/,vN(n,i)];case 3:case 5:// The local store may or may not be able to apply the write result and
// raise events immediately (depending on whether the watcher is caught
// up), so we raise user callbacks first so that they consistently happen
// before listen events.
return o.sent(),[3/*break*/,6];case 4:return[4/*yield*/,pI(o.sent())];case 6:return[2/*return*/]}})})}function vb(t,e,n){return H(this,void 0,void 0,function(){var r,i;return W(this,function(o){var a;switch(o.label){case 0:r=t,o.label=1;case 1:return o.trys.push([1,4,,6]),[4/*yield*/,(a=r.localStore).persistence.runTransaction("Reject batch","readwrite-primary",function(t){var n;return a._n.lookupMutationBatch(t,e).next(function(e){return null!==e||cY(),n=e.keys(),a._n.removeMutationBatch(t,e)}).next(function(){return a._n.performConsistencyCheck(t)}).next(function(){return a.Mn.pn(t,n)})})];case 2:return i=o.sent(),// raise events immediately (depending on whether the watcher is caught up),
// so we raise user callbacks first so that they consistently happen before
// listen events.
vT(r,e,n),vI(r,e),r.sharedClientState.updateMutationState(e,"rejected",n),[4/*yield*/,vN(r,i)];case 3:case 5:// The local store may or may not be able to apply the write result and
// raise events immediately (depending on whether the watcher is caught up),
// so we raise user callbacks first so that they consistently happen before
// listen events.
return o.sent(),[3/*break*/,6];case 4:return[4/*yield*/,pI(o.sent())];case 6:return[2/*return*/]}})})}/**
 * Registers a user callback that resolves when all pending mutations at the moment of calling
 * are acknowledged .
 */function vw(t,e){return H(this,void 0,void 0,function(){var n,r,i,o;return W(this,function(a){var s;switch(a.label){case 0:dF((n=t).remoteStore)||cz("SyncEngine","The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."),a.label=1;case 1:return a.trys.push([1,3,,4]),[4/*yield*/,(s=n.localStore).persistence.runTransaction("Get highest unacknowledged batch id","readonly",function(t){return s._n.getHighestUnacknowledgedBatchId(t)})];case 2:return -1===(r=a.sent())?[2/*return*/,void e.resolve()]:((i=n.ko.get(r)||[]).push(e),n.ko.set(r,i),[3/*break*/,4]);case 3:return o=d0(a.sent(),"Initialization of waitForPendingWrites() operation failed"),e.reject(o),[3/*break*/,4];case 4:return[2/*return*/]}})})}/**
 * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,
 * if there are any.
 */function vI(t,e){(t.ko.get(e)||[]).forEach(function(t){t.resolve()}),t.ko.delete(e)/** Reject all outstanding callbacks waiting for pending writes to complete. */}function vT(t,e,n){var r=t.xo[t.currentUser.toKey()];// NOTE: Mutations restored from persistence won't have callbacks, so it's
// okay for there to be no callback for this ID.
if(r){var i=r.get(e);i&&(n?i.reject(n):i.resolve(),r=r.remove(e)),t.xo[t.currentUser.toKey()]=r}}function vE(t,e,n){void 0===n&&(n=null),t.sharedClientState.removeLocalQueryTarget(e);for(var r=0,i=t.Vo.get(e);r<i.length;r++){var o=i[r];t.Po.delete(o),n&&t.vo.Mo(o,n)}t.Vo.delete(e),t.isPrimaryClient&&t.No.Zn(e).forEach(function(e){t.No.containsKey(e)||// We removed the last reference for this key
vS(t,e)})}function vS(t,e){t.So.delete(e.path.canonicalString());// It's possible that the target already got removed because the query failed. In that case,
// the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.
var n=t.Do.get(e);null!==n&&(dP(t.remoteStore,n),t.Do=t.Do.remove(e),t.Co.delete(n),vk(t))}function vC(t,e,n){for(var r=0;r<n.length;r++){var i=n[r];i instanceof va?(t.No.addReference(i.key,e),function(t,e){var n=e.key,r=n.path.canonicalString();t.Do.get(n)||t.So.has(r)||(cz("SyncEngine","New document in limbo: "+n),t.So.add(r),vk(t))}(t,i)):i instanceof vs?(cz("SyncEngine","Document no longer in limbo: "+i.key),t.No.removeReference(i.key,e),t.No.containsKey(i.key)||// We removed the last reference for this key
vS(t,i.key)):cY()}}/**
 * Starts listens for documents in limbo that are enqueued for resolution,
 * subject to a maximum number of concurrent resolutions.
 *
 * Without bounding the number of concurrent resolutions, the server can fail
 * with "resource exhausted" errors which can lead to pathological client
 * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.
 */function vk(t){for(;t.So.size>0&&t.Do.size<t.maxConcurrentLimboResolutions;){var e=t.So.values().next().value;t.So.delete(e);var n=new hh(c5.fromString(e)),r=t.Fo.next();t.Co.set(r,new vh(n)),t.Do=t.Do.insert(n,r),dx(t.remoteStore,new fZ(hZ(hz(n.path)),r,2/* LimboResolution */,cV.o))}}function vN(t,e,n){return H(this,void 0,void 0,function(){var r,i,o,a;return W(this,function(s){switch(s.label){case 0:return i=[],o=[],a=[],(r=t).Po.isEmpty()?[3/*break*/,3]:(r.Po.forEach(function(t,s){a.push(r.Oo(s,e,n).then(function(t){if(t){r.isPrimaryClient&&r.sharedClientState.updateQueryState(s.targetId,t.fromCache?"not-current":"current"),i.push(t);var e=pW.Pn(s.targetId,t);o.push(e)}}))}),[4/*yield*/,Promise.all(a)]);case 1:return s.sent(),r.vo._r(i),[4/*yield*/,function(t,e){return H(this,void 0,void 0,function(){var n,r,i,o,a,s,u,c,h;return W(this,function(l){switch(l.label){case 0:n=t,l.label=1;case 1:return l.trys.push([1,3,,4]),[4/*yield*/,n.persistence.runTransaction("notifyLocalViewChanges","readwrite",function(t){return fU.forEach(e,function(e){return fU.forEach(e.bn,function(r){return n.persistence.referenceDelegate.addReference(t,e.targetId,r)}).next(function(){return fU.forEach(e.vn,function(r){return n.persistence.referenceDelegate.removeReference(t,e.targetId,r)})})})})];case 2:return l.sent(),[3/*break*/,4];case 3:if(!fH(r=l.sent()))throw r;// If `notifyLocalViewChanges` fails, we did not advance the sequence
// number for the documents that were included in this transaction.
// This might trigger them to be deleted earlier than they otherwise
// would have, but it should not invalidate the integrity of the data.
return cz("LocalStore","Failed to update sequence numbers: "+r),[3/*break*/,4];case 4:for(i=0,o=e;i<o.length;i++)s=(a=o[i]).targetId,a.fromCache||(c=(u=n.kn.get(s)).snapshotVersion,h=u.withLastLimboFreeSnapshotVersion(c),n.kn=n.kn.insert(s,h));return[2/*return*/]}})})}(r.localStore,o)];case 2:s.sent(),s.label=3;case 3:return[2/*return*/]}})})}function vA(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){var o;switch(i.label){case 0:return(n=t).currentUser.isEqual(e)?[3/*break*/,3]:(cz("SyncEngine","User change. New user:",e.toKey()),[4/*yield*/,pQ(n.localStore,e)]);case 1:return r=i.sent(),n.currentUser=e,(o=n).ko.forEach(function(t){t.forEach(function(t){t.reject(new cK(cB.CANCELLED,"'waitForPendingWrites' promise is rejected due to a user change."))})}),o.ko.clear(),n.sharedClientState.handleUserChange(e,r.removedBatchIds,r.addedBatchIds),[4/*yield*/,vN(n,r.Ln)];case 2:i.sent(),i.label=3;case 3:return[2/*return*/]}})})}function vR(t,e){var n=t.Co.get(e);if(n&&n.bo)return lH().add(n.key);var r=lH(),i=t.Vo.get(e);if(!i)return r;for(var o=0;o<i.length;o++){var a=i[o],s=t.Po.get(a);r=r.unionWith(s.view.wo)}return r}/**
 * Retrieves newly changed documents from remote document cache and raises
 * snapshots if needed.
 */// PORTING NOTE: Multi-Tab only.
function vx(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){return[2/*return*/,p1((e=t).localStore).then(function(t){return vN(e,t)})]})})}/** Applies a mutation state to an existing batch.  */// PORTING NOTE: Multi-Tab only.
function vP(t,e,n,r){return H(this,void 0,void 0,function(){var i,o;return W(this,function(a){switch(a.label){case 0:var s,u;return[4/*yield*/,(u=(s=(i=t).localStore)._n,s.persistence.runTransaction("Lookup mutation documents","readonly",function(t){return u.jt(t,e).next(function(e){return e?s.Mn.pn(t,e):fU.resolve(null)})}))];case 1:return null===(o=a.sent())?[3/*break*/,6]:"pending"!==n?[3/*break*/,3]:[4/*yield*/,dK(i.remoteStore)];case 2:// If we are the primary client, we need to send this write to the
// backend. Secondary clients will ignore these writes since their remote
// connection is disabled.
return a.sent(),[3/*break*/,4];case 3:"acknowledged"===n||"rejected"===n?// other clients.
(vT(i,e,r||null),vI(i,e),function(t,e){t._n.Gt(e)}(i.localStore,e)):cY(),a.label=4;case 4:return[4/*yield*/,vN(i,o)];case 5:return a.sent(),[3/*break*/,7];case 6:// A throttled tab may not have seen the mutation before it was completed
// and removed from the mutation queue, in which case we won't have cached
// the affected documents. In this case we can safely ignore the update
// since that means we didn't apply the mutation locally at all (if we
// had, we would have cached the affected documents), and so we will just
// see any resulting document changes via normal remote document updates
// as applicable.
cz("SyncEngine","Cannot apply mutation batch with id: "+e),a.label=7;case 7:return[2/*return*/]}})})}function vD(t,e,n){return H(this,void 0,void 0,function(){var n,r,i,o,a,s,u,c,h,l,f,p,d,v;return W(this,function(g){switch(g.label){case 0:n=t,r=[],i=[],o=0,a=e,g.label=1;case 1:return o<a.length?(s=a[o],u=void 0,(c=n.Vo.get(s))&&0!==c.length?[4/*yield*/,pX(n.localStore,hZ(c[0]))]:[3/*break*/,7]):[3/*break*/,13];case 2:// For queries that have a local View, we fetch their current state
// from LocalStore (as the resume token and the snapshot version
// might have changed) and reconcile their views with the persisted
// state (the list of syncedDocuments may have gotten out of sync).
u=g.sent(),h=0,l=c,g.label=3;case 3:return h<l.length?(f=l[h],p=n.Po.get(f),[4/*yield*/,/**
 * Reconcile the list of synced documents in an existing view with those
 * from persistence.
 */function(t,e){return H(this,void 0,void 0,function(){var n,r,i;return W(this,function(o){switch(o.label){case 0:return[4/*yield*/,pZ((n=t).localStore,e.query,/* usePreviousResults= */!0)];case 1:return r=o.sent(),i=e.view.Ao(r),[2/*return*/,(n.isPrimaryClient&&vC(n,e.targetId,i.To),i)]}})})}(n,p)]):[3/*break*/,6];case 4:(d=g.sent()).snapshot&&i.push(d.snapshot),g.label=5;case 5:return h++,[3/*break*/,3];case 6:return[3/*break*/,11];case 7:return[4/*yield*/,p0(n.localStore,s)];case 8:return v=g.sent(),[4/*yield*/,pX(n.localStore,v)];case 9:return u=g.sent(),[4/*yield*/,vp(n,vO(v),s,/*current=*/!1)];case 10:g.sent(),g.label=11;case 11:r.push(u),g.label=12;case 12:return o++,[3/*break*/,1];case 13:return[2/*return*/,(n.vo._r(i),r)]}})})}/**
 * Creates a `Query` object from the specified `Target`. There is no way to
 * obtain the original `Query`, so we synthesize a `Query` from the `Target`
 * object.
 *
 * The synthesized result might be different from the original `Query`, but
 * since the synthesized `Query` should return the same results as the
 * original one (only the presentation of results might differ), the potential
 * difference will not cause issues.
 */// PORTING NOTE: Multi-Tab only.
function vO(t){var e,n,r,i,o,a,s;return e=t.path,n=t.collectionGroup,r=t.orderBy,i=t.filters,o=t.limit,a=t.startAt,s=t.endAt,new hW(e,n,r,i,o,"F"/* First */,a,s)}/** Returns the IDs of the clients that are currently active. */// PORTING NOTE: Multi-Tab only.
function vL(t){return t.localStore.persistence.fn()}/** Applies a query target change from a different tab. */// PORTING NOTE: Multi-Tab only.
function vM(t,e,n,r){return H(this,void 0,void 0,function(){var i,o,a;return W(this,function(s){switch(s.label){case 0:return(i=t).$o?// either already secondary or another tab has taken the primary lease.
(cz("SyncEngine","Ignoring unexpected query state notification."),[3/*break*/,8]):[3/*break*/,1];case 1:if(!i.Vo.has(e))return[3/*break*/,8];switch(n){case"current":case"not-current":return[3/*break*/,2];case"rejected":return[3/*break*/,5]}return[3/*break*/,7];case 2:return[4/*yield*/,p1(i.localStore)];case 3:return o=s.sent(),a=lz.createSynthesizedRemoteEventForCurrentChange(e,"current"===n),[4/*yield*/,vN(i,o,a)];case 4:return s.sent(),[3/*break*/,8];case 5:return[4/*yield*/,pJ(i.localStore,e,/* keepPersistedTargetData */!0)];case 6:return s.sent(),vE(i,e,r),[3/*break*/,8];case 7:cY(),s.label=8;case 8:return[2/*return*/]}})})}/** Adds or removes Watch targets for queries from different tabs. */function vF(t,e,n){return H(this,void 0,void 0,function(){var r,i,o,a,s,u,c,h,l,f;return W(this,function(p){switch(p.label){case 0:if(!(r=vj(t)).$o)return[3/*break*/,10];i=0,o=e,p.label=1;case 1:return i<o.length?(a=o[i],r.Vo.has(a)?(cz("SyncEngine","Adding an already active target "+a),[3/*break*/,5]):[4/*yield*/,p0(r.localStore,a)]):[3/*break*/,6];case 2:return s=p.sent(),[4/*yield*/,pX(r.localStore,s)];case 3:return u=p.sent(),[4/*yield*/,vp(r,vO(s),u.targetId,/*current=*/!1)];case 4:p.sent(),dx(r.remoteStore,u),p.label=5;case 5:return i++,[3/*break*/,1];case 6:c=function(t){return W(this,function(e){switch(e.label){case 0:return r.Vo.has(t)?[4/*yield*/,pJ(r.localStore,t,/* keepPersistedTargetData */!1).then(function(){dP(r.remoteStore,t),vE(r,t)}).catch(pI)]:[3/*break*/,2];// Release queries that are still active.
case 1:// Release queries that are still active.
e.sent(),e.label=2;case 2:return[2/*return*/]}})},h=0,l=n,p.label=7;case 7:return h<l.length?(f=l[h],[5/*yield**/,c(f)]):[3/*break*/,10];case 8:p.sent(),p.label=9;case 9:return h++,[3/*break*/,7];case 10:return[2/*return*/]}})})}function vj(t){return t.remoteStore.remoteSyncer.applyRemoteEvent=vg.bind(null,t),t.remoteStore.remoteSyncer.getRemoteKeysForTarget=vR.bind(null,t),t.remoteStore.remoteSyncer.rejectListen=vy.bind(null,t),t.vo._r=d7.bind(null,t.eventManager),t.vo.Mo=d9.bind(null,t.eventManager),t}function vU(t){return t.remoteStore.remoteSyncer.applySuccessfulWrite=v_.bind(null,t),t.remoteStore.remoteSyncer.rejectFailedWrite=vb.bind(null,t),t/**
 * Loads a Firestore bundle into the SDK. The returned promise resolves when
 * the bundle finished loading.
 *
 * @param syncEngine - SyncEngine to use.
 * @param bundleReader - Bundle to load into the SDK.
 * @param task - LoadBundleTask used to update the loading progress to public API.
 */}function vq(t,e,n){// eslint-disable-next-line @typescript-eslint/no-floating-promises
(function(t,e,n){return H(this,void 0,void 0,function(){var r,i,o,a,s,u;return W(this,function(c){var h,l,f,p,d,v;switch(c.label){case 0:return c.trys.push([0,14,,15]),[4/*yield*/,e.getMetadata()];case 1:return r=c.sent(),[4/*yield*/,(h=t.localStore,f=l5((l=r).createTime),h.persistence.runTransaction("hasNewerBundle","readonly",function(t){return h.Ke.getBundleMetadata(t,l.id)}).then(function(t){return!!t&&t.createTime.compareTo(f)>=0}))];case 2:return c.sent()?[4/*yield*/,e.close()]:[3/*break*/,4];case 3:return[2/*return*/,(c.sent(),void n._completeWith({taskState:"Success",documentsLoaded:(p=r).totalDocuments,bytesLoaded:p.totalBytes,totalDocuments:p.totalDocuments,totalBytes:p.totalBytes}))];case 4:return n._updateProgress(vo(r)),i=new vi(r,t.localStore,e.R),[4/*yield*/,e.Lo()];case 5:o=c.sent(),c.label=6;case 6:return o?[4/*yield*/,i.oo(o)]:[3/*break*/,10];case 7:return(a=c.sent())&&n._updateProgress(a),[4/*yield*/,e.Lo()];case 8:o=c.sent(),c.label=9;case 9:return[3/*break*/,6];case 10:return[4/*yield*/,i.complete()];case 11:// TODO(b/160876443): This currently raises snapshots with
// `fromCache=false` if users already listen to some queries and bundles
// has newer version.
return[4/*yield*/,vN(t,(s=c.sent()).wn,/* remoteEvent */void 0)];case 12:// Save metadata, so loading the same bundle will skip.
// TODO(b/160876443): This currently raises snapshots with
// `fromCache=false` if users already listen to some queries and bundles
// has newer version.
return c.sent(),[4/*yield*/,(d=t.localStore,v=r,d.persistence.runTransaction("Save bundle","readwrite",function(t){return d.Ke.saveBundleMetadata(t,v)}))];case 13:// TODO(b/160876443): This currently raises snapshots with
// `fromCache=false` if users already listen to some queries and bundles
// has newer version.
// Save metadata, so loading the same bundle will skip.
return c.sent(),n._completeWith(s.progress),[3/*break*/,15];case 14:return cQ("SyncEngine","Loading bundle failed with "+(u=c.sent())),n._failWith(u),[3/*break*/,15];case 15:return[2/*return*/]}})})})(t,e,n).then(function(){t.sharedClientState.notifyBundleLoaded()})}var vV=/** @class */function(){function t(){this.synchronizeTabs=!1}return t.prototype.initialize=function(t){return H(this,void 0,void 0,function(){return W(this,function(e){switch(e.label){case 0:return this.R=dw(t.databaseInfo.databaseId),this.sharedClientState=this.Bo(t),this.persistence=this.qo(t),[4/*yield*/,this.persistence.start()];case 1:return e.sent(),this.gcScheduler=this.Uo(t),this.localStore=this.Ko(t),[2/*return*/]}})})},t.prototype.Uo=function(t){return null},t.prototype.Ko=function(t){var /** Manages our in-memory or durable persistence. */e,n,r,i;return e=this.persistence,n=new pz,r=t.initialUser,i=this.R,new pG(e,n,r,i)},t.prototype.qo=function(t){return new p9(de.bs,this.R)},t.prototype.Bo=function(t){return new dp},t.prototype.terminate=function(){return H(this,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:return this.gcScheduler&&this.gcScheduler.stop(),[4/*yield*/,this.sharedClientState.shutdown()];case 1:return t.sent(),[4/*yield*/,this.persistence.shutdown()];case 2:return t.sent(),[2/*return*/]}})})},t}(),vB=/** @class */function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).Qo=e,i.cacheSizeBytes=n,i.forceOwnership=r,i.synchronizeTabs=!1,i}return B(e,t),e.prototype.initialize=function(e){return H(this,void 0,void 0,function(){var n=this;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,t.prototype.initialize.call(this,e)];case 1:return r.sent(),[4/*yield*/,/**
 * Reads the newest document change from persistence and moves the internal
 * synchronization marker forward so that calls to `getNewDocumentChanges()`
 * only return changes that happened after client initialization.
 */// PORTING NOTE: Multi-Tab only.
function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){return[2/*return*/,(e=t).persistence.runTransaction("Synchronize last document change read time","readonly",function(t){var e,n;return e=pO(t),n=c1.min(),e.$t({index:fC.readTimeIndex,reverse:!0},function(t,e,r){e.readTime&&(n=f3(e.readTime)),r.done()}).next(function(){return n})}).then(function(t){e.$n=t})]})})}(this.localStore)];case 2:return r.sent(),[4/*yield*/,this.Qo.initialize(this,e)];case 3:// Enqueue writes from a previous session
return r.sent(),[4/*yield*/,vU(this.Qo.syncEngine)];case 4:// Enqueue writes from a previous session
return r.sent(),[4/*yield*/,dK(this.Qo.remoteStore)];case 5:// NOTE: This will immediately call the listener, so we make sure to
// set it after localStore / remoteStore are started.
return r.sent(),[4/*yield*/,this.persistence.He(function(){return n.gcScheduler&&!n.gcScheduler.started&&n.gcScheduler.start(n.localStore),Promise.resolve()})];case 6:// NOTE: This will immediately call the listener, so we make sure to
// set it after localStore / remoteStore are started.
return r.sent(),[2/*return*/]}})})},e.prototype.Ko=function(t){var e,n,r,i;return e=this.persistence,n=new pz,r=t.initialUser,i=this.R,new pG(e,n,r,i)},e.prototype.Uo=function(t){var e=this.persistence.referenceDelegate.garbageCollector;return new pS(e,t.asyncQueue)},e.prototype.qo=function(t){var e=pB(t.databaseInfo.databaseId,t.databaseInfo.persistenceKey),n=void 0!==this.cacheSizeBytes?pc.withCacheSize(this.cacheSizeBytes):pc.DEFAULT;return new pU(this.synchronizeTabs,e,t.clientId,n,t.asyncQueue,d_(),db(),this.R,this.sharedClientState,!!this.forceOwnership)},e.prototype.Bo=function(t){return new dp},e}(vV),vK=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this,e,n,/* forceOwnership= */!1)||this).Qo=e,r.cacheSizeBytes=n,r.synchronizeTabs=!0,r}return B(e,t),e.prototype.initialize=function(e){return H(this,void 0,void 0,function(){var n,r=this;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,t.prototype.initialize.call(this,e)];case 1:return i.sent(),n=this.Qo.syncEngine,this.sharedClientState instanceof df?(this.sharedClientState.syncEngine={ui:vP.bind(null,n),ai:vM.bind(null,n),hi:vF.bind(null,n),fn:vL.bind(null,n),ci:vx.bind(null,n)},[4/*yield*/,this.sharedClientState.start()]):[3/*break*/,3];case 2:i.sent(),i.label=3;case 3:// NOTE: This will immediately call the listener, so we make sure to
// set it after localStore / remoteStore are started.
return[4/*yield*/,this.persistence.He(function(t){return H(r,void 0,void 0,function(){return W(this,function(e){switch(e.label){case 0:return[4/*yield*/,/** Applies a query target change from a different tab. */// PORTING NOTE: Multi-Tab only.
function(t,e){return H(this,void 0,void 0,function(){var n,r,i,o,a,s,u,c;return W(this,function(h){var l;switch(h.label){case 0:return vj(n=t),vU(n),!0!==e||!0===n.$o?[3/*break*/,3]:(r=n.sharedClientState.getAllActiveQueryTargets(),[4/*yield*/,vD(n,r.toArray())]);case 1:return i=h.sent(),n.$o=!0,[4/*yield*/,dY(n.remoteStore,!0)];case 2:for(h.sent(),o=0,a=i;o<a.length;o++)s=a[o],dx(n.remoteStore,s);return[3/*break*/,7];case 3:return!1!==e||!1===n.$o?[3/*break*/,7]:(u=[],c=Promise.resolve(),n.Vo.forEach(function(t,e){n.sharedClientState.isLocalQueryTarget(e)?u.push(e):c=c.then(function(){return vE(n,e),pJ(n.localStore,e,/*keepPersistedTargetData=*/!0)}),dP(n.remoteStore,e)}),[4/*yield*/,c]);case 4:return h.sent(),[4/*yield*/,vD(n,u)];case 5:return h.sent(),(l=n).Co.forEach(function(t,e){dP(l.remoteStore,e)}),l.No.ts(),l.Co=new Map,l.Do=new lL(hh.comparator),n.$o=!1,[4/*yield*/,dY(n.remoteStore,!1)];case 6:h.sent(),h.label=7;case 7:return[2/*return*/]}})})}(this.Qo.syncEngine,t)];case 1:return e.sent(),this.gcScheduler&&(t&&!this.gcScheduler.started?this.gcScheduler.start(this.localStore):t||this.gcScheduler.stop()),[2/*return*/]}})})})];case 4:// NOTE: This will immediately call the listener, so we make sure to
// set it after localStore / remoteStore are started.
return i.sent(),[2/*return*/]}})})},e.prototype.Bo=function(t){var e=d_();if(!df.yt(e))throw new cK(cB.UNIMPLEMENTED,"IndexedDB persistence is only available on platforms that support LocalStorage.");var n=pB(t.databaseInfo.databaseId,t.databaseInfo.persistenceKey);return new df(e,t.asyncQueue,n,t.clientId,t.initialUser)},e}(vB),vH=/** @class */function(){function t(){}return t.prototype.initialize=function(t,e){return H(this,void 0,void 0,function(){var n=this;return W(this,function(r){switch(r.label){case 0:return this.localStore?[3/*break*/,2]:(this.localStore=t.localStore,this.sharedClientState=t.sharedClientState,this.datastore=this.createDatastore(e),this.remoteStore=this.createRemoteStore(e),this.eventManager=this.createEventManager(e),this.syncEngine=this.createSyncEngine(e,/* startAsPrimary=*/!t.synchronizeTabs),this.sharedClientState.onlineStateHandler=function(t){return vm(n.syncEngine,t,1/* SharedClientState */)},this.remoteStore.remoteSyncer.handleCredentialChange=vA.bind(null,this.syncEngine),[4/*yield*/,dY(this.remoteStore,this.syncEngine.isPrimaryClient)]);case 1:r.sent(),r.label=2;case 2:return[2/*return*/]}})})},t.prototype.createEventManager=function(t){return new d6},t.prototype.createDatastore=function(t){var e,n,r=dw(t.databaseInfo.databaseId),i=(n=t.databaseInfo,new dy(n));/** Return the Platform-specific connectivity monitor. */return e=t.credentials,new dC(e,i,r)},t.prototype.createRemoteStore=function(t){var e,n,r,i,o=this;return e=this.localStore,n=this.datastore,r=t.asyncQueue,i=dv.yt()?new dv:new dd,new dN(e,n,r,function(t){return vm(o.syncEngine,t,0/* RemoteStore */)},i)},t.prototype.createSyncEngine=function(t,e){var n,r,i,o,a,s,u;return n=this.localStore,r=this.remoteStore,i=this.eventManager,o=this.sharedClientState,a=t.initialUser,s=t.maxConcurrentLimboResolutions,u=new vl(n,r,i,o,a,s),e&&(u.$o=!0),u},t.prototype.terminate=function(){return function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return e=t,cz("RemoteStore","RemoteStore shutting down."),e.Or.add(5/* Shutdown */),[4/*yield*/,dR(e)];case 1:return n.sent(),e.Lr.shutdown(),// triggering spurious listener events with cached data, etc.
e.Br.set("Unknown"/* Unknown */),[2/*return*/]}})})}(this.remoteStore)},t}();/**
 * Provides all components needed for Firestore with IndexedDB persistence.
 *//**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * How many bytes to read each time when `ReadableStreamReader.read()` is
 * called. Only applicable for byte streams that we control (e.g. those backed
 * by an UInt8Array).
 *//**
 * Builds a `ByteStreamReader` from a UInt8Array.
 * @param source - The data source to use.
 * @param bytesPerRead - How many bytes each `read()` from the returned reader
 *        will read.
 */function vW(t,e){void 0===e&&(e=10240);var n=0;return{read:function(){return H(this,void 0,void 0,function(){var r;return W(this,function(i){return n<t.byteLength?(r={value:t.slice(n,n+e),done:!1},[2/*return*/,(n+=e,r)]):[2/*return*/,{done:!0}]})})},cancel:function(){return H(this,void 0,void 0,function(){return W(this,function(t){return[2/*return*/]})})},releaseLock:function(){},closed:Promise.reject("unimplemented")}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * On web, a `ReadableStream` is wrapped around by a `ByteStreamReader`.
 *//**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//*
 * A wrapper implementation of Observer<T> that will dispatch events
 * asynchronously. To allow immediate silencing, a mute call is added which
 * causes events scheduled to no longer be raised.
 */var vz=/** @class */function(){function t(t){this.observer=t,/**
             * When set to true, will not raise future events. Necessary to deal with
             * async detachment of listener.
             */this.muted=!1}return t.prototype.next=function(t){this.observer.next&&this.jo(this.observer.next,t)},t.prototype.error=function(t){this.observer.error?this.jo(this.observer.error,t):console.error("Uncaught Error in snapshot listener:",t)},t.prototype.Wo=function(){this.muted=!0},t.prototype.jo=function(t,e){var n=this;this.muted||setTimeout(function(){n.muted||t(e)},0)},t}(),vG=/** @class */function(){function t(/** The reader to read from underlying binary bundle data source. */t,e){var n=this;this.Go=t,this.R=e,/** Cached bundle metadata. */this.metadata=new fj,/**
             * Internal buffer to hold bundle content, accumulating incomplete element
             * content.
             */this.buffer=new Uint8Array,this.zo=new TextDecoder("utf-8"),this.Ho().then(function(t){t&&t.io()?n.metadata.resolve(t.payload.metadata):n.metadata.reject(Error("The first element of the bundle is not a metadata, it is\n             "+JSON.stringify(null==t?void 0:t.payload)))},function(t){return n.metadata.reject(t)})}return t.prototype.close=function(){return this.Go.cancel()},t.prototype.getMetadata=function(){return H(this,void 0,void 0,function(){return W(this,function(t){return[2/*return*/,this.metadata.promise]})})},t.prototype.Lo=function(){return H(this,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:return[4/*yield*/,this.getMetadata()];case 1:// Makes sure metadata is read before proceeding.
return[2/*return*/,(t.sent(),this.Ho())]}})})},/**
     * Reads from the head of internal buffer, and pulling more data from
     * underlying stream if a complete element cannot be found, until an
     * element(including the prefixed length and the JSON string) is found.
     *
     * Once a complete element is read, it is dropped from internal buffer.
     *
     * Returns either the bundled element, or null if we have reached the end of
     * the stream.
     */t.prototype.Ho=function(){return H(this,void 0,void 0,function(){var t,e,n,r;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,this.Jo()];case 1:return null===(t=i.sent())?[2/*return*/,null]:(isNaN(n=Number(e=this.zo.decode(t)))&&this.Yo("length string ("+e+") is not valid number"),[4/*yield*/,this.Xo(n)]);case 2:return r=i.sent(),[2/*return*/,new vn(JSON.parse(r),t.length+n)]}})})},/** First index of '{' from the underlying buffer. */t.prototype.Zo=function(){return this.buffer.findIndex(function(t){return 123===t})},/**
     * Reads from the beginning of the internal buffer, until the first '{', and
     * return the content.
     *
     * If reached end of the stream, returns a null.
     */t.prototype.Jo=function(){return H(this,void 0,void 0,function(){var t,e;return W(this,function(n){switch(n.label){case 0:return 0>this.Zo()?[4/*yield*/,this.tc()]:[3/*break*/,3];case 1:if(n.sent())return[3/*break*/,3];n.label=2;case 2:return[3/*break*/,0];case 3:// Broke out of the loop because underlying stream is closed, and there
// happens to be no more data to process.
return 0===this.buffer.length?[2/*return*/,null]:(// cannot find an open bracket.
(t=this.Zo())<0&&this.Yo("Reached the end of bundle when a length string is expected."),e=this.buffer.slice(0,t),[2/*return*/,(this.buffer=this.buffer.slice(t),e)])}})})},/**
     * Reads from a specified position from the internal buffer, for a specified
     * number of bytes, pulling more data from the underlying stream if needed.
     *
     * Returns a string decoded from the read bytes.
     */t.prototype.Xo=function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return this.buffer.length<t?[4/*yield*/,this.tc()]:[3/*break*/,3];case 1:n.sent()&&this.Yo("Reached the end of bundle when more is expected."),n.label=2;case 2:return[3/*break*/,0];case 3:// Update the internal buffer to drop the read json string.
return e=this.zo.decode(this.buffer.slice(0,t)),[2/*return*/,(this.buffer=this.buffer.slice(t),e)]}})})},t.prototype.Yo=function(t){// eslint-disable-next-line @typescript-eslint/no-floating-promises
throw this.Go.cancel(),Error("Invalid bundle format: "+t)},/**
     * Pulls more data from underlying stream to internal buffer.
     * Returns a boolean indicating whether the stream is finished.
     */t.prototype.tc=function(){return H(this,void 0,void 0,function(){var t,e;return W(this,function(n){switch(n.label){case 0:return[4/*yield*/,this.Go.read()];case 1:return(t=n.sent()).done||((e=new Uint8Array(this.buffer.length+t.value.length)).set(this.buffer),e.set(t.value,this.buffer.length),this.buffer=e),[2/*return*/,t.done]}})})},t}(),vQ=/** @class */function(){function t(t){this.datastore=t,this.readVersions=new Map,this.mutations=[],this.committed=!1,/**
             * A deferred usage error that occurred previously in this transaction that
             * will cause the transaction to fail once it actually commits.
             */this.lastWriteError=null,/**
             * Set of documents that have been written in the transaction.
             *
             * When there's more than one write to the same key in a transaction, any
             * writes after the first are handled differently.
             */this.writtenDocs=new Set}return t.prototype.lookup=function(t){return H(this,void 0,void 0,function(){var e,n=this;return W(this,function(r){switch(r.label){case 0:if(this.ensureCommitNotCalled(),this.mutations.length>0)throw new cK(cB.INVALID_ARGUMENT,"Firestore transactions require all reads to be executed before all writes.");return[4/*yield*/,function(t,e){return H(this,void 0,void 0,function(){var n,r,i,o,a,s;return W(this,function(u){switch(u.label){case 0:return r=fr((n=t).R)+"/documents",i={documents:e.map(function(t){return l9(n.R,t)})},[4/*yield*/,n.$i("BatchGetDocuments",r,i)];case 1:return o=u.sent(),a=new Map,o.forEach(function(t){var e,r,i,o,s,u,c=(e=n.R,"found"in t?(t.found||cY(),t.found.name,t.found.updateTime,r=ft(e,t.found.name),i=l5(t.found.updateTime),o=new hE({mapValue:{fields:t.found.fields}}),hS.newFoundDocument(r,i,o)):"missing"in t?(t.missing||cY(),t.readTime||cY(),s=ft(e,t.missing),u=l5(t.readTime),hS.newNoDocument(s,u)):cY());a.set(c.key.toString(),c)}),s=[],[2/*return*/,(e.forEach(function(t){var e=a.get(t.toString());e||cY(),s.push(e)}),s)]}})})}(this.datastore,t)];case 1:return[2/*return*/,((e=r.sent()).forEach(function(t){return n.recordVersion(t)}),e)]}})})},t.prototype.set=function(t,e){this.write(e.toMutation(t,this.precondition(t))),this.writtenDocs.add(t.toString())},t.prototype.update=function(t,e){try{this.write(e.toMutation(t,this.preconditionForUpdate(t)))}catch(t){this.lastWriteError=t}this.writtenDocs.add(t.toString())},t.prototype.delete=function(t){this.write(new lR(t,this.precondition(t))),this.writtenDocs.add(t.toString())},t.prototype.commit=function(){return H(this,void 0,void 0,function(){var t,e=this;return W(this,function(n){switch(n.label){case 0:if(this.ensureCommitNotCalled(),this.lastWriteError)throw this.lastWriteError;return t=this.readVersions,this.mutations.forEach(function(e){t.delete(e.key.toString())}),// a `verify` operation.
t.forEach(function(t,n){var r=hh.fromPath(n);e.mutations.push(new lx(r,e.precondition(r)))}),[4/*yield*/,function(t,e){return H(this,void 0,void 0,function(){var n,r,i;return W(this,function(o){switch(o.label){case 0:return r=fr((n=t).R)+"/documents",i={writes:e.map(function(t){return fs(n.R,t)})},[4/*yield*/,n.Ni("Commit",r,i)];case 1:return o.sent(),[2/*return*/]}})})}(this.datastore,this.mutations)];case 1:// For each mutation, note that the doc was written.
return n.sent(),this.committed=!0,[2/*return*/]}})})},t.prototype.recordVersion=function(t){if(t.isFoundDocument())e=t.version;else{if(!t.isNoDocument())throw cY();// For deleted docs, we must use baseVersion 0 when we overwrite them.
e=c1.min()}var e,n=this.readVersions.get(t.key.toString());if(n){if(!e.isEqual(n))throw new cK(cB.ABORTED,"Document version changed between two reads.")}else this.readVersions.set(t.key.toString(),e)},/**
     * Returns the version of this document when it was read in this transaction,
     * as a precondition, or no precondition if it was not read.
     */t.prototype.precondition=function(t){var e=this.readVersions.get(t.toString());return!this.writtenDocs.has(t.toString())&&e?ll.updateTime(e):ll.none()},/**
     * Returns the precondition for a document if the operation is an update.
     */t.prototype.preconditionForUpdate=function(t){var e=this.readVersions.get(t.toString());// The first time a document is written, we want to take into account the
// read time and existence
if(!this.writtenDocs.has(t.toString())&&e){if(e.isEqual(c1.min()))// This has to be validated locally because you can't send a
// precondition that a document does not exist without changing the
// semantics of the backend write to be an insert. This is the reverse
// of what we want, since we want to assert that the document doesn't
// exist but then send the update and have it fail. Since we can't
// express that to the backend, we have to validate locally.
// Note: this can change once we can send separate verify writes in the
// transaction.
throw new cK(cB.INVALID_ARGUMENT,"Can't update a document that doesn't exist.");// Document exists, base precondition on document update time.
return ll.updateTime(e)}// Document was not read, so we just use the preconditions for a blind
// update.
return ll.exists(!0)},t.prototype.write=function(t){this.ensureCommitNotCalled(),this.mutations.push(t)},t.prototype.ensureCommitNotCalled=function(){},t}(),v$=/** @class */function(){function t(t,e,n,r){this.asyncQueue=t,this.datastore=e,this.updateFunction=n,this.deferred=r,this.ec=5,this.Zi=new dI(this.asyncQueue,"transaction_retry"/* TransactionRetry */)/** Runs the transaction and sets the result on deferred. */}return t.prototype.run=function(){this.ec-=1,this.nc()},t.prototype.nc=function(){var t=this;this.Zi.ji(function(){return H(t,void 0,void 0,function(){var t,e,n=this;return W(this,function(r){return t=new vQ(this.datastore),(e=this.sc(t))&&e.then(function(e){n.asyncQueue.enqueueAndForget(function(){return t.commit().then(function(){n.deferred.resolve(e)}).catch(function(t){n.ic(t)})})}).catch(function(t){n.ic(t)}),[2/*return*/]})})})},t.prototype.sc=function(t){try{var e=this.updateFunction(t);return!hs(e)&&e.catch&&e.then?e:(this.deferred.reject(Error("Transaction callback must return a Promise")),null)}catch(t){// Do not retry errors thrown by user provided updateFunction.
return this.deferred.reject(t),null}},t.prototype.ic=function(t){var e=this;this.ec>0&&this.rc(t)?(this.ec-=1,this.asyncQueue.enqueueAndForget(function(){return e.nc(),Promise.resolve()})):this.deferred.reject(t)},t.prototype.rc=function(t){if("FirebaseError"===t.name){// In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and
// non-matching document versions with ABORTED. These errors should be retried.
var e=t.code;return"aborted"===e||"failed-precondition"===e||!lD(e)}return!1},t}(),vY=/** @class */function(){function t(t,/**
     * Asynchronous queue responsible for all of our internal processing. When
     * we get incoming work from the user (via public API) or the network
     * (incoming GRPC messages), we should always schedule onto this queue.
     * This ensures all of our work is properly serialized (e.g. we don't
     * start processing a new operation while the previous one is waiting for
     * an async I/O to complete).
     */e,n){var r=this;this.credentials=t,this.asyncQueue=e,this.databaseInfo=n,this.user=dn.UNAUTHENTICATED,this.clientId=cX.u(),this.credentialListener=function(){return Promise.resolve()},this.credentials.setChangeListener(e,function(t){return H(r,void 0,void 0,function(){return W(this,function(e){switch(e.label){case 0:return cz("FirestoreClient","Received user=",t.uid),[4/*yield*/,this.credentialListener(t)];case 1:return e.sent(),this.user=t,[2/*return*/]}})})})}return t.prototype.getConfiguration=function(){return H(this,void 0,void 0,function(){return W(this,function(t){return[2/*return*/,{asyncQueue:this.asyncQueue,databaseInfo:this.databaseInfo,clientId:this.clientId,credentials:this.credentials,initialUser:this.user,maxConcurrentLimboResolutions:100}]})})},t.prototype.setCredentialChangeListener=function(t){this.credentialListener=t},/**
     * Checks that the client has not been terminated. Ensures that other methods on
     * this class cannot be called after the client is terminated.
     */t.prototype.verifyNotTerminated=function(){if(this.asyncQueue.isShuttingDown)throw new cK(cB.FAILED_PRECONDITION,"The client has already been terminated.")},t.prototype.terminate=function(){var t=this;this.asyncQueue.enterRestrictedMode();var e=new fj;return this.asyncQueue.enqueueAndForgetEvenWhileRestricted(function(){return H(t,void 0,void 0,function(){var t;return W(this,function(n){switch(n.label){case 0:return n.trys.push([0,5,,6]),this.onlineComponents?[4/*yield*/,this.onlineComponents.terminate()]:[3/*break*/,2];case 1:n.sent(),n.label=2;case 2:return this.offlineComponents?[4/*yield*/,this.offlineComponents.terminate()]:[3/*break*/,4];case 3:n.sent(),n.label=4;case 4:// `removeChangeListener` must be called after shutting down the
// RemoteStore as it will prevent the RemoteStore from retrieving
// auth tokens.
return this.credentials.removeChangeListener(),e.resolve(),[3/*break*/,6];case 5:return t=d0(n.sent(),"Failed to shutdown persistence"),e.reject(t),[3/*break*/,6];case 6:return[2/*return*/]}})})}),e.promise},t}();/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A class representing a bundle.
 *
 * Takes a bundle stream or buffer, and presents abstractions to read bundled
 * elements out of the underlying content.
 */function vX(t,e){return H(this,void 0,void 0,function(){var n,r,i=this;return W(this,function(o){switch(o.label){case 0:return t.asyncQueue.verifyOperationInProgress(),cz("FirestoreClient","Initializing OfflineComponentProvider"),[4/*yield*/,t.getConfiguration()];case 1:return n=o.sent(),[4/*yield*/,e.initialize(n)];case 2:return o.sent(),r=n.initialUser,t.setCredentialChangeListener(function(t){return H(i,void 0,void 0,function(){return W(this,function(n){switch(n.label){case 0:return r.isEqual(t)?[3/*break*/,2]:[4/*yield*/,pQ(e.localStore,t)];case 1:n.sent(),r=t,n.label=2;case 2:return[2/*return*/]}})})}),// need to be terminated to allow the delete to succeed.
e.persistence.setDatabaseDeletedListener(function(){return t.terminate()}),t.offlineComponents=e,[2/*return*/]}})})}function vJ(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){switch(i.label){case 0:return t.asyncQueue.verifyOperationInProgress(),[4/*yield*/,vZ(t)];case 1:return n=i.sent(),cz("FirestoreClient","Initializing OnlineComponentProvider"),[4/*yield*/,t.getConfiguration()];case 2:return r=i.sent(),[4/*yield*/,e.initialize(n,r)];case 3:return i.sent(),// precedence over the offline component provider.
t.setCredentialChangeListener(function(t){return function(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){switch(i.label){case 0:return(n=t).asyncQueue.verifyOperationInProgress(),cz("RemoteStore","RemoteStore received new credentials"),r=dF(n),// fresh auth token for the new user and re-fill the write pipeline with
// new mutations from the LocalStore (since mutations are per-user).
n.Or.add(3/* CredentialChange */),[4/*yield*/,dR(n)];case 1:return i.sent(),r&&// Don't set the network status to Unknown if we are offline.
n.Br.set("Unknown"/* Unknown */),[4/*yield*/,n.remoteSyncer.handleCredentialChange(e)];case 2:return i.sent(),n.Or.delete(3/* CredentialChange */),[4/*yield*/,dA(n)];case 3:// Tear down and re-create our network streams. This will ensure we get a
// fresh auth token for the new user and re-fill the write pipeline with
// new mutations from the LocalStore (since mutations are per-user).
return i.sent(),[2/*return*/]}})})}(e.remoteStore,t)}),t.onlineComponents=e,[2/*return*/]}})})}function vZ(t){return H(this,void 0,void 0,function(){return W(this,function(e){switch(e.label){case 0:return t.offlineComponents?[3/*break*/,2]:(cz("FirestoreClient","Using default OfflineComponentProvider"),[4/*yield*/,vX(t,new vV)]);case 1:e.sent(),e.label=2;case 2:return[2/*return*/,t.offlineComponents]}})})}function v0(t){return H(this,void 0,void 0,function(){return W(this,function(e){switch(e.label){case 0:return t.onlineComponents?[3/*break*/,2]:(cz("FirestoreClient","Using default OnlineComponentProvider"),[4/*yield*/,vJ(t,new vH)]);case 1:e.sent(),e.label=2;case 2:return[2/*return*/,t.onlineComponents]}})})}function v1(t){return vZ(t).then(function(t){return t.persistence})}function v2(t){return vZ(t).then(function(t){return t.localStore})}function v4(t){return v0(t).then(function(t){return t.remoteStore})}function v3(t){return v0(t).then(function(t){return t.syncEngine})}function v6(t){return H(this,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,v0(t)];case 1:return[2/*return*/,((n=(e=r.sent()).eventManager).onListen=vf.bind(null,e.syncEngine),n.onUnlisten=vd.bind(null,e.syncEngine),n)]}})})}/** Enables the network connection and re-enqueues all pending operations. */function v5(t,e,n){var r=this;void 0===n&&(n={});var i=new fj;return t.asyncQueue.enqueueAndForget(function(){return H(r,void 0,void 0,function(){var r;return W(this,function(o){switch(o.label){case 0:return r=function(t,e,n,r,i){var o=new vz({next:function(o){// Remove query first before passing event to user to avoid
// user actions affecting the now stale query.
e.enqueueAndForget(function(){return d8(t,a)});var s=o.docs.has(n);!s&&o.fromCache?// exist then we resolve with a doc.exists set to false. If
// we're offline however, we reject the Promise in this
// case. Two options: 1) Cache the negative response from
// the server so we can deliver that even when you're
// offline 2) Actually reject the Promise in the online case
// if the document doesn't exist.
i.reject(new cK(cB.UNAVAILABLE,"Failed to get document because the client is offline.")):s&&o.fromCache&&r&&"server"===r.source?i.reject(new cK(cB.UNAVAILABLE,'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')):i.resolve(o)},error:function(t){return i.reject(t)}}),a=new ve(hz(n.path),o,{includeMetadataChanges:!0,so:!0});return d5(t,a)},[4/*yield*/,v6(t)];case 1:return[2/*return*/,r.apply(void 0,[o.sent(),t.asyncQueue,e,n,i])]}})})}),i.promise}function v8(t,e,n){var r=this;void 0===n&&(n={});var i=new fj;return t.asyncQueue.enqueueAndForget(function(){return H(r,void 0,void 0,function(){var r;return W(this,function(o){switch(o.label){case 0:return r=function(t,e,n,r,i){var o=new vz({next:function(n){// Remove query first before passing event to user to avoid
// user actions affecting the now stale query.
e.enqueueAndForget(function(){return d8(t,a)}),n.fromCache&&"server"===r.source?i.reject(new cK(cB.UNAVAILABLE,'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)')):i.resolve(n)},error:function(t){return i.reject(t)}}),a=new ve(n,o,{includeMetadataChanges:!0,so:!0});return d5(t,a)},[4/*yield*/,v6(t)];case 1:return[2/*return*/,r.apply(void 0,[o.sent(),t.asyncQueue,e,n,i])]}})})}),i.promise}var v7=/**
     * Constructs a DatabaseInfo using the provided host, databaseId and
     * persistenceKey.
     *
     * @param databaseId - The database to use.
     * @param appId - The Firebase App Id.
     * @param persistenceKey - A unique identifier for this Firestore's local
     * storage (used in conjunction with the databaseId).
     * @param host - The Firestore backend host to connect to.
     * @param ssl - Whether to use SSL when connecting.
     * @param forceLongPolling - Whether to use the forceLongPolling option
     * when using WebChannel as the network transport.
     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy
     * option when using WebChannel as the network transport.
     * @param useFetchStreams Whether to use the Fetch API instead of
     * XMLHTTPRequest
     */function(t,e,n,r,i,o,a,s){this.databaseId=t,this.appId=e,this.persistenceKey=n,this.host=r,this.ssl=i,this.forceLongPolling=o,this.autoDetectLongPolling=a,this.useFetchStreams=s},v9=/** @class */function(){function t(t,e){this.projectId=t,this.database=e||"(default)"}return Object.defineProperty(t.prototype,"isDefaultDatabase",{get:function(){return"(default)"===this.database},enumerable:!1,configurable:!0}),t.prototype.isEqual=function(e){return e instanceof t&&e.projectId===this.projectId&&e.database===this.database},t}(),gt=new Map,ge=function(t,e){this.user=e,this.type="OAuth",this.authHeaders={},this.authHeaders.Authorization="Bearer "+t},gn=/** @class */function(){function t(){/**
         * Stores the listener registered with setChangeListener()
         * This isn't actually necessary since the UID never changes, but we use this
         * to verify the listen contract is adhered to in tests.
         */this.changeListener=null}return t.prototype.getToken=function(){return Promise.resolve(null)},t.prototype.invalidateToken=function(){},t.prototype.setChangeListener=function(t,e){this.changeListener=e,t.enqueueRetryable(function(){return e(dn.UNAUTHENTICATED)})},t.prototype.removeChangeListener=function(){this.changeListener=null},t}(),gr=/** @class */function(){function t(t){this.token=t,/**
             * Stores the listener registered with setChangeListener()
             * This isn't actually necessary since the UID never changes, but we use this
             * to verify the listen contract is adhered to in tests.
             */this.changeListener=null}return t.prototype.getToken=function(){return Promise.resolve(this.token)},t.prototype.invalidateToken=function(){},t.prototype.setChangeListener=function(t,e){var n=this;this.changeListener=e,t.enqueueRetryable(function(){return e(n.token.user)})},t.prototype.removeChangeListener=function(){this.changeListener=null},t}(),gi=/** @class */function(){function t(t){var e=this;/** Tracks the current User. */this.currentUser=dn.UNAUTHENTICATED,/** Promise that allows blocking on the initialization of Firebase Auth. */this.oc=new fj,/**
             * Counter used to detect if the token changed while a getToken request was
             * outstanding.
             */this.cc=0,this.forceRefresh=!1,this.auth=null,this.asyncQueue=null,this.uc=function(){e.cc++,e.currentUser=e.ac(),e.oc.resolve(),e.changeListener&&e.asyncQueue.enqueueRetryable(function(){return e.changeListener(e.currentUser)})};var n=function(t){cz("FirebaseCredentialsProvider","Auth detected"),e.auth=t,e.auth.addAuthTokenListener(e.uc)};t.onInit(function(t){return n(t)}),// a chance to register itself with the component framework before we
// determine whether to start up in unauthenticated mode.
setTimeout(function(){if(!e.auth){var r=t.getImmediate({optional:!0});r?n(r):(cz("FirebaseCredentialsProvider","Auth not yet detected"),e.oc.resolve())}},0)}return t.prototype.getToken=function(){var t=this,e=this.cc,n=this.forceRefresh;// Take note of the current value of the tokenCounter so that this method
// can fail (with an ABORTED error) if there is a token change while the
// request is outstanding.
return this.forceRefresh=!1,this.auth?this.auth.getToken(n).then(function(n){// Cancel the request since the token changed while the request was
// outstanding so the response is potentially for a previous user (which
// user, we can't be sure).
return t.cc!==e?(cz("FirebaseCredentialsProvider","getToken aborted due to token change."),t.getToken()):n?("string"==typeof n.accessToken||cY(),new ge(n.accessToken,t.currentUser)):null}):Promise.resolve(null)},t.prototype.invalidateToken=function(){this.forceRefresh=!0},t.prototype.setChangeListener=function(t,e){var n=this;this.asyncQueue=t,this.asyncQueue.enqueueRetryable(function(){return H(n,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:return[4/*yield*/,this.oc.promise];case 1:return t.sent(),[4/*yield*/,e(this.currentUser)];case 2:return t.sent(),this.changeListener=e,[2/*return*/]}})})})},t.prototype.removeChangeListener=function(){this.auth&&this.auth.removeAuthTokenListener(this.uc),this.changeListener=function(){return Promise.resolve()}},// getUid() is synchronous, but the auth code populating Uid is asynchronous.
// This method should only be called in the AuthTokenListener callback
// to guarantee to get the actual user.
t.prototype.ac=function(){var t=this.auth&&this.auth.getUid();return null===t||"string"==typeof t||cY(),new dn(t)},t}(),go=/** @class */function(){function t(t,e,n){this.hc=t,this.lc=e,this.fc=n,this.type="FirstParty",this.user=dn.FIRST_PARTY}return Object.defineProperty(t.prototype,"authHeaders",{get:function(){var t={"X-Goog-AuthUser":this.lc},e=this.hc.auth.getAuthHeaderValueForFirstParty([]);// Use array notation to prevent minification
return e&&(t.Authorization=e),this.fc&&(t["X-Goog-Iam-Authorization-Token"]=this.fc),t},enumerable:!1,configurable:!0}),t}(),ga=/** @class */function(){function t(t,e,n){this.hc=t,this.lc=e,this.fc=n}return t.prototype.getToken=function(){return Promise.resolve(new go(this.hc,this.lc,this.fc))},t.prototype.setChangeListener=function(t,e){// Fire with initial uid.
t.enqueueRetryable(function(){return e(dn.FIRST_PARTY)})},t.prototype.removeChangeListener=function(){},t.prototype.invalidateToken=function(){},t}();/** The default database name for a project. *//** Represents the database ID a Firestore client is associated with. *//**
 * Builds a CredentialsProvider depending on the type of
 * the credentials passed in.
 *//**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function gs(t,e,n){if(!n)throw new cK(cB.INVALID_ARGUMENT,"Function "+t+"() cannot be called with an empty "+e+".")}function gu(t,e){if(void 0===e)return{merge:!1};if(void 0!==e.mergeFields&&void 0!==e.merge)throw new cK(cB.INVALID_ARGUMENT,"Invalid options passed to function "+t+'(): You cannot specify both "merge" and "mergeFields".');return e}/**
 * Validates that two boolean options are not set at the same time.
 */function gc(t,e,n,r){if(!0===e&&!0===r)throw new cK(cB.INVALID_ARGUMENT,t+" and "+n+" cannot be used together.")}/**
 * Validates that `path` refers to a document (indicated by the fact it contains
 * an even numbers of segments).
 */function gh(t){if(!hh.isDocumentKey(t))throw new cK(cB.INVALID_ARGUMENT,"Invalid document reference. Document references must have an even number of segments, but "+t+" has "+t.length+".")}/**
 * Validates that `path` refers to a collection (indicated by the fact it
 * contains an odd numbers of segments).
 */function gl(t){if(hh.isDocumentKey(t))throw new cK(cB.INVALID_ARGUMENT,"Invalid collection reference. Collection references must have an odd number of segments, but "+t+" has "+t.length+".")}/**
 * Returns true if it's a non-null object without a custom prototype
 * (i.e. excludes Array, Date, etc.).
 *//** Returns a string describing the type / value of the provided input. */function gf(t){if(void 0===t)return"undefined";if(null===t)return"null";if("string"==typeof t)return t.length>20&&(t=t.substring(0,20)+"..."),JSON.stringify(t);if("number"==typeof t||"boolean"==typeof t)return""+t;if("object"==typeof t){if(t instanceof Array)return"an array";var e=/** Hacky method to try to get the constructor name for an object. */function(t){if(t.constructor){var e=/function\s+([^\s(]+)\s*\(/.exec(t.constructor.toString());if(e&&e.length>1)return e[1]}return null}(t);return e?"a custom "+e+" object":"an object"}return"function"==typeof t?"a function":cY()}function gp(t,e){if("_delegate"in t&&// Unwrap Compat types
// eslint-disable-next-line @typescript-eslint/no-explicit-any
(t=t._delegate),!(t instanceof e)){if(e.name===t.constructor.name)throw new cK(cB.INVALID_ARGUMENT,"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?");var n=gf(t);throw new cK(cB.INVALID_ARGUMENT,"Expected type '"+e.name+"', but it was: "+n)}return t}function gd(t,e){if(e<=0)throw new cK(cB.INVALID_ARGUMENT,"Function "+t+"() requires a positive number, but it was: "+e+".")}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// settings() defaults:
/**
 * A concrete type describing all the values that can be applied via a
 * user-supplied `FirestoreSettings` object. This is a separate type so that
 * defaults can be supplied and the value can be checked for equality.
 */var gv=/** @class */function(){function t(t){var e;if(void 0===t.host){if(void 0!==t.ssl)throw new cK(cB.INVALID_ARGUMENT,"Can't provide ssl option if host option is not set");this.host="firestore.googleapis.com",this.ssl=!0}else this.host=t.host,this.ssl=null===(e=t.ssl)||void 0===e||e;if(this.credentials=t.credentials,this.ignoreUndefinedProperties=!!t.ignoreUndefinedProperties,void 0===t.cacheSizeBytes)this.cacheSizeBytes=41943040;else{if(-1!==t.cacheSizeBytes&&t.cacheSizeBytes<1048576)throw new cK(cB.INVALID_ARGUMENT,"cacheSizeBytes must be at least 1048576");this.cacheSizeBytes=t.cacheSizeBytes}this.experimentalForceLongPolling=!!t.experimentalForceLongPolling,this.experimentalAutoDetectLongPolling=!!t.experimentalAutoDetectLongPolling,this.useFetchStreams=!!t.useFetchStreams,gc("experimentalForceLongPolling",t.experimentalForceLongPolling,"experimentalAutoDetectLongPolling",t.experimentalAutoDetectLongPolling)}return t.prototype.isEqual=function(t){return this.host===t.host&&this.ssl===t.ssl&&this.credentials===t.credentials&&this.cacheSizeBytes===t.cacheSizeBytes&&this.experimentalForceLongPolling===t.experimentalForceLongPolling&&this.experimentalAutoDetectLongPolling===t.experimentalAutoDetectLongPolling&&this.ignoreUndefinedProperties===t.ignoreUndefinedProperties&&this.useFetchStreams===t.useFetchStreams},t}(),gg=/** @class */function(){/** @hideconstructor */function t(t,e){/**
         * Whether it's a Firestore or Firestore Lite instance.
         */this.type="firestore-lite",this._persistenceKey="(lite)",this._settings=new gv({}),this._settingsFrozen=!1,t instanceof v9?(this._databaseId=t,this._credentials=new gn):(this._app=t,this._databaseId=function(t){if(!Object.prototype.hasOwnProperty.apply(t.options,["projectId"]))throw new cK(cB.INVALID_ARGUMENT,'"projectId" not provided in firebase.initializeApp.');return new v9(t.options.projectId)}(t),this._credentials=new gi(e))}return Object.defineProperty(t.prototype,"app",{/**
         * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service
         * instance.
         */get:function(){if(!this._app)throw new cK(cB.FAILED_PRECONDITION,"Firestore was not initialized using the Firebase SDK. 'app' is not available");return this._app},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_initialized",{get:function(){return this._settingsFrozen},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"_terminated",{get:function(){return void 0!==this._terminateTask},enumerable:!1,configurable:!0}),t.prototype._setSettings=function(t){if(this._settingsFrozen)throw new cK(cB.FAILED_PRECONDITION,"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.");this._settings=new gv(t),void 0!==t.credentials&&(this._credentials=function(t){if(!t)return new gn;switch(t.type){case"gapi":var e=t.client;// Make sure this really is a Gapi client.
return"object"==typeof e&&null!==e&&e.auth&&e.auth.getAuthHeaderValueForFirstParty||cY(),new ga(e,t.sessionIndex||"0",t.iamToken||null);case"provider":return t.client;default:throw new cK(cB.INVALID_ARGUMENT,"makeCredentialsProvider failed due to invalid credential type")}}(t.credentials))},t.prototype._getSettings=function(){return this._settings},t.prototype._freezeSettings=function(){return this._settingsFrozen=!0,this._settings},t.prototype._delete=function(){return this._terminateTask||(this._terminateTask=this._terminate()),this._terminateTask},/** Returns a JSON-serializable representation of this `Firestore` instance. */t.prototype.toJSON=function(){return{app:this._app,databaseId:this._databaseId,settings:this._settings}},/**
     * Terminates all components used by this client. Subclasses can override
     * this method to clean up their own dependencies, but must also call this
     * method.
     *
     * Only ever called once.
     */t.prototype._terminate=function(){var t;/**
 * Removes all components associated with the provided instance. Must be called
 * when the `Firestore` instance is terminated.
 */return(t=gt.get(this))&&(cz("ComponentProvider","Removing Datastore"),gt.delete(this),t.terminate()),Promise.resolve()},t}(),gm=/** @class */function(){/** @hideconstructor */function t(t,/**
     * If provided, the `FirestoreDataConverter` associated with this instance.
     */e,n){this.converter=e,this._key=n,/** The type of this Firestore reference. */this.type="document",this.firestore=t}return Object.defineProperty(t.prototype,"_path",{get:function(){return this._key.path},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{/**
         * The document's identifier within its collection.
         */get:function(){return this._key.path.lastSegment()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"path",{/**
         * A string representing the path of the referenced document (relative
         * to the root of the database).
         */get:function(){return this._key.path.canonicalString()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"parent",{/**
         * The collection this `DocumentReference` belongs to.
         */get:function(){return new g_(this.firestore,this.converter,this._key.path.popLast())},enumerable:!1,configurable:!0}),t.prototype.withConverter=function(e){return new t(this.firestore,e,this._key)},t}(),gy=/** @class */function(){// This is the lite version of the Query class in the main SDK.
/** @hideconstructor protected */function t(t,/**
     * If provided, the `FirestoreDataConverter` associated with this instance.
     */e,n){this.converter=e,this._query=n,/** The type of this Firestore reference. */this.type="query",this.firestore=t}return t.prototype.withConverter=function(e){return new t(this.firestore,e,this._query)},t}(),g_=/** @class */function(t){/** @hideconstructor */function e(e,n,r){var i=this;return(i=t.call(this,e,n,hz(r))||this)._path=r,/** The type of this Firestore reference. */i.type="collection",i}return B(e,t),Object.defineProperty(e.prototype,"id",{/** The collection's identifier. */get:function(){return this._query.path.lastSegment()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"path",{/**
         * A string representing the path of the referenced collection (relative
         * to the root of the database).
         */get:function(){return this._query.path.canonicalString()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"parent",{/**
         * A reference to the containing `DocumentReference` if this is a
         * subcollection. If this isn't a subcollection, the reference is null.
         */get:function(){var t=this._path.popLast();return t.isEmpty()?null:new gm(this.firestore,/* converter= */null,new hh(t))},enumerable:!1,configurable:!0}),e.prototype.withConverter=function(t){return new e(this.firestore,t,this._path)},e}(gy);/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * The Cloud Firestore service interface.
 *
 * Do not call this constructor directly. Instead, use {@link getFirestore}.
 */function gb(t,e){for(var n,r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];if(t=tq(t),gs("collection","path",e),t instanceof gg)return gl(n=c5.fromString.apply(c5,Q([e],r))),new g_(t,/* converter= */null,n);if(!(t instanceof gm||t instanceof g_))throw new cK(cB.INVALID_ARGUMENT,"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");return gl(n=c5.fromString.apply(c5,Q([t.path],r)).child(c5.fromString(e))),new g_(t.firestore,/* converter= */null,n)}// TODO(firestorelite): Consider using ErrorFactory -
// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106
/**
 * Creates and returns a new `Query` instance that includes all documents in the
 * database that are contained in a collection or subcollection with the
 * given `collectionId`.
 *
 * @param firestore - A reference to the root `Firestore` instance.
 * @param collectionId - Identifies the collections to query over. Every
 * collection or subcollection with this ID as the last segment of its path
 * will be included. Cannot contain a slash.
 * @returns The created `Query`.
 */function gw(t,e){for(var n,r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];if(t=tq(t),// 'undefined' and 'null'.
1==arguments.length&&(e=cX.u()),gs("doc","path",e),t instanceof gg)return gh(n=c5.fromString.apply(c5,Q([e],r))),new gm(t,/* converter= */null,new hh(n));if(!(t instanceof gm||t instanceof g_))throw new cK(cB.INVALID_ARGUMENT,"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");return gh(n=t._path.child(c5.fromString.apply(c5,Q([e],r)))),new gm(t.firestore,t instanceof g_?t.converter:null,new hh(n))}/**
 * Returns true if the provided references are equal.
 *
 * @param left - A reference to compare.
 * @param right - A reference to compare.
 * @returns true if the references point to the same location in the same
 * Firestore database.
 */function gI(t,e){return t=tq(t),e=tq(e),(t instanceof gm||t instanceof g_)&&(e instanceof gm||e instanceof g_)&&t.firestore===e.firestore&&t.path===e.path&&t.converter===e.converter/**
 * Returns true if the provided queries point to the same collection and apply
 * the same constraints.
 *
 * @param left - A `Query` to compare.
 * @param right - A `Query` to compare.
 * @returns true if the references point to the same location in the same
 * Firestore database.
 */}function gT(t,e){return t=tq(t),e=tq(e),t instanceof gy&&e instanceof gy&&t.firestore===e.firestore&&h1(t._query,e._query)&&t.converter===e.converter/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */}var gE=/** @class */function(){function t(){var t=this;// The last promise in the queue.
this.dc=Promise.resolve(),// retried with backoff.
this.wc=[],// be changed again.
this._c=!1,// automatically removed after they are run or canceled.
this.mc=[],this.yc=null,// assertion sanity-checks.
this.gc=!1,this.Ec=!1,this.Tc=[],this.Zi=new dI(this,"async_queue_retry"/* AsyncQueueRetry */),// operations. Meant to speed up recovery when we regain file system access
// after page comes into foreground.
this.Ic=function(){var e=db();e&&cz("AsyncQueue","Visibility state changed to "+e.visibilityState),t.Zi.Gi()};var e=db();e&&"function"==typeof e.addEventListener&&e.addEventListener("visibilitychange",this.Ic)}return Object.defineProperty(t.prototype,"isShuttingDown",{get:function(){return this._c},enumerable:!1,configurable:!0}),/**
     * Adds a new operation to the queue without waiting for it to complete (i.e.
     * we ignore the Promise result).
     */t.prototype.enqueueAndForget=function(t){// eslint-disable-next-line @typescript-eslint/no-floating-promises
this.enqueue(t)},t.prototype.enqueueAndForgetEvenWhileRestricted=function(t){this.Ac(),this.Rc(t)},t.prototype.enterRestrictedMode=function(t){if(!this._c){this._c=!0,this.Ec=t||!1;var e=db();e&&"function"==typeof e.removeEventListener&&e.removeEventListener("visibilitychange",this.Ic)}},t.prototype.enqueue=function(t){var e=this;if(this.Ac(),this._c)return new Promise(function(){});// Create a deferred Promise that we can return to the callee. This
// allows us to return a "hanging Promise" only to the callee and still
// advance the queue even when the operation is not run.
var n=new fj;return this.Rc(function(){return e._c&&e.Ec?Promise.resolve():(t().then(n.resolve,n.reject),n.promise)}).then(function(){return n.promise})},t.prototype.enqueueRetryable=function(t){var e=this;this.enqueueAndForget(function(){return e.wc.push(t),e.bc()})},/**
     * Runs the next operation from the retryable queue. If the operation fails,
     * reschedules with backoff.
     */t.prototype.bc=function(){return H(this,void 0,void 0,function(){var t,e=this;return W(this,function(n){switch(n.label){case 0:if(0===this.wc.length)return[3/*break*/,5];n.label=1;case 1:return n.trys.push([1,3,,4]),[4/*yield*/,this.wc[0]()];case 2:return n.sent(),this.wc.shift(),this.Zi.reset(),[3/*break*/,4];case 3:if(!fH(t=n.sent()))throw t;// Failure will be handled by AsyncQueue
return cz("AsyncQueue","Operation failed with retryable error: "+t),[3/*break*/,4];case 4:this.wc.length>0&&// If there are additional operations, we re-schedule `retryNextOp()`.
// This is necessary to run retryable operations that failed during
// their initial attempt since we don't know whether they are already
// enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`
// needs to  be re-run, we will run `op1`, `op1`, `op2` using the
// already enqueued calls to `retryNextOp()`. `op3()` will then run in the
// call scheduled here.
// Since `backoffAndRun()` cancels an existing backoff and schedules a
// new backoff on every call, there is only ever a single additional
// operation in the queue.
this.Zi.ji(function(){return e.bc()}),n.label=5;case 5:return[2/*return*/]}})})},t.prototype.Rc=function(t){var e=this,n=this.dc.then(function(){return e.gc=!0,t().catch(function(t){var n;// Re-throw the error so that this.tail becomes a rejected Promise and
// all further attempts to chain (via .then) will just short-circuit
// and return the rejected Promise.
throw e.yc=t,e.gc=!1,cG("INTERNAL UNHANDLED ERROR: ",(n=t.message||"",t.stack&&(n=t.stack.includes(t.message)?t.stack:t.message+"\n"+t.stack),n)),t}).then(function(t){return e.gc=!1,t})});return this.dc=n,n},t.prototype.enqueueAfterDelay=function(t,e,n){var r=this;this.Ac(),this.Tc.indexOf(t)>-1&&(e=0);var i=dZ.createAndSchedule(this,t,e,n,function(t){return r.vc(t)});return this.mc.push(i),i},t.prototype.Ac=function(){this.yc&&cY()},t.prototype.verifyOperationInProgress=function(){},/**
     * Waits until all currently queued tasks are finished executing. Delayed
     * operations are not run.
     */t.prototype.Pc=function(){return H(this,void 0,void 0,function(){var t;return W(this,function(e){switch(e.label){case 0:return[4/*yield*/,t=this.dc];case 1:e.sent(),e.label=2;case 2:if(t!==this.dc)return[3/*break*/,0];e.label=3;case 3:return[2/*return*/]}})})},/**
     * For Tests: Determine if a delayed operation with a particular TimerId
     * exists.
     */t.prototype.Vc=function(t){for(var e=0,n=this.mc;e<n.length;e++)if(n[e].timerId===t)return!0;return!1},/**
     * For Tests: Runs some or all delayed operations early.
     *
     * @param lastTimerId - Delayed operations up to and including this TimerId
     * will be drained. Pass TimerId.All to run all delayed operations.
     * @returns a Promise that resolves once all operations have been run.
     */t.prototype.Sc=function(t){var e=this;// Note that draining may generate more delayed ops, so we do that first.
return this.Pc().then(function(){// Run ops in the same order they'd run if they ran naturally.
e.mc.sort(function(t,e){return t.targetTimeMs-e.targetTimeMs});for(var n=0,r=e.mc;n<r.length;n++){var i=r[n];if(i.skipDelay(),"all"/* All */!==t&&i.timerId===t)break}return e.Pc()})},/**
     * For Tests: Skip all subsequent delays for a timer id.
     */t.prototype.Dc=function(t){this.Tc.push(t)},/** Called once a DelayedOperation is run or canceled. */t.prototype.vc=function(t){// NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.
var e=this.mc.indexOf(t);this.mc.splice(e,1)},t}();function gS(t){/**
 * Returns true if obj is an object and contains at least one of the specified
 * methods.
 */return function(t,e){if("object"!=typeof t||null===t)return!1;for(var n=0,r=["next","error","complete"];n<r.length;n++){var i=r[n];if(i in t&&"function"==typeof t[i])return!0}return!1}(t)}var gC=/** @class */function(){function t(){this._progressObserver={},this._taskCompletionResolver=new fj,this._lastProgress={taskState:"Running",totalBytes:0,totalDocuments:0,bytesLoaded:0,documentsLoaded:0}/**
     * Registers functions to listen to bundle loading progress events.
     * @param next - Called when there is a progress update from bundle loading. Typically `next` calls occur
     *   each time a Firestore document is loaded from the bundle.
     * @param error - Called when an error occurs during bundle loading. The task aborts after reporting the
     *   error, and there should be no more updates after this.
     * @param complete - Called when the loading task is complete.
     */}return t.prototype.onProgress=function(t,e,n){this._progressObserver={next:t,error:e,complete:n}},/**
     * Implements the `Promise<LoadBundleTaskProgress>.catch` interface.
     *
     * @param onRejected - Called when an error occurs during bundle loading.
     */t.prototype.catch=function(t){return this._taskCompletionResolver.promise.catch(t)},/**
     * Implements the `Promise<LoadBundleTaskProgress>.then` interface.
     *
     * @param onFulfilled - Called on the completion of the loading task with a final `LoadBundleTaskProgress` update.
     *   The update will always have its `taskState` set to `"Success"`.
     * @param onRejected - Called when an error occurs during bundle loading.
     */t.prototype.then=function(t,e){return this._taskCompletionResolver.promise.then(t,e)},/**
     * Notifies all observers that bundle loading has completed, with a provided
     * `LoadBundleTaskProgress` object.
     *
     * @private
     */t.prototype._completeWith=function(t){this._updateProgress(t),this._progressObserver.complete&&this._progressObserver.complete(),this._taskCompletionResolver.resolve(t)},/**
     * Notifies all observers that bundle loading has failed, with a provided
     * `Error` as the reason.
     *
     * @private
     */t.prototype._failWith=function(t){this._lastProgress.taskState="Error",this._progressObserver.next&&this._progressObserver.next(this._lastProgress),this._progressObserver.error&&this._progressObserver.error(t),this._taskCompletionResolver.reject(t)},/**
     * Notifies a progress update of loading a bundle.
     * @param progress - The new progress.
     *
     * @private
     */t.prototype._updateProgress=function(t){this._lastProgress=t,this._progressObserver.next&&this._progressObserver.next(t)},t}(),gk=/** @class */function(t){/** @hideconstructor */function e(e,n){var r=this;/**
             * Whether it's a {@link Firestore} or Firestore Lite instance.
             */return(r=t.call(this,e,n)||this).type="firestore",r._queue=new gE,r._persistenceKey="name"in e?e.name:"[DEFAULT]",r}return B(e,t),e.prototype._terminate=function(){return this._firestoreClient||// The client must be initialized to ensure that all subsequent API
// usage throws an exception.
gA(this),this._firestoreClient.terminate()},e}(gg);/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** DOMException error code constants. *//**
 * @internal
 */function gN(t){return t._firestoreClient||gA(t),t._firestoreClient.verifyNotTerminated(),t._firestoreClient}function gA(t){var e,n,r,i,o=t._freezeSettings(),a=(e=t._databaseId,n=(null===(i=t._app)||void 0===i?void 0:i.options.appId)||"",r=t._persistenceKey,new v7(e,n,r,o.host,o.ssl,o.experimentalForceLongPolling,o.experimentalAutoDetectLongPolling,o.useFetchStreams));t._firestoreClient=new vY(t._credentials,t._queue,a)}/**
 * Attempts to enable persistent storage, if possible.
 *
 * Must be called before any other functions (other than
 * {@link initializeFirestore}, {@link getFirestore} or
 * {@link clearIndexedDbPersistence}.
 *
 * If this fails, `enableIndexedDbPersistence()` will reject the promise it
 * returns. Note that even after this failure, the {@link Firestore} instance will
 * remain usable, however offline persistence will be disabled.
 *
 * There are several reasons why this can fail, which can be identified by
 * the `code` on the error.
 *
 *   * failed-precondition: The app is already open in another browser tab.
 *   * unimplemented: The browser is incompatible with the offline
 *     persistence implementation.
 *
 * @param firestore - The {@link Firestore} instance to enable persistence for.
 * @param persistenceSettings - Optional settings object to configure
 * persistence.
 * @returns A `Promise` that represents successfully enabling persistent storage.
 *//**
 * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.
 * If the operation fails with a recoverable error (see
 * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected
 * but the client remains usable.
 */function gR(t,e,n){var r=this,i=new fj;return t.asyncQueue.enqueue(function(){return H(r,void 0,void 0,function(){var r;return W(this,function(o){switch(o.label){case 0:return o.trys.push([0,3,,4]),[4/*yield*/,vX(t,n)];case 1:return o.sent(),[4/*yield*/,vJ(t,e)];case 2:return o.sent(),i.resolve(),[3/*break*/,4];case 3:var a;if(!("FirebaseError"===(a=r=o.sent()).name?a.code===cB.FAILED_PRECONDITION||a.code===cB.UNIMPLEMENTED:!("undefined"!=typeof DOMException&&a instanceof DOMException)||22===a.code||20===a.code||// Firefox Private Browsing mode disables IndexedDb and returns
// INVALID_STATE for any usage.
11===a.code))throw r;return console.warn("Error enabling offline persistence. Falling back to persistence disabled: "+r),i.reject(r),[3/*break*/,4];case 4:return[2/*return*/]}})})}).then(function(){return i.promise})}/**
 * Re-enables use of the network for this {@link Firestore} instance after a prior
 * call to {@link disableNetwork}.
 *
 * @returns A `Promise` that is resolved once the network has been enabled.
 */function gx(t){if(t._initialized||t._terminated)throw new cK(cB.FAILED_PRECONDITION,"Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.")}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A `FieldPath` refers to a field in a document. The path may consist of a
 * single field name (referring to a top-level field in the document), or a
 * list of field names (referring to a nested field in the document).
 *
 * Create a `FieldPath` by providing field names. If more than one field
 * name is provided, the path will point to a nested field in a document.
 */var gP=/** @class */function(){/**
     * Creates a `FieldPath` from the provided field names. If more than one field
     * name is provided, the path will point to a nested field in a document.
     *
     * @param fieldNames - A list of field names.
     */function t(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=0;n<t.length;++n)if(0===t[n].length)throw new cK(cB.INVALID_ARGUMENT,"Invalid field name at argument $(i + 1). Field names must not be empty.");this._internalPath=new c7(t)}/**
     * Returns true if this `FieldPath` is equal to the provided one.
     *
     * @param other - The `FieldPath` to compare against.
     * @returns true if this `FieldPath` is equal to the provided one.
     */return t.prototype.isEqual=function(t){return this._internalPath.isEqual(t._internalPath)},t}(),gD=/** @class */function(){/** @hideconstructor */function t(t){this._byteString=t}/**
     * Creates a new `Bytes` object from the given Base64 string, converting it to
     * bytes.
     *
     * @param base64 - The Base64 string used to create the `Bytes` object.
     */return t.fromBase64String=function(e){try{return new t(ht.fromBase64String(e))}catch(t){throw new cK(cB.INVALID_ARGUMENT,"Failed to construct data from Base64 string: "+t)}},/**
     * Creates a new `Bytes` object from the given Uint8Array.
     *
     * @param array - The Uint8Array used to create the `Bytes` object.
     */t.fromUint8Array=function(e){return new t(ht.fromUint8Array(e))},/**
     * Returns the underlying bytes as a Base64-encoded string.
     *
     * @returns The Base64-encoded string created from the `Bytes` object.
     */t.prototype.toBase64=function(){return this._byteString.toBase64()},/**
     * Returns the underlying bytes in a new `Uint8Array`.
     *
     * @returns The Uint8Array created from the `Bytes` object.
     */t.prototype.toUint8Array=function(){return this._byteString.toUint8Array()},/**
     * Returns a string representation of the `Bytes` object.
     *
     * @returns A string representation of the `Bytes` object.
     */t.prototype.toString=function(){return"Bytes(base64: "+this.toBase64()+")"},/**
     * Returns true if this `Bytes` object is equal to the provided one.
     *
     * @param other - The `Bytes` object to compare against.
     * @returns true if this `Bytes` object is equal to the provided one.
     */t.prototype.isEqual=function(t){return this._byteString.isEqual(t._byteString)},t}(),gO=/**
     * @param _methodName - The public API endpoint that returns this class.
     * @hideconstructor
     */function(t){this._methodName=t},gL=/** @class */function(){/**
     * Creates a new immutable `GeoPoint` object with the provided latitude and
     * longitude values.
     * @param latitude - The latitude as number between -90 and 90.
     * @param longitude - The longitude as number between -180 and 180.
     */function t(t,e){if(!isFinite(t)||t<-90||t>90)throw new cK(cB.INVALID_ARGUMENT,"Latitude must be a number between -90 and 90, but was: "+t);if(!isFinite(e)||e<-180||e>180)throw new cK(cB.INVALID_ARGUMENT,"Longitude must be a number between -180 and 180, but was: "+e);this._lat=t,this._long=e}return Object.defineProperty(t.prototype,"latitude",{/**
         * The latitude of this `GeoPoint` instance.
         */get:function(){return this._lat},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"longitude",{/**
         * The longitude of this `GeoPoint` instance.
         */get:function(){return this._long},enumerable:!1,configurable:!0}),/**
     * Returns true if this `GeoPoint` is equal to the provided one.
     *
     * @param other - The `GeoPoint` to compare against.
     * @returns true if this `GeoPoint` is equal to the provided one.
     */t.prototype.isEqual=function(t){return this._lat===t._lat&&this._long===t._long},/** Returns a JSON-serializable representation of this GeoPoint. */t.prototype.toJSON=function(){return{latitude:this._lat,longitude:this._long}},/**
     * Actually private to JS consumers of our API, so this function is prefixed
     * with an underscore.
     */t.prototype._compareTo=function(t){return cJ(this._lat,t._lat)||cJ(this._long,t._long)},t}(),gM=/^__.*__$/,gF=/** @class */function(){function t(t,e,n){this.data=t,this.fieldMask=e,this.fieldTransforms=n}return t.prototype.toMutation=function(t,e){return null!==this.fieldMask?new ly(t,this.data,this.fieldMask,e,this.fieldTransforms):new lm(t,this.data,e,this.fieldTransforms)},t}(),gj=/** @class */function(){function t(t,e,n){this.data=t,this.fieldMask=e,this.fieldTransforms=n}return t.prototype.toMutation=function(t,e){return new ly(t,this.data,this.fieldMask,e,this.fieldTransforms)},t}();/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An immutable object representing an array of bytes.
 */function gU(t){switch(t){case 0/* Set */:// fall through
case 2/* MergeSet */:// fall through
case 1/* Update */:return!0;case 3/* Argument */:case 4/* ArrayArgument */:return!1;default:throw cY()}}/** A "context" object passed around while parsing user data. */var gq=/** @class */function(){/**
     * Initializes a ParseContext with the given source and path.
     *
     * @param settings - The settings for the parser.
     * @param databaseId - The database ID of the Firestore instance.
     * @param serializer - The serializer to use to generate the Value proto.
     * @param ignoreUndefinedProperties - Whether to ignore undefined properties
     * rather than throw.
     * @param fieldTransforms - A mutable list of field transforms encountered
     * while parsing the data.
     * @param fieldMask - A mutable list of field paths encountered while parsing
     * the data.
     *
     * TODO(b/34871131): We don't support array paths right now, so path can be
     * null to indicate the context represents any location within an array (in
     * which case certain features will not work and errors will be somewhat
     * compromised).
     */function t(t,e,n,r,i,o){this.settings=t,this.databaseId=e,this.R=n,this.ignoreUndefinedProperties=r,// external call and we need to validate the entire path.
void 0===i&&this.Cc(),this.fieldTransforms=i||[],this.fieldMask=o||[]}return Object.defineProperty(t.prototype,"path",{get:function(){return this.settings.path},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"Nc",{get:function(){return this.settings.Nc},enumerable:!1,configurable:!0}),/** Returns a new context with the specified settings overwritten. */t.prototype.xc=function(e){return new t(Object.assign(Object.assign({},this.settings),e),this.databaseId,this.R,this.ignoreUndefinedProperties,this.fieldTransforms,this.fieldMask)},t.prototype.kc=function(t){var e,n=null===(e=this.path)||void 0===e?void 0:e.child(t),r=this.xc({path:n,Fc:!1});return r.$c(t),r},t.prototype.Oc=function(t){var e,n=null===(e=this.path)||void 0===e?void 0:e.child(t),r=this.xc({path:n,Fc:!1});return r.Cc(),r},t.prototype.Mc=function(t){// TODO(b/34871131): We don't support array paths right now; so make path
// undefined.
return this.xc({path:void 0,Fc:!0})},t.prototype.Lc=function(t){return g5(t,this.settings.methodName,this.settings.Bc||!1,this.path,this.settings.qc)},/** Returns 'true' if 'fieldPath' was traversed when creating this context. */t.prototype.contains=function(t){return void 0!==this.fieldMask.find(function(e){return t.isPrefixOf(e)})||void 0!==this.fieldTransforms.find(function(e){return t.isPrefixOf(e.field)})},t.prototype.Cc=function(){// TODO(b/34871131): Remove null check once we have proper paths for fields
// within arrays.
if(this.path)for(var t=0;t<this.path.length;t++)this.$c(this.path.get(t))},t.prototype.$c=function(t){if(0===t.length)throw this.Lc("Document fields must not be empty");if(gU(this.Nc)&&gM.test(t))throw this.Lc('Document fields cannot begin and end with "__"')},t}(),gV=/** @class */function(){function t(t,e,n){this.databaseId=t,this.ignoreUndefinedProperties=e,this.R=n||dw(t)/** Creates a new top-level parse context. */}return t.prototype.Uc=function(t,e,n,r){return void 0===r&&(r=!1),new gq({Nc:t,methodName:e,qc:n,path:c7.emptyPath(),Fc:!1,Bc:r},this.databaseId,this.R,this.ignoreUndefinedProperties)},t}();/**
 * Helper for parsing raw user input (provided via the API) into internal model
 * classes.
 */function gB(t){var e=t._freezeSettings(),n=dw(t._databaseId);return new gV(t._databaseId,!!e.ignoreUndefinedProperties,n)}/** Parse document data from a set() call. */function gK(t,e,n,r,i,o){void 0===o&&(o={});var a=t.Uc(o.merge||o.mergeFields?2/* MergeSet */:0/* Set */,e,n,i);g2("Data must be an object, but it was:",a,r);var s,u,c=g0(r,a);if(o.merge)s=new c9(a.fieldMask),u=a.fieldTransforms;else if(o.mergeFields){for(var h=[],l=0,f=o.mergeFields;l<f.length;l++){var p=g4(e,f[l],n);if(!a.contains(p))throw new cK(cB.INVALID_ARGUMENT,"Field '"+p+"' is specified in your field mask but missing from your input data.");g8(h,p)||h.push(p)}s=new c9(h),u=a.fieldTransforms.filter(function(t){return s.covers(t.field)})}else s=null,u=a.fieldTransforms;return new gF(new hE(c),s,u)}var gH=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype._toFieldTransform=function(t){if(2/* MergeSet */!==t.Nc)throw 1/* Update */===t.Nc?t.Lc(this._methodName+"() can only appear at the top level of your update data"):t.Lc(this._methodName+"() cannot be used with set() unless you pass {merge:true}");// No transform to add for a delete, but we need to add it to our
// fieldMask so it gets deleted.
return t.fieldMask.push(t.path),null},e.prototype.isEqual=function(t){return t instanceof e},e}(gO);/**
 * Creates a child context for parsing SerializableFieldValues.
 *
 * This is different than calling `ParseContext.contextWith` because it keeps
 * the fieldTransforms and fieldMask separate.
 *
 * The created context has its `dataSource` set to `UserDataSource.Argument`.
 * Although these values are used with writes, any elements in these FieldValues
 * are not considered writes since they cannot contain any FieldValue sentinels,
 * etc.
 *
 * @param fieldValue - The sentinel FieldValue for which to create a child
 *     context.
 * @param context - The parent context.
 * @param arrayElement - Whether or not the FieldValue has an array.
 */function gW(t,e,n){return new gq({Nc:3/* Argument */,qc:e.settings.qc,methodName:t._methodName,Fc:n},e.databaseId,e.R,e.ignoreUndefinedProperties)}var gz=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype._toFieldTransform=function(t){return new lc(t.path,new le)},e.prototype.isEqual=function(t){return t instanceof e},e}(gO),gG=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this,e)||this).Kc=n,r}return B(e,t),e.prototype._toFieldTransform=function(t){var e=gW(this,t,/*array=*/!0),n=this.Kc.map(function(t){return gZ(t,e)}),r=new ln(n);return new lc(t.path,r)},e.prototype.isEqual=function(t){// TODO(mrschmidt): Implement isEquals
return this===t},e}(gO),gQ=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this,e)||this).Kc=n,r}return B(e,t),e.prototype._toFieldTransform=function(t){var e=gW(this,t,/*array=*/!0),n=this.Kc.map(function(t){return gZ(t,e)}),r=new li(n);return new lc(t.path,r)},e.prototype.isEqual=function(t){// TODO(mrschmidt): Implement isEquals
return this===t},e}(gO),g$=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this,e)||this).Qc=n,r}return B(e,t),e.prototype._toFieldTransform=function(t){var e=new la(t.R,h7(t.R,this.Qc));return new lc(t.path,e)},e.prototype.isEqual=function(t){// TODO(mrschmidt): Implement isEquals
return this===t},e}(gO);/** Parse update data from an update() call. */function gY(t,e,n,r){var i=t.Uc(1/* Update */,e,n);g2("Data must be an object, but it was:",i,r);var o=[],a=hE.empty();c4(r,function(t,r){var s=g6(e,t,n);// For Compat types, we have to "extract" the underlying types before
// performing validation.
r=tq(r);var u=i.Oc(s);if(r instanceof gH)o.push(s);else{var c=gZ(r,u);null!=c&&(o.push(s),a.set(s,c))}});var s=new c9(o);return new gj(a,s,i.fieldTransforms)}/** Parse update data from a list of field/value arguments. */function gX(t,e,n,r,i,o){var a=t.Uc(1/* Update */,e,n),s=[g4(e,r,n)],u=[i];if(o.length%2!=0)throw new cK(cB.INVALID_ARGUMENT,"Function "+e+"() needs to be called with an even number of arguments that alternate between field names and values.");for(var c=0;c<o.length;c+=2)s.push(g4(e,o[c])),u.push(o[c+1]);// We iterate in reverse order to pick the last value for a field if the
// user specified the field multiple times.
for(var h=[],l=hE.empty(),f=s.length-1;f>=0;--f)if(!g8(h,s[f])){var p=s[f],d=u[f];// For Compat types, we have to "extract" the underlying types before
// performing validation.
d=tq(d);var v=a.Oc(p);if(d instanceof gH)h.push(p);else{var g=gZ(d,v);null!=g&&(h.push(p),l.set(p,g))}}var m=new c9(h);return new gj(l,m,a.fieldTransforms)}/**
 * Parse a "query value" (e.g. value in a where filter or a value in a cursor
 * bound).
 *
 * @param allowArrays - Whether the query value is an array that may directly
 * contain additional arrays (e.g. the operand of an `in` query).
 */function gJ(t,e,n,r){return void 0===r&&(r=!1),gZ(n,t.Uc(r?4/* ArrayArgument */:3/* Argument */,e))}/**
 * Parses user data to Protobuf Values.
 *
 * @param input - Data to be parsed.
 * @param context - A context object representing the current path being parsed,
 * the source of the data being parsed, etc.
 * @returns The parsed value, or null if the value was a FieldValue sentinel
 * that should not be included in the resulting parsed data.
 */function gZ(t,e){if(g1(// from firestore-exp.
t=tq(t)))return g2("Unsupported field value:",e,t),g0(t,e);if(t instanceof gO)// in which case we do not want to include this field in our parsed data
// (as doing so will overwrite the field directly prior to the transform
// trying to transform it). So we don't add this location to
// context.fieldMask and we return null as our parsing result.
/**
     * "Parses" the provided FieldValueImpl, adding any necessary transforms to
     * context.fieldTransforms.
     */return function(t,e){// Sentinels are only supported with writes, and not within arrays.
if(!gU(e.Nc))throw e.Lc(t._methodName+"() can only be used with update() and set()");if(!e.path)throw e.Lc(t._methodName+"() is not currently supported inside arrays");var n=t._toFieldTransform(e);n&&e.fieldTransforms.push(n)}(t,e),null;if(void 0===t&&e.ignoreUndefinedProperties)// don't handle this below. If `ignoreUndefinedProperties` is false,
// `parseScalarValue` will reject an undefined value.
return null;if(// field mask paths more granular than the top-level array.
e.path&&e.fieldMask.push(e.path),t instanceof Array){// TODO(b/34871131): Include the path containing the array in the error
// message.
// In the case of IN queries, the parsed data is an array (representing
// the set of values to be included for the IN query) that may directly
// contain additional arrays (each representing an individual field
// value), so we disable this validation.
if(e.settings.Fc&&4/* ArrayArgument */!==e.Nc)throw e.Lc("Nested arrays are not supported");return function(t,e){for(var n=[],r=0,i=0;i<t.length;i++){var o=gZ(t[i],e.Mc(r));null==o&&// Just include nulls in the array for fields being replaced with a
// sentinel.
(o={nullValue:"NULL_VALUE"}),n.push(o),r++}return{arrayValue:{values:n}}}(t,e)}return function(t,e){if(null===(t=tq(t)))return{nullValue:"NULL_VALUE"};if("number"==typeof t)return h7(e.R,t);if("boolean"==typeof t)return{booleanValue:t};if("string"==typeof t)return{stringValue:t};if(t instanceof Date){var n=c0.fromDate(t);return{timestampValue:l3(e.R,n)}}if(t instanceof c0)return(// Firestore backend truncates precision down to microseconds. To ensure
// offline mode works the same with regards to truncation, perform the
// truncation immediately without waiting for the backend to do that.
n=new c0(t.seconds,1e3*Math.floor(t.nanoseconds/1e3)),{timestampValue:l3(e.R,n)});if(t instanceof gL)return{geoPointValue:{latitude:t.latitude,longitude:t.longitude}};if(t instanceof gD)return{bytesValue:l6(e.R,t._byteString)};if(t instanceof gm){n=e.databaseId;var r=t.firestore._databaseId;if(!r.isEqual(n))throw e.Lc("Document reference is for database "+r.projectId+"/"+r.database+" but should be for database "+n.projectId+"/"+n.database);return{referenceValue:l8(t.firestore._databaseId||e.databaseId,t._key.path)}}throw e.Lc("Unsupported field value: "+gf(t))}(t,e)}function g0(t,e){var n={};return c3(t)?// mask to ensure that the server creates a map entry.
e.path&&e.path.length>0&&e.fieldMask.push(e.path):c4(t,function(t,r){var i=gZ(r,e.kc(t));null!=i&&(n[t]=i)}),{mapValue:{fields:n}}}function g1(t){return!("object"!=typeof t||null===t||t instanceof Array||t instanceof Date||t instanceof c0||t instanceof gL||t instanceof gD||t instanceof gm||t instanceof gO)}function g2(t,e,n){if(!g1(n)||!("object"==typeof n&&null!==n&&(Object.getPrototypeOf(n)===Object.prototype||null===Object.getPrototypeOf(n)))){var r=gf(n);throw"an object"===r?e.Lc(t+" a custom object"):e.Lc(t+" "+r)}}/**
 * Helper that calls fromDotSeparatedString() but wraps any error thrown.
 */function g4(t,e,n){if(// FieldPath.
(e=tq(e))instanceof gP)return e._internalPath;if("string"==typeof e)return g6(t,e);throw g5("Field path arguments must be of type string or FieldPath.",t,/* hasConverter= */!1,/* path= */void 0,n)}/**
 * Matches any characters in a field path string that are reserved.
 */var g3=RegExp("[~\\*/\\[\\]]");/**
 * Wraps fromDotSeparatedString with an error message about the method that
 * was thrown.
 * @param methodName - The publicly visible method name
 * @param path - The dot-separated string form of a field path which will be
 * split on dots.
 * @param targetDoc - The document against which the field path will be
 * evaluated.
 */function g6(t,e,n){if(e.search(g3)>=0)throw g5("Invalid field path ("+e+"). Paths must not contain '~', '*', '/', '[', or ']'",t,/* hasConverter= */!1,/* path= */void 0,n);try{return(new(gP.bind.apply(gP,Q([void 0],e.split(".")))))._internalPath}catch(r){throw g5("Invalid field path ("+e+"). Paths must not be empty, begin with '.', end with '.', or contain '..'",t,/* hasConverter= */!1,/* path= */void 0,n)}}function g5(t,e,n,r,i){var o=r&&!r.isEmpty(),a=void 0!==i,s="Function "+e+"() called with invalid data";n&&(s+=" (via `toFirestore()`)");var u="";return(o||a)&&(u+=" (found",o&&(u+=" in field "+r),a&&(u+=" in document "+i),u+=")"),new cK(cB.INVALID_ARGUMENT,(s+=". ")+t+u)/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */}function g8(t,e){return t.some(function(t){return t.isEqual(e)})}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A `DocumentSnapshot` contains data read from a document in your Firestore
 * database. The data can be extracted with `.data()` or `.get(<field>)` to
 * get a specific field.
 *
 * For a `DocumentSnapshot` that points to a non-existing document, any data
 * access will return 'undefined'. You can use the `exists()` method to
 * explicitly verify a document's existence.
 */var g7=/** @class */function(){// Note: This class is stripped down version of the DocumentSnapshot in
// the legacy SDK. The changes are:
// - No support for SnapshotMetadata.
// - No support for SnapshotOptions.
/** @hideconstructor protected */function t(t,e,n,r,i){this._firestore=t,this._userDataWriter=e,this._key=n,this._document=r,this._converter=i}return Object.defineProperty(t.prototype,"id",{/** Property of the `DocumentSnapshot` that provides the document's ID. */get:function(){return this._key.path.lastSegment()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"ref",{/**
         * The `DocumentReference` for the document included in the `DocumentSnapshot`.
         */get:function(){return new gm(this._firestore,this._converter,this._key)},enumerable:!1,configurable:!0}),/**
     * Signals whether or not the document at the snapshot's location exists.
     *
     * @returns true if the document exists.
     */t.prototype.exists=function(){return null!==this._document},/**
     * Retrieves all fields in the document as an `Object`. Returns `undefined` if
     * the document doesn't exist.
     *
     * @returns An `Object` containing all fields in the document or `undefined`
     * if the document doesn't exist.
     */t.prototype.data=function(){if(this._document){if(this._converter){// We only want to use the converter and create a new DocumentSnapshot
// if a converter has been provided.
var t=new g9(this._firestore,this._userDataWriter,this._key,this._document,/* converter= */null);return this._converter.fromFirestore(t)}return this._userDataWriter.convertValue(this._document.data.value)}},/**
     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the
     * document or field doesn't exist.
     *
     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific
     * field.
     * @returns The data at the specified field location or undefined if no such
     * field exists in the document.
     */// We are using `any` here to avoid an explicit cast by our users.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
t.prototype.get=function(t){if(this._document){var e=this._document.data.field(mt("DocumentSnapshot.get",t));if(null!==e)return this._userDataWriter.convertValue(e)}},t}(),g9=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}/**
     * Retrieves all fields in the document as an `Object`.
     *
     * @override
     * @returns An `Object` containing all fields in the document.
     */return B(e,t),e.prototype.data=function(){return t.prototype.data.call(this)},e}(g7);/**
 * A `QueryDocumentSnapshot` contains data read from a document in your
 * Firestore database as part of a query. The document is guaranteed to exist
 * and its data can be extracted with `.data()` or `.get(<field>)` to get a
 * specific field.
 *
 * A `QueryDocumentSnapshot` offers the same API surface as a
 * `DocumentSnapshot`. Since query results contain only existing documents, the
 * `exists` property will always be true and `data()` will never return
 * 'undefined'.
 *//**
 * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.
 */function mt(t,e){return"string"==typeof e?g6(t,e):e instanceof gP?e._internalPath:e._delegate._internalPath}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Metadata about a snapshot, describing the state of the snapshot.
 */var me=/** @class */function(){/** @hideconstructor */function t(t,e){this.hasPendingWrites=t,this.fromCache=e/**
     * Returns true if this `SnapshotMetadata` is equal to the provided one.
     *
     * @param other - The `SnapshotMetadata` to compare against.
     * @returns true if this `SnapshotMetadata` is equal to the provided one.
     */}return t.prototype.isEqual=function(t){return this.hasPendingWrites===t.hasPendingWrites&&this.fromCache===t.fromCache},t}(),mn=/** @class */function(t){/** @hideconstructor protected */function e(e,n,r,i,o,a){var s=this;return(s=t.call(this,e,n,r,i,a)||this)._firestore=e,s._firestoreImpl=e,s.metadata=o,s}/**
     * Property of the `DocumentSnapshot` that signals whether or not the data
     * exists. True if the document exists.
     */return B(e,t),e.prototype.exists=function(){return t.prototype.exists.call(this)},/**
     * Retrieves all fields in the document as an `Object`. Returns `undefined` if
     * the document doesn't exist.
     *
     * By default, `FieldValue.serverTimestamp()` values that have not yet been
     * set to their final value will be returned as `null`. You can override
     * this by passing an options object.
     *
     * @param options - An options object to configure how data is retrieved from
     * the snapshot (for example the desired behavior for server timestamps that
     * have not yet been set to their final value).
     * @returns An `Object` containing all fields in the document or `undefined` if
     * the document doesn't exist.
     */e.prototype.data=function(t){if(void 0===t&&(t={}),this._document){if(this._converter){// We only want to use the converter and create a new DocumentSnapshot
// if a converter has been provided.
var e=new mr(this._firestore,this._userDataWriter,this._key,this._document,this.metadata,/* converter= */null);return this._converter.fromFirestore(e,t)}return this._userDataWriter.convertValue(this._document.data.value,t.serverTimestamps)}},/**
     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the
     * document or field doesn't exist.
     *
     * By default, a `FieldValue.serverTimestamp()` that has not yet been set to
     * its final value will be returned as `null`. You can override this by
     * passing an options object.
     *
     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific
     * field.
     * @param options - An options object to configure how the field is retrieved
     * from the snapshot (for example the desired behavior for server timestamps
     * that have not yet been set to their final value).
     * @returns The data at the specified field location or undefined if no such
     * field exists in the document.
     */// We are using `any` here to avoid an explicit cast by our users.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
e.prototype.get=function(t,e){if(void 0===e&&(e={}),this._document){var n=this._document.data.field(mt("DocumentSnapshot.get",t));if(null!==n)return this._userDataWriter.convertValue(n,e.serverTimestamps)}},e}(g7),mr=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}/**
     * Retrieves all fields in the document as an `Object`.
     *
     * By default, `FieldValue.serverTimestamp()` values that have not yet been
     * set to their final value will be returned as `null`. You can override
     * this by passing an options object.
     *
     * @override
     * @param options - An options object to configure how data is retrieved from
     * the snapshot (for example the desired behavior for server timestamps that
     * have not yet been set to their final value).
     * @returns An `Object` containing all fields in the document.
     */return B(e,t),e.prototype.data=function(e){return void 0===e&&(e={}),t.prototype.data.call(this,e)},e}(mn),mi=/** @class */function(){/** @hideconstructor */function t(t,e,n,r){this._firestore=t,this._userDataWriter=e,this._snapshot=r,this.metadata=new me(r.hasPendingWrites,r.fromCache),this.query=n}return Object.defineProperty(t.prototype,"docs",{/** An array of all the documents in the `QuerySnapshot`. */get:function(){var t=[];return this.forEach(function(e){return t.push(e)}),t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{/** The number of documents in the `QuerySnapshot`. */get:function(){return this._snapshot.docs.size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"empty",{/** True if there are no documents in the `QuerySnapshot`. */get:function(){return 0===this.size},enumerable:!1,configurable:!0}),/**
     * Enumerates all of the documents in the `QuerySnapshot`.
     *
     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for
     * each document in the snapshot.
     * @param thisArg - The `this` binding for the callback.
     */t.prototype.forEach=function(t,e){var n=this;this._snapshot.docs.forEach(function(r){t.call(e,new mr(n._firestore,n._userDataWriter,r.key,r,new me(n._snapshot.mutatedKeys.has(r.key),n._snapshot.fromCache),n.query.converter))})},/**
     * Returns an array of the documents changes since the last snapshot. If this
     * is the first snapshot, all documents will be in the list as 'added'
     * changes.
     *
     * @param options - `SnapshotListenOptions` that control whether metadata-only
     * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger
     * snapshot events.
     */t.prototype.docChanges=function(t){void 0===t&&(t={});var e=!!t.includeMetadataChanges;if(e&&this._snapshot.excludesMetadataChanges)throw new cK(cB.INVALID_ARGUMENT,"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().");return this._cachedChanges&&this._cachedChangesIncludeMetadataChanges===e||(this._cachedChanges=/** Calculates the array of `DocumentChange`s for a given `ViewSnapshot`. */function(t,e){if(t._snapshot.oldDocs.isEmpty()){var n=0;return t._snapshot.docChanges.map(function(e){return{type:"added",doc:new mr(t._firestore,t._userDataWriter,e.doc.key,e.doc,new me(t._snapshot.mutatedKeys.has(e.doc.key),t._snapshot.fromCache),t.query.converter),oldIndex:-1,newIndex:n++}})}// A `DocumentSet` that is updated incrementally as changes are applied to use
// to lookup the index of a document.
var r=t._snapshot.oldDocs;return t._snapshot.docChanges.filter(function(t){return e||3/* Metadata */!==t.type}).map(function(e){var n=new mr(t._firestore,t._userDataWriter,e.doc.key,e.doc,new me(t._snapshot.mutatedKeys.has(e.doc.key),t._snapshot.fromCache),t.query.converter),i=-1,o=-1;return 0/* Added */!==e.type&&(i=r.indexOf(e.doc.key),r=r.delete(e.doc.key)),1/* Removed */!==e.type&&(o=(r=r.add(e.doc)).indexOf(e.doc.key)),{type:/**
 * A `DocumentSnapshot` contains data read from a document in your Firestore
 * database. The data can be extracted with `.data()` or `.get(<field>)` to
 * get a specific field.
 *
 * For a `DocumentSnapshot` that points to a non-existing document, any data
 * access will return 'undefined'. You can use the `exists()` method to
 * explicitly verify a document's existence.
 */function(t){switch(t){case 0/* Added */:return"added";case 2/* Modified */:case 3/* Metadata */:return"modified";case 1/* Removed */:return"removed";default:return cY()}}(e.type),doc:n,oldIndex:i,newIndex:o}})}(this,e),this._cachedChangesIncludeMetadataChanges=e),this._cachedChanges},t}();// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot
// metadata
/**
 * Returns true if the provided snapshots are equal.
 *
 * @param left - A snapshot to compare.
 * @param right - A snapshot to compare.
 * @returns true if the snapshots are equal.
 */function mo(t,e){return t instanceof mn&&e instanceof mn?t._firestore===e._firestore&&t._key.isEqual(e._key)&&(null===t._document?null===e._document:t._document.isEqual(e._document))&&t._converter===e._converter:t instanceof mi&&e instanceof mi&&t._firestore===e._firestore&&gT(t.query,e.query)&&t.metadata.isEqual(e.metadata)&&t._snapshot.isEqual(e._snapshot)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ma(t){if(hQ(t)&&0===t.explicitOrderBy.length)throw new cK(cB.UNIMPLEMENTED,"limitToLast() queries require specifying at least one orderBy() clause")}/**
 * A `QueryConstraint` is used to narrow the set of documents returned by a
 * Firestore query. `QueryConstraint`s are created by invoking {@link where},
 * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link
 * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and
 * can then be passed to {@link query} to create a new query instance that
 * also contains this `QueryConstraint`.
 */var ms=function(){};/**
 * Creates a new immutable instance of {@link Query} that is extended to also include
 * additional query constraints.
 *
 * @param query - The {@link Query} instance to use as a base for the new constraints.
 * @param queryConstraints - The list of {@link QueryConstraint}s to apply.
 * @throws if any of the provided query constraints cannot be combined with the
 * existing or new constraints.
 */function mu(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];for(var r=0;r<e.length;r++)t=e[r]._apply(t);return t}var mc=/** @class */function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).jc=e,i.Wc=n,i.Gc=r,i.type="where",i}return B(e,t),e.prototype._apply=function(t){var e,n,r=gB(t.firestore),i=function(t,e,n,r,i,o,a){if(i.isKeyField()){if("array-contains"/* ARRAY_CONTAINS */===o||"array-contains-any"/* ARRAY_CONTAINS_ANY */===o)throw new cK(cB.INVALID_ARGUMENT,"Invalid Query. You can't perform '"+o+"' queries on FieldPath.documentId().");if("in"/* IN */===o||"not-in"/* NOT_IN */===o){mg(a,o);for(var s,u=[],c=0;c<a.length;c++){var h=a[c];u.push(mv(r,t,h))}s={arrayValue:{values:u}}}else s=mv(r,t,a)}else"in"/* IN */!==o&&"not-in"/* NOT_IN */!==o&&"array-contains-any"/* ARRAY_CONTAINS_ANY */!==o||mg(a,o),s=gJ(n,"where",a,/* allowArrays= */"in"/* IN */===o||"not-in"/* NOT_IN */===o);var l=hx.create(i,o,s);return function(t,e){if(e.g()){var n=hY(t);if(null!==n&&!n.isEqual(e.field))throw new cK(cB.INVALID_ARGUMENT,"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '"+n.toString()+"' and '"+e.field.toString()+"'");var r=h$(t);null!==r&&mm(t,e.field,r)}var i=function(t,e){for(var n=0,r=t.filters;n<r.length;n++){var i=r[n];if(e.indexOf(i.op)>=0)return i.op}return null}(t,/**
 * Given an operator, returns the set of operators that cannot be used with it.
 *
 * Operators in a query must adhere to the following set of rules:
 * 1. Only one array operator is allowed.
 * 2. Only one disjunctive operator is allowed.
 * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.
 * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.
 *
 * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`
 * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`
 */function(t){switch(t){case"!="/* NOT_EQUAL */:return["!="/* NOT_EQUAL */,"not-in"/* NOT_IN */];case"array-contains"/* ARRAY_CONTAINS */:return["array-contains"/* ARRAY_CONTAINS */,"array-contains-any"/* ARRAY_CONTAINS_ANY */,"not-in"/* NOT_IN */];case"in"/* IN */:return["array-contains-any"/* ARRAY_CONTAINS_ANY */,"in"/* IN */,"not-in"/* NOT_IN */];case"array-contains-any"/* ARRAY_CONTAINS_ANY */:return["array-contains"/* ARRAY_CONTAINS */,"array-contains-any"/* ARRAY_CONTAINS_ANY */,"in"/* IN */,"not-in"/* NOT_IN */];case"not-in"/* NOT_IN */:return["array-contains"/* ARRAY_CONTAINS */,"array-contains-any"/* ARRAY_CONTAINS_ANY */,"in"/* IN */,"not-in"/* NOT_IN */,"!="/* NOT_EQUAL */];default:return[]}}(e.op));if(null!==i)throw i===e.op?new cK(cB.INVALID_ARGUMENT,"Invalid query. You cannot use more than one '"+e.op.toString()+"' filter."):new cK(cB.INVALID_ARGUMENT,"Invalid query. You cannot use '"+e.op.toString()+"' filters with '"+i.toString()+"' filters.")}(t,l),l}(t._query,0,r,t.firestore._databaseId,this.jc,this.Wc,this.Gc);return new gy(t.firestore,t.converter,(n=(e=t._query).filters.concat([i]),new hW(e.path,e.collectionGroup,e.explicitOrderBy.slice(),n,e.limit,e.limitType,e.startAt,e.endAt)))},e}(ms),mh=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this)||this).jc=e,r.zc=n,r.type="orderBy",r}return B(e,t),e.prototype._apply=function(t){var e,n,r=function(t,e,n){if(null!==t.startAt)throw new cK(cB.INVALID_ARGUMENT,"Invalid query. You must not call startAt() or startAfter() before calling orderBy().");if(null!==t.endAt)throw new cK(cB.INVALID_ARGUMENT,"Invalid query. You must not call endAt() or endBefore() before calling orderBy().");var r=new hB(e,n);return function(t,e){if(null===h$(t)){// This is the first order by. It must match any inequality.
var n=hY(t);null!==n&&mm(t,n,e.field)}}(t,r),r}(t._query,this.jc,this.zc);return new gy(t.firestore,t.converter,(n=(e=t._query).explicitOrderBy.concat([r]),new hW(e.path,e.collectionGroup,n,e.filters.slice(),e.limit,e.limitType,e.startAt,e.endAt)))},e}(ms),ml=/** @class */function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).type=e,i.Hc=n,i.Jc=r,i}return B(e,t),e.prototype._apply=function(t){return new gy(t.firestore,t.converter,h0(t._query,this.Hc,this.Jc))},e}(ms),mf=/** @class */function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).type=e,i.Yc=n,i.Xc=r,i}return B(e,t),e.prototype._apply=function(t){var e,n=md(t,this.type,this.Yc,this.Xc);return new gy(t.firestore,t.converter,(e=t._query,new hW(e.path,e.collectionGroup,e.explicitOrderBy.slice(),e.filters.slice(),e.limit,e.limitType,n,e.endAt)))},e}(ms),mp=/** @class */function(t){function e(e,n,r){var i=this;return(i=t.call(this)||this).type=e,i.Yc=n,i.Xc=r,i}return B(e,t),e.prototype._apply=function(t){var e,n=md(t,this.type,this.Yc,this.Xc);return new gy(t.firestore,t.converter,(e=t._query,new hW(e.path,e.collectionGroup,e.explicitOrderBy.slice(),e.filters.slice(),e.limit,e.limitType,e.startAt,n)))},e}(ms);/**
 * Creates a {@link QueryConstraint} that enforces that documents must contain the
 * specified field and that the value should satisfy the relation constraint
 * provided.
 *
 * @param fieldPath - The path to compare
 * @param opStr - The operation string (e.g "&lt;", "&lt;=", "==", "&lt;",
 *   "&lt;=", "!=").
 * @param value - The value for comparison
 * @returns The created {@link Query}.
 *//** Helper function to create a bound from a document or fields */function md(t,e,n,r){if(n[0]=tq(n[0]),n[0]instanceof g7)return function(t,e,n,r,i){if(!r)throw new cK(cB.NOT_FOUND,"Can't use a DocumentSnapshot that doesn't exist for "+n+"().");// Because people expect to continue/end a query at the exact document
// provided, we need to use the implicit sort order rather than the explicit
// sort order, because it's guaranteed to contain the document key. That way
// the position becomes unambiguous and the query continues/ends exactly at
// the provided document. Without the key (by using the explicit sort
// orders), multiple documents could match the position, yielding duplicate
// results.
for(var o=[],a=0,s=hJ(t);a<s.length;a++){var u=s[a];if(u.field.isKeyField())o.push(hm(e,r.key));else{var c=r.data.field(u.field);if(ho(c))throw new cK(cB.INVALID_ARGUMENT,'Invalid query. You are trying to start or end a query using a document for which the field "'+u.field+'" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');if(null===c){var h=u.field.canonicalString();throw new cK(cB.INVALID_ARGUMENT,"Invalid query. You are trying to start or end a query using a document for which the field '"+h+"' (used as the orderBy) does not exist.")}o.push(c)}}return new hq(o,i)}(t._query,t.firestore._databaseId,e,n[0]._document,r);var i=gB(t.firestore);return function(t,e,n,r,i,o){// Use explicit order by's because it has to match the query the user made
var a=t.explicitOrderBy;if(i.length>a.length)throw new cK(cB.INVALID_ARGUMENT,"Too many arguments provided to "+r+"(). The number of arguments must be less than or equal to the number of orderBy() clauses");for(var s=[],u=0;u<i.length;u++){var c=i[u];if(a[u].field.isKeyField()){if("string"!=typeof c)throw new cK(cB.INVALID_ARGUMENT,"Invalid query. Expected a string for document ID in "+r+"(), but got a "+typeof c);if(!hX(t)&&-1!==c.indexOf("/"))throw new cK(cB.INVALID_ARGUMENT,"Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to "+r+"() must be a plain document ID, but '"+c+"' contains a slash.");var h=t.path.child(c5.fromString(c));if(!hh.isDocumentKey(h))throw new cK(cB.INVALID_ARGUMENT,"Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to "+r+"() must result in a valid document path, but '"+h+"' is not because it contains an odd number of segments.");var l=new hh(h);s.push(hm(e,l))}else{var f=gJ(n,r,c);s.push(f)}}return new hq(s,o)}(t._query,t.firestore._databaseId,i,e,n,r)}function mv(t,e,n){if("string"==typeof(n=tq(n))){if(""===n)throw new cK(cB.INVALID_ARGUMENT,"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.");if(!hX(e)&&-1!==n.indexOf("/"))throw new cK(cB.INVALID_ARGUMENT,"Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '"+n+"' contains a '/' character.");var r=e.path.child(c5.fromString(n));if(!hh.isDocumentKey(r))throw new cK(cB.INVALID_ARGUMENT,"Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '"+r+"' is not because it has an odd number of segments ("+r.length+").");return hm(t,new hh(r))}if(n instanceof gm)return hm(t,n._key);throw new cK(cB.INVALID_ARGUMENT,"Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: "+gf(n)+".")}/**
 * Validates that the value passed into a disjunctive filter satisfies all
 * array requirements.
 */function mg(t,e){if(!Array.isArray(t)||0===t.length)throw new cK(cB.INVALID_ARGUMENT,"Invalid Query. A non-empty array is required for '"+e.toString()+"' filters.");if(t.length>10)throw new cK(cB.INVALID_ARGUMENT,"Invalid Query. '"+e.toString()+"' filters support a maximum of 10 elements in the value array.")}function mm(t,e,n){if(!n.isEqual(e))throw new cK(cB.INVALID_ARGUMENT,"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '"+e.toString()+"' and so you must also use '"+e.toString()+"' as your first argument to orderBy(), but your first orderBy() is on field '"+n.toString()+"' instead.")}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Converts Firestore's internal types to the JavaScript types that we expose
 * to the user.
 *
 * @internal
 */var my=/** @class */function(){function t(){}return t.prototype.convertValue=function(t,e){switch(void 0===e&&(e="none"),hl(t)){case 0/* NullValue */:return null;case 1/* BooleanValue */:return t.booleanValue;case 2/* NumberValue */:return hr(t.integerValue||t.doubleValue);case 3/* TimestampValue */:return this.convertTimestamp(t.timestampValue);case 4/* ServerTimestampValue */:return this.convertServerTimestamp(t,e);case 5/* StringValue */:return t.stringValue;case 6/* BlobValue */:return this.convertBytes(hi(t.bytesValue));case 7/* RefValue */:return this.convertReference(t.referenceValue);case 8/* GeoPointValue */:return this.convertGeoPoint(t.geoPointValue);case 9/* ArrayValue */:return this.convertArray(t.arrayValue,e);case 10/* ObjectValue */:return this.convertObject(t.mapValue,e);default:throw cY()}},t.prototype.convertObject=function(t,e){var n=this,r={};return c4(t.fields,function(t,i){r[t]=n.convertValue(i,e)}),r},t.prototype.convertGeoPoint=function(t){return new gL(hr(t.latitude),hr(t.longitude))},t.prototype.convertArray=function(t,e){var n=this;return(t.values||[]).map(function(t){return n.convertValue(t,e)})},t.prototype.convertServerTimestamp=function(t,e){switch(e){case"previous":var n=/**
 * Creates a new ServerTimestamp proto value (using the internal format).
 *//**
 * Returns the value of the field before this ServerTimestamp was set.
 *
 * Preserving the previous values allows the user to display the last resoled
 * value until the backend responds with the timestamp.
 */function t(e){var n=e.mapValue.fields.__previous_value__;return ho(n)?t(n):n}(t);return null==n?null:this.convertValue(n,e);case"estimate":return this.convertTimestamp(ha(t));default:return null}},t.prototype.convertTimestamp=function(t){var e=hn(t);return new c0(e.seconds,e.nanos)},t.prototype.convertDocumentKey=function(t,e){var n=c5.fromString(t);fg(n)||cY();var r=new v9(n.get(1),n.get(3)),i=new hh(n.popFirst(5));return r.isEqual(e)||// TODO(b/64130202): Somehow support foreign references.
cG("Document "+i+" contains a document reference within a different database ("+r.projectId+"/"+r.database+") which is not supported. It will be treated as a reference in the current database ("+e.projectId+"/"+e.database+") instead."),i},t}();/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Converts custom model object of type T into `DocumentData` by applying the
 * converter if it exists.
 *
 * This function is used when converting user objects to `DocumentData`
 * because we want to provide the user with a more specific error message if
 * their `set()` or fails due to invalid data originating from a `toFirestore()`
 * call.
 */function m_(t,e,n){// Cast to `any` in order to satisfy the union type constraint on
// toFirestore().
// eslint-disable-next-line @typescript-eslint/no-explicit-any
return t?n&&(n.merge||n.mergeFields)?t.toFirestore(e,n):t.toFirestore(e):e}var mb=/** @class */function(t){function e(e){var n=this;return(n=t.call(this)||this).firestore=e,n}return B(e,t),e.prototype.convertBytes=function(t){return new gD(t)},e.prototype.convertReference=function(t){var e=this.convertDocumentKey(t,this.firestore._databaseId);return new gm(this.firestore,/* converter= */null,e)},e}(my),mw=/** @class */function(){/** @hideconstructor */function t(t,e){this._firestore=t,this._commitHandler=e,this._mutations=[],this._committed=!1,this._dataReader=gB(t)}return t.prototype.set=function(t,e,n){this._verifyNotCommitted();var r=mI(t,this._firestore),i=m_(r.converter,e,n),o=gK(this._dataReader,"WriteBatch.set",r._key,i,null!==r.converter,n);return this._mutations.push(o.toMutation(r._key,ll.none())),this},t.prototype.update=function(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];this._verifyNotCommitted();var o,a=mI(t,this._firestore);// For Compat types, we have to "extract" the underlying types before
// performing validation.
return o="string"==typeof(e=tq(e))||e instanceof gP?gX(this._dataReader,"WriteBatch.update",a._key,e,n,r):gY(this._dataReader,"WriteBatch.update",a._key,e),this._mutations.push(o.toMutation(a._key,ll.exists(!0))),this},/**
     * Deletes the document referred to by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be deleted.
     * @returns This `WriteBatch` instance. Used for chaining method calls.
     */t.prototype.delete=function(t){this._verifyNotCommitted();var e=mI(t,this._firestore);return this._mutations=this._mutations.concat(new lR(e._key,ll.none())),this},/**
     * Commits all of the writes in this write batch as a single atomic unit.
     *
     * The result of these writes will only be reflected in document reads that
     * occur after the returned promise resolves. If the client is offline, the
     * write fails. If you would like to see local modifications or buffer writes
     * until the client is online, use the full Firestore SDK.
     *
     * @returns A `Promise` resolved once all of the writes in the batch have been
     * successfully written to the backend as an atomic unit (note that it won't
     * resolve while you're offline).
     */t.prototype.commit=function(){return this._verifyNotCommitted(),this._committed=!0,this._mutations.length>0?this._commitHandler(this._mutations):Promise.resolve()},t.prototype._verifyNotCommitted=function(){if(this._committed)throw new cK(cB.FAILED_PRECONDITION,"A write batch can no longer be used after commit() has been called.")},t}();/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A write batch, used to perform multiple writes as a single atomic unit.
 *
 * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It
 * provides methods for adding writes to the write batch. None of the writes
 * will be committed (or visible locally) until {@link WriteBatch.commit} is
 * called.
 */function mI(t,e){if((t=tq(t)).firestore!==e)throw new cK(cB.INVALID_ARGUMENT,"Provided document reference is from a different Firestore instance.");return t}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the
// legacy SDK.
/**
 * A reference to a transaction.
 *
 * The `Transaction` object passed to a transaction's `updateFunction` provides
 * the methods to read and write data within the transaction context. See
 * {@link runTransaction}.
 */var mT=/** @class */function(t){function e(e){var n=this;return(n=t.call(this)||this).firestore=e,n}return B(e,t),e.prototype.convertBytes=function(t){return new gD(t)},e.prototype.convertReference=function(t){var e=this.convertDocumentKey(t,this.firestore._databaseId);return new gm(this.firestore,/* converter= */null,e)},e}(my);/**
 * Reads the document referred to by this `DocumentReference` from cache.
 * Returns an error if the document is not currently cached.
 *
 * @returns A `Promise` resolved with a `DocumentSnapshot` containing the
 * current document contents.
 */function mE(t,e,n){t=gp(t,gm);var r=gp(t.firestore,gk),i=m_(t.converter,e,n);return mk(r,[gK(gB(r),"setDoc",t._key,i,null!==t.converter,n).toMutation(t._key,ll.none())])}function mS(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];t=gp(t,gm);var o=gp(t.firestore,gk),a=gB(o);return mk(o,[("string"==typeof// performing validation.
(e=tq(e))||e instanceof gP?gX(a,"updateDoc",t._key,e,n,r):gY(a,"updateDoc",t._key,e)).toMutation(t._key,ll.exists(!0))])}/**
 * Deletes the document referred to by the specified `DocumentReference`.
 *
 * @param reference - A reference to the document to delete.
 * @returns A Promise resolved once the document has been successfully
 * deleted from the backend (note that it won't resolve while you're offline).
 */function mC(t){for(var e,n,r,i=[],o=1;o<arguments.length;o++)i[o-1]=arguments[o];t=tq(t);var a={includeMetadataChanges:!1},s=0;"object"!=typeof i[0]||gS(i[s])||(a=i[s],s++);var u,c,h,l={includeMetadataChanges:a.includeMetadataChanges};if(gS(i[s])){var f=i[s];i[s]=null===(e=f.next)||void 0===e?void 0:e.bind(f),i[s+1]=null===(n=f.error)||void 0===n?void 0:n.bind(f),i[s+2]=null===(r=f.complete)||void 0===r?void 0:r.bind(f)}if(t instanceof gm)c=gp(t.firestore,gk),h=hz(t._key.path),u={next:function(e){i[s]&&i[s](mN(c,t,e))},error:i[s+1],complete:i[s+2]};else{var p=gp(t,gy);c=gp(p.firestore,gk),h=p._query;var d=new mT(c);u={next:function(t){i[s]&&i[s](new mi(c,d,p,t))},error:i[s+1],complete:i[s+2]},ma(t._query)}return function(t,e,n,r){var i=this,o=new vz(r),a=new ve(e,o,n);return t.asyncQueue.enqueueAndForget(function(){return H(i,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return e=d5,[4/*yield*/,v6(t)];case 1:return[2/*return*/,e.apply(void 0,[n.sent(),a])]}})})}),function(){o.Wo(),t.asyncQueue.enqueueAndForget(function(){return H(i,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return e=d8,[4/*yield*/,v6(t)];case 1:return[2/*return*/,e.apply(void 0,[n.sent(),a])]}})})})}}(gN(c),h,l,u)}/**
 * Locally writes `mutations` on the async queue.
 * @internal
 */function mk(t,e){return function(t,e){var n=this,r=new fj;return t.asyncQueue.enqueueAndForget(function(){return H(n,void 0,void 0,function(){var n;return W(this,function(i){switch(i.label){case 0:return n=vv,[4/*yield*/,v3(t)];case 1:return[2/*return*/,n.apply(void 0,[i.sent(),e,r])]}})})}),r.promise}(gN(t),e)}/**
 * Converts a {@link ViewSnapshot} that contains the single document specified by `ref`
 * to a {@link DocumentSnapshot}.
 */function mN(t,e,n){var r=n.docs.get(e._key),i=new mT(t);return new mn(t,i,e._key,r,new me(n.hasPendingWrites,n.fromCache),e.converter)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A reference to a transaction.
 *
 * The `Transaction` object passed to a transaction's `updateFunction` provides
 * the methods to read and write data within the transaction context. See
 * {@link runTransaction}.
 */var mA=/** @class */function(t){// This class implements the same logic as the Transaction API in the Lite SDK
// but is subclassed in order to return its own DocumentSnapshot types.
/** @hideconstructor */function e(e,n){var r=this;return(r=t.call(this,e,n)||this)._firestore=e,r}/**
     * Reads the document referenced by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be read.
     * @returns A `DocumentSnapshot` with the read data.
     */return B(e,t),e.prototype.get=function(e){var n=this,r=mI(e,this._firestore),i=new mT(this._firestore);return t.prototype.get.call(this,e).then(function(t){return new mn(n._firestore,i,r._key,t._document,new me(/* hasPendingWrites= */!1,/* fromCache= */!1),r.converter)})},e}(/** @class */function(){/** @hideconstructor */function t(t,e){this._firestore=t,this._transaction=e,this._dataReader=gB(t)/**
     * Reads the document referenced by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be read.
     * @returns A `DocumentSnapshot` with the read data.
     */}return t.prototype.get=function(t){var e=this,n=mI(t,this._firestore),r=new mb(this._firestore);return this._transaction.lookup([n._key]).then(function(t){if(!t||1!==t.length)return cY();var i=t[0];if(i.isFoundDocument())return new g7(e._firestore,r,i.key,i,n.converter);if(i.isNoDocument())return new g7(e._firestore,r,n._key,null,n.converter);throw cY()})},t.prototype.set=function(t,e,n){var r=mI(t,this._firestore),i=m_(r.converter,e,n),o=gK(this._dataReader,"Transaction.set",r._key,i,null!==r.converter,n);return this._transaction.set(r._key,o),this},t.prototype.update=function(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];var o,a=mI(t,this._firestore);// For Compat types, we have to "extract" the underlying types before
// performing validation.
return o="string"==typeof(e=tq(e))||e instanceof gP?gX(this._dataReader,"Transaction.update",a._key,e,n,r):gY(this._dataReader,"Transaction.update",a._key,e),this._transaction.update(a._key,o),this},/**
     * Deletes the document referred to by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be deleted.
     * @returns This `Transaction` instance. Used for chaining method calls.
     */t.prototype.delete=function(t){var e=mI(t,this._firestore);return this._transaction.delete(e._key),this},t}());/**
 * Executes the given `updateFunction` and then attempts to commit the changes
 * applied within the transaction. If any document read within the transaction
 * has changed, Cloud Firestore retries the `updateFunction`. If it fails to
 * commit after 5 attempts, the transaction fails.
 *
 * The maximum number of writes allowed in a single transaction is 500.
 *
 * @param firestore - A reference to the Firestore database to run this
 * transaction against.
 * @param updateFunction - The function to execute within the transaction
 * context.
 * @returns If the transaction completed successfully or was explicitly aborted
 * (the `updateFunction` returned a failed promise), the promise returned by the
 * `updateFunction `is returned here. Otherwise, if the transaction failed, a
 * rejected promise with the corresponding failure error is returned.
 *//**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Helper function to assert Uint8Array is available at runtime. */function mR(){if("undefined"==typeof Uint8Array)throw new cK(cB.UNIMPLEMENTED,"Uint8Arrays are not available in this environment.")}/** Helper function to assert Base64 functions are available at runtime. */function mx(){if("undefined"==typeof atob)throw new cK(cB.UNIMPLEMENTED,"Blobs are unavailable in Firestore in this environment.")}/** Immutable class holding a blob (binary data) */var mP=/** @class */function(){function t(t){this._delegate=t}return t.fromBase64String=function(e){return mx(),new t(gD.fromBase64String(e))},t.fromUint8Array=function(e){return mR(),new t(gD.fromUint8Array(e))},t.prototype.toBase64=function(){return mx(),this._delegate.toBase64()},t.prototype.toUint8Array=function(){return mR(),this._delegate.toUint8Array()},t.prototype.isEqual=function(t){return this._delegate.isEqual(t._delegate)},t.prototype.toString=function(){return"Blob(base64: "+this.toBase64()+")"},t}(),mD=/** @class */function(){function t(){}return t.prototype.enableIndexedDbPersistence=function(t,e){var n,r,i,o,a;return n=t._delegate,r={forceOwnership:e},gx(n=gp(n,gk)),i=gN(n),o=n._freezeSettings(),gR(i,a=new vH,new vB(a,o.cacheSizeBytes,null==r?void 0:r.forceOwnership))},t.prototype.enableMultiTabIndexedDbPersistence=function(t){var e,n,r,i;return gx(e=gp(e=t._delegate,gk)),n=gN(e),r=e._freezeSettings(),gR(n,i=new vH,new vK(i,r.cacheSizeBytes))},t.prototype.clearIndexedDbPersistence=function(t){return function(t){var e=this;if(t._initialized&&!t._terminated)throw new cK(cB.FAILED_PRECONDITION,"Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.");var n=new fj;return t._queue.enqueueAndForgetEvenWhileRestricted(function(){return H(e,void 0,void 0,function(){var e;return W(this,function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),[4/*yield*/,function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return fV.yt()?(e=t+"main",[4/*yield*/,fV.delete(e)]):[2/*return*/,Promise.resolve()];case 1:return n.sent(),[2/*return*/]}})})}(pB(t._databaseId,t._persistenceKey))];case 1:return r.sent(),n.resolve(),[3/*break*/,3];case 2:return e=r.sent(),n.reject(e),[3/*break*/,3];case 3:return[2/*return*/]}})})}),n.promise/**
 * Waits until all currently pending writes for the active user have been
 * acknowledged by the backend.
 *
 * The returned promise resolves immediately if there are no outstanding writes.
 * Otherwise, the promise waits for all previously issued writes (including
 * those written in a previous app session), but it does not wait for writes
 * that were added after the function is called. If you want to wait for
 * additional writes, call `waitForPendingWrites()` again.
 *
 * Any outstanding `waitForPendingWrites()` promises are rejected during user
 * changes.
 *
 * @returns A `Promise` which resolves when all currently pending writes have been
 * acknowledged by the backend.
 */}(t._delegate)},t}(),mO=/** @class */function(){function t(t,e,n){var r=this;this._delegate=e,this.Zc=n,this.INTERNAL={delete:function(){return r.terminate()}},t instanceof v9||(this.tu=t)}return Object.defineProperty(t.prototype,"_databaseId",{get:function(){return this._delegate._databaseId},enumerable:!1,configurable:!0}),t.prototype.settings=function(t){var e=this._delegate._getSettings();t.merge||e.host===t.host||cQ("You are overriding the original host. If you did not intend to override your settings, use {merge: true}."),t.merge&&// Remove the property from the settings once the merge is completed
delete(t=Object.assign(Object.assign({},e),t)).merge,this._delegate._setSettings(t)},t.prototype.useEmulator=function(t,e,n){void 0===n&&(n={}),function(t,e,n,r){void 0===r&&(r={});var i,o,a,s=(t=gp(t,gg))._getSettings();if("firestore.googleapis.com"!==s.host&&s.host!==e&&cQ("Host has been set in both settings() and useEmulator(), emulator host will be used"),t._setSettings(Object.assign(Object.assign({},s),{host:e+":"+n,ssl:!1})),r.mockUserToken){if("string"==typeof r.mockUserToken)o=r.mockUserToken,a=dn.MOCK_USER;else{// Let createMockUserToken validate first (catches common mistakes like
// invalid field "uid" and missing field "sub" / "user_id".)
o=ta(r.mockUserToken,null===(i=t._app)||void 0===i?void 0:i.options.projectId);var u=r.mockUserToken.sub||r.mockUserToken.user_id;if(!u)throw new cK(cB.INVALID_ARGUMENT,"mockUserToken must contain 'sub' or 'user_id' field!");a=new dn(u)}t._credentials=new gr(new ge(o,a))}}(this._delegate,t,e,n)},t.prototype.enableNetwork=function(){return function(t){var e=this;return t.asyncQueue.enqueue(function(){return H(e,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,v1(t)];case 1:return e=r.sent(),[4/*yield*/,v4(t)];case 2:return n=r.sent(),[2/*return*/,(e.setNetworkEnabled(!0),n.Or.delete(0/* UserDisabled */),dA(n))]}})})})}(gN(gp(this._delegate,gk)))},t.prototype.disableNetwork=function(){return function(t){var e=this;return t.asyncQueue.enqueue(function(){return H(e,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,v1(t)];case 1:return e=r.sent(),[4/*yield*/,v4(t)];case 2:return n=r.sent(),[2/*return*/,(e.setNetworkEnabled(!1),function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return(e=t).Or.add(0/* UserDisabled */),[4/*yield*/,dR(e)];case 1:return n.sent(),e.Br.set("Offline"/* Offline */),[2/*return*/]}})})}(n))]}})})})}(gN(gp(this._delegate,gk)))},t.prototype.enablePersistence=function(t){var e=!1,n=!1;return t&&gc("synchronizeTabs",e=!!t.synchronizeTabs,"experimentalForceOwningTab",n=!!t.experimentalForceOwningTab),e?this.Zc.enableMultiTabIndexedDbPersistence(this):this.Zc.enableIndexedDbPersistence(this,n)},t.prototype.clearPersistence=function(){return this.Zc.clearIndexedDbPersistence(this)},t.prototype.terminate=function(){return this.tu&&(this.tu._removeServiceInstance("firestore"),this.tu._removeServiceInstance("firestore-exp")),this._delegate._delete()},t.prototype.waitForPendingWrites=function(){return function(t){var e=this,n=new fj;return t.asyncQueue.enqueueAndForget(function(){return H(e,void 0,void 0,function(){var e;return W(this,function(r){switch(r.label){case 0:return e=vw,[4/*yield*/,v3(t)];case 1:return[2/*return*/,e.apply(void 0,[r.sent(),n])]}})})}),n.promise}(gN(gp(this._delegate,gk)))},t.prototype.onSnapshotsInSync=function(t){var e;return function(t,e){var n=this,r=new vz(e);return t.asyncQueue.enqueueAndForget(function(){return H(n,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return e=function(t,e){t.Gr.add(e),// are in-sync.
e.next()},[4/*yield*/,v6(t)];case 1:return[2/*return*/,e.apply(void 0,[n.sent(),r])]}})})}),function(){r.Wo(),t.asyncQueue.enqueueAndForget(function(){return H(n,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return e=function(t,e){t.Gr.delete(e)},[4/*yield*/,v6(t)];case 1:return[2/*return*/,e.apply(void 0,[n.sent(),r])]}})})})}/**
 * Takes an updateFunction in which a set of reads and writes can be performed
 * atomically. In the updateFunction, the client can read and write values
 * using the supplied transaction object. After the updateFunction, all
 * changes will be committed. If a retryable error occurs (ex: some other
 * client has changed any of the data referenced), then the updateFunction
 * will be called again after a backoff. If the updateFunction still fails
 * after all retries, then the transaction will be rejected.
 *
 * The transaction object passed to the updateFunction contains methods for
 * accessing documents and collections. Unlike other datastore access, data
 * accessed with the transaction will not reflect local changes that have not
 * been committed. For this reason, it is required that all reads are
 * performed before any writes. Transactions must be performed while online.
 */}(gN(gp(this._delegate,gk)),gS(t)?t:{next:t})},Object.defineProperty(t.prototype,"app",{get:function(){if(!this.tu)throw new cK(cB.FAILED_PRECONDITION,"Firestore was not initialized using the Firebase SDK. 'app' is not available");return this.tu},enumerable:!1,configurable:!0}),t.prototype.collection=function(t){try{return new mQ(this,gb(this._delegate,t))}catch(t){throw mq(t,"collection()","Firestore.collection()")}},t.prototype.doc=function(t){try{return new mU(this,gw(this._delegate,t))}catch(t){throw mq(t,"doc()","Firestore.doc()")}},t.prototype.collectionGroup=function(t){try{return new mW(this,function(t,e){if(t=gp(t,gg),gs("collectionGroup","collection id",e),e.indexOf("/")>=0)throw new cK(cB.INVALID_ARGUMENT,"Invalid collection ID '"+e+"' passed to function collectionGroup(). Collection IDs must not contain '/'.");return new gy(t,/* converter= */null,new hW(c5.emptyPath(),e))}(this._delegate,t))}catch(t){throw mq(t,"collectionGroup()","Firestore.collectionGroup()")}},t.prototype.runTransaction=function(t){var e,n=this;return function(t,e){var n=this,r=new fj;return t.asyncQueue.enqueueAndForget(function(){return H(n,void 0,void 0,function(){var n;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,v0(t).then(function(t){return t.datastore})];case 1:return n=i.sent(),new v$(t.asyncQueue,n,e,r).run(),[2/*return*/]}})})}),r.promise}(gN(e=this._delegate),function(r){var i;return i=new mA(e,r),t(new mM(n,i))})},t.prototype.batch=function(){var t=this;return gN(this._delegate),new mF(new mw(this._delegate,function(e){return mk(t._delegate,e)}))},t.prototype.loadBundle=function(t){throw new cK(cB.FAILED_PRECONDITION,'"loadBundle()" does not exist, have you imported "firebase/firestore/bundle"?')},t.prototype.namedQuery=function(t){throw new cK(cB.FAILED_PRECONDITION,'"namedQuery()" does not exist, have you imported "firebase/firestore/bundle"?')},t}(),mL=/** @class */function(t){function e(e){var n=this;return(n=t.call(this)||this).firestore=e,n}return B(e,t),e.prototype.convertBytes=function(t){return new mP(new gD(t))},e.prototype.convertReference=function(t){var e=this.convertDocumentKey(t,this.firestore._databaseId);return mU.eu(e,this.firestore,/* converter= */null)},e}(my),mM=/** @class */function(){function t(t,e){this._firestore=t,this._delegate=e,this._userDataWriter=new mL(t)}return t.prototype.get=function(t){var e=this,n=gp(t,gm);return this._delegate.get(n).then(function(t){return new mK(e._firestore,new mn(e._firestore._delegate,e._userDataWriter,t._key,t._document,t.metadata,n.converter))})},t.prototype.set=function(t,e,n){var r=gp(t,gm);return n?(gu("Transaction.set",n),this._delegate.set(r,e,n)):this._delegate.set(r,e),this},t.prototype.update=function(t,e,n){for(var r,i=[],o=3;o<arguments.length;o++)i[o-3]=arguments[o];var a=gp(t,gm);return 2==arguments.length?this._delegate.update(a,e):(r=this._delegate).update.apply(r,Q([a,e,n],i)),this},t.prototype.delete=function(t){var e=gp(t,gm);return this._delegate.delete(e),this},t}(),mF=/** @class */function(){function t(t){this._delegate=t}return t.prototype.set=function(t,e,n){var r=gp(t,gm);return n?(gu("WriteBatch.set",n),this._delegate.set(r,e,n)):this._delegate.set(r,e),this},t.prototype.update=function(t,e,n){for(var r,i=[],o=3;o<arguments.length;o++)i[o-3]=arguments[o];var a=gp(t,gm);return 2==arguments.length?this._delegate.update(a,e):(r=this._delegate).update.apply(r,Q([a,e,n],i)),this},t.prototype.delete=function(t){var e=gp(t,gm);return this._delegate.delete(e),this},t.prototype.commit=function(){return this._delegate.commit()},t}(),mj=/** @class */function(){function t(t,e,n){this._firestore=t,this._userDataWriter=e,this._delegate=n}return t.prototype.fromFirestore=function(t,e){var n=new mr(this._firestore._delegate,this._userDataWriter,t._key,t._document,t.metadata,/* converter= */null);return this._delegate.fromFirestore(new mH(this._firestore,n),null!=e?e:{})},t.prototype.toFirestore=function(t,e){return e?this._delegate.toFirestore(t,e):this._delegate.toFirestore(t)},// of `Firestore` and `PublicFirestoreDataConverter` so that isEqual() will
// compare equal for two objects created with the same converter instance.
t.nu=function(e,n){var r=t.su,i=r.get(e);i||(i=new WeakMap,r.set(e,i));var o=i.get(n);return o||(o=new t(e,new mL(e),n),i.set(n,o)),o},t}();mj.su=new WeakMap;/**
 * A reference to a particular document in a collection in the database.
 */var mU=/** @class */function(){function t(t,e){this.firestore=t,this._delegate=e,this._userDataWriter=new mL(t)}return t.iu=function(e,n,r){if(e.length%2!=0)throw new cK(cB.INVALID_ARGUMENT,"Invalid document reference. Document references must have an even number of segments, but "+e.canonicalString()+" has "+e.length);return new t(n,new gm(n._delegate,r,new hh(e)))},t.eu=function(e,n,r){return new t(n,new gm(n._delegate,r,e))},Object.defineProperty(t.prototype,"id",{get:function(){return this._delegate.id},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"parent",{get:function(){return new mQ(this.firestore,this._delegate.parent)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"path",{get:function(){return this._delegate.path},enumerable:!1,configurable:!0}),t.prototype.collection=function(t){try{return new mQ(this.firestore,gb(this._delegate,t))}catch(t){throw mq(t,"collection()","DocumentReference.collection()")}},t.prototype.isEqual=function(t){return(t=tq(t))instanceof gm&&gI(this._delegate,t)},t.prototype.set=function(t,e){e=gu("DocumentReference.set",e);try{return e?mE(this._delegate,t,e):mE(this._delegate,t)}catch(t){throw mq(t,"setDoc()","DocumentReference.set()")}},t.prototype.update=function(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];try{return 1==arguments.length?mS(this._delegate,t):mS.apply(void 0,Q([this._delegate,t,e],n))}catch(t){throw mq(t,"updateDoc()","DocumentReference.update()")}},t.prototype.delete=function(){var t;return mk(gp((t=this._delegate).firestore,gk),[new lR(t._key,ll.none())]);/**
 * Add a new document to specified `CollectionReference` with the given data,
 * assigning it a document ID automatically.
 *
 * @param reference - A reference to the collection to add this document to.
 * @param data - An Object containing the data for the new document.
 * @returns A `Promise` resolved with a `DocumentReference` pointing to the
 * newly created document after it has been written to the backend (Note that it
 * won't resolve while you're offline).
 */},t.prototype.onSnapshot=function(){for(var t=this,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=mV(e),i=mB(e,function(e){return new mK(t.firestore,new mn(t.firestore._delegate,t._userDataWriter,e._key,e._document,e.metadata,t._delegate.converter))});return mC(this._delegate,r,i)},t.prototype.get=function(t){var e,n,r,i,o,a,s,u,c=this;return("cache"===(null==t?void 0:t.source)?(e=gp(e=this._delegate,gm),r=gN(n=gp(e.firestore,gk)),i=new mT(n),(function(t,e){var n=this,r=new fj;return t.asyncQueue.enqueueAndForget(function(){return H(n,void 0,void 0,function(){var n;return W(this,function(i){switch(i.label){case 0:return n=function(t,e,n){return H(this,void 0,void 0,function(){var r;return W(this,function(i){switch(i.label){case 0:return i.trys.push([0,2,,3]),[4/*yield*/,t.persistence.runTransaction("read document","readonly",function(n){return t.Mn.mn(n,e)})];case 1:return(r=i.sent()).isFoundDocument()?n.resolve(r):r.isNoDocument()?n.resolve(null):n.reject(new cK(cB.UNAVAILABLE,"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)")),[3/*break*/,3];case 2:return r=d0(i.sent(),"Failed to get document '"+e+" from cache"),n.reject(r),[3/*break*/,3];case 3:return[2/*return*/]}})})},[4/*yield*/,v2(t)];case 1:return[2/*return*/,n.apply(void 0,[i.sent(),e,r])]}})})}),r.promise})(r,e._key).then(function(t){return new mn(n,i,e._key,t,new me(null!==t&&t.hasLocalMutations,/* fromCache= */!0),e.converter)})):"server"===(null==t?void 0:t.source)?(o=gp(o=this._delegate,gm),v5(gN(a=gp(o.firestore,gk)),o._key,{source:"server"}).then(function(t){return mN(a,o,t)})):(s=gp(s=this._delegate,gm),v5(gN(u=gp(s.firestore,gk)),s._key).then(function(t){return mN(u,s,t)}))).then(function(t){return new mK(c.firestore,new mn(c.firestore._delegate,c._userDataWriter,t._key,t._document,t.metadata,c._delegate.converter))})},t.prototype.withConverter=function(e){return new t(this.firestore,e?this._delegate.withConverter(mj.nu(this.firestore,e)):this._delegate.withConverter(null))},t}();/**
 * Replaces the function name in an error thrown by the firestore-exp API
 * with the function names used in the classic API.
 */function mq(t,e,n){return t.message=t.message.replace(e,n),t/**
 * Iterates the list of arguments from an `onSnapshot` call and returns the
 * first argument that may be an `SnapshotListenOptions` object. Returns an
 * empty object if none is found.
 */}function mV(t){for(var e=0;e<t.length;e++){var n=t[e];if("object"==typeof n&&!gS(n))return n}return{}}/**
 * Creates an observer that can be passed to the firestore-exp SDK. The
 * observer converts all observed values into the format expected by the classic
 * SDK.
 *
 * @param args - The list of arguments from an `onSnapshot` call.
 * @param wrapper - The function that converts the firestore-exp type into the
 * type used by this shim.
 */function mB(t,e){var n,r,i;return{next:function(t){i.next&&i.next(e(t))},error:null===(n=(i=gS(t[0])?t[0]:gS(t[1])?t[1]:"function"==typeof t[0]?{next:t[0],error:t[1],complete:t[2]}:{next:t[1],error:t[2],complete:t[3]}).error)||void 0===n?void 0:n.bind(i),complete:null===(r=i.complete)||void 0===r?void 0:r.bind(i)}}var mK=/** @class */function(){function t(t,e){this._firestore=t,this._delegate=e}return Object.defineProperty(t.prototype,"ref",{get:function(){return new mU(this._firestore,this._delegate.ref)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"id",{get:function(){return this._delegate.id},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"metadata",{get:function(){return this._delegate.metadata},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"exists",{get:function(){return this._delegate.exists()},enumerable:!1,configurable:!0}),t.prototype.data=function(t){return this._delegate.data(t)},t.prototype.get=function(t,e){return this._delegate.get(t,e)},t.prototype.isEqual=function(t){return mo(this._delegate,t._delegate)},t}(),mH=/** @class */function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype.data=function(t){return this._delegate.data(t)},e}(mK),mW=/** @class */function(){function t(t,e){this.firestore=t,this._delegate=e,this._userDataWriter=new mL(t)}return t.prototype.where=function(e,n,r){try{var i;// The "as string" cast is a little bit of a hack. `where` accepts the
// FieldPath Compat type as input, but is not typed as such in order to
// not expose this via our public typings file.
return new t(this.firestore,mu(this._delegate,(i=mt("where",e),new mc(i,n,r))))}catch(t){throw mq(t,/(orderBy|where)\(\)/,"Query.$1()")}},t.prototype.orderBy=function(e,n){try{var r,i,o;// The "as string" cast is a little bit of a hack. `orderBy` accepts the
// FieldPath Compat type as input, but is not typed as such in order to
// not expose this via our public typings file.
return new t(this.firestore,mu(this._delegate,(r=n,void 0===r&&(r="asc"),i=r,o=mt("orderBy",e),new mh(o,i))))}catch(t){throw mq(t,/(orderBy|where)\(\)/,"Query.$1()")}},t.prototype.limit=function(e){try{return new t(this.firestore,mu(this._delegate,(gd("limit",e),new ml("limit",e,"F"/* First */))))}catch(t){throw mq(t,"limit()","Query.limit()")}},t.prototype.limitToLast=function(e){try{return new t(this.firestore,mu(this._delegate,(gd("limitToLast",e),new ml("limitToLast",e,"L"/* Last */))))}catch(t){throw mq(t,"limitToLast()","Query.limitToLast()")}},t.prototype.startAt=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];try{return new t(this.firestore,mu(this._delegate,(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new mf("startAt",t,/*before=*/!0)}).apply(void 0,e)))}catch(t){throw mq(t,"startAt()","Query.startAt()")}},t.prototype.startAfter=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];try{return new t(this.firestore,mu(this._delegate,(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new mf("startAfter",t,/*before=*/!1)}).apply(void 0,e)))}catch(t){throw mq(t,"startAfter()","Query.startAfter()")}},t.prototype.endBefore=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];try{return new t(this.firestore,mu(this._delegate,(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new mp("endBefore",t,/*before=*/!0)}).apply(void 0,e)))}catch(t){throw mq(t,"endBefore()","Query.endBefore()")}},t.prototype.endAt=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];try{return new t(this.firestore,mu(this._delegate,(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new mp("endAt",t,/*before=*/!1)}).apply(void 0,e)))}catch(t){throw mq(t,"endAt()","Query.endAt()")}},t.prototype.isEqual=function(t){return gT(this._delegate,t._delegate)},t.prototype.get=function(t){var e,n,r,i,o,a,s,u,c,h,l,f,p=this;return("cache"===(null==t?void 0:t.source)?(e=gp(e=this._delegate,gy),r=gN(n=gp(e.firestore,gk)),i=new mT(n),(function(t,e){var n=this,r=new fj;return t.asyncQueue.enqueueAndForget(function(){return H(n,void 0,void 0,function(){var n;return W(this,function(i){switch(i.label){case 0:return n=function(t,e,n){return H(this,void 0,void 0,function(){var r,i,o,a;return W(this,function(s){switch(s.label){case 0:return s.trys.push([0,2,,3]),[4/*yield*/,pZ(t,e,/* usePreviousResults= */!0)];case 1:return a=s.sent(),i=(r=new vu(e,a.Bn))._o(a.documents),o=r.applyChanges(i,/* updateLimboDocuments= */!1),n.resolve(o.snapshot),[3/*break*/,3];case 2:return a=d0(s.sent(),"Failed to execute query '"+e+" against cache"),n.reject(a),[3/*break*/,3];case 3:return[2/*return*/]}})})},[4/*yield*/,v2(t)];case 1:return[2/*return*/,n.apply(void 0,[i.sent(),e,r])]}})})}),r.promise})(r,e._query).then(function(t){return new mi(n,i,e,t)})):"server"===(null==t?void 0:t.source)?(o=gp(o=this._delegate,gy),s=gN(a=gp(o.firestore,gk)),u=new mT(a),v8(s,o._query,{source:"server"}).then(function(t){return new mi(a,u,o,t)})):(c=gp(c=this._delegate,gy),l=gN(h=gp(c.firestore,gk)),f=new mT(h),ma(c._query),v8(l,c._query).then(function(t){return new mi(h,f,c,t)}))).then(function(t){return new mG(p.firestore,new mi(p.firestore._delegate,p._userDataWriter,p._delegate,t._snapshot))})},t.prototype.onSnapshot=function(){for(var t=this,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=mV(e),i=mB(e,function(e){return new mG(t.firestore,new mi(t.firestore._delegate,t._userDataWriter,t._delegate,e._snapshot))});return mC(this._delegate,r,i)},t.prototype.withConverter=function(e){return new t(this.firestore,e?this._delegate.withConverter(mj.nu(this.firestore,e)):this._delegate.withConverter(null))},t}(),mz=/** @class */function(){function t(t,e){this._firestore=t,this._delegate=e}return Object.defineProperty(t.prototype,"type",{get:function(){return this._delegate.type},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"doc",{get:function(){return new mH(this._firestore,this._delegate.doc)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"oldIndex",{get:function(){return this._delegate.oldIndex},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"newIndex",{get:function(){return this._delegate.newIndex},enumerable:!1,configurable:!0}),t}(),mG=/** @class */function(){function t(t,e){this._firestore=t,this._delegate=e}return Object.defineProperty(t.prototype,"query",{get:function(){return new mW(this._firestore,this._delegate.query)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"metadata",{get:function(){return this._delegate.metadata},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this._delegate.size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"empty",{get:function(){return this._delegate.empty},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"docs",{get:function(){var t=this;return this._delegate.docs.map(function(e){return new mH(t._firestore,e)})},enumerable:!1,configurable:!0}),t.prototype.docChanges=function(t){var e=this;return this._delegate.docChanges(t).map(function(t){return new mz(e._firestore,t)})},t.prototype.forEach=function(t,e){var n=this;this._delegate.forEach(function(r){t.call(e,new mH(n._firestore,r))})},t.prototype.isEqual=function(t){return mo(this._delegate,t._delegate)},t}(),mQ=/** @class */function(t){function e(e,n){var r=this;return(r=t.call(this,e,n)||this).firestore=e,r._delegate=n,r}return B(e,t),Object.defineProperty(e.prototype,"id",{get:function(){return this._delegate.id},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"path",{get:function(){return this._delegate.path},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"parent",{get:function(){var t=this._delegate.parent;return t?new mU(this.firestore,t):null},enumerable:!1,configurable:!0}),e.prototype.doc=function(t){try{return new mU(this.firestore,void 0===t?gw(this._delegate):gw(this._delegate,t))}catch(t){throw mq(t,"doc()","CollectionReference.doc()")}},e.prototype.add=function(t){var e,n,r,i,o=this;return(n=gp((e=this._delegate).firestore,gk),r=gw(e),i=m_(e.converter,t),mk(n,[gK(gB(e.firestore),"addDoc",r._key,i,null!==e.converter,{}).toMutation(r._key,ll.exists(!1))]).then(function(){return r})).then(function(t){return new mU(o.firestore,t)})},e.prototype.isEqual=function(t){return gI(this._delegate,t._delegate)},e.prototype.withConverter=function(t){return new e(this.firestore,t?this._delegate.withConverter(mj.nu(this.firestore,t)):this._delegate.withConverter(null))},e}(mW),m$={Firestore:mO,GeoPoint:gL,Timestamp:c0,Blob:mP,Transaction:mM,WriteBatch:mF,DocumentReference:mU,DocumentSnapshot:mK,Query:mW,QueryDocumentSnapshot:mH,QuerySnapshot:mG,CollectionReference:mQ,FieldPath:/** @class */function(){/**
     * Creates a FieldPath from the provided field names. If more than one field
     * name is provided, the path will point to a nested field in a document.
     *
     * @param fieldNames - A list of field names.
     */function t(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._delegate=new(gP.bind.apply(gP,Q([void 0],t)))}return t.documentId=function(){/**
         * Internal Note: The backend doesn't technically support querying by
         * document ID. Instead it queries by the entire document name (full path
         * included), but in the cases we currently support documentId(), the net
         * effect is the same.
         */return new t(c7.keyField().canonicalString())},t.prototype.isEqual=function(t){return(t=tq(t))instanceof gP&&this._delegate._internalPath.isEqual(t._internalPath)},t}(),FieldValue:/** @class */function(){function t(t){this._delegate=t}return t.serverTimestamp=function(){var e=new gz("serverTimestamp");return e._methodName="FieldValue.serverTimestamp",new t(e)},t.delete=function(){var e=new gH("deleteField");return e._methodName="FieldValue.delete",new t(e)},t.arrayUnion=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=/**
 * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link
 * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array
 * value that already exists on the server. Each specified element that doesn't
 * already exist in the array will be added to the end. If the field being
 * modified is not already an array it will be overwritten with an array
 * containing exactly the specified elements.
 *
 * @param elements - The elements to union into the array.
 * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or
 * `updateDoc()`.
 */(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];// NOTE: We don't actually parse the data until it's used in set() or
// update() since we'd need the Firestore instance to do this.
return new gG("arrayUnion",t)}).apply(void 0,e);return r._methodName="FieldValue.arrayUnion",new t(r)},t.arrayRemove=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];// NOTE: We don't actually parse the data until it's used in set() or
// update() since we'd need the Firestore instance to do this.
return new gQ("arrayRemove",t)}).apply(void 0,e);return r._methodName="FieldValue.arrayRemove",new t(r)},t.increment=function(e){var n=new g$("increment",e);return n._methodName="FieldValue.increment",new t(n)},t.prototype.isEqual=function(t){return this._delegate.isEqual(t._delegate)},t}(),setLogLevel:/**
 * The persistence provider included with the full Firestore SDK.
 */function(t){cH.setLogLevel(t)},CACHE_SIZE_UNLIMITED:-1};!/**
 * Configures Firestore as part of the Firebase SDK by calling registerService.
 *
 * @param firebase - The FirebaseNamespace to register Firestore with
 * @param firestoreFactory - A factory function that returns a new Firestore
 *    instance.
 */function(t,e){t.INTERNAL.registerComponent(new tV("firestore",function(t){return e(t.getProvider("app").getImmediate(),t.getProvider("auth-internal"))},"PUBLIC"/* PUBLIC */).setServiceProps(Object.assign({},m$)))}(ee,function(t,e){return new mO(t,new gk(t,e),new mD)}),ee.registerVersion("@firebase/firestore","2.4.1"),mO.prototype.loadBundle=/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t){var e,n,r;/**
 * Loads a Firestore bundle into the local cache.
 *
 * @param firestore - The {@link Firestore} instance to load bundles for for.
 * @param bundleData - An object representing the bundle to be loaded. Valid objects are
 *   `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.
 *
 * @returns
 *   A `LoadBundleTask` object, which notifies callers with progress updates, and completion
 *   or error events. It can be used as a `Promise<LoadBundleTaskProgress>`.
 */return n=gN(e=gp(e=this._delegate,gk)),r=new gC,function(t,e,n,r){var i,o,a=this,s=(i=dw(e),o=function(t,e){if(t instanceof Uint8Array)return vW(t,e);if(t instanceof ArrayBuffer)return vW(new Uint8Array(t),e);if(t instanceof ReadableStream)return t.getReader();throw Error("Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream")}("string"==typeof n?(new TextEncoder).encode(n):n),new vG(o,i));t.asyncQueue.enqueueAndForget(function(){return H(a,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return e=vq,[4/*yield*/,v3(t)];case 1:return e.apply(void 0,[n.sent(),s,r]),[2/*return*/]}})})})}(n,e._databaseId,t,r),r},mO.prototype.namedQuery=function(t){var e,n=this;return(function(t,e){var n=this;return t.asyncQueue.enqueue(function(){return H(n,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:return n=function(t,e){return t.persistence.runTransaction("Get named query","readonly",function(n){return t.Ke.getNamedQuery(n,e)})},[4/*yield*/,v2(t)];case 1:return[2/*return*/,n.apply(void 0,[r.sent(),e])]}})})})})(gN(e=gp(e=this._delegate,gk)),t).then(function(t){return t?new gy(e,null,t.query):null}).then(function(t){return t?new mW(n,t):null})};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Standard error codes for different ways a request can fail, as defined by:
 * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto
 *
 * This map is used primarily to convert from a backend error code string to
 * a client SDK error code string, and make sure it's in the supported set.
 */var mY={OK:"ok",CANCELLED:"cancelled",UNKNOWN:"unknown",INVALID_ARGUMENT:"invalid-argument",DEADLINE_EXCEEDED:"deadline-exceeded",NOT_FOUND:"not-found",ALREADY_EXISTS:"already-exists",PERMISSION_DENIED:"permission-denied",UNAUTHENTICATED:"unauthenticated",RESOURCE_EXHAUSTED:"resource-exhausted",FAILED_PRECONDITION:"failed-precondition",ABORTED:"aborted",OUT_OF_RANGE:"out-of-range",UNIMPLEMENTED:"unimplemented",INTERNAL:"internal",UNAVAILABLE:"unavailable",DATA_LOSS:"data-loss"},mX=/** @class */function(t){function e(n,r,i){var o=t.call(this,r)||this;return(// This is a workaround for a bug in TypeScript when extending Error:
// tslint:disable-next-line
// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
Object.setPrototypeOf(o,e.prototype),o.code=n,o.details=i,o)}return B(e,t),e}(Error),mJ=/** @class */function(){function t(t,e){var n=this;this.auth=null,this.messaging=null,this.auth=t.getImmediate({optional:!0}),this.messaging=e.getImmediate({optional:!0}),this.auth||t.get().then(function(t){return n.auth=t},function(){/* get() never rejects */}),this.messaging||e.get().then(function(t){return n.messaging=t},function(){/* get() never rejects */})}return t.prototype.getAuthToken=function(){return H(this,void 0,void 0,function(){var t;return W(this,function(e){switch(e.label){case 0:if(!this.auth)return[2/*return*/,void 0];e.label=1;case 1:return e.trys.push([1,3,,4]),[4/*yield*/,this.auth.getToken()];case 2:if(!(t=e.sent()))return[2/*return*/,void 0];return[2/*return*/,t.accessToken];case 3:// If there's any error when trying to get the auth token, leave it off.
return e.sent(),[2/*return*/,void 0];case 4:return[2/*return*/]}})})},t.prototype.getInstanceIdToken=function(){return H(this,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:if(!this.messaging||!("Notification"in self)||"granted"!==Notification.permission)return[2/*return*/,void 0];t.label=1;case 1:return t.trys.push([1,3,,4]),[4/*yield*/,this.messaging.getToken()];case 2:return[2/*return*/,t.sent()];case 3:// We don't warn on this, because it usually means messaging isn't set up.
// console.warn('Failed to retrieve instance id token.', e);
// If there's any error when trying to get the token, leave it off.
return t.sent(),[2/*return*/,void 0];case 4:return[2/*return*/]}})})},t.prototype.getContext=function(){return H(this,void 0,void 0,function(){var t,e;return W(this,function(n){switch(n.label){case 0:return[4/*yield*/,this.getAuthToken()];case 1:return t=n.sent(),[4/*yield*/,this.getInstanceIdToken()];case 2:return e=n.sent(),[2/*return*/,{authToken:t,instanceIdToken:e}]}})})},t}();function mZ(// eslint-disable-next-line @typescript-eslint/no-explicit-any
t,e){var n={};for(var r in t)t.hasOwnProperty(r)&&(n[r]=e(t[r]));return n}var m0=/** @class */function(){function t(){}return(// Takes data and encodes it in a JSON-friendly way, such that types such as
// Date are preserved.
t.prototype.encode=function(t){var e=this;if(null==t)return null;if(t instanceof Number&&(t=t.valueOf()),"number"==typeof t&&isFinite(t)||!0===t||!1===t||"[object String]"===Object.prototype.toString.call(t))// without any loss of precision.
return t;if(t instanceof Date)return t.toISOString();if(Array.isArray(t))return t.map(function(t){return e.encode(t)});if("function"==typeof t||"object"==typeof t)return mZ(t,function(t){return e.encode(t)});// If we got this far, the data is not encodable.
throw Error("Data cannot be encoded in JSON: "+t)},// Takes data that's been encoded in a JSON-friendly form and returns a form
// with richer datatypes, such as Dates, etc.
t.prototype.decode=function(t){var e=this;if(null==t)return t;if(t["@type"])switch(t["@type"]){case"type.googleapis.com/google.protobuf.Int64Value":// Fall through and handle this the same as unsigned.
case"type.googleapis.com/google.protobuf.UInt64Value":// Technically, this could work return a valid number for malformed
// data if there was a number followed by garbage. But it's just not
// worth all the extra code to detect that case.
var n=Number(t.value);if(isNaN(n))throw Error("Data cannot be decoded from JSON: "+t);return n;default:throw Error("Data cannot be decoded from JSON: "+t)}return Array.isArray(t)?t.map(function(t){return e.decode(t)}):"function"==typeof t||"object"==typeof t?mZ(t,function(t){return e.decode(t)}):t},t)}(),m1=/** @class */function(){/**
     * Creates a new Functions service for the given app and (optional) region or custom domain.
     * @param app_ The FirebaseApp to use.
     * @param regionOrCustomDomain_ one of:
     *   a) A region to call functions from, such as us-central1
     *   b) A custom domain to use as a functions prefix, such as https://mydomain.com
     */function t(t,e,n,r,i,o){var a=this;void 0===i&&(i="us-central1"),this.app_=t,this.appCheckProvider=r,this.fetchImpl=o,this.serializer=new m0,this.emulatorOrigin=null,this.INTERNAL={delete:function(){return Promise.resolve(a.deleteService())}},this.contextProvider=new mJ(e,n),// Cancels all ongoing requests when resolved.
this.cancelAllRequests=new Promise(function(t){a.deleteService=function(){return t()}});// Resolve the region or custom domain overload by attempting to parse it.
try{var s=new URL(i);this.customDomain=s.origin,this.region="us-central1"}catch(t){this.customDomain=null,this.region=i}}return Object.defineProperty(t.prototype,"app",{get:function(){return this.app_},enumerable:!1,configurable:!0}),/**
     * Returns the URL for a callable with the given name.
     * @param name The name of the callable.
     */t.prototype._url=function(t){var e=this.app_.options.projectId;return null!==this.emulatorOrigin?this.emulatorOrigin+"/"+e+"/"+this.region+"/"+t:null!==this.customDomain?this.customDomain+"/"+t:"https://"+this.region+"-"+e+".cloudfunctions.net/"+t},/**
     * Modify this instance to communicate with the Cloud Functions emulator.
     *
     * Note: this must be called before this instance has been used to do any operations.
     *
     * @param host The emulator host (ex: localhost)
     * @param port The emulator port (ex: 5001)
     */t.prototype.useEmulator=function(t,e){this.emulatorOrigin="http://"+t+":"+e},/**
     * Changes this instance to point to a Cloud Functions emulator running
     * locally. See https://firebase.google.com/docs/functions/local-emulator
     *
     * @deprecated Prefer the useEmulator(host, port) method.
     * @param origin The origin of the local emulator, such as
     * "http://localhost:5005".
     */t.prototype.useFunctionsEmulator=function(t){this.emulatorOrigin=t},/**
     * Returns a reference to the callable https trigger with the given name.
     * @param name The name of the trigger.
     */t.prototype.httpsCallable=function(t,e){var n=this;return function(r){return n.call(t,r,e||{})}},/**
     * Does an HTTP POST and returns the completed response.
     * @param url The url to post to.
     * @param body The JSON body of the post.
     * @param headers The HTTP headers to include in the request.
     * @return A Promise that will succeed when the request finishes.
     */t.prototype.postJSON=function(t,e,n){return H(this,void 0,void 0,function(){var r,i,o;return W(this,function(a){switch(a.label){case 0:return n["Content-Type"]="application/json",[4/*yield*/,this.getAppCheckToken()];case 1:null!==(r=a.sent())&&(n["X-Firebase-AppCheck"]=r),a.label=2;case 2:return a.trys.push([2,4,,5]),[4/*yield*/,this.fetchImpl(t,{method:"POST",body:JSON.stringify(e),headers:n})];case 3:return i=a.sent(),[3/*break*/,5];case 4:// This could be an unhandled error on the backend, or it could be a
// network error. There's no way to know, since an unhandled error on the
// backend will fail to set the proper CORS header, and thus will be
// treated as a network error by fetch.
return a.sent(),[2/*return*/,{status:0,json:null}];case 5:o=null,a.label=6;case 6:return a.trys.push([6,8,,9]),[4/*yield*/,i.json()];case 7:return o=a.sent(),[3/*break*/,9];case 8:return a.sent(),[3/*break*/,9];case 9:return[2/*return*/,{status:i.status,json:o}]}})})},t.prototype.getAppCheckToken=function(){return H(this,void 0,void 0,function(){var t;return W(this,function(e){switch(e.label){case 0:if(!(t=this.appCheckProvider.getImmediate({optional:!0})))return[3/*break*/,2];return[4/*yield*/,t.getToken()];case 1:// If getToken() fails, it will still return a dummy token that also has
// an error field containing the error message. We will send any token
// provided here and show an error if/when it is rejected by the functions
// endpoint.
return[2/*return*/,e.sent().token];case 2:return[2/*return*/,null]}})})},/**
     * Calls a callable function asynchronously and returns the result.
     * @param name The name of the callable trigger.
     * @param data The data to pass as params to the function.s
     */t.prototype.call=function(t,e,n){return H(this,void 0,void 0,function(){var r,i,o,a,s,u,c,h,l,f;return W(this,function(p){switch(p.label){case 0:return r=this._url(t),i={data:// Encode any special types, such as dates, in the input data.
e=this.serializer.encode(e)},o={},[4/*yield*/,this.contextProvider.getContext()];case 1:var d,v,g;return(a=p.sent()).authToken&&(o.Authorization="Bearer "+a.authToken),a.instanceIdToken&&(o["Firebase-Instance-ID-Token"]=a.instanceIdToken),d=n.timeout||7e4,g=new Promise(function(t,e){v=setTimeout(function(){e(new mX("deadline-exceeded","deadline-exceeded"))},d)}),u=(s={timer:v,promise:g}).timer,c=s.promise,[4/*yield*/,Promise.race([m2(u,this.postJSON(r,i,o)),c,m2(u,this.cancelAllRequests)])];case 2:// If service was deleted, interrupted response throws an error.
if(!(h=p.sent()))throw new mX("cancelled","Firebase Functions instance was deleted.");if(l=/**
 * Takes an HTTP response and returns the corresponding Error, if any.
 */function(t,e,n){var r=/**
 * Takes an HTTP status code and returns the corresponding ErrorCode.
 * This is the standard HTTP status code -> error mapping defined in:
 * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto
 *
 * @param status An HTTP status code.
 * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.
 */function(t){// Make sure any successful status is OK.
if(t>=200&&t<300)return"ok";switch(t){case 0:case 500:// This can happen if the server returns 500.
return"internal";case 400:return"invalid-argument";case 401:return"unauthenticated";case 403:return"permission-denied";case 404:return"not-found";case 409:return"aborted";case 429:return"resource-exhausted";case 499:return"cancelled";case 501:return"unimplemented";case 503:return"unavailable";case 504:return"deadline-exceeded"}return"unknown"}(t),i=r,o=void 0;// Then look through the body for explicit details.
try{var a=e&&e.error;if(a){var s=a.status;if("string"==typeof s){if(!mY[s])return new mX("internal","internal");r=mY[s],// TODO(klimt): Add better default descriptions for error enums.
// The default description needs to be updated for the new code.
i=s}var u=a.message;"string"==typeof u&&(i=u),o=a.details,void 0!==o&&(o=n.decode(o))}}catch(t){// If we couldn't parse explicit error data, that's fine.
}return"ok"===r?null:new mX(r,i,o)}(h.status,h.json,this.serializer))throw l;if(!h.json)throw new mX("internal","Response is not valid JSON object.");if(void 0===(f=h.json.data)&&(f=h.json.result),void 0===f)throw new mX("internal","Response is missing data field.");return[2/*return*/,{data:this.serializer.decode(f)}]}})})},t}();function m2(t,e){return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,e];case 1:return n=r.sent(),// eslint-disable-next-line @typescript-eslint/no-explicit-any
clearTimeout(t),[2/*return*/,n]}})})}!/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t,e){t.INTERNAL.registerComponent(new tV("functions",function(t,n){var r=n.instanceIdentifier,i=t.getProvider("app").getImmediate(),o=t.getProvider("auth-internal"),a=t.getProvider("app-check-internal"),s=t.getProvider("messaging");// eslint-disable-next-line @typescript-eslint/no-explicit-any
return new m1(i,o,s,a,r,e)},"PUBLIC"/* PUBLIC */).setServiceProps({// no-inline
Functions:m1}).setMultipleInstances(!0))}(ee,fetch.bind(self)),ee.registerVersion("@firebase/functions","0.6.16");var m4={};!function(t){function e(t){return new Promise(function(e,n){t.onsuccess=function(){e(t.result)},t.onerror=function(){n(t.error)}})}function n(t,n,r){var i,o=new Promise(function(o,a){e(i=t[n].apply(t,r)).then(o,a)});return o.request=i,o}function r(t,e,n){n.forEach(function(n){Object.defineProperty(t.prototype,n,{get:function(){return this[e][n]},set:function(t){this[e][n]=t}})})}function i(t,e,r,i){i.forEach(function(i){i in r.prototype&&(t.prototype[i]=function(){return n(this[e],i,arguments)})})}function o(t,e,n,r){r.forEach(function(r){r in n.prototype&&(t.prototype[r]=function(){return this[e][r].apply(this[e],arguments)})})}function a(t,e,r,i){i.forEach(function(i){i in r.prototype&&(t.prototype[i]=function(){var t,r,o;return t=this[e],r=arguments,(o=n(t,i,r)).then(function(t){if(t)return new u(t,o.request)})})})}function s(t){this._index=t}function u(t,e){this._cursor=t,this._request=e}function c(t){this._store=t}function h(t){this._tx=t,this.complete=new Promise(function(e,n){t.oncomplete=function(){e()},t.onerror=function(){n(t.error)},t.onabort=function(){n(t.error)}})}function l(t,e,n){this._db=t,this.oldVersion=e,this.transaction=new h(n)}function f(t){this._db=t}r(s,"_index",["name","keyPath","multiEntry","unique"]),i(s,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),a(s,"_index",IDBIndex,["openCursor","openKeyCursor"]),r(u,"_cursor",["direction","key","primaryKey","value"]),i(u,"_cursor",IDBCursor,["update","delete"]),// proxy 'next' methods
["advance","continue","continuePrimaryKey"].forEach(function(t){t in IDBCursor.prototype&&(u.prototype[t]=function(){var n=this,r=arguments;return Promise.resolve().then(function(){return n._cursor[t].apply(n._cursor,r),e(n._request).then(function(t){if(t)return new u(t,n._request)})})})}),c.prototype.createIndex=function(){return new s(this._store.createIndex.apply(this._store,arguments))},c.prototype.index=function(){return new s(this._store.index.apply(this._store,arguments))},r(c,"_store",["name","keyPath","indexNames","autoIncrement"]),i(c,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),a(c,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),o(c,"_store",IDBObjectStore,["deleteIndex"]),h.prototype.objectStore=function(){return new c(this._tx.objectStore.apply(this._tx,arguments))},r(h,"_tx",["objectStoreNames","mode"]),o(h,"_tx",IDBTransaction,["abort"]),l.prototype.createObjectStore=function(){return new c(this._db.createObjectStore.apply(this._db,arguments))},r(l,"_db",["name","version","objectStoreNames"]),o(l,"_db",IDBDatabase,["deleteObjectStore","close"]),f.prototype.transaction=function(){return new h(this._db.transaction.apply(this._db,arguments))},r(f,"_db",["name","version","objectStoreNames"]),o(f,"_db",IDBDatabase,["close"]),// Add cursor iterators
// TODO: remove this once browsers do the right thing with promises
["openCursor","openKeyCursor"].forEach(function(t){[c,s].forEach(function(e){// Don't create iterateKeyCursor if openKeyCursor doesn't exist.
t in e.prototype&&(e.prototype[t.replace("open","iterate")]=function(){var e,n=(e=arguments,Array.prototype.slice.call(e)),r=n[n.length-1],i=this._store||this._index,o=i[t].apply(i,n.slice(0,-1));o.onsuccess=function(){r(o.result)}})})}),// polyfill getAll
[s,c].forEach(function(t){t.prototype.getAll||(t.prototype.getAll=function(t,e){var n=this,r=[];return new Promise(function(i){n.iterateCursor(t,function(t){if(!t||(r.push(t.value),void 0!==e&&r.length==e)){i(r);return}t.continue()})})})}),t.openDb=function(t,e,r){var i=n(indexedDB,"open",[t,e]),o=i.request;return o&&(o.onupgradeneeded=function(t){r&&r(new l(o.result,t.oldVersion,o.transaction))}),i.then(function(t){return new f(t)})},t.deleteDb=function(t){return n(indexedDB,"deleteDatabase",[t])},Object.defineProperty(t,"__esModule",{value:!0})}(m4);var m3="0.4.32",m6="w:"+m3,m5="FIS_v2",m8=((v={})["missing-app-config-values"/* MISSING_APP_CONFIG_VALUES */]='Missing App configuration value: "{$valueName}"',v["not-registered"/* NOT_REGISTERED */]="Firebase Installation is not registered.",v["installation-not-found"/* INSTALLATION_NOT_FOUND */]="Firebase Installation not found.",v["request-failed"/* REQUEST_FAILED */]='{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',v["app-offline"/* APP_OFFLINE */]="Could not process request. Application offline.",v["delete-pending-registration"/* DELETE_PENDING_REGISTRATION */]="Can't delete installation while there is a pending registration request.",v),m7=new tm("installations","Installations",m8);/** Returns true if error is a FirebaseError that is based on an error from the server. */function m9(t){return t instanceof tg&&t.code.includes("request-failed"/* REQUEST_FAILED */)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function yt(t){return"https://firebaseinstallations.googleapis.com/v1/projects/"+t.projectId+"/installations"}function ye(t){return{token:t.token,requestStatus:2/* COMPLETED */,expiresIn:Number(t.expiresIn.replace("s","000")),creationTime:Date.now()}}function yn(t,e){return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,e.json()];case 1:return n=r.sent().error,[2/*return*/,m7.create("request-failed"/* REQUEST_FAILED */,{requestName:t,serverCode:n.code,serverMessage:n.message,serverStatus:n.status})]}})})}function yr(t){var e=t.apiKey;return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e})}function yi(t,e){var n=e.refreshToken,r=yr(t);return r.append("Authorization",m5+" "+n),r}/**
 * Calls the passed in fetch wrapper and returns the response.
 * If the returned response has a status of 5xx, re-runs the function once and
 * returns the response.
 */function yo(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return[4/*yield*/,t()];case 1:if((e=n.sent()).status>=500&&e.status<600)return[2/*return*/,t()];return[2/*return*/,e]}})})}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Returns a promise that resolves after given time passes. */function ya(t){return new Promise(function(e){setTimeout(e,t)})}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var ys=/^[cdef][\w-]{21}$/;/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Returns a string key that can be used to identify the app. */function yu(t){return t.appName+"!"+t.appId}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var yc=new Map;/**
 * Calls the onIdChange callbacks with the new FID value, and broadcasts the
 * change to other tabs.
 */function yh(t,e){var n,r=yu(t);yl(r,e),(n=yp())&&n.postMessage({key:r,fid:e}),yd()}function yl(t,e){var n,r,i=yc.get(t);if(i)try{for(var o=z(i),a=o.next();!a.done;a=o.next())(0,a.value)(e)}catch(t){n={error:t}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(n)throw n.error}}}var yf=null;/** Opens and returns a BroadcastChannel if it is supported by the browser. */function yp(){return!yf&&"BroadcastChannel"in self&&((yf=new BroadcastChannel("[Firebase] FID Change")).onmessage=function(t){yl(t.data.key,t.data.fid)}),yf}function yd(){0===yc.size&&yf&&(yf.close(),yf=null)}var yv="firebase-installations-store",yg=null;function ym(){return yg||(yg=(0,m4.openDb)("firebase-installations-database",1,function(t){// We don't use 'break' in this switch statement, the fall-through
// behavior is what we want, because if there are multiple versions between
// the old version and the current version, we want ALL the migrations
// that correspond to those versions to run, not only the last one.
// eslint-disable-next-line default-case
0===t.oldVersion&&t.createObjectStore(yv)})),yg}/** Assigns or overwrites the record for the given key with the given value. */function yy(t,e){return H(this,void 0,void 0,function(){var n,r,i,o;return W(this,function(a){switch(a.label){case 0:return n=yu(t),[4/*yield*/,ym()];case 1:return[4/*yield*/,(i=(r=a.sent().transaction(yv,"readwrite")).objectStore(yv)).get(n)];case 2:return o=a.sent(),[4/*yield*/,i.put(e,n)];case 3:return a.sent(),[4/*yield*/,r.complete];case 4:return a.sent(),o&&o.fid===e.fid||yh(t,e.fid),[2/*return*/,e]}})})}/** Removes record(s) from the objectStore that match the given key. */function y_(t){return H(this,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:return e=yu(t),[4/*yield*/,ym()];case 1:return[4/*yield*/,(n=r.sent().transaction(yv,"readwrite")).objectStore(yv).delete(e)];case 2:return r.sent(),[4/*yield*/,n.complete];case 3:return r.sent(),[2/*return*/]}})})}/**
 * Atomically updates a record with the result of updateFn, which gets
 * called with the current value. If newValue is undefined, the record is
 * deleted instead.
 * @return Updated value
 */function yb(t,e){return H(this,void 0,void 0,function(){var n,r,i,o,a;return W(this,function(s){switch(s.label){case 0:return n=yu(t),[4/*yield*/,ym()];case 1:return[4/*yield*/,(i=(r=s.sent().transaction(yv,"readwrite")).objectStore(yv)).get(n)];case 2:if(void 0!==(a=e(o=s.sent())))return[3/*break*/,4];return[4/*yield*/,i.delete(n)];case 3:return s.sent(),[3/*break*/,6];case 4:return[4/*yield*/,i.put(a,n)];case 5:s.sent(),s.label=6;case 6:return[4/*yield*/,r.complete];case 7:return s.sent(),a&&(!o||o.fid!==a.fid)&&yh(t,a.fid),[2/*return*/,a]}})})}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Updates and returns the InstallationEntry from the database.
 * Also triggers a registration request if it is necessary and possible.
 */function yw(t){return H(this,void 0,void 0,function(){var e,n,r;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,yb(t,function(n){var r=/**
 * If the Firebase Installation is not registered yet, this will trigger the
 * registration and return an InProgressInstallationEntry.
 *
 * If registrationPromise does not exist, the installationEntry is guaranteed
 * to be registered.
 */function(t,e){if(0/* NOT_STARTED */===e.registrationStatus){if(!navigator.onLine)return{installationEntry:e,registrationPromise:Promise.reject(m7.create("app-offline"/* APP_OFFLINE */))};// Try registering. Change status to IN_PROGRESS.
var n={fid:e.fid,registrationStatus:1/* IN_PROGRESS */,registrationTime:Date.now()},r=/** This will be executed only once for each new Firebase Installation. */function(t,e){return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:return r.trys.push([0,2,,7]),[4/*yield*/,/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t,e){var n=e.fid;return H(this,void 0,void 0,function(){var e,r,i,o;return W(this,function(a){switch(a.label){case 0:return e=yt(t),r={method:"POST",headers:yr(t),body:JSON.stringify({fid:n,authVersion:m5,appId:t.appId,sdkVersion:m6})},[4/*yield*/,yo(function(){return fetch(e,r)})];case 1:if(!(i=a.sent()).ok)return[3/*break*/,3];return[4/*yield*/,i.json()];case 2:return[2/*return*/,{fid:(o=a.sent()).fid||n,registrationStatus:2/* COMPLETED */,refreshToken:o.refreshToken,authToken:ye(o.authToken)}];case 3:return[4/*yield*/,yn("Create Installation",i)];case 4:throw a.sent()}})})}(t,e)];case 1:return[2/*return*/,yy(t,r.sent())];case 2:if(!(m9(n=r.sent())&&409===n.customData.serverCode))return[3/*break*/,4];// Server returned a "FID can not be used" error.
// Generate a new ID next time.
return[4/*yield*/,y_(t)];case 3:return(// Server returned a "FID can not be used" error.
// Generate a new ID next time.
r.sent(),[3/*break*/,6]);case 4:// Registration failed. Set FID as not registered.
return[4/*yield*/,yy(t,{fid:e.fid,registrationStatus:0/* NOT_STARTED */})];case 5:// Registration failed. Set FID as not registered.
r.sent(),r.label=6;case 6:throw n;case 7:return[2/*return*/]}})})}(t,n);return{installationEntry:n,registrationPromise:r}}return 1/* IN_PROGRESS */===e.registrationStatus?{installationEntry:e,registrationPromise:/** Call if FID registration is pending in another request. */function(t){return H(this,void 0,void 0,function(){var e,n,r,i;return W(this,function(o){switch(o.label){case 0:return[4/*yield*/,yI(t)];case 1:e=o.sent(),o.label=2;case 2:if(1/* IN_PROGRESS */!==e.registrationStatus)return[3/*break*/,5];// createInstallation request still in progress.
return[4/*yield*/,ya(100)];case 3:return(// createInstallation request still in progress.
o.sent(),[4/*yield*/,yI(t)]);case 4:return e=o.sent(),[3/*break*/,2];case 5:if(0/* NOT_STARTED */!==e.registrationStatus)return[3/*break*/,7];return[4/*yield*/,yw(t)];case 6:if(r=(n=o.sent()).installationEntry,i=n.registrationPromise)return[2/*return*/,i];return[2/*return*/,r];case 7:return[2/*return*/,e]}})})}(t)}:{installationEntry:e}}(t,yT(n||{fid:/**
 * Generates a new FID using random values from Web Crypto API.
 * Returns an empty string if FID generation fails for any reason.
 */function(){try{// A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5
// bytes. our implementation generates a 17 byte array instead.
var t,e=new Uint8Array(17);(self.crypto||self.msCrypto).getRandomValues(e),// Replace the first 4 random bits with the constant FID header of 0b0111.
e[0]=112+e[0]%16;var n=(t=e,btoa(String.fromCharCode.apply(String,Q([],G(t)))).replace(/\+/g,"-").replace(/\//g,"_").substr(0,22));return ys.test(n)?n:""}catch(t){// FID generation errored
return""}}(),registrationStatus:0/* NOT_STARTED */}));return e=r.registrationPromise,r.installationEntry})];case 1:if(""!==(n=i.sent()).fid)return[3/*break*/,3];return r={},[4/*yield*/,e];case 2:// FID generation failed. Waiting for the FID from the server.
return[2/*return*/,(r.installationEntry=i.sent(),r)];case 3:return[2/*return*/,{installationEntry:n,registrationPromise:e}]}})})}/**
 * Called only if there is a CreateInstallation request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * CreateInstallation request.
 *
 * Returns the updated InstallationEntry.
 */function yI(t){return yb(t,function(t){if(!t)throw m7.create("installation-not-found"/* INSTALLATION_NOT_FOUND */);return yT(t)})}function yT(t){return 1/* IN_PROGRESS */===t.registrationStatus&&t.registrationTime+1e4<Date.now()?{fid:t.fid,registrationStatus:0/* NOT_STARTED */}:t}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns a valid authentication token for the installation. Generates a new
 * token if one doesn't exist, is expired or about to expire.
 *
 * Should only be called if the Firebase Installation is registered.
 */function yE(t,e){return void 0===e&&(e=!1),H(this,void 0,void 0,function(){var n,r,i;return W(this,function(o){switch(o.label){case 0:return[4/*yield*/,yb(t.appConfig,function(r){if(!yC(r))throw m7.create("not-registered"/* NOT_REGISTERED */);var i,o,a,s,u=r.authToken;if(!e&&2/* COMPLETED */===(i=u).requestStatus&&(o=i,!((a=Date.now())<o.creationTime)&&!(o.creationTime+o.expiresIn<a+36e5)))return r;if(1/* IN_PROGRESS */===u.requestStatus)return(// There already is a token request in progress.
n=/**
 * Call only if FID is registered and Auth Token request is in progress.
 *
 * Waits until the current pending request finishes. If the request times out,
 * tries once in this thread as well.
 */function(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,yS(t.appConfig)];case 1:n=i.sent(),i.label=2;case 2:if(1/* IN_PROGRESS */!==n.authToken.requestStatus)return[3/*break*/,5];// generateAuthToken still in progress.
return[4/*yield*/,ya(100)];case 3:return(// generateAuthToken still in progress.
i.sent(),[4/*yield*/,yS(t.appConfig)]);case 4:return n=i.sent(),[3/*break*/,2];case 5:if(0/* NOT_STARTED */===(r=n.authToken).requestStatus)return[2/*return*/,yE(t,e)];return[2/*return*/,r]}})})}(t,e),r);// No token or token expired.
if(!navigator.onLine)throw m7.create("app-offline"/* APP_OFFLINE */);var c=(s={requestStatus:1/* IN_PROGRESS */,requestTime:Date.now()},K(K({},r),{authToken:s}));return n=function(t,e){return H(this,void 0,void 0,function(){var n,r,i;return W(this,function(o){switch(o.label){case 0:return o.trys.push([0,3,,8]),[4/*yield*/,/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t,e){var n=t.appConfig,r=t.platformLoggerProvider;return H(this,void 0,void 0,function(){var t,i,o,a,s;return W(this,function(u){switch(u.label){case 0:var c;return c=e.fid,t=yt(n)+"/"+c+"/authTokens:generate",i=yi(n,e),(o=r.getImmediate({optional:!0}))&&i.append("x-firebase-client",o.getPlatformInfoString()),a={method:"POST",headers:i,body:JSON.stringify({installation:{sdkVersion:m6}})},[4/*yield*/,yo(function(){return fetch(t,a)})];case 1:if(!(s=u.sent()).ok)return[3/*break*/,3];return[4/*yield*/,s.json()];case 2:return[2/*return*/,ye(u.sent())];case 3:return[4/*yield*/,yn("Generate Auth Token",s)];case 4:throw u.sent()}})})}(t,e)];case 1:return n=o.sent(),r=K(K({},e),{authToken:n}),[4/*yield*/,yy(t.appConfig,r)];case 2:return o.sent(),[2/*return*/,n];case 3:if(!(m9(i=o.sent())&&(401===i.customData.serverCode||404===i.customData.serverCode)))return[3/*break*/,5];// Server returned a "FID not found" or a "Invalid authentication" error.
// Generate a new ID next time.
return[4/*yield*/,y_(t.appConfig)];case 4:return(// Server returned a "FID not found" or a "Invalid authentication" error.
// Generate a new ID next time.
o.sent(),[3/*break*/,7]);case 5:return r=K(K({},e),{authToken:{requestStatus:0/* NOT_STARTED */}}),[4/*yield*/,yy(t.appConfig,r)];case 6:o.sent(),o.label=7;case 7:throw i;case 8:return[2/*return*/]}})})}(t,c),c})];case 1:if(r=o.sent(),!n)return[3/*break*/,3];return[4/*yield*/,n];case 2:return i=o.sent(),[3/*break*/,4];case 3:i=r.authToken,o.label=4;case 4:return[2/*return*/,i]}})})}/**
 * Called only if there is a GenerateAuthToken request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * GenerateAuthToken request.
 *
 * Returns the updated InstallationEntry.
 */function yS(t){return yb(t,function(t){var e;if(!yC(t))throw m7.create("not-registered"/* NOT_REGISTERED */);return 1/* IN_PROGRESS */===(e=t.authToken).requestStatus&&e.requestTime+1e4<Date.now()?K(K({},t),{authToken:{requestStatus:0/* NOT_STARTED */}}):t})}function yC(t){return void 0!==t&&2/* COMPLETED */===t.registrationStatus}function yk(t){return m7.create("missing-app-config-values"/* MISSING_APP_CONFIG_VALUES */,{valueName:t})}ee.INTERNAL.registerComponent(new tV("installations",function(t){var e=t.getProvider("app").getImmediate(),n={appConfig:/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t){if(!t||!t.options)throw yk("App Configuration");if(!t.name)throw yk("App Name");try{for(var e,n,r=z(["projectId","apiKey","appId"]),i=r.next();!i.done;i=r.next()){var o=i.value;if(!t.options[o])throw yk(o)}}catch(t){e={error:t}}finally{try{i&&!i.done&&(n=r.return)&&n.call(r)}finally{if(e)throw e.error}}return{appName:t.name,projectId:t.options.projectId,apiKey:t.options.apiKey,appId:t.options.appId}}(e),platformLoggerProvider:t.getProvider("platform-logger")};return{app:e,getId:function(){return(/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t){return H(this,void 0,void 0,function(){var e,n,r;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,yw(t.appConfig)];case 1:return n=(e=i.sent()).installationEntry,(r=e.registrationPromise)?r.catch(console.error):// token if needed.
yE(t).catch(console.error),[2/*return*/,n.fid]}})})}(n))},getToken:function(t){return(/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t,e){return void 0===e&&(e=!1),H(this,void 0,void 0,function(){return W(this,function(n){switch(n.label){case 0:return[4/*yield*/,function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return[4/*yield*/,yw(t)];case 1:if(!(e=n.sent().registrationPromise))return[3/*break*/,3];// A createInstallation request is in progress. Wait until it finishes.
return[4/*yield*/,e];case 2:// A createInstallation request is in progress. Wait until it finishes.
n.sent(),n.label=3;case 3:return[2/*return*/]}})})}(t.appConfig)];case 1:return n.sent(),[4/*yield*/,yE(t,e)];case 2:return[2/*return*/,n.sent().token]}})})}(n,t))},delete:function(){return(/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t){return H(this,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,yb(e=t.appConfig,function(t){if(!t||0/* NOT_STARTED */!==t.registrationStatus)return t})];case 1:if(!(n=r.sent()))return[3/*break*/,6];if(1/* IN_PROGRESS */!==n.registrationStatus)return[3/*break*/,2];// Can't delete while trying to register.
throw m7.create("delete-pending-registration"/* DELETE_PENDING_REGISTRATION */);case 2:if(2/* COMPLETED */!==n.registrationStatus)return[3/*break*/,6];if(navigator.onLine)return[3/*break*/,3];throw m7.create("app-offline"/* APP_OFFLINE */);case 3:return[4/*yield*/,/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t,e){return H(this,void 0,void 0,function(){var n,r,i;return W(this,function(o){switch(o.label){case 0:var a;return a=e.fid,n=yt(t)+"/"+a,r={method:"DELETE",headers:yi(t,e)},[4/*yield*/,yo(function(){return fetch(n,r)})];case 1:if((i=o.sent()).ok)return[3/*break*/,3];return[4/*yield*/,yn("Delete Installation",i)];case 2:throw o.sent();case 3:return[2/*return*/]}})})}(e,n)];case 4:return r.sent(),[4/*yield*/,y_(e)];case 5:r.sent(),r.label=6;case 6:return[2/*return*/]}})})}(n))},onIdChange:function(t){var e,r,i,o;return r=e=n.appConfig,// Open the broadcast channel if it's not already open,
// to be able to listen to change events from other tabs.
yp(),i=yu(r),(o=yc.get(i))||(o=new Set,yc.set(i,o)),o.add(t),function(){var n,r;n=yu(e),(r=yc.get(n))&&(r.delete(t),0===r.size&&yc.delete(n),// Close broadcast channel if there are no more callbacks.
yd())}}}},"PUBLIC"/* PUBLIC */)),ee.registerVersion("@firebase/installations",m3);var yN=((g={})["missing-app-config-values"/* MISSING_APP_CONFIG_VALUES */]='Missing App configuration value: "{$valueName}"',g["only-available-in-window"/* AVAILABLE_IN_WINDOW */]="This method is available in a Window context.",g["only-available-in-sw"/* AVAILABLE_IN_SW */]="This method is available in a service worker context.",g["permission-default"/* PERMISSION_DEFAULT */]="The notification permission was not granted and dismissed instead.",g["permission-blocked"/* PERMISSION_BLOCKED */]="The notification permission was not granted and blocked instead.",g["unsupported-browser"/* UNSUPPORTED_BROWSER */]="This browser doesn't support the API's required to use the firebase SDK.",g["failed-service-worker-registration"/* FAILED_DEFAULT_REGISTRATION */]="We are unable to register the default service worker. {$browserErrorMessage}",g["token-subscribe-failed"/* TOKEN_SUBSCRIBE_FAILED */]="A problem occurred while subscribing the user to FCM: {$errorInfo}",g["token-subscribe-no-token"/* TOKEN_SUBSCRIBE_NO_TOKEN */]="FCM returned no token when subscribing the user to push.",g["token-unsubscribe-failed"/* TOKEN_UNSUBSCRIBE_FAILED */]="A problem occurred while unsubscribing the user from FCM: {$errorInfo}",g["token-update-failed"/* TOKEN_UPDATE_FAILED */]="A problem occurred while updating the user from FCM: {$errorInfo}",g["token-update-no-token"/* TOKEN_UPDATE_NO_TOKEN */]="FCM returned no token when updating the user to push.",g["use-sw-after-get-token"/* USE_SW_AFTER_GET_TOKEN */]="The useServiceWorker() method may only be called once and must be called before calling getToken() to ensure your service worker is used.",g["invalid-sw-registration"/* INVALID_SW_REGISTRATION */]="The input to useServiceWorker() must be a ServiceWorkerRegistration.",g["invalid-bg-handler"/* INVALID_BG_HANDLER */]="The input to setBackgroundMessageHandler() must be a function.",g["invalid-vapid-key"/* INVALID_VAPID_KEY */]="The public VAPID key must be a string.",g["use-vapid-key-after-get-token"/* USE_VAPID_KEY_AFTER_GET_TOKEN */]="The usePublicVapidKey() method may only be called once and must be called before calling getToken() to ensure your VAPID key is used.",g),yA=new tm("messaging","Messaging",yN),yR="BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4",yx="FCM_MSG",yP="google.c.a.c_id";/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function yD(t){var e=new Uint8Array(t);return btoa(String.fromCharCode.apply(String,Q([],G(e)))).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}(s=m||(m={})).PUSH_RECEIVED="push-received",s.NOTIFICATION_CLICKED="notification-clicked";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var yO="fcm_token_details_db",yL="fcm_token_object_Store",yM="firebase-messaging-store",yF=null;function yj(){return yF||(yF=(0,m4.openDb)("firebase-messaging-database",1,function(t){// We don't use 'break' in this switch statement, the fall-through behavior is what we want,
// because if there are multiple versions between the old version and the current version, we
// want ALL the migrations that correspond to those versions to run, not only the last one.
// eslint-disable-next-line default-case
0===t.oldVersion&&t.createObjectStore(yM)})),yF}/** Gets record(s) from the objectStore that match the given key. */function yU(t){return H(this,void 0,void 0,function(){var e,n,r;return W(this,function(i){switch(i.label){case 0:return e=yV(t),[4/*yield*/,yj()];case 1:return[4/*yield*/,i.sent().transaction(yM).objectStore(yM).get(e)];case 2:if(!(n=i.sent()))return[3/*break*/,3];return[2/*return*/,n];case 3:return[4/*yield*/,function(t){return H(this,void 0,void 0,function(){var e,n=this;return W(this,function(r){switch(r.label){case 0:if(!("databases"in indexedDB))return[3/*break*/,2];return[4/*yield*/,indexedDB.databases()];case 1:if(!r.sent().map(function(t){return t.name}).includes(yO))return[2/*return*/,null];r.label=2;case 2:return e=null,[4/*yield*/,(0,m4.openDb)(yO,5,function(r){return H(n,void 0,void 0,function(){var n,i,o,a;return W(this,function(s){switch(s.label){case 0:if(r.oldVersion<2||!r.objectStoreNames.contains(yL))return[2/*return*/];return[4/*yield*/,(n=r.transaction.objectStore(yL)).index("fcmSenderId").get(t)];case 1:return i=s.sent(),[4/*yield*/,n.clear()];case 2:if(s.sent(),!i)return[2/*return*/];if(2===r.oldVersion){if(!(o=i).auth||!o.p256dh||!o.endpoint)return[2/*return*/];e={token:o.fcmToken,createTime:null!==(a=o.createTime)&&void 0!==a?a:Date.now(),subscriptionOptions:{auth:o.auth,p256dh:o.p256dh,endpoint:o.endpoint,swScope:o.swScope,vapidKey:"string"==typeof o.vapidKey?o.vapidKey:yD(o.vapidKey)}}}else 3===r.oldVersion?e={token:(o=i).fcmToken,createTime:o.createTime,subscriptionOptions:{auth:yD(o.auth),p256dh:yD(o.p256dh),endpoint:o.endpoint,swScope:o.swScope,vapidKey:yD(o.vapidKey)}}:4===r.oldVersion&&(e={token:(o=i).fcmToken,createTime:o.createTime,subscriptionOptions:{auth:yD(o.auth),p256dh:yD(o.p256dh),endpoint:o.endpoint,swScope:o.swScope,vapidKey:yD(o.vapidKey)}});return[2/*return*/]}})})})];case 3:// Delete all old databases.
return r.sent().close(),[4/*yield*/,(0,m4.deleteDb)(yO)];case 4:return(// Delete all old databases.
r.sent(),[4/*yield*/,(0,m4.deleteDb)("fcm_vapid_details_db")]);case 5:return r.sent(),[4/*yield*/,(0,m4.deleteDb)("undefined")];case 6:return r.sent(),[2/*return*/,!function(t){if(!t||!t.subscriptionOptions)return!1;var e=t.subscriptionOptions;return"number"==typeof t.createTime&&t.createTime>0&&"string"==typeof t.token&&t.token.length>0&&"string"==typeof e.auth&&e.auth.length>0&&"string"==typeof e.p256dh&&e.p256dh.length>0&&"string"==typeof e.endpoint&&e.endpoint.length>0&&"string"==typeof e.swScope&&e.swScope.length>0&&"string"==typeof e.vapidKey&&e.vapidKey.length>0}(e)?null:e]}})})}(t.appConfig.senderId)];case 4:if(!(r=i.sent()))return[3/*break*/,6];return[4/*yield*/,yq(t,r)];case 5:return i.sent(),[2/*return*/,r];case 6:return[2/*return*/]}})})}/** Assigns or overwrites the record for the given key with the given value. */function yq(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){switch(i.label){case 0:return n=yV(t),[4/*yield*/,yj()];case 1:return[4/*yield*/,(r=i.sent().transaction(yM,"readwrite")).objectStore(yM).put(e,n)];case 2:return i.sent(),[4/*yield*/,r.complete];case 3:return i.sent(),[2/*return*/,e]}})})}function yV(t){return t.appConfig.appId}function yB(t,e){return H(this,void 0,void 0,function(){var n,r,i,o;return W(this,function(a){switch(a.label){case 0:return[4/*yield*/,yH(t)];case 1:n={method:"DELETE",headers:a.sent()},a.label=2;case 2:return a.trys.push([2,5,,6]),[4/*yield*/,fetch(yK(t.appConfig)+"/"+e,n)];case 3:return[4/*yield*/,a.sent().json()];case 4:if((r=a.sent()).error)throw i=r.error.message,yA.create("token-unsubscribe-failed"/* TOKEN_UNSUBSCRIBE_FAILED */,{errorInfo:i});return[3/*break*/,6];case 5:throw o=a.sent(),yA.create("token-unsubscribe-failed"/* TOKEN_UNSUBSCRIBE_FAILED */,{errorInfo:o});case 6:return[2/*return*/]}})})}function yK(t){return"https://fcmregistrations.googleapis.com/v1/projects/"+t.projectId+"/registrations"}function yH(t){var e=t.appConfig,n=t.installations;return H(this,void 0,void 0,function(){var t;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,n.getToken()];case 1:return t=r.sent(),[2/*return*/,new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e.apiKey,"x-goog-firebase-installations-auth":"FIS "+t})]}})})}function yW(t){var e=t.p256dh,n=t.auth,r=t.endpoint,i=t.vapidKey,o={web:{endpoint:r,auth:n,p256dh:e}};return i!==yR&&(o.web.applicationPubKey=i),o}function yz(t,e,n){return H(this,void 0,void 0,function(){var r,i,o;return W(this,function(a){switch(a.label){case 0:if("granted"!==Notification.permission)throw yA.create("permission-blocked"/* PERMISSION_BLOCKED */);return[4/*yield*/,/**
 * Gets a PushSubscription for the current user.
 */function(t,e){return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,t.pushManager.getSubscription()];case 1:if(n=r.sent())return[2/*return*/,n];return[2/*return*/,t.pushManager.subscribe({userVisibleOnly:!0,// Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key
// submitted to pushManager#subscribe must be of type Uint8Array.
applicationServerKey:function(t){for(var e="=".repeat((4-t.length%4)%4),n=atob((t+e).replace(/\-/g,"+").replace(/_/g,"/")),r=new Uint8Array(n.length),i=0;i<n.length;++i)r[i]=n.charCodeAt(i);return r}(e)})]}})})}(e,n)];case 1:return r=a.sent(),[4/*yield*/,yU(t)];case 2:if(i=a.sent(),o={vapidKey:n,swScope:e.scope,endpoint:r.endpoint,auth:yD(r.getKey("auth")),p256dh:yD(r.getKey("p256dh"))},i)return[3/*break*/,3];// No token, get a new one.
return[2/*return*/,yQ(t,o)];case 3:var s,u,c,h,l,f;if(s=i.subscriptionOptions,c=(u=o).vapidKey===s.vapidKey,h=u.endpoint===s.endpoint,l=u.auth===s.auth,f=u.p256dh===s.p256dh,c&&h&&l&&f)return[3/*break*/,8];a.label=4;case 4:return a.trys.push([4,6,,7]),[4/*yield*/,yB(t,i.token)];case 5:return a.sent(),[3/*break*/,7];case 6:return(// Suppress errors because of #2364
console.warn(a.sent()),[3/*break*/,7]);case 7:return[2/*return*/,yQ(t,o)];case 8:if(Date.now()>=i.createTime+6048e5)return[2/*return*/,function(t,e,n){return H(this,void 0,void 0,function(){var r,i;return W(this,function(o){switch(o.label){case 0:return o.trys.push([0,3,,5]),[4/*yield*/,function(t,e){return H(this,void 0,void 0,function(){var n,r,i,o;return W(this,function(a){switch(a.label){case 0:return[4/*yield*/,yH(t)];case 1:n={method:"PATCH",headers:a.sent(),body:JSON.stringify(yW(e.subscriptionOptions))},a.label=2;case 2:return a.trys.push([2,5,,6]),[4/*yield*/,fetch(yK(t.appConfig)+"/"+e.token,n)];case 3:return[4/*yield*/,a.sent().json()];case 4:return r=a.sent(),[3/*break*/,6];case 5:throw i=a.sent(),yA.create("token-update-failed"/* TOKEN_UPDATE_FAILED */,{errorInfo:i});case 6:if(r.error)throw o=r.error.message,yA.create("token-update-failed"/* TOKEN_UPDATE_FAILED */,{errorInfo:o});if(!r.token)throw yA.create("token-update-no-token"/* TOKEN_UPDATE_NO_TOKEN */);return[2/*return*/,r.token]}})})}(e,t)];case 1:return r=o.sent(),[4/*yield*/,yq(e,K(K({},t),{token:r,createTime:Date.now()}))];case 2:return o.sent(),[2/*return*/,r];case 3:return i=o.sent(),[4/*yield*/,yG(e,n)];case 4:throw o.sent(),i;case 5:return[2/*return*/]}})})}({token:i.token,createTime:Date.now(),subscriptionOptions:o},t,e)];return[2/*return*/,i.token];case 9:return[2/*return*/]}})})}/**
 * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters
 * the push subscription if it exists.
 */function yG(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,yU(t)];case 1:if(!(n=i.sent()))return[3/*break*/,4];return[4/*yield*/,yB(t,n.token)];case 2:return i.sent(),[4/*yield*/,/** Removes record(s) from the objectStore that match the given key. */function(t){return H(this,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:return e=yV(t),[4/*yield*/,yj()];case 1:return[4/*yield*/,(n=r.sent().transaction(yM,"readwrite")).objectStore(yM).delete(e)];case 2:return r.sent(),[4/*yield*/,n.complete];case 3:return r.sent(),[2/*return*/]}})})}(t)];case 3:i.sent(),i.label=4;case 4:return[4/*yield*/,e.pushManager.getSubscription()];case 5:if(r=i.sent())return[2/*return*/,r.unsubscribe()];// If there's no SW, consider it a success.
return[2/*return*/,!0]}})})}function yQ(t,e){return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t,e){return H(this,void 0,void 0,function(){var n,r,i,o;return W(this,function(a){switch(a.label){case 0:return[4/*yield*/,yH(t)];case 1:n={method:"POST",headers:a.sent(),body:JSON.stringify(yW(e))},a.label=2;case 2:return a.trys.push([2,5,,6]),[4/*yield*/,fetch(yK(t.appConfig),n)];case 3:return[4/*yield*/,a.sent().json()];case 4:return r=a.sent(),[3/*break*/,6];case 5:throw i=a.sent(),yA.create("token-subscribe-failed"/* TOKEN_SUBSCRIBE_FAILED */,{errorInfo:i});case 6:if(r.error)throw o=r.error.message,yA.create("token-subscribe-failed"/* TOKEN_SUBSCRIBE_FAILED */,{errorInfo:o});if(!r.token)throw yA.create("token-subscribe-no-token"/* TOKEN_SUBSCRIBE_NO_TOKEN */);return[2/*return*/,r.token]}})})}(t,e)];case 1:return[4/*yield*/,yq(t,n={token:r.sent(),createTime:Date.now(),subscriptionOptions:e})];case 2:return r.sent(),[2/*return*/,n.token]}})})}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function y$(t){// This message has a campaign ID, meaning it was sent using the Firebase Console.
return"object"==typeof t&&!!t&&yP in t}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Returns a promise that resolves after given time passes. */function yY(t){return new Promise(function(e){setTimeout(e,t)})}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var yX=/** @class */function(){function t(t){var e=this;this.firebaseDependencies=t,// A boolean flag to determine wether an app is using onBackgroundMessage or
// setBackgroundMessageHandler. onBackgroundMessage will receive a MessagePayload regardless of if
// a notification is displayed. Whereas, setBackgroundMessageHandler will swallow the
// MessagePayload if a NotificationPayload is included.
this.isOnBackgroundMessageUsed=null,this.vapidKey=null,this.bgMessageHandler=null,self.addEventListener("push",function(t){t.waitUntil(e.onPush(t))}),self.addEventListener("pushsubscriptionchange",function(t){t.waitUntil(e.onSubChange(t))}),self.addEventListener("notificationclick",function(t){t.waitUntil(e.onNotificationClick(t))})}return Object.defineProperty(t.prototype,"app",{get:function(){return this.firebaseDependencies.app},enumerable:!1,configurable:!0}),/**
     * @deprecated. Use onBackgroundMessage(nextOrObserver: NextFn<object> | Observer<object>):
     * Unsubscribe instead.
     *
     * Calling setBackgroundMessageHandler will opt in to some specific behaviors.
     *
     * 1.) If a notification doesn't need to be shown due to a window already being visible, then push
     * messages will be sent to the page. 2.) If a notification needs to be shown, and the message
     * contains no notification data this method will be called and the promise it returns will be
     * passed to event.waitUntil. If you do not set this callback then all push messages will let and
     * the developer can handle them in a their own 'push' event callback
     *
     * @param callback The callback to be called when a push message is received and a notification
     * must be shown. The callback will be given the data from the push message.
     */t.prototype.setBackgroundMessageHandler=function(t){if(this.isOnBackgroundMessageUsed=!1,!t||"function"!=typeof t)throw yA.create("invalid-bg-handler"/* INVALID_BG_HANDLER */);this.bgMessageHandler=t},t.prototype.onBackgroundMessage=function(t){var e=this;return this.isOnBackgroundMessageUsed=!0,this.bgMessageHandler=t,function(){e.bgMessageHandler=null}},// TODO: Remove getToken from SW Controller. Calling this from an old SW can cause all kinds of
// trouble.
t.prototype.getToken=function(){var t,e;return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:if(this.vapidKey)return[3/*break*/,2];return[4/*yield*/,yU(this.firebaseDependencies)];case 1:n=r.sent(),this.vapidKey=null!==(e=null===(t=null==n?void 0:n.subscriptionOptions)||void 0===t?void 0:t.vapidKey)&&void 0!==e?e:yR,r.label=2;case 2:return[2/*return*/,yz(this.firebaseDependencies,self.registration,this.vapidKey)]}})})},// TODO: Remove deleteToken from SW Controller. Calling this from an old SW can cause all kinds of
// trouble.
t.prototype.deleteToken=function(){return yG(this.firebaseDependencies,self.registration)},t.prototype.requestPermission=function(){throw yA.create("only-available-in-window"/* AVAILABLE_IN_WINDOW */)},// TODO: Remove this together with getToken from SW Controller.
t.prototype.usePublicVapidKey=function(t){if(null!==this.vapidKey)throw yA.create("use-vapid-key-after-get-token"/* USE_VAPID_KEY_AFTER_GET_TOKEN */);if("string"!=typeof t||0===t.length)throw yA.create("invalid-vapid-key"/* INVALID_VAPID_KEY */);this.vapidKey=t},t.prototype.useServiceWorker=function(){throw yA.create("only-available-in-window"/* AVAILABLE_IN_WINDOW */)},t.prototype.onMessage=function(){throw yA.create("only-available-in-window"/* AVAILABLE_IN_WINDOW */)},t.prototype.onTokenRefresh=function(){throw yA.create("only-available-in-window"/* AVAILABLE_IN_WINDOW */)},/**
     * A handler for push events that shows notifications based on the content of the payload.
     *
     * The payload must be a JSON-encoded Object with a `notification` key. The value of the
     * `notification` property will be used as the NotificationOptions object passed to
     * showNotification. Additionally, the `title` property of the notification object will be used as
     * the title.
     *
     * If there is no notification data in the payload then no notification will be shown.
     */t.prototype.onPush=function(t){return H(this,void 0,void 0,function(){var e,n,r,i;return W(this,function(o){var a,s,u,c,h,l,f,p,d;switch(o.label){case 0:if(!(e=function(t){var e=t.data;if(!e)return null;try{return e.json()}catch(t){// Not JSON so not an FCM message.
return null}}(t)))return console.debug("FirebaseMessaging: failed to get parsed MessagePayload from the PushEvent. Skip handling the push."),[2/*return*/];return[4/*yield*/,yJ()];case 1:if((n=o.sent()).some(function(t){return"visible"===t.visibilityState&&// Ignore chrome-extension clients as that matches the background pages of extensions, which
// are always considered visible for some reason.
!t.url.startsWith("chrome-extension://")}))return[2/*return*/,function(t,e){var n,r;e.isFirebaseMessaging=!0,e.messageType=m.PUSH_RECEIVED;try{for(var i=z(t),o=i.next();!o.done;o=i.next())o.value.postMessage(e)}catch(t){n={error:t}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}}(n,e)];if(r=!1,!e.notification)return[3/*break*/,3];return[4/*yield*/,(l=(// Put the message payload under FCM_MSG name so we can identify the notification as being an FCM
// notification vs a notification from somewhere else (i.e. normal web push or developer generated
// notification).
(u=K({},(a=e).notification)).data=((s={})[yx]=a,s),c=u).actions,f=Notification.maxActions,l&&f&&l.length>f&&console.warn("This browser only supports "+f+" actions. The remaining actions will not be displayed."),self.registration.showNotification(null!==/* title= */(h=c.title)&&void 0!==h?h:"",c))];case 2:o.sent(),r=!0,o.label=3;case 3:// MessagePayload is only passed to `onBackgroundMessage`. Skip passing MessagePayload for
// the legacy `setBackgroundMessageHandler` to preserve the SDK behaviors.
if(!0===r&&!1===this.isOnBackgroundMessageUsed)return[2/*return*/];// wait briefly to allow onBackgroundMessage to complete
return this.bgMessageHandler&&(function(t,e){if(e.notification){t.notification={};var n=e.notification.title;n&&(t.notification.title=n);var r=e.notification.body;r&&(t.notification.body=r);var i=e.notification.image;i&&(t.notification.image=i)}}(d={from:(p=e).from,// eslint-disable-next-line camelcase
collapseKey:p.collapse_key,// eslint-disable-next-line camelcase
messageId:p.fcm_message_id},p),p.data&&(d.data=p.data),function(t,e){if(e.fcmOptions){t.fcmOptions={};var n=e.fcmOptions.link;n&&(t.fcmOptions.link=n);// eslint-disable-next-line camelcase
var r=e.fcmOptions.analytics_label;r&&(t.fcmOptions.analyticsLabel=r)}}(d,p),i=d,"function"==typeof this.bgMessageHandler?this.bgMessageHandler(i):this.bgMessageHandler.next(i)),[4/*yield*/,yY(1e3)];case 4:return(// wait briefly to allow onBackgroundMessage to complete
o.sent(),[2/*return*/])}})})},t.prototype.onSubChange=function(t){var e,n;return H(this,void 0,void 0,function(){var r;return W(this,function(i){switch(i.label){case 0:if(t.newSubscription)return[3/*break*/,2];// Subscription revoked, delete token
return[4/*yield*/,yG(this.firebaseDependencies,self.registration)];case 1:case 5:return(// Subscription revoked, delete token
i.sent(),[2/*return*/]);case 2:return[4/*yield*/,yU(this.firebaseDependencies)];case 3:return r=i.sent(),[4/*yield*/,yG(this.firebaseDependencies,self.registration)];case 4:return i.sent(),[4/*yield*/,yz(this.firebaseDependencies,self.registration,null!==(n=null===(e=null==r?void 0:r.subscriptionOptions)||void 0===e?void 0:e.vapidKey)&&void 0!==n?n:yR)]}})})},t.prototype.onNotificationClick=function(t){var e,n;return H(this,void 0,void 0,function(){var r,i,o,a,s;return W(this,function(u){switch(u.label){case 0:var c,h,l,f,p;if(!(r=null===(n=null===(e=t.notification)||void 0===e?void 0:e.data)||void 0===n?void 0:n[yx])||t.action||(// Prevent other listeners from receiving the event
t.stopImmediatePropagation(),t.notification.close(),!(i=(null!==(l=null===(h=(c=r).fcmOptions)||void 0===h?void 0:h.link)&&void 0!==l?l:null===(f=c.notification)||void 0===f?void 0:f.click_action)||(y$(c.data)?self.location.origin:null))||(o=new URL(i,self.location.href),a=new URL(self.location.origin),o.host!==a.host)))return[2/*return*/];return[4/*yield*/,/**
 * @param url The URL to look for when focusing a client.
 * @return Returns an existing window client or a newly opened WindowClient.
 */function(t){return H(this,void 0,void 0,function(){var e,n,r,i,o,a,s;return W(this,function(u){switch(u.label){case 0:return[4/*yield*/,yJ()];case 1:e=u.sent();try{for(r=(n=z(e)).next();!r.done;r=n.next())if(i=r.value,o=new URL(i.url,self.location.href),t.host===o.host)return[2/*return*/,i]}catch(t){a={error:t}}finally{try{r&&!r.done&&(s=n.return)&&s.call(n)}finally{if(a)throw a.error}}return[2/*return*/,null]}})})}(o)];case 1:if(s=u.sent())return[3/*break*/,4];return[4/*yield*/,self.clients.openWindow(i)];case 2:// Wait three seconds for the client to initialize and set up the message handler so that it
// can receive the message.
return s=u.sent(),[4/*yield*/,yY(3e3)];case 3:return(// Wait three seconds for the client to initialize and set up the message handler so that it
// can receive the message.
u.sent(),[3/*break*/,6]);case 4:return[4/*yield*/,s.focus()];case 5:s=u.sent(),u.label=6;case 6:if(!s)return[2/*return*/];return r.messageType=m.NOTIFICATION_CLICKED,r.isFirebaseMessaging=!0,[2/*return*/,s.postMessage(r)]}})})},t}();function yJ(){return self.clients.matchAll({type:"window",includeUncontrolled:!0})}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var yZ=/** @class */function(){function t(t){var e=this;this.firebaseDependencies=t,this.vapidKey=null,this.onMessageCallback=null,navigator.serviceWorker.addEventListener("message",function(t){return e.messageEventListener(t)})}return Object.defineProperty(t.prototype,"app",{get:function(){return this.firebaseDependencies.app},enumerable:!1,configurable:!0}),t.prototype.messageEventListener=function(t){return H(this,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:var i;if(!(e=t.data).isFirebaseMessaging)return[2/*return*/];if(this.onMessageCallback&&e.messageType===m.PUSH_RECEIVED&&("function"==typeof this.onMessageCallback?this.onMessageCallback((i=Object.assign({},e),delete i.messageType,delete i.isFirebaseMessaging,i)):this.onMessageCallback.next(Object.assign({},e))),!(y$(n=e.data)&&"1"===n["google.c.a.e"]))return[3/*break*/,2];return[4/*yield*/,this.logEvent(e.messageType,n)];case 1:r.sent(),r.label=2;case 2:return[2/*return*/]}})})},t.prototype.getVapidKey=function(){return this.vapidKey},t.prototype.getSwReg=function(){return this.swRegistration},t.prototype.getToken=function(t){return H(this,void 0,void 0,function(){return W(this,function(e){switch(e.label){case 0:if("default"!==Notification.permission)return[3/*break*/,2];return[4/*yield*/,Notification.requestPermission()];case 1:e.sent(),e.label=2;case 2:if("granted"!==Notification.permission)throw yA.create("permission-blocked"/* PERMISSION_BLOCKED */);return[4/*yield*/,this.updateVapidKey(null==t?void 0:t.vapidKey)];case 3:return e.sent(),[4/*yield*/,this.updateSwReg(null==t?void 0:t.serviceWorkerRegistration)];case 4:return e.sent(),[2/*return*/,yz(this.firebaseDependencies,this.swRegistration,this.vapidKey)]}})})},t.prototype.updateVapidKey=function(t){return H(this,void 0,void 0,function(){return W(this,function(e){return t?this.vapidKey=t:this.vapidKey||(this.vapidKey=yR),[2/*return*/]})})},t.prototype.updateSwReg=function(t){return H(this,void 0,void 0,function(){return W(this,function(e){switch(e.label){case 0:if(!(!t&&!this.swRegistration))return[3/*break*/,2];return[4/*yield*/,this.registerDefaultSw()];case 1:e.sent(),e.label=2;case 2:if(!t&&this.swRegistration)return[2/*return*/];if(!(t instanceof ServiceWorkerRegistration))throw yA.create("invalid-sw-registration"/* INVALID_SW_REGISTRATION */);return this.swRegistration=t,[2/*return*/]}})})},t.prototype.registerDefaultSw=function(){return H(this,void 0,void 0,function(){var t,e;return W(this,function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),t=this,[4/*yield*/,navigator.serviceWorker.register("/firebase-messaging-sw.js",{scope:"/firebase-cloud-messaging-push-scope"})];case 1:return t.swRegistration=n.sent(),// The timing when browser updates sw when sw has an update is unreliable by my experiment. It
// leads to version conflict when the SDK upgrades to a newer version in the main page, but sw
// is stuck with the old version. For example,
// https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates
// sw if there was an update.
this.swRegistration.update().catch(function(){/* it is non blocking and we don't care if it failed */}),[3/*break*/,3];case 2:throw e=n.sent(),yA.create("failed-service-worker-registration"/* FAILED_DEFAULT_REGISTRATION */,{browserErrorMessage:e.message});case 3:return[2/*return*/]}})})},t.prototype.deleteToken=function(){return H(this,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:if(this.swRegistration)return[3/*break*/,2];return[4/*yield*/,this.registerDefaultSw()];case 1:t.sent(),t.label=2;case 2:return[2/*return*/,yG(this.firebaseDependencies,this.swRegistration)]}})})},/**
     * Request permission if it is not currently granted.
     *
     * @return Resolves if the permission was granted, rejects otherwise.
     *
     * @deprecated Use Notification.requestPermission() instead.
     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission
     */t.prototype.requestPermission=function(){return H(this,void 0,void 0,function(){var t;return W(this,function(e){switch(e.label){case 0:if("granted"===Notification.permission)return[2/*return*/];return[4/*yield*/,Notification.requestPermission()];case 1:if("granted"===(t=e.sent()))return[2/*return*/];if("denied"===t)throw yA.create("permission-blocked"/* PERMISSION_BLOCKED */);throw yA.create("permission-default"/* PERMISSION_DEFAULT */)}})})},/**
     * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:
     * ServiceWorkerRegistration;}): Promise<string> instead.
     */t.prototype.usePublicVapidKey=function(t){if(null!==this.vapidKey)throw yA.create("use-vapid-key-after-get-token"/* USE_VAPID_KEY_AFTER_GET_TOKEN */);if("string"!=typeof t||0===t.length)throw yA.create("invalid-vapid-key"/* INVALID_VAPID_KEY */);this.vapidKey=t},/**
     * @deprecated. Use getToken(options?: {vapidKey?: string; serviceWorkerRegistration?:
     * ServiceWorkerRegistration;}): Promise<string> instead.
     */t.prototype.useServiceWorker=function(t){if(!(t instanceof ServiceWorkerRegistration))throw yA.create("invalid-sw-registration"/* INVALID_SW_REGISTRATION */);if(this.swRegistration)throw yA.create("use-sw-after-get-token"/* USE_SW_AFTER_GET_TOKEN */);this.swRegistration=t},/**
     * @param nextOrObserver An observer object or a function triggered on message.
     *
     * @return The unsubscribe function for the observer.
     */t.prototype.onMessage=function(t){var e=this;return this.onMessageCallback=t,function(){e.onMessageCallback=null}},t.prototype.setBackgroundMessageHandler=function(){throw yA.create("only-available-in-sw"/* AVAILABLE_IN_SW */)},t.prototype.onBackgroundMessage=function(){throw yA.create("only-available-in-sw"/* AVAILABLE_IN_SW */)},/**
     * @deprecated No-op. It was initially designed with token rotation requests from server in mind.
     * However, the plan to implement such feature was abandoned.
     */t.prototype.onTokenRefresh=function(){return function(){}},t.prototype.logEvent=function(t,e){return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:return n=function(t){switch(t){case m.NOTIFICATION_CLICKED:return"notification_open";case m.PUSH_RECEIVED:return"notification_foreground";default:throw Error()}}(t),[4/*yield*/,this.firebaseDependencies.analyticsProvider.get()];case 1:return r.sent().logEvent(n,{/* eslint-disable camelcase */message_id:e[yP],message_name:e["google.c.a.c_l"],message_time:e["google.c.a.ts"],message_device_time:Math.floor(Date.now()/1e3)}),[2/*return*/]}})})},t}();function y0(t){return yA.create("missing-app-config-values"/* MISSING_APP_CONFIG_VALUES */,{valueName:t})}function y1(){return self&&"ServiceWorkerGlobalScope"in self?"indexedDB"in self&&null!==indexedDB&&"PushManager"in self&&"Notification"in self&&ServiceWorkerRegistration.prototype.hasOwnProperty("showNotification")&&PushSubscription.prototype.hasOwnProperty("getKey"):"indexedDB"in window&&null!==indexedDB&&navigator.cookieEnabled&&"serviceWorker"in navigator&&"PushManager"in window&&"Notification"in window&&"fetch"in window&&ServiceWorkerRegistration.prototype.hasOwnProperty("showNotification")&&PushSubscription.prototype.hasOwnProperty("getKey")}ee.INTERNAL.registerComponent(new tV("messaging",function(t){// Dependencies.
var e=t.getProvider("app").getImmediate(),n=/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(t){if(!t||!t.options)throw y0("App Configuration Object");if(!t.name)throw y0("App Name");var e,n,r=t.options;try{for(var i=z(["projectId","apiKey","appId","messagingSenderId"]),o=i.next();!o.done;o=i.next()){var a=o.value;if(!r[a])throw y0(a)}}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return{appName:t.name,projectId:r.projectId,apiKey:r.apiKey,appId:r.appId,senderId:r.messagingSenderId}}(e),r={app:e,appConfig:n,installations:t.getProvider("installations").getImmediate(),analyticsProvider:t.getProvider("analytics-internal")};if(!y1())throw yA.create("unsupported-browser"/* UNSUPPORTED_BROWSER */);return self&&"ServiceWorkerGlobalScope"in self?new yX(r):new yZ(r)},"PUBLIC"/* PUBLIC */).setServiceProps({isSupported:y1}));/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @fileoverview Constants used in the Firebase Storage library.
 *//**
 * Domain name for firebase storage.
 */var y2="firebasestorage.googleapis.com",y4="storageBucket",y3=/** @class */function(t){/**
     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and
     *  added to the end of the message.
     * @param message  - Error message.
     */function e(n,r){var i=t.call(this,y6(n),"Firebase Storage: "+r+" ("+y6(n)+")")||this;return(/**
         * Stores custom error data unque to FirebaseStorageError.
         */i.customData={serverResponse:null},i._baseMessage=i.message,// Without this, `instanceof FirebaseStorageError`, in tests for example,
// returns false.
Object.setPrototypeOf(i,e.prototype),i)}return B(e,t),/**
     * Compares a StorageErrorCode against this error's code, filtering out the prefix.
     */e.prototype._codeEquals=function(t){return y6(t)===this.code},Object.defineProperty(e.prototype,"serverResponse",{/**
         * Optional response message that was added by the server.
         */get:function(){return this.customData.serverResponse},set:function(t){this.customData.serverResponse=t,this.customData.serverResponse?this.message=this._baseMessage+"\n"+this.customData.serverResponse:this.message=this._baseMessage},enumerable:!1,configurable:!0}),e}(tg);function y6(t){return"storage/"+t}function y5(){return new y3("unknown"/* UNKNOWN */,"An unknown error occurred, please check the error payload for server response.")}function y8(){return new y3("canceled"/* CANCELED */,"User canceled the upload/download.")}function y7(){return new y3("cannot-slice-blob"/* CANNOT_SLICE_BLOB */,"Cannot slice blob for upload. Please retry the upload.")}function y9(t){return new y3("invalid-argument"/* INVALID_ARGUMENT */,t)}function _t(){return new y3("app-deleted"/* APP_DELETED */,"The Firebase app was deleted.")}/**
 * @param name - The name of the operation that was invalid.
 */function _e(t){return new y3("invalid-root-operation"/* INVALID_ROOT_OPERATION */,"The operation '"+t+"' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png').")}/**
 * @param format - The format that was not valid.
 * @param message - A message describing the format violation.
 */function _n(t,e){return new y3("invalid-format"/* INVALID_FORMAT */,"String does not match format '"+t+"': "+e)}/**
 * @param message - A message describing the internal error.
 */function _r(t){throw new y3("internal-error"/* INTERNAL_ERROR */,"Internal error: "+t)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * An enumeration of the possible string formats for upload.
 * @public
 */var _i={/**
     * Indicates the string should be interpreted "raw", that is, as normal text.
     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte
     * sequence.
     * Example: The string 'Hello! \\ud83d\\ude0a' becomes the byte sequence
     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a
     */RAW:"raw",/**
     * Indicates the string should be interpreted as base64-encoded data.
     * Padding characters (trailing '='s) are optional.
     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence
     * ad 69 8e fb e1 3a b7 bf eb 97
     */BASE64:"base64",/**
     * Indicates the string should be interpreted as base64url-encoded data.
     * Padding characters (trailing '='s) are optional.
     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence
     * ad 69 8e fb e1 3a b7 bf eb 97
     */BASE64URL:"base64url",/**
     * Indicates the string is a data URL, such as one obtained from
     * canvas.toDataURL().
     * Example: the string 'data:application/octet-stream;base64,aaaa'
     * becomes the byte sequence
     * 69 a6 9a
     * (the content-type "application/octet-stream" is also applied, but can
     * be overridden in the metadata object).
     */DATA_URL:"data_url"},_o=function(t,e){this.data=t,this.contentType=e||null};function _a(t,e){switch(t){case _i.RAW:return new _o(_s(e));case _i.BASE64:case _i.BASE64URL:return new _o(_u(t,e));case _i.DATA_URL:var n;return new _o((n=new _c(e)).base64?_u(_i.BASE64,n.rest):function(t){var e;try{e=decodeURIComponent(t)}catch(t){throw _n(_i.DATA_URL,"Malformed data URL.")}return _s(e)}(n.rest),new _c(e).contentType)}// assert(false);
throw y5()}function _s(t){for(var e=[],n=0;n<t.length;n++){var r=t.charCodeAt(n);r<=127?e.push(r):r<=2047?e.push(192|r>>6,128|63&r):(64512&r)==55296?n<t.length-1&&(64512&t.charCodeAt(n+1))==56320?(r=65536|(1023&r)<<10|1023&t.charCodeAt(++n),e.push(240|r>>18,128|r>>12&63,128|r>>6&63,128|63&r)):e.push(239,191,189):(64512&r)==56320?e.push(239,191,189):e.push(224|r>>12,128|r>>6&63,128|63&r)}return new Uint8Array(e)}function _u(t,e){switch(t){case _i.BASE64:var n,r,i=-1!==e.indexOf("-"),o=-1!==e.indexOf("_");if(i||o){var a=i?"-":"_";throw _n(t,"Invalid character '"+a+"' found: is it base64url encoded?")}break;case _i.BASE64URL:var s=-1!==e.indexOf("+"),u=-1!==e.indexOf("/");if(s||u){var a=s?"+":"/";throw _n(t,"Invalid character '"+a+"' found: is it base64 encoded?")}e=e.replace(/-/g,"+").replace(/_/g,"/")}try{n=e,r=atob(n)}catch(e){throw _n(t,"Invalid character found")}for(var c=new Uint8Array(r.length),h=0;h<r.length;h++)c[h]=r.charCodeAt(h);return c}var _c=function(t){this.base64=!1,this.contentType=null;var e,n=t.match(/^data:([^,]+)?,/);if(null===n)throw _n(_i.DATA_URL,"Must be formatted 'data:[<mediatype>][;base64],<data>");var r=n[1]||null;null!=r&&(this.base64=(e=";base64",r.length>=e.length&&r.substring(r.length-e.length)===e),this.contentType=this.base64?r.substring(0,r.length-7):r),this.rest=t.substring(t.indexOf(",")+1)},_h={/** The task is currently transferring data. */RUNNING:"running",/** The task was paused by the user. */PAUSED:"paused",/** The task completed successfully. */SUCCESS:"success",/** The task was canceled. */CANCELED:"canceled",/** The task failed with an error. */ERROR:"error"};function _l(t){switch(t){case"running"/* RUNNING */:case"pausing"/* PAUSING */:case"canceling"/* CANCELING */:return _h.RUNNING;case"paused"/* PAUSED */:return _h.PAUSED;case"success"/* SUCCESS */:return _h.SUCCESS;case"canceled"/* CANCELED */:return _h.CANCELED;default:return _h.ERROR}}(u=y||(y={}))[u.NO_ERROR=0]="NO_ERROR",u[u.NETWORK_ERROR=1]="NETWORK_ERROR",u[u.ABORT=2]="ABORT";/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Network layer for browsers. We use this instead of goog.net.XhrIo because
 * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.
 */var _f=/** @class */function(){function t(){var t=this;this.sent_=!1,this.xhr_=new XMLHttpRequest,this.errorCode_=y.NO_ERROR,this.sendPromise_=new Promise(function(e){t.xhr_.addEventListener("abort",function(){t.errorCode_=y.ABORT,e()}),t.xhr_.addEventListener("error",function(){t.errorCode_=y.NETWORK_ERROR,e()}),t.xhr_.addEventListener("load",function(){e()})})}return(/**
     * @override
     */t.prototype.send=function(t,e,n,r){if(this.sent_)throw _r("cannot .send() more than once");if(this.sent_=!0,this.xhr_.open(e,t,!0),void 0!==r)for(var i in r)r.hasOwnProperty(i)&&this.xhr_.setRequestHeader(i,r[i].toString());return void 0!==n?this.xhr_.send(n):this.xhr_.send(),this.sendPromise_},/**
     * @override
     */t.prototype.getErrorCode=function(){if(!this.sent_)throw _r("cannot .getErrorCode() before sending");return this.errorCode_},/**
     * @override
     */t.prototype.getStatus=function(){if(!this.sent_)throw _r("cannot .getStatus() before sending");try{return this.xhr_.status}catch(t){return -1}},/**
     * @override
     */t.prototype.getResponseText=function(){if(!this.sent_)throw _r("cannot .getResponseText() before sending");return this.xhr_.responseText},/**
     * Aborts the request.
     * @override
     */t.prototype.abort=function(){this.xhr_.abort()},/**
     * @override
     */t.prototype.getResponseHeader=function(t){return this.xhr_.getResponseHeader(t)},/**
     * @override
     */t.prototype.addUploadProgressListener=function(t){null!=this.xhr_.upload&&this.xhr_.upload.addEventListener("progress",t)},/**
     * @override
     */t.prototype.removeUploadProgressListener=function(t){null!=this.xhr_.upload&&this.xhr_.upload.removeEventListener("progress",t)},t)}(),_p=/** @class */function(){function t(){}return t.prototype.createConnection=function(){return new _f},t}(),_d=/** @class */function(){function t(t,e){this.bucket=t,this.path_=e}return Object.defineProperty(t.prototype,"path",{get:function(){return this.path_},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isRoot",{get:function(){return 0===this.path.length},enumerable:!1,configurable:!0}),t.prototype.fullServerUrl=function(){var t=encodeURIComponent;return"/b/"+t(this.bucket)+"/o/"+t(this.path)},t.prototype.bucketOnlyServerUrl=function(){return"/b/"+encodeURIComponent(this.bucket)+"/o"},t.makeFromBucketSpec=function(e,n){var r;try{r=t.makeFromUrl(e,n)}catch(n){// Not valid URL, use as-is. This lets you put bare bucket names in
// config.
return new t(e,"")}if(""===r.path)return r;throw new y3("invalid-default-bucket"/* INVALID_DEFAULT_BUCKET */,"Invalid default bucket '"+e+"'.")},t.makeFromUrl=function(e,n){var r=null,i="([A-Za-z0-9.\\-_]+)",o=RegExp("^gs://"+i+"(/(.*))?$","i");function a(t){t.path_=decodeURIComponent(t.path)}for(var s=n.replace(/[.]/g,"\\."),u=RegExp("^https?://"+s+"/v[A-Za-z0-9_]+/b/"+i+"/o(/([^?#]*).*)?$","i"),c=n===y2?"(?:storage.googleapis.com|storage.cloud.google.com)":n,h=RegExp("^https?://"+c+"/"+i+"/([^?#]*)","i"),l=[{regex:o,indices:{bucket:1,path:3},postModify:function(t){"/"===t.path.charAt(t.path.length-1)&&(t.path_=t.path_.slice(0,-1))}},{regex:u,indices:{bucket:1,path:3},postModify:a},{regex:h,indices:{bucket:1,path:2},postModify:a}],f=0;f<l.length;f++){var p=l[f],d=p.regex.exec(e);if(d){var v=d[p.indices.bucket],g=d[p.indices.path];g||(g=""),r=new t(v,g),p.postModify(r);break}}if(null==r)throw new y3("invalid-url"/* INVALID_URL */,"Invalid URL '"+e+"'.");return r},t}(),_v=/** @class */function(){function t(t){this.promise_=Promise.reject(t)}return(/** @inheritDoc */t.prototype.getPromise=function(){return this.promise_},/** @inheritDoc */t.prototype.cancel=function(t){},t)}();function _g(t){return"string"==typeof t||t instanceof String}function _m(t){return _y()&&t instanceof Blob}function _y(){return"undefined"!=typeof Blob}function __(t,e,n,r){if(r<e)throw y9("Invalid value for '"+t+"'. Expected "+e+" or greater.");if(r>n)throw y9("Invalid value for '"+t+"'. Expected "+n+" or less.")}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function _b(t,e){var n=e.match(/^(\w+):\/\/.+/),r=null==n?void 0:n[1],i=e;return null==r&&(i="https://"+e),i+"/v0"+t}function _w(t){var e=encodeURIComponent,n="?";for(var r in t)t.hasOwnProperty(r)&&(n=n+(e(r)+"=")+e(t[r])+"&");return n.slice(0,-1)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var _I=/** @class */function(){function t(t,e,n,r,i,o,a,s,u,c,h){var l=this;this.pendingConnection_=null,this.backoffId_=null,this.canceled_=!1,this.appDelete_=!1,this.url_=t,this.method_=e,this.headers_=n,this.body_=r,this.successCodes_=i.slice(),this.additionalRetryCodes_=o.slice(),this.callback_=a,this.errorCallback_=s,this.progressCallback_=c,this.timeout_=u,this.pool_=h,this.promise_=new Promise(function(t,e){l.resolve_=t,l.reject_=e,l.start_()})}return(/**
     * Actually starts the retry loop.
     */t.prototype.start_=function(){var t=this;/**
         * @param requestWentThrough - True if the request eventually went
         *     through, false if it hit the retry limit or was canceled.
         */function e(e,n){var r=t.resolve_,i=t.reject_,o=n.connection;if(n.wasSuccessCode)try{var a=t.callback_(o,o.getResponseText());void 0!==a?r(a):r()}catch(t){i(t)}else if(null!==o){var s=y5();s.serverResponse=o.getResponseText(),i(t.errorCallback_?t.errorCallback_(o,s):s)}else if(n.canceled){var s=t.appDelete_?_t():y8();i(s)}else{var s=new y3("retry-limit-exceeded"/* RETRY_LIMIT_EXCEEDED */,"Max retry time for operation exceeded, please try again.");i(s)}}this.canceled_?e(!1,new _T(!1,null,!0)):this.backoffId_=/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @param f May be invoked
 *     before the function returns.
 * @param callback Get all the arguments passed to the function
 *     passed to f, including the initial boolean.
 */function(t,e,n){// TODO(andysoto): make this code cleaner (probably refactor into an actual
// type instead of a bunch of functions with state shared in the closure)
var r=1,i=null,o=!1,a=0,s=!1;function u(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];s||(s=!0,e.apply(null,t))}function c(e){i=setTimeout(function(){i=null,t(h,2===a)},e)}function h(t){for(var e,n=[],i=1;i<arguments.length;i++)n[i-1]=arguments[i];if(!s){if(t||2===a||o){u.call.apply(u,Q([null,t],n));return}r<64&&/* TODO(andysoto): don't back off so quickly if we know we're offline. */(r*=2),1===a?(a=2,e=0):e=(r+Math.random())*1e3,c(e)}}var l=!1;function f(t){!l&&(l=!0,s||(null!==i?(t||(a=2),clearTimeout(i),c(0)):t||(a=1)))}return c(0),setTimeout(function(){o=!0,f(!0)},n),f}(function(e,n){if(n){e(!1,new _T(!1,null,!0));return}var r=t.pool_.createConnection();function i(e){var n=e.loaded,r=e.lengthComputable?e.total:-1;null!==t.progressCallback_&&t.progressCallback_(n,r)}t.pendingConnection_=r,null!==t.progressCallback_&&r.addUploadProgressListener(i),// eslint-disable-next-line @typescript-eslint/no-floating-promises
r.send(t.url_,t.method_,t.body_,t.headers_).then(function(){null!==t.progressCallback_&&r.removeUploadProgressListener(i),t.pendingConnection_=null;var n=r.getErrorCode()===y.NO_ERROR,o=r.getStatus();if(!n||t.isRetryStatusCode_(o)){var a=r.getErrorCode()===y.ABORT;e(!1,new _T(!1,null,a));return}var s=-1!==t.successCodes_.indexOf(o);e(!0,new _T(s,r))})},e,this.timeout_)},/** @inheritDoc */t.prototype.getPromise=function(){return this.promise_},/** @inheritDoc */t.prototype.cancel=function(t){this.canceled_=!0,this.appDelete_=t||!1,null!==this.backoffId_&&(0,this.backoffId_)(!1),null!==this.pendingConnection_&&this.pendingConnection_.abort()},t.prototype.isRetryStatusCode_=function(t){// The codes for which to retry came from this page:
// https://cloud.google.com/storage/docs/exponential-backoff
var e=t>=500&&t<600,n=-1!==[// Request Timeout: web server didn't receive full request in time.
408,// Too Many Requests: you're getting rate-limited, basically.
429].indexOf(t),r=-1!==this.additionalRetryCodes_.indexOf(t);return e||n||r},t)}(),_T=function(t,e,n){this.wasSuccessCode=t,this.connection=e,this.canceled=!!n};/**
 * Concatenates one or more values together and converts them to a Blob.
 *
 * @param args The values that will make up the resulting blob.
 * @return The blob.
 */function _E(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n="undefined"!=typeof BlobBuilder?BlobBuilder:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:void 0;if(void 0!==n){for(var r=new n,i=0;i<t.length;i++)r.append(t[i]);return r.getBlob()}if(_y())return new Blob(t);throw new y3("unsupported-environment"/* UNSUPPORTED_ENVIRONMENT */,"This browser doesn't seem to support creating Blobs")}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @param opt_elideCopy - If true, doesn't copy mutable input data
 *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be
 *     modified after this blob's construction.
 *
 * @internal
 */var _S=/** @class */function(){function t(t,e){var n=0,r="";_m(t)?(this.data_=t,n=t.size,r=t.type):t instanceof ArrayBuffer?(e?this.data_=new Uint8Array(t):(this.data_=new Uint8Array(t.byteLength),this.data_.set(new Uint8Array(t))),n=this.data_.length):t instanceof Uint8Array&&(e?this.data_=t:(this.data_=new Uint8Array(t.length),this.data_.set(t)),n=t.length),this.size_=n,this.type_=r}return t.prototype.size=function(){return this.size_},t.prototype.type=function(){return this.type_},t.prototype.slice=function(e,n){if(_m(this.data_)){var r,i=(r=this.data_).webkitSlice?r.webkitSlice(e,n):r.mozSlice?r.mozSlice(e,n):r.slice?r.slice(e,n):null;return null===i?null:new t(i)}var o=new Uint8Array(this.data_.buffer,e,n-e);return new t(o,!0)},t.getBlob=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];if(_y()){var r=e.map(function(e){return e instanceof t?e.data_:e});return new t(_E.apply(null,r))}var i=e.map(function(t){return _g(t)?_a(_i.RAW,t).data:t.data_}),o=0;i.forEach(function(t){o+=t.byteLength});var a=new Uint8Array(o),s=0;return i.forEach(function(t){for(var e=0;e<t.length;e++)a[s++]=t[e]}),new t(a,!0)},t.prototype.uploadData=function(){return this.data_},t}();/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns the Object resulting from parsing the given JSON, or null if the
 * given string does not represent a JSON object.
 */function _C(t){var e,n;try{e=JSON.parse(t)}catch(t){return null}return"object"!=typeof(n=e)||Array.isArray(n)?null:e}/**
 * Returns the last component of a path.
 * '/foo/bar' -> 'bar'
 * '/foo/bar/baz/' -> 'baz/'
 * '/a' -> 'a'
 */function _k(t){var e=t.lastIndexOf("/",t.length-2);return -1===e?t:t.slice(e+1)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function _N(t,e){return e}var _A=function(t,e,n,r){this.server=t,this.local=e||t,this.writable=!!n,this.xform=r||_N},_R=null;function _x(){if(_R)return _R;var t=[];t.push(new _A("bucket")),t.push(new _A("generation")),t.push(new _A("metageneration")),t.push(new _A("name","fullPath",!0));var e=new _A("name");e.xform=function(t,e){return!_g(e)||e.length<2?e:_k(e)},t.push(e);var n=new _A("size");return n.xform=/**
     * Coerces the second param to a number, if it is defined.
     */function(t,e){return void 0!==e?Number(e):e},t.push(n),t.push(new _A("timeCreated")),t.push(new _A("updated")),t.push(new _A("md5Hash",null,!0)),t.push(new _A("cacheControl",null,!0)),t.push(new _A("contentDisposition",null,!0)),t.push(new _A("contentEncoding",null,!0)),t.push(new _A("contentLanguage",null,!0)),t.push(new _A("contentType",null,!0)),t.push(new _A("metadata","customMetadata",!0)),_R=t}function _P(t,e,n){var r=_C(e);return null===r?null:function(t,e,n){var r={};r.type="file";for(var i=n.length,o=0;o<i;o++){var a=n[o];r[a.local]=a.xform(r,e[a.server])}return Object.defineProperty(r,"ref",{get:function(){var e=r.bucket,n=r.fullPath,i=new _d(e,n);return t._makeStorageReference(i)}}),r}(t,r,n)}function _D(t,e){for(var n={},r=e.length,i=0;i<r;i++){var o=e[i];o.writable&&(n[o.server]=t[o.local])}return JSON.stringify(n)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var _O="prefixes",_L="items",_M=function(t,e,/**
     * Returns the value with which to resolve the request's promise. Only called
     * if the request is successful. Throw from this function to reject the
     * returned Request's promise with the thrown error.
     * Note: The XhrIo passed to this function may be reused after this callback
     * returns. Do not keep a reference to it in any way.
     */n,r){this.url=t,this.method=e,this.handler=n,this.timeout=r,this.urlParams={},this.headers={},this.body=null,this.errorHandler=null,/**
         * Called with the current number of bytes uploaded and total size (-1 if not
         * computable) of the request body (i.e. used to report upload progress).
         */this.progressCallback=null,this.successCodes=[200],this.additionalRetryCodes=[]};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Throws the UNKNOWN FirebaseStorageError if cndn is false.
 */function _F(t){if(!t)throw y5()}function _j(t,e){return function(n,r){var i=_P(t,r,e);return _F(null!==i),i}}function _U(t){return function(e,n){var r,i,o;return 401===e.getStatus()?r=// server's error response that identifies it as an App Check error.
e.getResponseText().includes("Firebase App Check token is invalid")?new y3("unauthorized-app"/* UNAUTHORIZED_APP */,"This app does not have permission to access Firebase Storage on this project."):new y3("unauthenticated"/* UNAUTHENTICATED */,"User is not authenticated, please authenticate using Firebase Authentication and try again."):402===e.getStatus()?(i=t.bucket,r=new y3("quota-exceeded"/* QUOTA_EXCEEDED */,"Quota for bucket '"+i+"' exceeded, please view quota on https://firebase.google.com/pricing/.")):403===e.getStatus()?(o=t.path,r=new y3("unauthorized"/* UNAUTHORIZED */,"User does not have permission to access '"+o+"'.")):r=n,r.serverResponse=n.serverResponse,r}}function _q(t){var e=_U(t);return function(n,r){var i,o=e(n,r);return 404===n.getStatus()&&(i=t.path,o=new y3("object-not-found"/* OBJECT_NOT_FOUND */,"Object '"+i+"' does not exist.")),o.serverResponse=r.serverResponse,o}}function _V(t,e,n){var r=_b(e.fullServerUrl(),t.host),i=t.maxOperationRetryTime,o=new _M(r,"GET",_j(t,n),i);return o.errorHandler=_q(e),o}function _B(t,e,n){var r=Object.assign({},n);return r.fullPath=t.path,r.size=e.size(),r.contentType||(r.contentType=e&&e.type()||"application/octet-stream"),r}/**
 * @param current The number of bytes that have been uploaded so far.
 * @param total The total number of bytes in the upload.
 * @param opt_finalized True if the server has finished the upload.
 * @param opt_metadata The upload metadata, should
 *     only be passed if opt_finalized is true.
 */var _K=function(t,e,n,r){this.current=t,this.total=e,this.finalized=!!n,this.metadata=r||null};function _H(t,e){var n=null;try{n=t.getResponseHeader("X-Goog-Upload-Status")}catch(t){_F(!1)}return _F(!!n&&-1!==(e||["active"]).indexOf(n)),n}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var _W=function(t,e,n){"function"==typeof t||null!=e||null!=n?(this.next=t,this.error=e,this.complete=n):(this.next=t.next,this.error=t.error,this.complete=t.complete)};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns a function that invokes f with its arguments asynchronously as a
 * microtask, i.e. as soon as possible after the current script returns back
 * into browser code.
 */// eslint-disable-next-line @typescript-eslint/ban-types
function _z(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];// eslint-disable-next-line @typescript-eslint/no-floating-promises
Promise.resolve().then(function(){return t.apply(void 0,e)})}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Represents a blob being uploaded. Can be used to pause/resume/cancel the
 * upload and manage callbacks for various events.
 * @internal
 */var _G=/** @class */function(){/**
     * @param ref - The firebaseStorage.Reference object this task came
     *     from, untyped to avoid cyclic dependencies.
     * @param blob - The blob to upload.
     */function t(t,e,n){var r=this;void 0===n&&(n=null),/**
         * Number of bytes transferred so far.
         */this._transferred=0,this._needToFetchStatus=!1,this._needToFetchMetadata=!1,this._observers=[],this._error=void 0,this._uploadUrl=void 0,this._request=void 0,this._chunkMultiplier=1,this._resolve=void 0,this._reject=void 0,this._ref=t,this._blob=e,this._metadata=n,this._mappings=_x(),this._resumable=this._shouldDoResumable(this._blob),this._state="running"/* RUNNING */,this._errorHandler=function(t){r._request=void 0,r._chunkMultiplier=1,t._codeEquals("canceled"/* CANCELED */)?(r._needToFetchStatus=!0,r.completeTransitions_()):(r._error=t,r._transition("error"/* ERROR */))},this._metadataErrorHandler=function(t){r._request=void 0,t._codeEquals("canceled"/* CANCELED */)?r.completeTransitions_():(r._error=t,r._transition("error"/* ERROR */))},this._promise=new Promise(function(t,e){r._resolve=t,r._reject=e,r._start()}),// Prevent uncaught rejections on the internal promise from bubbling out
// to the top level with a dummy handler.
this._promise.then(null,function(){})}return t.prototype._makeProgressCallback=function(){var t=this,e=this._transferred;return function(n){return t._updateProgress(e+n)}},t.prototype._shouldDoResumable=function(t){return t.size()>262144},t.prototype._start=function(){"running"/* RUNNING */===this._state&&void 0===this._request&&(this._resumable?void 0===this._uploadUrl?this._createResumable():this._needToFetchStatus?this._fetchStatus():this._needToFetchMetadata?this._fetchMetadata():this._continueUpload():this._oneShotUpload())},t.prototype._resolveToken=function(t){var e=this;// eslint-disable-next-line @typescript-eslint/no-floating-promises
Promise.all([this._ref.storage._getAuthToken(),this._ref.storage._getAppCheckToken()]).then(function(n){var r=n[0],i=n[1];switch(e._state){case"running"/* RUNNING */:t(r,i);break;case"canceling"/* CANCELING */:e._transition("canceled"/* CANCELED */);break;case"pausing"/* PAUSING */:e._transition("paused"/* PAUSED */)}})},// TODO(andysoto): assert false
t.prototype._createResumable=function(){var t=this;this._resolveToken(function(e,n){var r,i,o,a,s,u,c,h,l,f,p,d,v,g=(r=t._ref.storage,i=t._ref._location,o=t._mappings,a=t._blob,s=t._metadata,u=i.bucketOnlyServerUrl(),h={name:(c=_B(i,a,s)).fullPath},l=_b(u,r.host),f={"X-Goog-Upload-Protocol":"resumable","X-Goog-Upload-Command":"start","X-Goog-Upload-Header-Content-Length":""+a.size(),"X-Goog-Upload-Header-Content-Type":c.contentType,"Content-Type":"application/json; charset=utf-8"},p=_D(c,o),d=r.maxUploadRetryTime,(v=new _M(l,"POST",function(t){var e;_H(t);try{e=t.getResponseHeader("X-Goog-Upload-URL")}catch(t){_F(!1)}return _F(_g(e)),e},d)).urlParams=h,v.headers=f,v.body=p,v.errorHandler=_U(i),v),m=t._ref.storage._makeRequest(g,e,n);t._request=m,m.getPromise().then(function(e){t._request=void 0,t._uploadUrl=e,t._needToFetchStatus=!1,t.completeTransitions_()},t._errorHandler)})},t.prototype._fetchStatus=function(){var t=this,e=this._uploadUrl;this._resolveToken(function(n,r){var i,o,a,s,u,c=(i=t._ref.storage,o=t._ref._location,a=t._blob,s=i.maxUploadRetryTime,(u=new _M(e,"POST",function(t){var e=_H(t,["active","final"]),n=null;try{n=t.getResponseHeader("X-Goog-Upload-Size-Received")}catch(t){_F(!1)}n||_F(!1);var r=Number(n);return _F(!isNaN(r)),new _K(r,a.size(),"final"===e)},s)).headers={"X-Goog-Upload-Command":"query"},u.errorHandler=_U(o),u),h=t._ref.storage._makeRequest(c,n,r);t._request=h,h.getPromise().then(function(e){t._request=void 0,t._updateProgress(e.current),t._needToFetchStatus=!1,e.finalized&&(t._needToFetchMetadata=!0),t.completeTransitions_()},t._errorHandler)})},t.prototype._continueUpload=function(){var t=this,e=262144*this._chunkMultiplier,n=new _K(this._transferred,this._blob.size()),r=this._uploadUrl;this._resolveToken(function(i,o){try{a=/**
 * @param url From a call to fbs.requests.createResumableUpload.
 * @param chunkSize Number of bytes to upload.
 * @param status The previous status.
 *     If not passed or null, we start from the beginning.
 * @throws fbs.Error If the upload is already complete, the passed in status
 *     has a final size inconsistent with the blob, or the blob cannot be sliced
 *     for upload.
 */function(t,e,n,r,i,o,a,s){// TODO(andysoto): standardize on internal asserts
// assert(!(opt_status && opt_status.finalized));
var u=new _K(0,0);if(a?(u.current=a.current,u.total=a.total):(u.current=0,u.total=r.size()),r.size()!==u.total)throw new y3("server-file-wrong-size"/* SERVER_FILE_WRONG_SIZE */,"Server recorded incorrect upload file size, please retry the upload.");var c=u.total-u.current,h=c;i>0&&(h=Math.min(h,i));var l=u.current,f=l+h,p={"X-Goog-Upload-Command":h===c?"upload, finalize":"upload","X-Goog-Upload-Offset":""+u.current},d=r.slice(l,f);if(null===d)throw y7();var v=e.maxUploadRetryTime,g=new _M(n,"POST",function(t,n){// TODO(andysoto): Verify the MD5 of each uploaded range:
// the 'x-range-md5' header comes back with status code 308 responses.
// We'll only be able to bail out though, because you can't re-upload a
// range that you previously uploaded.
var i,a=_H(t,["active","final"]),s=u.current+h,c=r.size();return i="final"===a?_j(e,o)(t,n):null,new _K(s,c,"final"===a,i)},v);return g.headers=p,g.body=d.uploadData(),g.progressCallback=s||null,g.errorHandler=_U(t),g}(t._ref._location,t._ref.storage,r,t._blob,e,t._mappings,n,t._makeProgressCallback())}catch(e){t._error=e,t._transition("error"/* ERROR */);return}var a,s=t._ref.storage._makeRequest(a,i,o);t._request=s,s.getPromise().then(function(e){t._increaseMultiplier(),t._request=void 0,t._updateProgress(e.current),e.finalized?(t._metadata=e.metadata,t._transition("success"/* SUCCESS */)):t.completeTransitions_()},t._errorHandler)})},t.prototype._increaseMultiplier=function(){// Max chunk size is 32M.
262144*this._chunkMultiplier<33554432&&(this._chunkMultiplier*=2)},t.prototype._fetchMetadata=function(){var t=this;this._resolveToken(function(e,n){var r=_V(t._ref.storage,t._ref._location,t._mappings),i=t._ref.storage._makeRequest(r,e,n);t._request=i,i.getPromise().then(function(e){t._request=void 0,t._metadata=e,t._transition("success"/* SUCCESS */)},t._metadataErrorHandler)})},t.prototype._oneShotUpload=function(){var t=this;this._resolveToken(function(e,n){var r=/**
 * Prepare RequestInfo for uploads as Content-Type: multipart.
 */function(t,e,n,r,i){var o=e.bucketOnlyServerUrl(),a={"X-Goog-Upload-Protocol":"multipart"},s=function(){for(var t="",e=0;e<2;e++)t+=Math.random().toString().slice(2);return t}();a["Content-Type"]="multipart/related; boundary="+s;var u=_B(e,r,i),c="--"+s+"\r\nContent-Type: application/json; charset=utf-8\r\n\r\n"+_D(u,n)+"\r\n--"+s+"\r\nContent-Type: "+u.contentType+"\r\n\r\n",h=_S.getBlob(c,r,"\r\n--"+s+"--");if(null===h)throw y7();var l={name:u.fullPath},f=_b(o,t.host),p=t.maxUploadRetryTime,d=new _M(f,"POST",_j(t,n),p);return d.urlParams=l,d.headers=a,d.body=h.uploadData(),d.errorHandler=_U(e),d}(t._ref.storage,t._ref._location,t._mappings,t._blob,t._metadata),i=t._ref.storage._makeRequest(r,e,n);t._request=i,i.getPromise().then(function(e){t._request=void 0,t._metadata=e,t._updateProgress(t._blob.size()),t._transition("success"/* SUCCESS */)},t._errorHandler)})},t.prototype._updateProgress=function(t){var e=this._transferred;this._transferred=t,this._transferred!==e&&this._notifyObservers()},t.prototype._transition=function(t){if(this._state!==t)switch(t){case"canceling"/* CANCELING */:case"pausing"/* PAUSING */:// TODO(andysoto):
// assert(this.state_ === InternalTaskState.RUNNING ||
//        this.state_ === InternalTaskState.PAUSING);
this._state=t,void 0!==this._request&&this._request.cancel();break;case"running"/* RUNNING */:// TODO(andysoto):
// assert(this.state_ === InternalTaskState.PAUSED ||
//        this.state_ === InternalTaskState.PAUSING);
var e="paused"/* PAUSED */===this._state;this._state=t,e&&(this._notifyObservers(),this._start());break;case"paused"/* PAUSED */:case"error"/* ERROR */:case"success"/* SUCCESS */:// TODO(andysoto):
// assert(this.state_ === InternalTaskState.PAUSING);
this._state=t,this._notifyObservers();break;case"canceled"/* CANCELED */:// TODO(andysoto):
// assert(this.state_ === InternalTaskState.PAUSED ||
//        this.state_ === InternalTaskState.CANCELING);
this._error=y8(),this._state=t,this._notifyObservers()}},t.prototype.completeTransitions_=function(){switch(this._state){case"pausing"/* PAUSING */:this._transition("paused"/* PAUSED */);break;case"canceling"/* CANCELING */:this._transition("canceled"/* CANCELED */);break;case"running"/* RUNNING */:this._start()}},Object.defineProperty(t.prototype,"snapshot",{/**
         * A snapshot of the current task state.
         */get:function(){var t=_l(this._state);return{bytesTransferred:this._transferred,totalBytes:this._blob.size(),state:t,metadata:this._metadata,task:this,ref:this._ref}},enumerable:!1,configurable:!0}),/**
     * Adds a callback for an event.
     * @param type - The type of event to listen for.
     * @param nextOrObserver -
     *     The `next` function, which gets called for each item in
     *     the event stream, or an observer object with some or all of these three
     *     properties (`next`, `error`, `complete`).
     * @param error - A function that gets called with a `FirebaseStorageError`
     *     if the event stream ends due to an error.
     * @param completed - A function that gets called if the
     *     event stream ends normally.
     * @returns
     *     If only the event argument is passed, returns a function you can use to
     *     add callbacks (see the examples above). If more than just the event
     *     argument is passed, returns a function you can call to unregister the
     *     callbacks.
     */t.prototype.on=function(t,e,n,r){var i=this,o=new _W(e,n,r);return this._addObserver(o),function(){i._removeObserver(o)}},/**
     * This object behaves like a Promise, and resolves with its snapshot data
     * when the upload completes.
     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.
     * @param onRejected - The rejection callback.
     */t.prototype.then=function(t,e){// These casts are needed so that TypeScript can infer the types of the
// resulting Promise.
return this._promise.then(t,e)},/**
     * Equivalent to calling `then(null, onRejected)`.
     */t.prototype.catch=function(t){return this.then(null,t)},/**
     * Adds the given observer.
     */t.prototype._addObserver=function(t){this._observers.push(t),this._notifyObserver(t)},/**
     * Removes the given observer.
     */t.prototype._removeObserver=function(t){var e=this._observers.indexOf(t);-1!==e&&this._observers.splice(e,1)},t.prototype._notifyObservers=function(){var t=this;this._finishPromise(),this._observers.slice().forEach(function(e){t._notifyObserver(e)})},t.prototype._finishPromise=function(){if(void 0!==this._resolve){var t=!0;switch(_l(this._state)){case _h.SUCCESS:_z(this._resolve.bind(null,this.snapshot))();break;case _h.CANCELED:case _h.ERROR:_z(this._reject.bind(null,this._error))();break;default:t=!1}t&&(this._resolve=void 0,this._reject=void 0)}},t.prototype._notifyObserver=function(t){switch(_l(this._state)){case _h.RUNNING:case _h.PAUSED:t.next&&_z(t.next.bind(t,this.snapshot))();break;case _h.SUCCESS:t.complete&&_z(t.complete.bind(t))();break;case _h.CANCELED:case _h.ERROR:default:t.error&&_z(t.error.bind(t,this._error))()}},/**
     * Resumes a paused task. Has no effect on a currently running or failed task.
     * @returns True if the operation took effect, false if ignored.
     */t.prototype.resume=function(){var t="paused"/* PAUSED */===this._state||"pausing"/* PAUSING */===this._state;return t&&this._transition("running"/* RUNNING */),t},/**
     * Pauses a currently running task. Has no effect on a paused or failed task.
     * @returns True if the operation took effect, false if ignored.
     */t.prototype.pause=function(){var t="running"/* RUNNING */===this._state;return t&&this._transition("pausing"/* PAUSING */),t},/**
     * Cancels a currently running or paused task. Has no effect on a complete or
     * failed task.
     * @returns True if the operation took effect, false if ignored.
     */t.prototype.cancel=function(){var t="running"/* RUNNING */===this._state||"pausing"/* PAUSING */===this._state;return t&&this._transition("canceling"/* CANCELING */),t},t}(),_Q=/** @class */function(){function t(t,e){this._service=t,e instanceof _d?this._location=e:this._location=_d.makeFromUrl(e,t.host)}return(/**
     * Returns the URL for the bucket and path this object references,
     *     in the form gs://<bucket>/<object-path>
     * @override
     */t.prototype.toString=function(){return"gs://"+this._location.bucket+"/"+this._location.path},t.prototype._newRef=function(e,n){return new t(e,n)},Object.defineProperty(t.prototype,"root",{/**
         * A reference to the root of this object's bucket.
         */get:function(){var t=new _d(this._location.bucket,"");return this._newRef(this._service,t)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"bucket",{/**
         * The name of the bucket containing this reference's object.
         */get:function(){return this._location.bucket},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fullPath",{/**
         * The full path of this object.
         */get:function(){return this._location.path},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"name",{/**
         * The short name of this object, which is the last component of the full path.
         * For example, if fullPath is 'full/path/image.png', name is 'image.png'.
         */get:function(){return _k(this._location.path)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"storage",{/**
         * The `StorageService` instance this `StorageReference` is associated with.
         */get:function(){return this._service},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"parent",{/**
         * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if
         * this reference is the root.
         */get:function(){var e=/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @fileoverview Contains helper methods for manipulating paths.
 *//**
 * @return Null if the path is already at the root.
 */function(t){if(0===t.length)return null;var e=t.lastIndexOf("/");return -1===e?"":t.slice(0,e)}(this._location.path);if(null===e)return null;var n=new _d(this._location.bucket,e);return new t(this._service,n)},enumerable:!1,configurable:!0}),/**
     * Utility function to throw an error in methods that do not accept a root reference.
     */t.prototype._throwIfRoot=function(t){if(""===this._location.path)throw _e(t)},t)}();/**
 * List items (files) and prefixes (folders) under this storage reference.
 *
 * List API is only available for Firebase Rules Version 2.
 *
 * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'
 * delimited folder structure.
 * Refer to GCS's List API if you want to learn more.
 *
 * To adhere to Firebase Rules's Semantics, Firebase Storage does not
 * support objects whose paths end with "/" or contain two consecutive
 * "/"s. Firebase Storage List API will filter these unsupported objects.
 * list() may fail if there are too many unsupported objects in the bucket.
 * @public
 *
 * @param ref - StorageReference to get list from.
 * @param options - See ListOptions for details.
 * @returns A Promise that resolves with the items and prefixes.
 *      `prefixes` contains references to sub-folders and `items`
 *      contains references to objects in this folder. `nextPageToken`
 *      can be used to get the rest of the results.
 */function _$(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){switch(i.label){case 0:var o,a,s,u,c,h,l,f,p;return null!=e&&"number"==typeof e.maxResults&&__("options.maxResults",/* minValue= */1,/* maxValue= */1e3,e.maxResults),n=e||{},o=t.storage,a=t._location,s=n.pageToken,u=n.maxResults,c={},a.isRoot?c.prefix="":c.prefix=a.path+"/",c.delimiter=/*delimiter= */"/",s&&(c.pageToken=s),u&&(c.maxResults=u),h=_b(a.bucketOnlyServerUrl(),o.host),l=o.maxOperationRetryTime,(p=new _M(h,"GET",(f=a.bucket,function(t,e){var n,r=null===(n=_C(e))?null:function(t,e,n){var r={prefixes:[],items:[],nextPageToken:n.nextPageToken};if(n[_O])for(var i=0,o=n[_O];i<o.length;i++){var a=o[i].replace(/\/$/,""),s=t._makeStorageReference(new _d(e,a));r.prefixes.push(s)}if(n[_L])for(var u=0,c=n[_L];u<c.length;u++){var h=c[u],s=t._makeStorageReference(new _d(e,h.name));r.items.push(s)}return r}(o,f,n);return _F(null!==r),r}),l)).urlParams=c,p.errorHandler=_U(a),r=p,[4/*yield*/,t.storage.makeRequestWithTokens(r)];case 1:return[2/*return*/,i.sent().getPromise()]}})})}/**
 * Returns reference for object obtained by appending `childPath` to `ref`.
 *
 * @param ref - StorageReference to get child of.
 * @param childPath - Child path from provided ref.
 * @returns A reference to the object obtained by
 * appending childPath, removing any duplicate, beginning, or trailing
 * slashes.
 *
 */function _Y(t,e){var n,r,i=(n=t._location.path,r=e.split("/").filter(function(t){return t.length>0}).join("/"),0===n.length?r:n+"/"+r),o=new _d(t._location.bucket,i);return new _Q(t.storage,o)}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function _X(t){return/^[A-Za-z]+:\/\//.test(t)}function _J(t,e){var n=null==e?void 0:e[y4];return null==n?null:_d.makeFromBucketSpec(n,t)}/**
 * A service that provides Firebase Storage Reference instances.
 * @public
 * @param opt_url - gs:// url to a custom Storage Bucket
 */var _Z=/** @class */function(){function t(/**
     * FirebaseApp associated with this StorageService instance.
     */t,e,/**
     * @internal
     */n,/**
     * @internal
     */r,i,o){this.app=t,this._authProvider=e,this._appCheckProvider=n,this._pool=r,this._url=i,this._firebaseVersion=o,this._bucket=null,/**
         * This string can be in the formats:
         * - host
         * - host:port
         * - protocol://host:port
         */this._host=y2,this._appId=null,this._deleted=!1,this._maxOperationRetryTime=12e4,this._maxUploadRetryTime=6e5,this._requests=new Set,null!=i?this._bucket=_d.makeFromBucketSpec(i,this._host):this._bucket=_J(this._host,this.app.options)}return Object.defineProperty(t.prototype,"host",{get:function(){return this._host},/**
         * Set host string for this service.
         * @param host - host string in the form of host, host:port,
         * or protocol://host:port
         */set:function(t){this._host=t,null!=this._url?this._bucket=_d.makeFromBucketSpec(this._url,t):this._bucket=_J(t,this.app.options)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"maxUploadRetryTime",{/**
         * The maximum time to retry uploads in milliseconds.
         */get:function(){return this._maxUploadRetryTime},set:function(t){__("time",/* minValue=*/0,/* maxValue= */Number.POSITIVE_INFINITY,t),this._maxUploadRetryTime=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"maxOperationRetryTime",{/**
         * The maximum time to retry operations other than uploads or downloads in
         * milliseconds.
         */get:function(){return this._maxOperationRetryTime},set:function(t){__("time",/* minValue=*/0,/* maxValue= */Number.POSITIVE_INFINITY,t),this._maxOperationRetryTime=t},enumerable:!1,configurable:!0}),t.prototype._getAuthToken=function(){return H(this,void 0,void 0,function(){var t,e;return W(this,function(n){switch(n.label){case 0:if(this._overrideAuthToken)return[2/*return*/,this._overrideAuthToken];if(!(t=this._authProvider.getImmediate({optional:!0})))return[3/*break*/,2];return[4/*yield*/,t.getToken()];case 1:if(null!==(e=n.sent()))return[2/*return*/,e.accessToken];n.label=2;case 2:return[2/*return*/,null]}})})},t.prototype._getAppCheckToken=function(){return H(this,void 0,void 0,function(){var t;return W(this,function(e){switch(e.label){case 0:if(!(t=this._appCheckProvider.getImmediate({optional:!0})))return[3/*break*/,2];return[4/*yield*/,t.getToken()];case 1:// TODO: What do we want to do if there is an error getting the token?
// Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be
// returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use
// the token (actual or dummy) to send requests.
return[2/*return*/,e.sent().token];case 2:return[2/*return*/,null]}})})},/**
     * Stop running requests and prevent more from being created.
     */t.prototype._delete=function(){return this._deleted||(this._deleted=!0,this._requests.forEach(function(t){return t.cancel()}),this._requests.clear()),Promise.resolve()},/**
     * Returns a new firebaseStorage.Reference object referencing this StorageService
     * at the given Location.
     */t.prototype._makeStorageReference=function(t){return new _Q(this,t)},/**
     * @param requestInfo - HTTP RequestInfo object
     * @param authToken - Firebase auth token
     */t.prototype._makeRequest=function(t,e,n){var r,i,o,a,s,u,c,h=this;if(this._deleted)return new _v(_t());var l=(r=this._appId,i=this._pool,o=this._firebaseVersion,a=_w(t.urlParams),s=t.url+a,c=u=Object.assign({},t.headers),r&&(c["X-Firebase-GMPID"]=r),null!==e&&e.length>0&&(u.Authorization="Firebase "+e),u["X-Firebase-Storage-Version"]="webjs/"+(null!=o?o:"AppManager"),null!==n&&(u["X-Firebase-AppCheck"]=n),new _I(s,t.method,u,t.body,t.successCodes,t.additionalRetryCodes,t.handler,t.errorHandler,t.timeout,t.progressCallback,i));return this._requests.add(l),// Request removes itself from set when complete.
l.getPromise().then(function(){return h._requests.delete(l)},function(){return h._requests.delete(l)}),l},t.prototype.makeRequestWithTokens=function(t){return H(this,void 0,void 0,function(){var e,n,r;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,Promise.all([this._getAuthToken(),this._getAppCheckToken()])];case 1:return n=(e=i.sent())[0],r=e[1],[2/*return*/,this._makeRequest(t,n,r)]}})})},t}();function _0(t,e){return function(t,e){if(!(e&&_X(e)))return(/**
 * Returns a firebaseStorage.Reference for the given path in the default
 * bucket.
 */function t(e,n){if(e instanceof _Z){if(null==e._bucket)throw new y3("no-default-bucket"/* NO_DEFAULT_BUCKET */,"No default bucket found. Did you set the '"+y4+"' property when initializing the app?");var r=new _Q(e,e._bucket);return null!=n?t(r,n):r}return(// ref is a Reference
void 0!==n?_Y(e,n):e)}(t,e));if(t instanceof _Z)return new _Q(t,e);throw y9("To use ref(service, url), the first argument must be a Storage instance.")}(t=tq(t),e)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var _1=/** @class */function(){function t(t,e,n){this._delegate=t,this.task=e,this.ref=n}return Object.defineProperty(t.prototype,"bytesTransferred",{get:function(){return this._delegate.bytesTransferred},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"metadata",{get:function(){return this._delegate.metadata},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"state",{get:function(){return this._delegate.state},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"totalBytes",{get:function(){return this._delegate.totalBytes},enumerable:!1,configurable:!0}),t}(),_2=/** @class */function(){function t(t,e){this._delegate=t,this._ref=e,this.cancel=this._delegate.cancel.bind(this._delegate),this.catch=this._delegate.catch.bind(this._delegate),this.pause=this._delegate.pause.bind(this._delegate),this.resume=this._delegate.resume.bind(this._delegate)}return Object.defineProperty(t.prototype,"snapshot",{get:function(){return new _1(this._delegate.snapshot,this,this._ref)},enumerable:!1,configurable:!0}),t.prototype.then=function(t,e){var n=this;return this._delegate.then(function(e){if(t)return t(new _1(e,n,n._ref))},e)},t.prototype.on=function(t,e,n,r){var i=this,o=void 0;return e&&(o="function"==typeof e?function(t){return e(new _1(t,i,i._ref))}:{next:e.next?function(t){return e.next(new _1(t,i,i._ref))}:void 0,complete:e.complete||void 0,error:e.error||void 0}),this._delegate.on(t,o,n||void 0,r||void 0)},t}(),_4=/** @class */function(){function t(t,e){this._delegate=t,this._service=e}return Object.defineProperty(t.prototype,"prefixes",{get:function(){var t=this;return this._delegate.prefixes.map(function(e){return new _3(e,t._service)})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"items",{get:function(){var t=this;return this._delegate.items.map(function(e){return new _3(e,t._service)})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"nextPageToken",{get:function(){return this._delegate.nextPageToken||null},enumerable:!1,configurable:!0}),t}(),_3=/** @class */function(){function t(t,e){this._delegate=t,this.storage=e}return Object.defineProperty(t.prototype,"name",{get:function(){return this._delegate.name},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"bucket",{get:function(){return this._delegate.bucket},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"fullPath",{get:function(){return this._delegate.fullPath},enumerable:!1,configurable:!0}),t.prototype.toString=function(){return this._delegate.toString()},/**
     * @returns A reference to the object obtained by
     * appending childPath, removing any duplicate, beginning, or trailing
     * slashes.
     */t.prototype.child=function(e){var n=_Y(this._delegate,e);return new t(n,this.storage)},Object.defineProperty(t.prototype,"root",{get:function(){return new t(this._delegate.root,this.storage)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"parent",{/**
         * @returns A reference to the parent of the
         * current object, or null if the current object is the root.
         */get:function(){var e=this._delegate.parent;return null==e?null:new t(e,this.storage)},enumerable:!1,configurable:!0}),/**
     * Uploads a blob to this object's location.
     * @param data - The blob to upload.
     * @returns An UploadTask that lets you control and
     * observe the upload.
     */t.prototype.put=function(t,e){var n,r;return this._throwIfRoot("put"),new _2(((r=tq(this._delegate))._throwIfRoot("uploadBytesResumable"),new _G(r,new _S(t),e)),this)},/**
     * Uploads a string to this object's location.
     * @param value - The string to upload.
     * @param format - The format of the string to upload.
     * @returns An UploadTask that lets you control and
     * observe the upload.
     */t.prototype.putString=function(t,e,n){void 0===e&&(e=_i.RAW),this._throwIfRoot("putString");var r=_a(e,t),i=K({},n);return null==i.contentType&&null!=r.contentType&&(i.contentType=r.contentType),new _2(new _G(this._delegate,new _S(r.data,!0),i),this)},/**
     * List all items (files) and prefixes (folders) under this storage reference.
     *
     * This is a helper method for calling list() repeatedly until there are
     * no more results. The default pagination size is 1000.
     *
     * Note: The results may not be consistent if objects are changed while this
     * operation is running.
     *
     * Warning: listAll may potentially consume too many resources if there are
     * too many results.
     *
     * @returns A Promise that resolves with all the items and prefixes under
     *  the current storage reference. `prefixes` contains references to
     *  sub-directories and `items` contains references to objects in this
     *  folder. `nextPageToken` is never returned.
     */t.prototype.listAll=function(){var t,e,n=this;return(/**
 * Separated from listAll because async functions can't use "arguments".
 * @param ref
 * @param accumulator
 * @param pageToken
 */(function t(e,n,r){return H(this,void 0,void 0,function(){var i,o,a;return W(this,function(s){switch(s.label){case 0:return[4/*yield*/,_$(e,{// maxResults is 1000 by default.
pageToken:r})];case 1:if(i=s.sent(),(o=n.prefixes).push.apply(o,i.prefixes),(a=n.items).push.apply(a,i.items),!(null!=i.nextPageToken))return[3/*break*/,3];return[4/*yield*/,t(e,n,i.nextPageToken)];case 2:s.sent(),s.label=3;case 3:return[2/*return*/]}})})})(tq(this._delegate),e={prefixes:[],items:[]}).then(function(){return e}).then(function(t){return new _4(t,n.storage)}))},/**
     * List items (files) and prefixes (folders) under this storage reference.
     *
     * List API is only available for Firebase Rules Version 2.
     *
     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'
     * delimited folder structure. Refer to GCS's List API if you want to learn more.
     *
     * To adhere to Firebase Rules's Semantics, Firebase Storage does not
     * support objects whose paths end with "/" or contain two consecutive
     * "/"s. Firebase Storage List API will filter these unsupported objects.
     * list() may fail if there are too many unsupported objects in the bucket.
     *
     * @param options - See ListOptions for details.
     * @returns A Promise that resolves with the items and prefixes.
     * `prefixes` contains references to sub-folders and `items`
     * contains references to objects in this folder. `nextPageToken`
     * can be used to get the rest of the results.
     */t.prototype.list=function(t){var e,n,r=this;return(e=this._delegate,n=t||void 0,_$(e=tq(e),n)).then(function(t){return new _4(t,r.storage)})},/**
     * A `Promise` that resolves with the metadata for this object. If this
     * object doesn't exist or metadata cannot be retreived, the promise is
     * rejected.
     */t.prototype.getMetadata=function(){return(/**
 * A `Promise` that resolves with the metadata for this object. If this
 * object doesn't exist or metadata cannot be retreived, the promise is
 * rejected.
 * @public
 * @param ref - StorageReference to get metadata from.
 */function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return t._throwIfRoot("getMetadata"),e=_V(t.storage,t._location,_x()),[4/*yield*/,t.storage.makeRequestWithTokens(e)];case 1:return[2/*return*/,n.sent().getPromise()]}})})}(tq(this._delegate)))},/**
     * Updates the metadata for this object.
     * @param metadata - The new metadata for the object.
     * Only values that have been explicitly set will be changed. Explicitly
     * setting a value to null will remove the metadata.
     * @returns A `Promise` that resolves
     * with the new metadata for this object.
     * @see firebaseStorage.Reference.prototype.getMetadata
     */t.prototype.updateMetadata=function(t){var e;return(/**
 * Updates the metadata for this object.
 * @public
 * @param ref - StorageReference to update metadata for.
 * @param metadata - The new metadata for the object.
 *     Only values that have been explicitly set will be changed. Explicitly
 *     setting a value to null will remove the metadata.
 * @returns A `Promise` that resolves
 *     with the new metadata for this object.
 *     See `firebaseStorage.Reference.prototype.getMetadata`
 */function(t,e){return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:var i,o,a,s,u,c,h;return t._throwIfRoot("updateMetadata"),i=t.storage,o=t._location,a=_x(),s=_b(o.fullServerUrl(),i.host),u=_D(e,a),c=i.maxOperationRetryTime,(h=new _M(s,"PATCH",_j(i,a),c)).headers={"Content-Type":"application/json; charset=utf-8"},h.body=u,h.errorHandler=_q(o),n=h,[4/*yield*/,t.storage.makeRequestWithTokens(n)];case 1:return[2/*return*/,r.sent().getPromise()]}})})}(tq(this._delegate),t))},/**
     * @returns A `Promise` that resolves with the download
     * URL for this object.
     */t.prototype.getDownloadURL=function(){return(/**
 * Returns the download URL for the given Reference.
 * @public
 * @returns A `Promise` that resolves with the download
 *     URL for this object.
 */function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:var r,i,o,a,s,u;return t._throwIfRoot("getDownloadURL"),r=t.storage,i=t._location,o=_x(),a=_b(i.fullServerUrl(),r.host),s=r.maxOperationRetryTime,(u=new _M(a,"GET",function(t,e){var n=_P(r,e,o);return _F(null!==n),function(t,e,n){var r=_C(e);if(null===r||!_g(r.downloadTokens))return null;var i=r.downloadTokens;if(0===i.length)return null;var o=encodeURIComponent;return i.split(",").map(function(e){var r=t.bucket,i=t.fullPath;return _b("/b/"+o(r)+"/o/"+o(i),n)+_w({alt:"media",token:e})})[0]}(n,e,r.host)},s)).errorHandler=_q(i),e=u,[4/*yield*/,t.storage.makeRequestWithTokens(e)];case 1:return[2/*return*/,n.sent().getPromise().then(function(t){if(null===t)throw new y3("no-download-url"/* NO_DOWNLOAD_URL */,"The given file does not have any download URLs.");return t})]}})})}(tq(this._delegate)))},/**
     * Deletes the object at this location.
     * @returns A `Promise` that resolves if the deletion succeeds.
     */t.prototype.delete=function(){return this._throwIfRoot("delete"),/**
 * Deletes the object at this location.
 * @public
 * @param ref - StorageReference for object to delete.
 * @returns A `Promise` that resolves if the deletion succeeds.
 */function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:var r,i,o,a,s;return t._throwIfRoot("deleteObject"),r=t.storage,o=_b((i=t._location).fullServerUrl(),r.host),a=r.maxOperationRetryTime,(s=new _M(o,"DELETE",function(t,e){},a)).successCodes=[200,204],s.errorHandler=_q(i),e=s,[4/*yield*/,t.storage.makeRequestWithTokens(e)];case 1:return[2/*return*/,n.sent().getPromise()]}})})}(tq(this._delegate))},t.prototype._throwIfRoot=function(t){if(""===this._delegate._location.path)throw _e(t)},t}(),_6=/** @class */function(){function t(t,e){this.app=t,this._delegate=e}return Object.defineProperty(t.prototype,"maxOperationRetryTime",{get:function(){return this._delegate.maxOperationRetryTime},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"maxUploadRetryTime",{get:function(){return this._delegate.maxUploadRetryTime},enumerable:!1,configurable:!0}),/**
     * Returns a firebaseStorage.Reference for the given path in the default
     * bucket.
     */t.prototype.ref=function(t){if(_X(t))throw y9("ref() expected a child path but got a URL, use refFromURL instead.");return new _3(_0(this._delegate,t),this)},/**
     * Returns a firebaseStorage.Reference object for the given absolute URL,
     * which must be a gs:// or http[s]:// URL.
     */t.prototype.refFromURL=function(t){if(!_X(t))throw y9("refFromURL() expected a full URL but got a child path, use ref() instead.");try{_d.makeFromUrl(t,this._delegate.host)}catch(t){throw y9("refFromUrl() expected a valid full URL but got an invalid one.")}return new _3(_0(this._delegate,t),this)},t.prototype.setMaxUploadRetryTime=function(t){this._delegate.maxUploadRetryTime=t},t.prototype.setMaxOperationRetryTime=function(t){this._delegate.maxOperationRetryTime=t},t.prototype.useEmulator=function(t,e,n){var r,i,o,a;void 0===n&&(n={}),r=this._delegate,void 0===(i=n)&&(i={}),void 0===(o=i)&&(o={}),r.host="http://"+t+":"+e,(a=o.mockUserToken)&&(r._overrideAuthToken="string"==typeof a?a:ta(a,r.app.options.projectId))},t}();ee.INTERNAL.registerComponent(new tV("storage",function(t,e){var n=e.instanceIdentifier,r=t.getProvider("app").getImmediate(),i=t.getProvider("auth-internal"),o=t.getProvider("app-check-internal");return new _6(r,new _Z(r,i,o,new _p,n,ee.SDK_VERSION))},"PUBLIC"/* PUBLIC */).setServiceProps({// no-inline
TaskState:_h,TaskEvent:{/**
     * For this event,
     * <ul>
     *   <li>The `next` function is triggered on progress updates and when the
     *       task is paused/resumed with an `UploadTaskSnapshot` as the first
     *       argument.</li>
     *   <li>The `error` function is triggered if the upload is canceled or fails
     *       for another reason.</li>
     *   <li>The `complete` function is triggered if the upload completes
     *       successfully.</li>
     * </ul>
     */STATE_CHANGED:"state_changed"},StringFormat:_i,Storage:_Z,Reference:_3}).setMultipleInstances(!0)),ee.registerVersion("@firebase/storage","0.7.1");var _5="0.4.18",_8="FB-PERF-TRACE-MEASURE",_7="_wt_",_9="_fcp",bt="_fid",be="@firebase/performance/config",bn="@firebase/performance/configexpire",br="Performance",bi=((_={})["trace started"/* TRACE_STARTED_BEFORE */]="Trace {$traceName} was started before.",_["trace stopped"/* TRACE_STOPPED_BEFORE */]="Trace {$traceName} is not running.",_["nonpositive trace startTime"/* NONPOSITIVE_TRACE_START_TIME */]="Trace {$traceName} startTime should be positive.",_["nonpositive trace duration"/* NONPOSITIVE_TRACE_DURATION */]="Trace {$traceName} duration should be positive.",_["no window"/* NO_WINDOW */]="Window is not available.",_["no app id"/* NO_APP_ID */]="App id is not available.",_["no project id"/* NO_PROJECT_ID */]="Project id is not available.",_["no api key"/* NO_API_KEY */]="Api key is not available.",_["invalid cc log"/* INVALID_CC_LOG */]="Attempted to queue invalid cc event",_["FB not default"/* FB_NOT_DEFAULT */]="Performance can only start when Firebase app instance is the default one.",_["RC response not ok"/* RC_NOT_OK */]="RC response is not ok",_["invalid attribute name"/* INVALID_ATTRIBUTE_NAME */]="Attribute name {$attributeName} is invalid.",_["invalid attribute value"/* INVALID_ATTRIBUTE_VALUE */]="Attribute value {$attributeValue} is invalid.",_["invalid custom metric name"/* INVALID_CUSTOM_METRIC_NAME */]="Custom metric name {$customMetricName} is invalid",_["invalid String merger input"/* INVALID_STRING_MERGER_PARAMETER */]="Input for String merger is invalid, contact support team to resolve.",_),bo=new tm("performance",br,bi),ba=new tX(br);ba.logLevel=ad.INFO;/**
 * This class holds a reference to various browser related objects injected by
 * set methods.
 */var bs=/** @class */function(){function t(t){if(this.window=t,!t)throw bo.create("no window"/* NO_WINDOW */);this.performance=t.performance,this.PerformanceObserver=t.PerformanceObserver,this.windowLocation=t.location,this.navigator=t.navigator,this.document=t.document,this.navigator&&this.navigator.cookieEnabled&&// throw an exception.
(this.localStorage=t.localStorage),t.perfMetrics&&t.perfMetrics.onFirstInputDelay&&(this.onFirstInputDelay=t.perfMetrics.onFirstInputDelay)}return t.prototype.getUrl=function(){// Do not capture the string query part of url.
return this.windowLocation.href.split("?")[0]},t.prototype.mark=function(t){this.performance&&this.performance.mark&&this.performance.mark(t)},t.prototype.measure=function(t,e,n){this.performance&&this.performance.measure&&this.performance.measure(t,e,n)},t.prototype.getEntriesByType=function(t){return this.performance&&this.performance.getEntriesByType?this.performance.getEntriesByType(t):[]},t.prototype.getEntriesByName=function(t){return this.performance&&this.performance.getEntriesByName?this.performance.getEntriesByName(t):[]},t.prototype.getTimeOrigin=function(){// Polyfill the time origin with performance.timing.navigationStart.
return this.performance&&(this.performance.timeOrigin||this.performance.timing.navigationStart)},t.prototype.requiredApisAvailable=function(){return fetch&&Promise&&this.navigator&&this.navigator.cookieEnabled?!!tp()||(ba.info("IndexedDB is not supported by current browswer"),!1):(ba.info("Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled."),!1)},t.prototype.setupObserver=function(t,e){this.PerformanceObserver&&// Start observing the entry types you care about.
new this.PerformanceObserver(function(t){for(var n=0,r=t.getEntries();n<r.length;n++)// `entry` is a PerformanceEntry instance.
e(r[n])}).observe({entryTypes:[t]})},t.getInstance=function(){return void 0===b&&(b=new t(w)),b},t}();/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function bu(t,e){var n=t.length-e.length;if(n<0||n>1)throw bo.create("invalid String merger input"/* INVALID_STRING_MERGER_PARAMETER */);for(var r=[],i=0;i<t.length;i++)r.push(t.charAt(i)),e.length>i&&r.push(e.charAt(i));return r.join("")}var bc=/** @class */function(){function t(){// The variable which controls logging of automatic traces and HTTP/S network monitoring.
this.instrumentationEnabled=!0,// The variable which controls logging of custom traces.
this.dataCollectionEnabled=!0,// Configuration flags set through remote config.
this.loggingEnabled=!1,// Sampling rate between 0 and 1.
this.tracesSamplingRate=1,this.networkRequestsSamplingRate=1,// Address of logging service.
this.logEndPointUrl="https://firebaselogging.googleapis.com/v0cc/log?format=json_proto",// Performance event transport endpoint URL which should be compatible with proto3.
// New Address for transport service, not configurable via Remote Config.
this.flTransportEndpointUrl=bu("hts/frbslgigp.ogepscmv/ieo/eaylg","tp:/ieaeogn-agolai.o/1frlglgc/o"),this.transportKey=bu("AzSC8r6ReiGqFMyfvgow","Iayx0u-XT3vksVM-pIV"),// Source type for performance event logs.
this.logSource=462,// Flags which control per session logging of traces and network requests.
this.logTraceAfterSampling=!1,this.logNetworkAfterSampling=!1,// TTL of config retrieved from remote config in hours.
this.configTimeToLive=12}return t.prototype.getAppId=function(){var t=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.appId;if(!t)throw bo.create("no app id"/* NO_APP_ID */);return t},t.prototype.getProjectId=function(){var t=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.projectId;if(!t)throw bo.create("no project id"/* NO_PROJECT_ID */);return t},t.prototype.getApiKey=function(){var t=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.apiKey;if(!t)throw bo.create("no api key"/* NO_API_KEY */);return t},t.prototype.getFlTransportFullUrl=function(){return this.flTransportEndpointUrl.concat("?key=",this.transportKey)},t.getInstance=function(){return void 0===I&&(I=new t),I},t}();(c=E||(E={}))[c.UNKNOWN=0]="UNKNOWN",c[c.VISIBLE=1]="VISIBLE",c[c.HIDDEN=2]="HIDDEN";var bh=["firebase_","google_","ga_"],bl=RegExp("^[a-zA-Z]\\w*$");function bf(){switch(bs.getInstance().document.visibilityState){case"visible":return E.VISIBLE;case"hidden":return E.HIDDEN;default:return E.UNKNOWN}}// These values will be used if the remote config object is successfully
// retrieved, but the template does not have these fields.
var bp={loggingEnabled:!0};/**
 * Processes config coming either from calling RC or from local storage.
 * This method only runs if call is successful or config in storage
 * is valid.
 */function bd(t){if(!t)return t;var e=bc.getInstance(),n=t.entries||{};return void 0!==n.fpr_enabled?// known.
e.loggingEnabled="true"===String(n.fpr_enabled):// Use secondary configs value.
e.loggingEnabled=bp.loggingEnabled,n.fpr_log_source&&(e.logSource=Number(n.fpr_log_source)),n.fpr_log_endpoint_url&&(e.logEndPointUrl=n.fpr_log_endpoint_url),n.fpr_log_transport_key&&(e.transportKey=n.fpr_log_transport_key),void 0!==n.fpr_vc_network_request_sampling_rate&&(e.networkRequestsSamplingRate=Number(n.fpr_vc_network_request_sampling_rate)),void 0!==n.fpr_vc_trace_sampling_rate&&(e.tracesSamplingRate=Number(n.fpr_vc_trace_sampling_rate)),// Set the per session trace and network logging flags.
e.logTraceAfterSampling=bv(e.tracesSamplingRate),e.logNetworkAfterSampling=bv(e.networkRequestsSamplingRate),t}function bv(t){return Math.random()<=t}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var bg=1/* notInitialized */;function bm(){var t;return bg=2/* initializationPending */,S=S||(t=bs.getInstance().document,new Promise(function(e){if(t&&"complete"!==t.readyState){var n=function(){"complete"===t.readyState&&(t.removeEventListener("readystatechange",n),e())};t.addEventListener("readystatechange",n)}else e()})).then(function(){var t;return(// eslint-disable-next-line @typescript-eslint/no-floating-promises
(t=bc.getInstance().installationsService.getId()).then(function(t){T=t}),t)}).then(function(t){var e,n;return(e=function(){var t=bs.getInstance().localStorage;if(t){var e=t.getItem(bn);if(e&&Number(e)>Date.now()){var n=t.getItem(be);if(n)try{return JSON.parse(n)}catch(t){return}}}}())?(bd(e),Promise.resolve()):(// eslint-disable-next-line @typescript-eslint/no-floating-promises
(n=bc.getInstance().installationsService.getToken()).then(function(t){}),n).then(function(e){var n="https://firebaseremoteconfig.googleapis.com/v1/projects/"+bc.getInstance().getProjectId()+"/namespaces/fireperf:fetch?key="+bc.getInstance().getApiKey(),r=new Request(n,{method:"POST",headers:{Authorization:"FIREBASE_INSTALLATIONS_AUTH "+e},/* eslint-disable camelcase */body:JSON.stringify({app_instance_id:t,app_instance_id_token:e,app_id:bc.getInstance().getAppId(),app_version:_5,sdk_version:"0.0.1"})});return fetch(r).then(function(t){if(t.ok)return t.json();// In case response is not ok. This will be caught by catch.
throw bo.create("RC response not ok"/* RC_NOT_OK */)})}).catch(function(){ba.info("Could not fetch config, will use default configs")}).then(bd).then(function(t){var e;return e=bs.getInstance().localStorage,void(t&&e&&(e.setItem(be,JSON.stringify(t)),e.setItem(bn,String(Date.now()+36e5*bc.getInstance().configTimeToLive))))},/** Do nothing for error, use defaults set in settings service. */function(){})}).then(function(){bg=3/* initialized */},function(){bg=3})}var by=3,b_=[],bb=!1;// This method is not called before initialization.
function bw(t,e){!C&&(C=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];!function(t){if(!t.eventTime||!t.message)throw bo.create("invalid cc log"/* INVALID_CC_LOG */);// Add the new event to the queue.
b_=Q(Q([],b_),[t])}({message:bE.apply(void 0,t),eventTime:Date.now()})}),C(t,e)}function bI(t){var e=bc.getInstance();// Do not log if trace is auto generated and instrumentation is disabled.
(e.instrumentationEnabled||!t.isAuto)&&(e.dataCollectionEnabled||t.isAuto)&&bs.getInstance().requiredApisAvailable()&&(t.isAuto&&bf()!==E.VISIBLE||(3/* initialized */===bg?bT(t):// should wait until after.
bm().then(function(){return bT(t)},function(){return bT(t)})))}function bT(t){if(T){var e=bc.getInstance();e.loggingEnabled&&e.logTraceAfterSampling&&setTimeout(function(){return bw(t,1/* Trace */)},0)}}function bE(t,e){var n,r,i;return 0/* NetworkRequest */===e?(n={url:t.url,http_method:t.httpMethod||0,http_response_code:200,response_payload_bytes:t.responsePayloadBytes,client_start_time_us:t.startTimeUs,time_to_response_initiated_us:t.timeToResponseInitiatedUs,time_to_response_completed_us:t.timeToResponseCompletedUs},JSON.stringify({application_info:bS(),network_request_metric:n})):(r={name:t.name,is_auto:t.isAuto,client_start_time_us:t.startTimeUs,duration_us:t.durationUs},0!==Object.keys(t.counters).length&&(r.counters=t.counters),0!==Object.keys(i=t.getAttributes()).length&&(r.custom_attributes=i),JSON.stringify({application_info:bS(),trace_metric:r}))}function bS(){var t;return{google_app_id:bc.getInstance().getAppId(),app_instance_id:T,web_app_info:{sdk_version:_5,page_url:bs.getInstance().getUrl(),service_worker_status:"serviceWorker"in(t=bs.getInstance().navigator)?t.serviceWorker.controller?2/* CONTROLLED */:3/* UNCONTROLLED */:1/* UNSUPPORTED */,visibility_state:bf(),effective_connection_type:function(){var t=bs.getInstance().navigator.connection;switch(t&&t.effectiveType){case"slow-2g":return 1/* CONNECTION_SLOW_2G */;case"2g":return 2/* CONNECTION_2G */;case"3g":return 3/* CONNECTION_3G */;case"4g":return 4/* CONNECTION_4G */;default:return 0/* UNKNOWN */}}()},application_process_state:0}}var bC=["_fp",_9,bt],bk=/** @class */function(){/**
     * @param name The name of the trace.
     * @param isAuto If the trace is auto-instrumented.
     * @param traceMeasureName The name of the measure marker in user timing specification. This field
     * is only set when the trace is built for logging when the user directly uses the user timing
     * api (performance.mark and performance.measure).
     */function t(t,e,n){void 0===e&&(e=!1),this.name=t,this.isAuto=e,this.state=1/* UNINITIALIZED */,this.customAttributes={},this.counters={},this.api=bs.getInstance(),this.randomId=Math.floor(1e6*Math.random()),!this.isAuto&&(this.traceStartMark="FB-PERF-TRACE-START-"+this.randomId+"-"+this.name,this.traceStopMark="FB-PERF-TRACE-STOP-"+this.randomId+"-"+this.name,this.traceMeasure=n||_8+"-"+this.randomId+"-"+this.name,n&&// is already available.
this.calculateTraceMetrics())}return(/**
     * Starts a trace. The measurement of the duration starts at this point.
     */t.prototype.start=function(){if(1/* UNINITIALIZED */!==this.state)throw bo.create("trace started"/* TRACE_STARTED_BEFORE */,{traceName:this.name});this.api.mark(this.traceStartMark),this.state=2/* RUNNING */},/**
     * Stops the trace. The measurement of the duration of the trace stops at this point and trace
     * is logged.
     */t.prototype.stop=function(){if(2/* RUNNING */!==this.state)throw bo.create("trace stopped"/* TRACE_STOPPED_BEFORE */,{traceName:this.name});this.state=3/* TERMINATED */,this.api.mark(this.traceStopMark),this.api.measure(this.traceMeasure,this.traceStartMark,this.traceStopMark),this.calculateTraceMetrics(),bI(this)},/**
     * Records a trace with predetermined values. If this method is used a trace is created and logged
     * directly. No need to use start and stop methods.
     * @param startTime Trace start time since epoch in millisec
     * @param duration The duraction of the trace in millisec
     * @param options An object which can optionally hold maps of custom metrics and custom attributes
     */t.prototype.record=function(t,e,n){if(t<=0)throw bo.create("nonpositive trace startTime"/* NONPOSITIVE_TRACE_START_TIME */,{traceName:this.name});if(e<=0)throw bo.create("nonpositive trace duration"/* NONPOSITIVE_TRACE_DURATION */,{traceName:this.name});if(this.durationUs=Math.floor(1e3*e),this.startTimeUs=Math.floor(1e3*t),n&&n.attributes&&(this.customAttributes=K({},n.attributes)),n&&n.metrics)for(var r=0,i=Object.keys(n.metrics);r<i.length;r++){var o=i[r];isNaN(Number(n.metrics[o]))||(this.counters[o]=Number(Math.floor(n.metrics[o])))}bI(this)},/**
     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new
     * custom metric if one with the given name does not exist. The value will be floored down to an
     * integer.
     * @param counter Name of the custom metric
     * @param numAsInteger Increment by value
     */t.prototype.incrementMetric=function(t,e){void 0===e&&(e=1),void 0===this.counters[t]?this.putMetric(t,e):this.putMetric(t,this.counters[t]+e)},/**
     * Sets a custom metric to a specified value. Will create a new custom metric if one with the
     * given name does not exist. The value will be floored down to an integer.
     * @param counter Name of the custom metric
     * @param numAsInteger Set custom metric to this value
     */t.prototype.putMetric=function(t,e){var n,r;if(n=this.name,0!==t.length&&!(t.length>100)&&(n&&n.startsWith(_7)&&bC.indexOf(t)>-1||!t.startsWith("_")))this.counters[t]=((r=Math.floor(e))<e&&ba.info("Metric value should be an Integer, setting the value as : "+r+"."),r);else throw bo.create("invalid custom metric name"/* INVALID_CUSTOM_METRIC_NAME */,{customMetricName:t})},/**
     * Returns the value of the custom metric by that name. If a custom metric with that name does
     * not exist will return zero.
     * @param counter
     */t.prototype.getMetric=function(t){return this.counters[t]||0},/**
     * Sets a custom attribute of a trace to a certain value.
     * @param attr
     * @param value
     */t.prototype.putAttribute=function(t,e){var n=0!==t.length&&!(t.length>40)&&!bh.some(function(e){return t.startsWith(e)})&&!!t.match(bl),r=0!==e.length&&e.length<=100;if(n&&r){this.customAttributes[t]=e;return}// Throw appropriate error when the attribute name or value is invalid.
if(!n)throw bo.create("invalid attribute name"/* INVALID_ATTRIBUTE_NAME */,{attributeName:t});if(!r)throw bo.create("invalid attribute value"/* INVALID_ATTRIBUTE_VALUE */,{attributeValue:e})},/**
     * Retrieves the value a custom attribute of a trace is set to.
     * @param attr
     */t.prototype.getAttribute=function(t){return this.customAttributes[t]},t.prototype.removeAttribute=function(t){void 0!==this.customAttributes[t]&&delete this.customAttributes[t]},t.prototype.getAttributes=function(){return K({},this.customAttributes)},t.prototype.setStartTime=function(t){this.startTimeUs=t},t.prototype.setDuration=function(t){this.durationUs=t},/**
     * Calculates and assigns the duration and start time of the trace using the measure performance
     * entry.
     */t.prototype.calculateTraceMetrics=function(){var t=this.api.getEntriesByName(this.traceMeasure),e=t&&t[0];e&&(this.durationUs=Math.floor(1e3*e.duration),this.startTimeUs=Math.floor((e.startTime+this.api.getTimeOrigin())*1e3))},/**
     * @param navigationTimings A single element array which contains the navigationTIming object of
     * the page load
     * @param paintTimings A array which contains paintTiming object of the page load
     * @param firstInputDelay First input delay in millisec
     */t.createOobTrace=function(e,n,r){var i=bs.getInstance().getUrl();if(i){var o=new t(_7+i,!0),a=Math.floor(1e3*bs.getInstance().getTimeOrigin());if(o.setStartTime(a),e&&e[0]&&(o.setDuration(Math.floor(1e3*e[0].duration)),o.putMetric("domInteractive",Math.floor(1e3*e[0].domInteractive)),o.putMetric("domContentLoadedEventEnd",Math.floor(1e3*e[0].domContentLoadedEventEnd)),o.putMetric("loadEventEnd",Math.floor(1e3*e[0].loadEventEnd))),n){var s=n.find(function(t){return"first-paint"===t.name});s&&s.startTime&&o.putMetric("_fp",Math.floor(1e3*s.startTime));var u=n.find(function(t){return"first-contentful-paint"===t.name});u&&u.startTime&&o.putMetric(_9,Math.floor(1e3*u.startTime)),r&&o.putMetric(bt,Math.floor(1e3*r))}bI(o)}},t.createUserTimingTrace=function(e){bI(new t(e,!1,e))},t)}();/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function bN(t){if(t&&void 0!==t.responseStart){var e=bs.getInstance().getTimeOrigin(),n=Math.floor((t.startTime+e)*1e3),r=t.responseStart?Math.floor((t.responseStart-t.startTime)*1e3):void 0,i=Math.floor((t.responseEnd-t.startTime)*1e3);!function(t){var e=bc.getInstance();// Do not log network requests if instrumentation is disabled.
if(e.instrumentationEnabled){// Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.
// Need to blacklist both old and new endpoints to avoid migration gap.
var n=t.url,r=e.logEndPointUrl.split("?")[0],i=e.flTransportEndpointUrl.split("?")[0];n!==r&&n!==i&&e.loggingEnabled&&e.logNetworkAfterSampling&&setTimeout(function(){return bw(t,0/* NetworkRequest */)},0)}}({url:t.name&&t.name.split("?")[0],responsePayloadBytes:t.transferSize,startTimeUs:n,timeToResponseInitiatedUs:r,timeToResponseCompletedUs:i})}}function bA(){// Do not initialize unless iid is available.
T&&(// The load event might not have fired yet, and that means performance navigation timing
// object has a duration of 0. The setup should run after all current tasks in js queue.
setTimeout(function(){return function(){var t=bs.getInstance(),e=t.getEntriesByType("navigation"),n=t.getEntriesByType("paint");// If First Input Desly polyfill is added to the page, report the fid value.
// https://github.com/GoogleChromeLabs/first-input-delay
if(t.onFirstInputDelay){// If the fid call back is not called for certain time, continue without it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
var r=setTimeout(function(){bk.createOobTrace(e,n),r=void 0},5e3);t.onFirstInputDelay(function(t){r&&(clearTimeout(r),bk.createOobTrace(e,n,t))})}else bk.createOobTrace(e,n)}()},0),setTimeout(function(){return function(){for(var t=bs.getInstance(),e=t.getEntriesByType("resource"),n=0;n<e.length;n++)bN(e[n]);t.setupObserver("resource",bN)}()},0),setTimeout(function(){return function(){for(var t=bs.getInstance(),e=t.getEntriesByType("measure"),n=0;n<e.length;n++)bR(e[n]);// Setup an observer to capture the measures from this point on.
t.setupObserver("measure",bR)}()},0))}function bR(t){var e=t.name;// Do not create a trace, if the user timing marks and measures are created by the sdk itself.
e.substring(0,_8.length)!==_8&&bk.createUserTimingTrace(e)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var bx=/** @class */function(){function t(t){this.app=t,bs.getInstance().requiredApisAvailable()&&td().then(function(t){t&&(bb||(function t(e){setTimeout(function(){// If there is no remainingTries left, stop retrying.
if(0!==by){var e,n,r,i;// If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.
if(!b_.length)return t(1e4);n=(e=b_.splice(0,1e3)).map(function(t){return{source_extension_json_proto3:t.message,event_time_ms:String(t.eventTime)}}),/* eslint-enable camelcase */(r={request_time_ms:String(Date.now()),client_info:{client_type:1,js_client_info:{}},log_source:bc.getInstance().logSource,log_event:n},(i=bc.getInstance().getFlTransportFullUrl(),fetch(i,{method:"POST",body:JSON.stringify(r)})).then(function(t){return t.ok||ba.info("Call to Firebase backend failed."),t.json()}).then(function(n){// Find the next call wait time from the response.
var r=Number(n.nextRequestWaitMillis),i=1e4;isNaN(r)||(i=Math.max(r,i));// Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.
// Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.
var o=n.logResponseDetails;Array.isArray(o)&&o.length>0&&"RETRY_REQUEST_LATER"===o[0].responseAction&&(b_=Q(Q([],e),b_),ba.info("Retry transport request later.")),by=3,// Schedule the next process.
t(i)})).catch(function(){// If the request fails for some reason, add the events that were attempted
// back to the primary queue to retry later.
b_=Q(Q([],e),b_),by--,ba.info("Tries left: "+by+"."),t(1e4)})}},e)}(5500),bb=!0),bm().then(bA,bA))}).catch(function(t){ba.info("Environment doesn't support IndexedDB: "+t)})}return t.prototype.trace=function(t){return new bk(t)},Object.defineProperty(t.prototype,"instrumentationEnabled",{get:function(){return bc.getInstance().instrumentationEnabled},set:function(t){bc.getInstance().instrumentationEnabled=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"dataCollectionEnabled",{get:function(){return bc.getInstance().dataCollectionEnabled},set:function(t){bc.getInstance().dataCollectionEnabled=t},enumerable:!1,configurable:!0}),t}();h=function(t,e){if("[DEFAULT]"!==t.name)throw bo.create("FB not default"/* FB_NOT_DEFAULT */);if("undefined"==typeof window)throw bo.create("no window"/* NO_WINDOW */);return w=window,bc.getInstance().firebaseAppInstance=t,bc.getInstance().installationsService=e,new bx(t)},// Register performance with firebase-app.
ee.INTERNAL.registerComponent(new tV("performance",function(t){return h(t.getProvider("app").getImmediate(),t.getProvider("installations").getImmediate())},"PUBLIC"/* PUBLIC */)),ee.registerVersion("@firebase/performance",_5);var bP="https://www.googletagmanager.com/gtag/js";(l=k||(k={})).EVENT="event",l.SET="set",l.CONFIG="config",(f=N||(N={})).ADD_SHIPPING_INFO="add_shipping_info",f.ADD_PAYMENT_INFO="add_payment_info",f.ADD_TO_CART="add_to_cart",f.ADD_TO_WISHLIST="add_to_wishlist",f.BEGIN_CHECKOUT="begin_checkout",/**
     * @deprecated
     * This event name is deprecated and is unsupported in updated
     * Enhanced Ecommerce reports.
     */f.CHECKOUT_PROGRESS="checkout_progress",f.EXCEPTION="exception",f.GENERATE_LEAD="generate_lead",f.LOGIN="login",f.PAGE_VIEW="page_view",f.PURCHASE="purchase",f.REFUND="refund",f.REMOVE_FROM_CART="remove_from_cart",f.SCREEN_VIEW="screen_view",f.SEARCH="search",f.SELECT_CONTENT="select_content",f.SELECT_ITEM="select_item",f.SELECT_PROMOTION="select_promotion",/** @deprecated */f.SET_CHECKOUT_OPTION="set_checkout_option",f.SHARE="share",f.SIGN_UP="sign_up",f.TIMING_COMPLETE="timing_complete",f.VIEW_CART="view_cart",f.VIEW_ITEM="view_item",f.VIEW_ITEM_LIST="view_item_list",f.VIEW_PROMOTION="view_promotion",f.VIEW_SEARCH_RESULTS="view_search_results";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var bD=new tX("@firebase/analytics"),bO=((A={})["already-exists"/* ALREADY_EXISTS */]="A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.",A["already-initialized"/* ALREADY_INITIALIZED */]="Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.",A["interop-component-reg-failed"/* INTEROP_COMPONENT_REG_FAILED */]="Firebase Analytics Interop Component failed to instantiate: {$reason}",A["invalid-analytics-context"/* INVALID_ANALYTICS_CONTEXT */]="Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",A["indexeddb-unavailable"/* INDEXEDDB_UNAVAILABLE */]="IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}",A["fetch-throttle"/* FETCH_THROTTLE */]="The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.",A["config-fetch-failed"/* CONFIG_FETCH_FAILED */]="Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}",A["no-api-key"/* NO_API_KEY */]='The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',A["no-app-id"/* NO_APP_ID */]='The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',A),bL=new tm("analytics","Analytics",bO),bM=new/** @class */(function(){function t(t,e){void 0===t&&(t={}),void 0===e&&(e=1e3),this.throttleMetadata=t,this.intervalMillis=e}return t.prototype.getThrottleMetadata=function(t){return this.throttleMetadata[t]},t.prototype.setThrottleMetadata=function(t,e){this.throttleMetadata[t]=e},t.prototype.deleteThrottleMetadata=function(t){delete this.throttleMetadata[t]},t}()),bF=/** @class */function(){function t(){this.listeners=[]}return t.prototype.addEventListener=function(t){this.listeners.push(t)},t.prototype.abort=function(){this.listeners.forEach(function(t){return t()})},t}(),bj={},bU=[],bq={},bV="dataLayer",bB="gtag",bK=!1,bH="analytics";ee.INTERNAL.registerComponent(new tV(bH,function(t){return function(t,e){!/**
 * Returns true if no environment mismatch is found.
 * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT
 * error that also lists details for each mismatch found.
 */function(){var t=[];if(th()&&t.push("This is a browser extension environment."),tv()||t.push("Cookies are not available."),t.length>0){var e=t.map(function(t,e){return"("+(e+1)+") "+t}).join(" "),n=bL.create("invalid-analytics-context"/* INVALID_ANALYTICS_CONTEXT */,{errorInfo:e});bD.warn(n.message)}}();var n=t.options.appId;if(!n)throw bL.create("no-app-id"/* NO_APP_ID */);if(!t.options.apiKey){if(t.options.measurementId)bD.warn('The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID '+t.options.measurementId+' provided in the "measurementId" field in the local Firebase config.');else throw bL.create("no-api-key"/* NO_API_KEY */)}if(null!=bj[n])throw bL.create("already-exists"/* ALREADY_EXISTS */,{id:n});if(!bK){r=bV,i=[],Array.isArray(window[r])?i=window[r]:window[r]=i;var r,i,o,a,s,u,c=(o=bV,a=bB,s=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];// Must push IArguments object, not an array.
window[o].push(arguments)},window[a]&&"function"==typeof window[a]&&(s=window[a]),window[a]=(u=s,/**
     * Wrapper around gtag that ensures FID is sent with gtag calls.
     * @param command Gtag command type.
     * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.
     * @param gtagParams Params if event is EVENT/CONFIG.
     */function(t,e,n){return H(this,void 0,void 0,function(){var r;return W(this,function(i){switch(i.label){case 0:if(i.trys.push([0,6,,7]),t!==k.EVENT)return[3/*break*/,2];// If EVENT, second arg must be measurementId.
return[4/*yield*/,/**
 * Wrapped gtag logic when gtag is called with 'event' command.
 *
 * @param gtagCore Basic gtag function that just appends to dataLayer.
 * @param initializationPromisesMap Map of appIds to their initialization promises.
 * @param dynamicConfigPromisesList Array of dynamic config fetch promises.
 * @param measurementId GA Measurement ID to log event to.
 * @param gtagParams Params to log with this event.
 */function(t,e,n,r,i){return H(this,void 0,void 0,function(){var o,a,s,u,c,h,l;return W(this,function(f){switch(f.label){case 0:if(f.trys.push([0,4,,5]),o=[],!(i&&i.send_to))return[3/*break*/,2];return Array.isArray(a=i.send_to)||(a=[a]),[4/*yield*/,Promise.all(n)];case 1:for(c=0,s=f.sent(),u=function(t){// Any fetched dynamic measurement ID that matches this 'send_to' ID
var n=s.find(function(e){return e.measurementId===t}),r=n&&e[n.appId];if(!r)return(// Found an item in 'send_to' that is not associated
// directly with an FID, possibly a group.  Empty this array,
// exit the loop early, and let it get populated below.
o=[],"break");o.push(r)},h=a;c<h.length&&"break"!==u(h[c]);c++);f.label=2;case 2:// Run core gtag function with args after all relevant initialization
// promises have been resolved.
return 0===o.length&&(o=Object.values(e)),[4/*yield*/,Promise.all(o)];case 3:return(// Run core gtag function with args after all relevant initialization
// promises have been resolved.
f.sent(),// Workaround for http://b/141370449 - third argument cannot be undefined.
t(k.EVENT,r,i||{}),[3/*break*/,5]);case 4:return l=f.sent(),bD.error(l),[3/*break*/,5];case 5:return[2/*return*/]}})})}(u,bj,bU,e,n)];case 1:case 3:return(// If EVENT, second arg must be measurementId.
i.sent(),[3/*break*/,5]);case 2:if(t!==k.CONFIG)return[3/*break*/,4];// If CONFIG, second arg must be measurementId.
return[4/*yield*/,/**
 * Wrapped gtag logic when gtag is called with 'config' command.
 *
 * @param gtagCore Basic gtag function that just appends to dataLayer.
 * @param initializationPromisesMap Map of appIds to their initialization promises.
 * @param dynamicConfigPromisesList Array of dynamic config fetch promises.
 * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.
 * @param measurementId GA Measurement ID to set config for.
 * @param gtagParams Gtag config params to set.
 */function(t,e,n,r,i,o){return H(this,void 0,void 0,function(){var a,s,u;return W(this,function(c){switch(c.label){case 0:a=r[i],c.label=1;case 1:if(c.trys.push([1,7,,8]),!a)return[3/*break*/,3];return[4/*yield*/,e[a]];case 2:return c.sent(),[3/*break*/,6];case 3:return[4/*yield*/,Promise.all(n)];case 4:if(!(s=c.sent().find(function(t){return t.measurementId===i})))return[3/*break*/,6];return[4/*yield*/,e[s.appId]];case 5:c.sent(),c.label=6;case 6:return[3/*break*/,8];case 7:return u=c.sent(),bD.error(u),[3/*break*/,8];case 8:return t(k.CONFIG,i,o),[2/*return*/]}})})}(u,bj,bU,bq,e,n)];case 4:// If SET, second arg must be params.
u(k.SET,e),i.label=5;case 5:return[3/*break*/,7];case 6:return r=i.sent(),bD.error(r),[3/*break*/,7];case 7:return[2/*return*/]}})})}),{gtagCore:s,wrappedGtag:window[a]}),h=c.wrappedGtag,l=c.gtagCore;x=h,R=l,bK=!0}return(// Async but non-blocking.
// This map reflects the completion state of all promises for each appId.
bj[n]=/**
 * Initialize the analytics instance in gtag.js by calling config command with fid.
 *
 * NOTE: We combine analytics initialization and setting fid together because we want fid to be
 * part of the `page_view` event that's sent during the initialization
 * @param app Firebase app
 * @param gtagCore The gtag function that's not wrapped.
 * @param dynamicConfigPromisesList Array of all dynamic config promises.
 * @param measurementIdToAppId Maps measurementID to appID.
 * @param installations FirebaseInstallations instance.
 *
 * @returns Measurement ID.
 */function(t,e,n,r,i,o){return H(this,void 0,void 0,function(){var a,s,u,c,h,l;return W(this,function(f){switch(f.label){case 0:return(// Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.
(a=/**
 * Fetches dynamic config from backend, retrying if failed.
 * @param app Firebase app to fetch config for.
 */function(t,e,n){return void 0===e&&(e=bM),H(this,void 0,void 0,function(){var r,i,o,a,s,u,c=this;return W(this,function(h){if(i=(r=t.options).appId,o=r.apiKey,a=r.measurementId,!i)throw bL.create("no-app-id"/* NO_APP_ID */);if(!o){if(a)return[2/*return*/,{measurementId:a,appId:i}];throw bL.create("no-api-key"/* NO_API_KEY */)}return s=e.getThrottleMetadata(i)||{backoffCount:0,throttleEndTimeMillis:Date.now()},u=new bF,setTimeout(function(){return H(c,void 0,void 0,function(){return W(this,function(t){return(// Note a very low delay, eg < 10ms, can elapse before listeners are initialized.
u.abort(),[2/*return*/])})})},void 0!==n?n:6e4),[2/*return*/,/**
 * Runs one retry attempt.
 * @param appFields Necessary app config fields.
 * @param throttleMetadata Ongoing metadata to determine throttling times.
 * @param signal Abort signal.
 */function t(e,n,r,i// for testing
){var o=n.throttleEndTimeMillis,a=n.backoffCount;return void 0===i&&(i=bM),H(this,void 0,void 0,function(){var n,s,u,c,h,l,f;return W(this,function(p){switch(p.label){case 0:n=e.appId,s=e.measurementId,p.label=1;case 1:return p.trys.push([1,3,,4]),[4/*yield*/,new Promise(function(t,e){var n=setTimeout(t,Math.max(o-Date.now(),0));// Adds listener, rather than sets onabort, because signal is a shared object.
r.addEventListener(function(){clearTimeout(n),// If the request completes before this timeout, the rejection has no effect.
e(bL.create("fetch-throttle"/* FETCH_THROTTLE */,{throttleEndTimeMillis:o}))})})];case 2:return p.sent(),[3/*break*/,4];case 3:if(u=p.sent(),s)return bD.warn("Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID "+s+' provided in the "measurementId" field in the local Firebase config. ['+u.message+"]"),[2/*return*/,{appId:n,measurementId:s}];throw u;case 4:return p.trys.push([4,6,,7]),[4/*yield*/,/**
 * Fetches dynamic config from backend.
 * @param app Firebase app to fetch config for.
 */function(t){var e;return H(this,void 0,void 0,function(){var n,r,i,o,a,s;return W(this,function(u){switch(u.label){case 0:var c;return n=t.appId,r={method:"GET",headers:(c=t.apiKey,new Headers({Accept:"application/json","x-goog-api-key":c}))},i="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",n),[4/*yield*/,fetch(i,r)];case 1:if(!(200!==(o=u.sent()).status&&304!==o.status))return[3/*break*/,6];a="",u.label=2;case 2:return u.trys.push([2,4,,5]),[4/*yield*/,o.json()];case 3:return(null===(e=(s=u.sent()).error)||void 0===e?void 0:e.message)&&(a=s.error.message),[3/*break*/,5];case 4:return u.sent(),[3/*break*/,5];case 5:throw bL.create("config-fetch-failed"/* CONFIG_FETCH_FAILED */,{httpStatus:o.status,responseMessage:a});case 6:return[2/*return*/,o.json()]}})})}(e)];case 5:return c=p.sent(),// Note the SDK only clears throttle state if response is success or non-retriable.
i.deleteThrottleMetadata(n),[2/*return*/,c];case 6:if(!/**
 * Returns true if the {@link Error} indicates a fetch request may succeed later.
 */function(t){if(!(t instanceof tg)||!t.customData)return!1;// Uses string index defined by ErrorData, which FirebaseError implements.
var e=Number(t.customData.httpStatus);return 429===e||500===e||503===e||504===e}(h=p.sent())){if(i.deleteThrottleMetadata(n),s)return bD.warn("Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID "+s+' provided in the "measurementId" field in the local Firebase config. ['+h.message+"]"),[2/*return*/,{appId:n,measurementId:s}];throw h}return l=503===Number(h.customData.httpStatus)?tU(a,i.intervalMillis,30):tU(a,i.intervalMillis),f={throttleEndTimeMillis:Date.now()+l,backoffCount:a+1},// Persists state.
i.setThrottleMetadata(n,f),bD.debug("Calling attemptFetch again in "+l+" millis"),[2/*return*/,t(e,f,r,i)];case 7:return[2/*return*/]}})})}({appId:i,apiKey:o,measurementId:a},s,u,e)]})})}(t)).then(function(e){n[e.measurementId]=e.appId,t.options.measurementId&&e.measurementId!==t.options.measurementId&&bD.warn("The measurement ID in the local Firebase config ("+t.options.measurementId+") does not match the measurement ID fetched from the server ("+e.measurementId+"). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.")}).catch(function(t){return bD.error(t)}),// Add to list to track state of all dynamic config promises.
e.push(a),[4/*yield*/,Promise.all([a,/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */(function(){return H(this,void 0,void 0,function(){var t;return W(this,function(e){switch(e.label){case 0:if(tp())return[3/*break*/,1];return bD.warn(bL.create("indexeddb-unavailable"/* INDEXEDDB_UNAVAILABLE */,{errorInfo:"IndexedDB is not available in this environment."}).message),[2/*return*/,!1];case 1:return e.trys.push([1,3,,4]),[4/*yield*/,td()];case 2:return e.sent(),[3/*break*/,4];case 3:return t=e.sent(),bD.warn(bL.create("indexeddb-unavailable"/* INDEXEDDB_UNAVAILABLE */,{errorInfo:t}).message),[2/*return*/,!1];case 4:return[2/*return*/,!0]}})})})().then(function(t){return t?r.getId():void 0})])]);case 1:// Detect if user has already put the gtag <script> tag on this page.
if(u=(s=f.sent())[0],c=s[1],!/**
 * Returns first script tag in DOM matching our gtag url pattern.
 */function(){for(var t=window.document.getElementsByTagName("script"),e=0,n=Object.values(t);e<n.length;e++){var r=n[e];if(r.src&&r.src.includes(bP))return r}return null}()){var p,d;p=u.measurementId,(d=document.createElement("script")).src=bP+"?l="+o+"&id="+p,d.async=!0,document.head.appendChild(d)}return(// This command initializes gtag.js and only needs to be called once for the entire web app,
// but since it is idempotent, we can call it multiple times.
// We keep it together with other initialization logic for better code structure.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
i("js",new Date),(l={}).origin="firebase",l.update=!0,h=l,null!=c&&(h.firebase_id=c),// It should be the first config command called on this GA-ID
// Initialize this GA-ID and set FID on it using the gtag config API.
// Note: This will trigger a page_view event unless 'send_page_view' is set to false in
// `configProperties`.
i(k.CONFIG,u.measurementId,h),[2/*return*/,u.measurementId])}})})}(t,bU,bq,e,R,bV),{app:t,// Public methods return void for API simplicity and to better match gtag,
// while internal implementations return promises.
logEvent:function(t,e,r){/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Logs an analytics event through the Firebase SDK.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param eventName Google Analytics event name, choose from standard list or use a custom string.
 * @param eventParams Analytics event parameters.
 */(function(t,e,n,r,i){return H(this,void 0,void 0,function(){var o,a;return W(this,function(s){switch(s.label){case 0:if(!(i&&i.global))return[3/*break*/,1];return t(k.EVENT,n,r),[2/*return*/];case 1:return[4/*yield*/,e];case 2:o=s.sent(),a=K(K({},r),{send_to:o}),t(k.EVENT,n,a),s.label=3;case 3:return[2/*return*/]}})})})(x,bj[n],t,e,r).catch(function(t){return bD.error(t)})},setCurrentScreen:function(t,e){/**
 * Set screen_name parameter for this Google Analytics ID.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param screenName Screen name string to set.
 */(function(t,e,n,r){return H(this,void 0,void 0,function(){var i;return W(this,function(o){switch(o.label){case 0:if(!(r&&r.global))return[3/*break*/,1];return t(k.SET,{screen_name:n}),[2/*return*/,Promise.resolve()];case 1:return[4/*yield*/,e];case 2:i=o.sent(),t(k.CONFIG,i,{update:!0,screen_name:n}),o.label=3;case 3:return[2/*return*/]}})})})(x,bj[n],t,e).catch(function(t){return bD.error(t)})},setUserId:function(t,e){/**
 * Set user_id parameter for this Google Analytics ID.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param id User ID string to set
 */(function(t,e,n,r){return H(this,void 0,void 0,function(){var i;return W(this,function(o){switch(o.label){case 0:if(!(r&&r.global))return[3/*break*/,1];return t(k.SET,{user_id:n}),[2/*return*/,Promise.resolve()];case 1:return[4/*yield*/,e];case 2:i=o.sent(),t(k.CONFIG,i,{update:!0,user_id:n}),o.label=3;case 3:return[2/*return*/]}})})})(x,bj[n],t,e).catch(function(t){return bD.error(t)})},setUserProperties:function(t,e){/**
 * Set all other user properties other than user_id and screen_name.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param properties Map of user properties to set
 */(function(t,e,n,r){return H(this,void 0,void 0,function(){var i,o,a,s,u;return W(this,function(c){switch(c.label){case 0:if(!(r&&r.global))return[3/*break*/,1];for(o=0,i={},a=Object.keys(n);o<a.length;o++)// use dot notation for merge behavior in gtag.js
i["user_properties."+(s=a[o])]=n[s];return t(k.SET,i),[2/*return*/,Promise.resolve()];case 1:return[4/*yield*/,e];case 2:u=c.sent(),t(k.CONFIG,u,{update:!0,user_properties:n}),c.label=3;case 3:return[2/*return*/]}})})})(x,bj[n],t,e).catch(function(t){return bD.error(t)})},setAnalyticsCollectionEnabled:function(t){/**
 * Set whether collection is enabled for this ID.
 *
 * @param enabled If true, collection is enabled for this ID.
 */(function(t,e){return H(this,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,t];case 1:return n=r.sent(),window["ga-disable-"+n]=!e,[2/*return*/]}})})})(bj[n],t).catch(function(t){return bD.error(t)})},INTERNAL:{delete:function(){return delete bj[n],Promise.resolve()}}})}(t.getProvider("app").getImmediate(),t.getProvider("installations").getImmediate())},"PUBLIC"/* PUBLIC */).setServiceProps({settings:/**
 * This must be run before calling firebase.analytics() or it won't
 * have any effect.
 * @param options Custom gtag and dataLayer names.
 */function(t){if(bK)throw bL.create("already-initialized"/* ALREADY_INITIALIZED */);t.dataLayerName&&(bV=t.dataLayerName),t.gtagName&&(bB=t.gtagName)},EventName:N,isSupported:/**
 * this is a public static method provided to users that wraps four different checks:
 *
 * 1. check if it's not a browser extension environment.
 * 1. check if cookie is enabled in current browser.
 * 3. check if IndexedDB is supported by the browser environment.
 * 4. check if the current browser context is valid for using IndexedDB.
 *
 */function(){return H(this,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:if(th()||!tv()||!tp())return[2/*return*/,!1];t.label=1;case 1:return t.trys.push([1,3,,4]),[4/*yield*/,td()];case 2:return[2/*return*/,t.sent()];case 3:return t.sent(),[2/*return*/,!1];case 4:return[2/*return*/]}})})}})),ee.INTERNAL.registerComponent(new tV("analytics-internal",function(t){try{return{logEvent:t.getProvider(bH).getImmediate().logEvent}}catch(t){throw bL.create("interop-component-reg-failed"/* INTEROP_COMPONENT_REG_FAILED */,{reason:t})}},"PRIVATE"/* PRIVATE */)),ee.registerVersion("@firebase/analytics","0.6.18");/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Implements the {@link RemoteConfigClient} abstraction with success response caching.
 *
 * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service
 * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the
 * Cache API doesn't support matching entries by time.
 */var bW=/** @class */function(){function t(t,e,n,r){this.client=t,this.storage=e,this.storageCache=n,this.logger=r}return(/**
     * Returns true if the age of the cached fetched configs is less than or equal to
     * {@link Settings#minimumFetchIntervalInSeconds}.
     *
     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the
     * native Fetch API.
     *
     * <p>Visible for testing.
     */t.prototype.isCachedDataFresh=function(t,e){// Cache can only be fresh if it's populated.
if(!e)return this.logger.debug("Config fetch cache check. Cache unpopulated."),!1;// Calculates age of cache entry.
var n=Date.now()-e,r=n<=t;return this.logger.debug("Config fetch cache check. Cache age millis: "+n+". Cache max age millis (minimumFetchIntervalMillis setting): "+t+". Is cache hit: "+r+"."),r},t.prototype.fetch=function(t){return H(this,void 0,void 0,function(){var e,n,r,i,o;return W(this,function(a){switch(a.label){case 0:return[4/*yield*/,Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(),this.storage.getLastSuccessfulFetchResponse()])];case 1:// Exits early on cache hit.
if(n=(e=a.sent())[0],(r=e[1])&&this.isCachedDataFresh(t.cacheMaxAgeMillis,n))return[2/*return*/,r];return(// Deviates from pure decorator by not honoring a passed ETag since we don't have a public API
// that allows the caller to pass an ETag.
t.eTag=r&&r.eTag,[4/*yield*/,this.client.fetch(t)]);case 2:return i=a.sent(),o=[// Uses write-through cache for consistency with synchronous public API.
this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())],200===i.status&&o.push(this.storage.setLastSuccessfulFetchResponse(i)),[4/*yield*/,Promise.all(o)];case 3:return a.sent(),[2/*return*/,i]}})})},t)}(),bz=((P={})["registration-window"/* REGISTRATION_WINDOW */]="Undefined window object. This SDK only supports usage in a browser environment.",P["registration-project-id"/* REGISTRATION_PROJECT_ID */]="Undefined project identifier. Check Firebase app initialization.",P["registration-api-key"/* REGISTRATION_API_KEY */]="Undefined API key. Check Firebase app initialization.",P["registration-app-id"/* REGISTRATION_APP_ID */]="Undefined app identifier. Check Firebase app initialization.",P["storage-open"/* STORAGE_OPEN */]="Error thrown when opening storage. Original error: {$originalErrorMessage}.",P["storage-get"/* STORAGE_GET */]="Error thrown when reading from storage. Original error: {$originalErrorMessage}.",P["storage-set"/* STORAGE_SET */]="Error thrown when writing to storage. Original error: {$originalErrorMessage}.",P["storage-delete"/* STORAGE_DELETE */]="Error thrown when deleting from storage. Original error: {$originalErrorMessage}.",P["fetch-client-network"/* FETCH_NETWORK */]="Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.",P["fetch-timeout"/* FETCH_TIMEOUT */]='The config fetch request timed out.  Configure timeout using "fetchTimeoutMillis" SDK setting.',P["fetch-throttle"/* FETCH_THROTTLE */]='The config fetch request timed out while in an exponential backoff state. Configure timeout using "fetchTimeoutMillis" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',P["fetch-client-parse"/* FETCH_PARSE */]="Fetch client could not parse response. Original error: {$originalErrorMessage}.",P["fetch-status"/* FETCH_STATUS */]="Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.",P),bG=new tm("remoteconfig"/* service */,"Remote Config"/* service name */,bz),bQ=/** @class */function(){function t(t,e,n,r,i,o){this.firebaseInstallations=t,this.sdkVersion=e,this.namespace=n,this.projectId=r,this.apiKey=i,this.appId=o}return(/**
     * Fetches from the Remote Config REST API.
     *
     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't
     * connect to the network.
     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the
     * fetch response.
     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.
     */t.prototype.fetch=function(t){return H(this,void 0,void 0,function(){var e,n,r,i,o,a,s,u,c,h,l,f,p,d,v,g;return W(this,function(m){switch(m.label){case 0:return[4/*yield*/,Promise.all([this.firebaseInstallations.getId(),this.firebaseInstallations.getToken()])];case 1:var y;n=(e=m.sent())[0],r=e[1],i=(window.FIREBASE_REMOTE_CONFIG_URL_BASE||"https://firebaseremoteconfig.googleapis.com")+"/v1/projects/"+this.projectId+"/namespaces/"+this.namespace+":fetch?key="+this.apiKey,o={method:"POST",headers:{"Content-Type":"application/json","Content-Encoding":"gzip",// Deviates from pure decorator by not passing max-age header since we don't currently have
// service behavior using that header.
"If-None-Match":t.eTag||"*"},body:JSON.stringify({/* eslint-disable camelcase */sdk_version:this.sdkVersion,app_instance_id:n,app_instance_id_token:r,app_id:this.appId,language_code:(void 0===y&&(y=navigator),y.languages&&y.languages[0]||// Supported in most browsers, but returns the language of the browser
// UI, not the language set in browser settings.
y.language)})},a=fetch(i,o),s=new Promise(function(e,n){// Maps async event listener to Promise API.
t.signal.addEventListener(function(){// Emulates https://heycam.github.io/webidl/#aborterror
var t=Error("The operation was aborted.");t.name="AbortError",n(t)})}),m.label=2;case 2:return m.trys.push([2,5,,6]),[4/*yield*/,Promise.race([a,s])];case 3:return m.sent(),[4/*yield*/,a];case 4:return u=m.sent(),[3/*break*/,6];case 5:throw c=m.sent(),h="fetch-client-network"/* FETCH_NETWORK */,"AbortError"===c.name&&(h="fetch-timeout"/* FETCH_TIMEOUT */),bG.create(h,{originalErrorMessage:c.message});case 6:if(l=u.status,f=u.headers.get("ETag")||void 0,200!==u.status)return[3/*break*/,11];v=void 0,m.label=7;case 7:return m.trys.push([7,9,,10]),[4/*yield*/,u.json()];case 8:return v=m.sent(),[3/*break*/,10];case 9:throw g=m.sent(),bG.create("fetch-client-parse"/* FETCH_PARSE */,{originalErrorMessage:g.message});case 10:p=v.entries,d=v.state,m.label=11;case 11:// Normalize to exception-based control flow for non-success cases.
// Encapsulates HTTP specifics in this class as much as possible. Status is still the best for
// differentiating success states (200 from 304; the state body param is undefined in a
// standard 304).
if("INSTANCE_STATE_UNSPECIFIED"===d?l=500:"NO_CHANGE"===d?l=304:("NO_TEMPLATE"===d||"EMPTY_CONFIG"===d)&&(p={}),304!==l&&200!==l)throw bG.create("fetch-status"/* FETCH_STATUS */,{httpStatus:l});return[2/*return*/,{status:l,eTag:f,config:p}]}})})},t)}(),b$=/** @class */function(){function t(){this.listeners=[]}return t.prototype.addEventListener=function(t){this.listeners.push(t)},t.prototype.abort=function(){this.listeners.forEach(function(t){return t()})},t}(),bY=["1","true","t","yes","y","on"],bX=/** @class */function(){function t(t,e){void 0===e&&(e=""),this._source=t,this._value=e}return t.prototype.asString=function(){return this._value},t.prototype.asBoolean=function(){return"static"!==this._source&&bY.indexOf(this._value.toLowerCase())>=0},t.prototype.asNumber=function(){if("static"===this._source)return 0;var t=Number(this._value);return isNaN(t)&&(t=0),t},t.prototype.getSource=function(){return this._source},t}(),bJ=/** @class */function(){function t(t,// (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an
// underscore prefix.
e,n,r,i){this.app=t,this._client=e,this._storageCache=n,this._storage=r,this._logger=i,// Tracks completion of initialization promise.
this._isInitializationComplete=!1,this.settings={fetchTimeoutMillis:6e4,minimumFetchIntervalMillis:432e5},this.defaultConfig={}}return(// Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels
// to differentiate 2p and 3p use-cases.
t.prototype.setLogLevel=function(t){switch(t){case"debug":this._logger.logLevel=ad.DEBUG;break;case"silent":this._logger.logLevel=ad.SILENT;break;default:this._logger.logLevel=ad.ERROR}},Object.defineProperty(t.prototype,"fetchTimeMillis",{get:function(){return this._storageCache.getLastSuccessfulFetchTimestampMillis()||-1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lastFetchStatus",{get:function(){return this._storageCache.getLastFetchStatus()||"no-fetch-yet"},enumerable:!1,configurable:!0}),t.prototype.activate=function(){return H(this,void 0,void 0,function(){var t,e,n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,Promise.all([this._storage.getLastSuccessfulFetchResponse(),this._storage.getActiveConfigEtag()])];case 1:if(e=(t=r.sent())[0],n=t[1],!e||!e.config||!e.eTag||e.eTag===n)// config.
return[2/*return*/,!1];return[4/*yield*/,Promise.all([this._storageCache.setActiveConfig(e.config),this._storage.setActiveConfigEtag(e.eTag)])];case 2:return r.sent(),[2/*return*/,!0]}})})},t.prototype.ensureInitialized=function(){var t=this;return this._initializePromise||(this._initializePromise=this._storageCache.loadFromStorage().then(function(){t._isInitializationComplete=!0})),this._initializePromise},/**
     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than
     * {@link Settings.fetchTimeoutInSeconds} or
     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.
     */t.prototype.fetch=function(){return H(this,void 0,void 0,function(){var t,e,n,r=this;return W(this,function(i){switch(i.label){case 0:t=new b$,setTimeout(function(){return H(r,void 0,void 0,function(){return W(this,function(e){return(// Note a very low delay, eg < 10ms, can elapse before listeners are initialized.
t.abort(),[2/*return*/])})})},this.settings.fetchTimeoutMillis),i.label=1;case 1:return i.trys.push([1,4,,6]),[4/*yield*/,this._client.fetch({cacheMaxAgeMillis:this.settings.minimumFetchIntervalMillis,signal:t})];case 2:return i.sent(),[4/*yield*/,this._storageCache.setLastFetchStatus("success")];case 3:return i.sent(),[3/*break*/,6];case 4:var o;return n=(o=e=i.sent())instanceof tg&&-1!==o.code.indexOf("fetch-throttle"/* FETCH_THROTTLE */)?"throttle":"failure",[4/*yield*/,this._storageCache.setLastFetchStatus(n)];case 5:throw i.sent(),e;case 6:return[2/*return*/]}})})},t.prototype.fetchAndActivate=function(){return H(this,void 0,void 0,function(){return W(this,function(t){switch(t.label){case 0:return[4/*yield*/,this.fetch()];case 1:return t.sent(),[2/*return*/,this.activate()]}})})},t.prototype.getAll=function(){var t,e,n=this;return(t=this._storageCache.getActiveConfig(),e=this.defaultConfig,void 0===t&&(t={}),void 0===e&&(e={}),Object.keys(K(K({},t),e))).reduce(function(t,e){return t[e]=n.getValue(e),t},{})},t.prototype.getBoolean=function(t){return this.getValue(t).asBoolean()},t.prototype.getNumber=function(t){return this.getValue(t).asNumber()},t.prototype.getString=function(t){return this.getValue(t).asString()},t.prototype.getValue=function(t){this._isInitializationComplete||this._logger.debug('A value was requested for key "'+t+'" before SDK initialization completed. Await on ensureInitialized if the intent was to get a previously activated value.');var e=this._storageCache.getActiveConfig();return e&&void 0!==e[t]?new bX("remote",e[t]):this.defaultConfig&&void 0!==this.defaultConfig[t]?new bX("default",String(this.defaultConfig[t])):(this._logger.debug('Returning static value for key "'+t+'". Define a default or remote value if this is unintentional.'),new bX("static"))},t)}();/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.
 */function bZ(t,e){var n=t.target.error||void 0;return bG.create(e,{originalErrorMessage:n&&n.message})}/**
 * A general-purpose store keyed by app + namespace + {@link
 * ProjectNamespaceKeyFieldValue}.
 *
 * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact
 * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys
 * for a set of key-value pairs. See {@link Storage#createCompositeKey}.
 *
 * <p>Visible for testing.
 */var b0="app_namespace_store",b1=/** @class */function(){/**
     * @param appId enables storage segmentation by app (ID + name).
     * @param appName enables storage segmentation by app (ID + name).
     * @param namespace enables storage segmentation by namespace.
     */function t(t,e,n,r){void 0===r&&(r=new Promise(function(t,e){var n=indexedDB.open("firebase_remote_config",1);n.onerror=function(t){e(bZ(t,"storage-open"/* STORAGE_OPEN */))},n.onsuccess=function(e){t(e.target.result)},n.onupgradeneeded=function(t){var e=t.target.result;// We don't use 'break' in this switch statement, the fall-through
// behavior is what we want, because if there are multiple versions between
// the old version and the current version, we want ALL the migrations
// that correspond to those versions to run, not only the last one.
// eslint-disable-next-line default-case
0===t.oldVersion&&e.createObjectStore(b0,{keyPath:"compositeKey"})}})),this.appId=t,this.appName=e,this.namespace=n,this.openDbPromise=r}return t.prototype.getLastFetchStatus=function(){return this.get("last_fetch_status")},t.prototype.setLastFetchStatus=function(t){return this.set("last_fetch_status",t)},// This is comparable to a cache entry timestamp. If we need to expire other data, we could
// consider adding timestamp to all storage records and an optional max age arg to getters.
t.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.get("last_successful_fetch_timestamp_millis")},t.prototype.setLastSuccessfulFetchTimestampMillis=function(t){return this.set("last_successful_fetch_timestamp_millis",t)},t.prototype.getLastSuccessfulFetchResponse=function(){return this.get("last_successful_fetch_response")},t.prototype.setLastSuccessfulFetchResponse=function(t){return this.set("last_successful_fetch_response",t)},t.prototype.getActiveConfig=function(){return this.get("active_config")},t.prototype.setActiveConfig=function(t){return this.set("active_config",t)},t.prototype.getActiveConfigEtag=function(){return this.get("active_config_etag")},t.prototype.setActiveConfigEtag=function(t){return this.set("active_config_etag",t)},t.prototype.getThrottleMetadata=function(){return this.get("throttle_metadata")},t.prototype.setThrottleMetadata=function(t){return this.set("throttle_metadata",t)},t.prototype.deleteThrottleMetadata=function(){return this.delete("throttle_metadata")},t.prototype.get=function(t){return H(this,void 0,void 0,function(){var e,n=this;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,this.openDbPromise];case 1:return e=r.sent(),[2/*return*/,new Promise(function(r,i){var o=e.transaction([b0],"readonly").objectStore(b0),a=n.createCompositeKey(t);try{var s=o.get(a);s.onerror=function(t){i(bZ(t,"storage-get"/* STORAGE_GET */))},s.onsuccess=function(t){var e=t.target.result;e?r(e.value):r(void 0)}}catch(t){i(bG.create("storage-get"/* STORAGE_GET */,{originalErrorMessage:t&&t.message}))}})]}})})},t.prototype.set=function(t,e){return H(this,void 0,void 0,function(){var n,r=this;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,this.openDbPromise];case 1:return n=i.sent(),[2/*return*/,new Promise(function(i,o){var a=n.transaction([b0],"readwrite").objectStore(b0),s=r.createCompositeKey(t);try{var u=a.put({compositeKey:s,value:e});u.onerror=function(t){o(bZ(t,"storage-set"/* STORAGE_SET */))},u.onsuccess=function(){i()}}catch(t){o(bG.create("storage-set"/* STORAGE_SET */,{originalErrorMessage:t&&t.message}))}})]}})})},t.prototype.delete=function(t){return H(this,void 0,void 0,function(){var e,n=this;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,this.openDbPromise];case 1:return e=r.sent(),[2/*return*/,new Promise(function(r,i){var o=e.transaction([b0],"readwrite").objectStore(b0),a=n.createCompositeKey(t);try{var s=o.delete(a);s.onerror=function(t){i(bZ(t,"storage-delete"/* STORAGE_DELETE */))},s.onsuccess=function(){r()}}catch(t){i(bG.create("storage-delete"/* STORAGE_DELETE */,{originalErrorMessage:t&&t.message}))}})]}})})},// Facilitates composite key functionality (which is unsupported in IE).
t.prototype.createCompositeKey=function(t){return[this.appId,this.appName,this.namespace,t].join()},t}(),b2=/** @class */function(){function t(t){this.storage=t}return(/**
     * Memory-only getters
     */t.prototype.getLastFetchStatus=function(){return this.lastFetchStatus},t.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.lastSuccessfulFetchTimestampMillis},t.prototype.getActiveConfig=function(){return this.activeConfig},/**
     * Read-ahead getter
     */t.prototype.loadFromStorage=function(){return H(this,void 0,void 0,function(){var t,e,n,r,i,o;return W(this,function(a){switch(a.label){case 0:return t=this.storage.getLastFetchStatus(),e=this.storage.getLastSuccessfulFetchTimestampMillis(),n=this.storage.getActiveConfig(),[4/*yield*/,t];case 1:return(r=a.sent())&&(this.lastFetchStatus=r),[4/*yield*/,e];case 2:return(i=a.sent())&&(this.lastSuccessfulFetchTimestampMillis=i),[4/*yield*/,n];case 3:return(o=a.sent())&&(this.activeConfig=o),[2/*return*/]}})})},/**
     * Write-through setters
     */t.prototype.setLastFetchStatus=function(t){return this.lastFetchStatus=t,this.storage.setLastFetchStatus(t)},t.prototype.setLastSuccessfulFetchTimestampMillis=function(t){return this.lastSuccessfulFetchTimestampMillis=t,this.storage.setLastSuccessfulFetchTimestampMillis(t)},t.prototype.setActiveConfig=function(t){return this.activeConfig=t,this.storage.setActiveConfig(t)},t)}(),b4=/** @class */function(){function t(t,e){this.client=t,this.storage=e}return t.prototype.fetch=function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return[4/*yield*/,this.storage.getThrottleMetadata()];case 1:return e=n.sent()||{backoffCount:0,throttleEndTimeMillis:Date.now()},[2/*return*/,this.attemptFetch(t,e)]}})})},/**
     * A recursive helper for attempting a fetch request repeatedly.
     *
     * @throws any non-retriable errors.
     */t.prototype.attemptFetch=function(t,e){var n=e.throttleEndTimeMillis,r=e.backoffCount;return H(this,void 0,void 0,function(){var e,i,o;return W(this,function(a){switch(a.label){case 0:var s;// Starts with a (potentially zero) timeout to support resumption from stored state.
// Ensures the throttle end time is honored if the last attempt timed out.
// Note the SDK will never make a request if the fetch timeout expires at this point.
return[4/*yield*/,(s=t.signal,new Promise(function(t,e){var r=setTimeout(t,Math.max(n-Date.now(),0));// Adds listener, rather than sets onabort, because signal is a shared object.
s.addEventListener(function(){clearTimeout(r),// If the request completes before this timeout, the rejection has no effect.
e(bG.create("fetch-throttle"/* FETCH_THROTTLE */,{throttleEndTimeMillis:n}))})}))];case 1:// Starts with a (potentially zero) timeout to support resumption from stored state.
// Ensures the throttle end time is honored if the last attempt timed out.
// Note the SDK will never make a request if the fetch timeout expires at this point.
a.sent(),a.label=2;case 2:return a.trys.push([2,5,,7]),[4/*yield*/,this.client.fetch(t)];case 3:// Note the SDK only clears throttle state if response is success or non-retriable.
return e=a.sent(),[4/*yield*/,this.storage.deleteThrottleMetadata()];case 4:return(// Note the SDK only clears throttle state if response is success or non-retriable.
a.sent(),[2/*return*/,e]);case 5:if(!/**
 * Returns true if the {@link Error} indicates a fetch request may succeed later.
 */function(t){if(!(t instanceof tg)||!t.customData)return!1;// Uses string index defined by ErrorData, which FirebaseError implements.
var e=Number(t.customData.httpStatus);return 429===e||500===e||503===e||504===e}(i=a.sent()))throw i;// Persists state.
return o={throttleEndTimeMillis:Date.now()+tU(r),backoffCount:r+1},[4/*yield*/,this.storage.setThrottleMetadata(o)];case 6:return(// Persists state.
a.sent(),[2/*return*/,this.attemptFetch(t,o)]);case 7:return[2/*return*/]}})})},t}(),b3="@firebase/remote-config";ee.INTERNAL.registerComponent(new tV("remoteConfig",function(t,e){var n=e.instanceIdentifier,r=t.getProvider("app").getImmediate(),i=t.getProvider("installations").getImmediate();// Guards against the SDK being used in non-browser environments.
if("undefined"==typeof window)throw bG.create("registration-window"/* REGISTRATION_WINDOW */);// Normalizes optional inputs.
var o=r.options,a=o.projectId,s=o.apiKey,u=o.appId;if(!a)throw bG.create("registration-project-id"/* REGISTRATION_PROJECT_ID */);if(!s)throw bG.create("registration-api-key"/* REGISTRATION_API_KEY */);if(!u)throw bG.create("registration-app-id"/* REGISTRATION_APP_ID */);n=n||"firebase";var c=new b1(u,r.name,n),h=new b2(c),l=new tX(b3);// Sets ERROR as the default log level.
// See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.
l.logLevel=ad.ERROR;var f=new bQ(i,ee.SDK_VERSION,n,a,s,u),p=new b4(f,c),d=new bW(p,c,h,l),v=new bJ(r,d,h,c,l);return(// Starts warming cache.
// eslint-disable-next-line @typescript-eslint/no-floating-promises
v.ensureInitialized(),v)},"PUBLIC"/* PUBLIC */).setMultipleInstances(!0)),ee.registerVersion(b3,"0.1.43");var b6=q&&"default"in q?q:{default:q},b5=((D={})["already-activated"/* ALREADY_ACTIVATED */]="You are trying to activate AppCheck for FirebaseApp {$appName}, while it is already activated. AppCheck can only be activated once.",D["use-before-activation"/* USE_BEFORE_ACTIVATION */]="AppCheck is being used before activate() is called for FirebaseApp {$appName}. Please make sure you call activate() before instantiating other Firebase services.",D["fetch-network-error"/* FETCH_NETWORK_ERROR */]="Fetch failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.",D["fetch-parse-error"/* FETCH_PARSE_ERROR */]="Fetch client could not parse response. Original error: {$originalErrorMessage}.",D["fetch-status-error"/* FETCH_STATUS_ERROR */]="Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.",D["storage-open"/* STORAGE_OPEN */]="Error thrown when opening storage. Original error: {$originalErrorMessage}.",D["storage-get"/* STORAGE_GET */]="Error thrown when reading from storage. Original error: {$originalErrorMessage}.",D["storage-set"/* STORAGE_WRITE */]="Error thrown when writing to storage. Original error: {$originalErrorMessage}.",D["recaptcha-error"/* RECAPTCHA_ERROR */]="ReCAPTCHA error.",D),b8=new tm("appCheck","AppCheck",b5),b7=new Map,b9={activated:!1,tokenObservers:[]},wt={enabled:!1};function we(t){return b7.get(t)||b9}function wn(t,e){b7.set(t,e)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var wr="https://content-firebaseappcheck.googleapis.com/v1beta",wi=/** @class */function(){function t(t,e,n,r,i){if(this.operation=t,this.retryPolicy=e,this.getWaitDuration=n,this.lowerBound=r,this.upperBound=i,this.pending=null,this.nextErrorWaitInterval=r,r>i)throw Error("Proactive refresh lower bound greater than upper bound!")}return t.prototype.start=function(){this.nextErrorWaitInterval=this.lowerBound,this.process(!0).catch(function(){/* we don't care about the result */})},t.prototype.stop=function(){this.pending&&(this.pending.reject("cancelled"),this.pending=null)},t.prototype.isRunning=function(){return!!this.pending},t.prototype.process=function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:this.stop(),n.label=1;case 1:var r;return n.trys.push([1,6,,7]),this.pending=new to,[4/*yield*/,(r=this.getNextRun(t),new Promise(function(t){setTimeout(t,r)}))];case 2:case 4:return n.sent(),// Why do we resolve a promise, then immediate wait for it?
// We do it to make the promise chain cancellable.
// We can call stop() which rejects the promise before the following line execute, which makes
// the code jump to the catch block.
// TODO: unit test this
this.pending.resolve(),[4/*yield*/,this.pending.promise];case 3:return n.sent(),this.pending=new to,[4/*yield*/,this.operation()];case 5:return n.sent(),this.process(!0).catch(function(){/* we don't care about the result */}),[3/*break*/,7];case 6:return e=n.sent(),this.retryPolicy(e)?this.process(!1).catch(function(){/* we don't care about the result */}):this.stop(),[3/*break*/,7];case 7:return[2/*return*/]}})})},t.prototype.getNextRun=function(t){if(t)// Return typical wait duration interval after a successful operation.
return(// If last operation succeeded, reset next error wait interval and return
// the default wait duration.
this.nextErrorWaitInterval=this.lowerBound,this.getWaitDuration());// Get next error wait interval.
var e=this.nextErrorWaitInterval;return(// Double interval for next consecutive error.
this.nextErrorWaitInterval*=2,this.nextErrorWaitInterval>this.upperBound&&(this.nextErrorWaitInterval=this.upperBound),e)},t}();/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function wo(){return self.grecaptcha}function wa(t){if(!we(t).activated)throw b8.create("use-before-activation"/* USE_BEFORE_ACTIVATION */,{appName:t.name})}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ws(t,e){var n=t.url,r=t.body;return H(this,void 0,void 0,function(){var t,i,o,a,s,u,c,h,l,f;return W(this,function(p){switch(p.label){case 0:t={"Content-Type":"application/json"},(i=e.getImmediate({optional:!0}))&&(t["X-Firebase-Client"]=i.getPlatformInfoString()),o={method:"POST",body:JSON.stringify(r),headers:t},p.label=1;case 1:return p.trys.push([1,3,,4]),[4/*yield*/,fetch(n,o)];case 2:return a=p.sent(),[3/*break*/,4];case 3:throw s=p.sent(),b8.create("fetch-network-error"/* FETCH_NETWORK_ERROR */,{originalErrorMessage:s.message});case 4:if(200!==a.status)throw b8.create("fetch-status-error"/* FETCH_STATUS_ERROR */,{httpStatus:a.status});p.label=5;case 5:return p.trys.push([5,7,,8]),[4/*yield*/,a.json()];case 6:return(// JSON parsing throws SyntaxError if the response body isn't a JSON string.
u=p.sent(),[3/*break*/,8]);case 7:throw c=p.sent(),b8.create("fetch-parse-error"/* FETCH_PARSE_ERROR */,{originalErrorMessage:c.message});case 8:if(!(h=u.ttl.match(/^([\d.]+)(s)$/))||!h[2]||isNaN(Number(h[1])))throw b8.create("fetch-parse-error"/* FETCH_PARSE_ERROR */,{originalErrorMessage:"ttl field (timeToLive) is not in standard Protobuf Duration format: "+u.ttl});return l=1e3*Number(h[1]),f=Date.now(),[2/*return*/,{token:u.attestationToken,expireTimeMillis:f+l,issuedAtTimeMillis:f}]}})})}function wu(t,e){var n=t.options;return{url:wr+"/projects/"+n.projectId+"/apps/"+n.appId+":exchangeDebugToken?key="+n.apiKey,body:{// eslint-disable-next-line
debug_token:e}}}var wc="firebase-app-check-store",wh="debug-token",wl=null;function wf(){return wl||(wl=new Promise(function(t,e){try{var n=indexedDB.open("firebase-app-check-database",1);n.onsuccess=function(e){t(e.target.result)},n.onerror=function(t){var n;e(b8.create("storage-open"/* STORAGE_OPEN */,{originalErrorMessage:null===(n=t.target.error)||void 0===n?void 0:n.message}))},n.onupgradeneeded=function(t){var e=t.target.result;// We don't use 'break' in this switch statement, the fall-through
// behavior is what we want, because if there are multiple versions between
// the old version and the current version, we want ALL the migrations
// that correspond to those versions to run, not only the last one.
// eslint-disable-next-line default-case
0===t.oldVersion&&e.createObjectStore(wc,{keyPath:"compositeKey"})}}catch(t){e(b8.create("storage-open"/* STORAGE_OPEN */,{originalErrorMessage:t.message}))}}))}function wp(t,e){return H(this,void 0,void 0,function(){var n,r;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,wf()];case 1:return r=(n=i.sent().transaction(wc,"readwrite")).objectStore(wc).put({compositeKey:t,value:e}),[2/*return*/,new Promise(function(t,e){r.onsuccess=function(e){t()},n.onerror=function(t){var n;e(b8.create("storage-set"/* STORAGE_WRITE */,{originalErrorMessage:null===(n=t.target.error)||void 0===n?void 0:n.message}))}})]}})})}function wd(t){return H(this,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:return[4/*yield*/,wf()];case 1:return n=(e=r.sent().transaction(wc,"readonly")).objectStore(wc).get(t),[2/*return*/,new Promise(function(t,r){n.onsuccess=function(e){var n=e.target.result;n?t(n.value):t(void 0)},e.onerror=function(t){var e;r(b8.create("storage-get"/* STORAGE_GET */,{originalErrorMessage:null===(e=t.target.error)||void 0===e?void 0:e.message}))}})]}})})}function wv(t){return t.options.appId+"-"+t.name}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var wg=new tX("@firebase/app-check");/**
 * Always resolves. In case of an error writing to indexeddb, print a warning and resolve the promise
 */function wm(t,e){return tp()?wp(wv(t),e).catch(function(t){// swallow the error and resolve the promise
wg.warn("Failed to write token to indexeddb. Error: "+t)}):Promise.resolve()}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// Initial hardcoded value agreed upon across platforms for initial launch.
// Format left open for possible dynamic error values and other fields in the future.
var wy={error:"UNKNOWN_ERROR"};/**
 * This function will always resolve.
 * The result will contain an error field if there is any error.
 * In case there is an error, the token field in the result will be populated with a dummy value
 */function w_(t,e,n){return void 0===n&&(n=!1),H(this,void 0,void 0,function(){var r,i,o,a,s,u,c,h,l,f;return W(this,function(p){switch(p.label){case 0:if(wa(t),i=(r=we(t)).token,o=void 0,i)return[3/*break*/,2];return[4/*yield*/,r.cachedTokenPromise];case 1:(a=p.sent())&&wT(a)&&(i=a,wn(t,K(K({},r),{token:i})),// notify all listeners with the cached token
wI(t,{token:i.token})),p.label=2;case 2:// Return the cached token (from either memory or indexedDB) if it's valid
if(!n&&i&&wT(i))return[2/*return*/,{token:i.token}];if(!wt.enabled)return[3/*break*/,6];return u=ws,c=wu,h=[t],[4/*yield*/,function(){return H(this,void 0,void 0,function(){var t;return W(this,function(e){if((t=wt).enabled&&t.token)return[2/*return*/,t.token.promise];throw Error("\n            Can't get debug token in production mode.\n        ")})})}()];case 3:return[4/*yield*/,u.apply(void 0,[c.apply(void 0,h.concat([p.sent()])),e])];case 4:// Write debug token to indexedDB.
return[4/*yield*/,wm(t,s=p.sent())];case 5:return(// Write debug token to indexedDB.
p.sent(),// Write debug token to state.
wn(t,K(K({},r),{token:s})),[2/*return*/,{token:s.token}]);case 6:return p.trys.push([6,8,,9]),[4/*yield*/,r.provider.getToken()];case 7:return(// state.provider is populated in initializeAppCheck()
// ensureActivated() at the top of this function checks that
// initializeAppCheck() has been called.
i=p.sent(),[3/*break*/,9]);case 8:return l=p.sent(),// `getToken()` should never throw, but logging error text to console will aid debugging.
wg.error(l),o=l,[3/*break*/,9];case 9:var d;if(i)return[3/*break*/,10];return d=o,// if token is undefined, there must be an error.
// we return a dummy token along with the error
f={token:tt.encodeString(JSON.stringify(wy),/* webSafe= */!1),error:d},[3/*break*/,12];case 10:return f={token:i.token},// write the new token to the memory state as well as the persistent storage.
// Only do it if we got a valid new token
wn(t,K(K({},r),{token:i})),[4/*yield*/,wm(t,i)];case 11:p.sent(),p.label=12;case 12:return wI(t,f),[2/*return*/,f]}})})}function wb(t,e,n,r,i){var o=we(t),a=K(K({},o),{tokenObservers:Q(Q([],o.tokenObservers),[{next:r,error:i,type:n}])});/**
     * Invoke the listener with the valid token, then start the token refresher
     */if(!a.tokenRefresher){var s=function(t,e){var n=this;return new wi(// for which we should retry, it will effectively stop the proactive refresh.
function(){return H(n,void 0,void 0,function(){var n;return W(this,function(r){switch(r.label){case 0:if(we(t).token)return[3/*break*/,2];return[4/*yield*/,w_(t,e)];case 1:return n=r.sent(),[3/*break*/,4];case 2:return[4/*yield*/,w_(t,e,!0)];case 3:n=r.sent(),r.label=4;case 4:// getToken() always resolves. In case the result has an error field defined, it means the operation failed, and we should retry.
if(n.error)throw n.error;return[2/*return*/]}})})},function(){// TODO: when should we retry?
return!0},function(){var e=we(t);if(!e.token)return 0;// issuedAtTime + (50% * total TTL) + 5 minutes
var n=e.token.issuedAtTimeMillis+(e.token.expireTimeMillis-e.token.issuedAtTimeMillis)*.5+3e5;return Math.max(0,(n=Math.min(n,e.token.expireTimeMillis-3e5))-Date.now())},3e4,96e4)}(t,e);a.tokenRefresher=s}// Invoke the listener async immediately if there is a valid token
// in memory.
if(!a.tokenRefresher.isRunning()&&o.isTokenAutoRefreshEnabled&&a.tokenRefresher.start(),o.token&&wT(o.token)){var u=o.token;Promise.resolve().then(function(){return r({token:u.token})}).catch(function(){/** Ignore errors in listeners. */})}else null==o.token&&o.cachedTokenPromise// Storage token promise. Always populated in `activate()`.
.then(function(t){t&&wT(t)&&r({token:t.token})}).catch(function(){/** Ignore errors in listeners. */});wn(t,a)}function ww(t,e){var n=we(t),r=n.tokenObservers.filter(function(t){return t.next!==e});0===r.length&&n.tokenRefresher&&n.tokenRefresher.isRunning()&&n.tokenRefresher.stop(),wn(t,K(K({},n),{tokenObservers:r}))}function wI(t,e){for(var n=we(t).tokenObservers,r=0;r<n.length;r++){var i=n[r];try{"EXTERNAL"/* EXTERNAL */===i.type&&null!=e.error?// the supplied error handler. A 3P observer always has an error
// handler.
i.error(e.error):// If this is a 2P listener, return the token, whether or not it
// has an error field.
i.next(e)}catch(t){// Errors in the listener function itself are always ignored.
}}}function wT(t){return t.expireTimeMillis-Date.now()>0}/**
 *
 * @param app
 * @param container - Id of a HTML element.
 */function wE(t,e,n,r){var i=n.render(r,{sitekey:e,size:"invisible"}),o=we(t);wn(t,K(K({},o),{reCAPTCHAState:K(K({},o.reCAPTCHAState),{widgetId:i})}))}/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * App Check provider that can obtain a reCAPTCHA V3 token and exchange it
 * for an App Check token.
 */var wS=/** @class */function(){/**
     * Create a ReCaptchaV3Provider instance.
     * @param siteKey - ReCAPTCHA V3 siteKey.
     */function t(t){this._siteKey=t}return(/**
     * Returns an App Check token.
     * @internal
     */t.prototype.getToken=function(){return H(this,void 0,void 0,function(){var t;return W(this,function(e){switch(e.label){case 0:if(!this._app||!this._platformLoggerProvider)// We don't have an appName to provide if so.
// This should already be caught in the top level `getToken()` function.
throw b8.create("use-before-activation"/* USE_BEFORE_ACTIVATION */,{appName:""});e.label=1;case 1:return e.trys.push([1,3,,4]),[4/*yield*/,function(t){return H(this,void 0,void 0,function(){var e;return W(this,function(n){switch(n.label){case 0:return wa(t),[4/*yield*/,we(t).reCAPTCHAState.initialized.promise];case 1:return e=n.sent(),[2/*return*/,new Promise(function(n,r){// Updated after initialization is complete.
var i=we(t).reCAPTCHAState;e.ready(function(){n(e.execute(i.widgetId,{action:"fire_app_check"}))})})]}})})}(this._app)];case 2:return t=e.sent(),[3/*break*/,4];case 3:// reCaptcha.execute() throws null which is not very descriptive.
throw e.sent(),b8.create("recaptcha-error"/* RECAPTCHA_ERROR */);case 4:var n,r,i;return[2/*return*/,ws((n=this._app,r=t,{url:wr+"/projects/"+(i=n.options).projectId+"/apps/"+i.appId+":exchangeRecaptchaToken?key="+i.apiKey,body:{// eslint-disable-next-line
recaptcha_token:r}}),this._platformLoggerProvider)]}})})},t.prototype.initialize=function(t,e){var n,r,i,o,a,s,u;this._app=t,this._platformLoggerProvider=e,(n=this._siteKey,r=we(t),i=new to,wn(t,K(K({},r),{reCAPTCHAState:{initialized:i}})),o="fire_app_check_"+t.name,(a=document.createElement("div")).id=o,a.style.display="none",document.body.appendChild(a),(s=wo())?s.ready(function(){wE(t,n,s,o),i.resolve(s)}):((u=document.createElement("script")).src="https://www.google.com/recaptcha/api.js",u.onload=function(){var e=wo();if(!e)throw Error("no recaptcha");e.ready(function(){// Invisible widgets allow us to set a different siteKey for each widget, so we use them to support multiple apps
wE(t,n,e,o),i.resolve(e)})},document.head.appendChild(u)),i.promise).catch(function(){/* we don't care about the initialization result */})},t)}(),wC=/** @class */function(){function t(t){this._customProviderOptions=t}return(/**
     * @internal
     */t.prototype.getToken=function(){return H(this,void 0,void 0,function(){var t,e,n;return W(this,function(r){switch(r.label){case 0:if(!this._app)// We don't have an appName to provide if so.
// This should already be caught in the top level `getToken()` function.
throw b8.create("use-before-activation"/* USE_BEFORE_ACTIVATION */,{appName:""});return[4/*yield*/,this._customProviderOptions.getToken()];case 1:return n=null!==(e=tI((t=r.sent()).token))&&e<Date.now()&&e>0?1e3*e:Date.now(),[2/*return*/,K(K({},t),{issuedAtTimeMillis:n})]}})})},/**
     * @internal
     */t.prototype.initialize=function(t){this._app=t},t)}(),wk="app-check-internal";// The public interface
(p=b6.default).INTERNAL.registerComponent(new tV("appCheck",function(t){// getImmediate for FirebaseApp will always succeed
var e=t.getProvider("app").getImmediate(),n=t.getProvider("platform-logger");return{app:e,activate:function(t,r){return(/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 *
 * @param app
 * @param siteKeyOrProvider - optional custom attestation provider
 * or reCAPTCHA provider
 * @param isTokenAutoRefreshEnabled - if true, enables auto refresh
 * of appCheck token.
 */function(t,e,n,r){var i=we(t);if(i.activated)throw b8.create("already-activated"/* ALREADY_ACTIVATED */,{appName:t.name});var o=K(K({},i),{activated:!0});// Read cached token from storage if it exists and store it in memory.
o.cachedTokenPromise=/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Always resolves. In case of an error reading from indexeddb, resolve with undefined
 */(function(t){return H(this,void 0,void 0,function(){var e,n;return W(this,function(r){switch(r.label){case 0:if(!tp())return[3/*break*/,5];e=void 0,r.label=1;case 1:return r.trys.push([1,3,,4]),[4/*yield*/,wd(wv(t))];case 2:return e=r.sent(),[3/*break*/,4];case 3:return n=r.sent(),// swallow the error and return undefined
wg.warn("Failed to read token from indexeddb. Error: "+n),[3/*break*/,4];case 4:return[2/*return*/,e];case 5:return[2/*return*/,void 0]}})})})(t).then(function(e){return e&&wT(e)&&wn(t,K(K({},we(t)),{token:e})),e}),"string"==typeof e?o.provider=new wS(e):e instanceof wS||e instanceof wC?o.provider=e:// This was defined at beta release as simply an object with a
// getToken() method.
o.provider=new wC({getToken:e.getToken}),// Use value of global `automaticDataCollectionEnabled` (which
// itself defaults to false if not specified in config) if
// `isTokenAutoRefreshEnabled` param was not provided by user.
o.isTokenAutoRefreshEnabled=void 0===r?t.automaticDataCollectionEnabled:r,wn(t,o),o.provider.initialize(t,n)}(e,// expose getToken() and aren't recognized as the internal
// class version of themselves.
t,n,r))},setTokenAutoRefreshEnabled:function(t){var n;(n=we(e)).tokenRefresher&&(!0===t?n.tokenRefresher.start():n.tokenRefresher.stop()),wn(e,K(K({},n),{isTokenAutoRefreshEnabled:t}))},getToken:function(t){return(/**
 * Differs from internal getToken in that it throws the error.
 */function(t,e,n){return H(this,void 0,void 0,function(){var r;return W(this,function(i){switch(i.label){case 0:return[4/*yield*/,w_(t,e,n)];case 1:if((r=i.sent()).error)throw r.error;return[2/*return*/,{token:r.token}]}})})}(e,n,t))},onTokenChanged:function(t,r,i){var o,a;return o=function(){},a=function(){},o=null!=/**
             * This can still be an observer. Need to do this casting because
             * according to Typescript: "Implementation signatures of overloads
             * are not externally visible"
             */t.next?t.next.bind(t):t,null!=t.error?a=t.error.bind(t):r&&(a=r),wb(e,n,"EXTERNAL"/* EXTERNAL */,o,a),function(){return ww(e,o)}},INTERNAL:{delete:function(){for(var t=we(e).tokenObservers,n=0;n<t.length;n++)ww(e,t[n].next);return Promise.resolve()}}}},"PUBLIC"/* PUBLIC */).setServiceProps({ReCaptchaV3Provider:wS,CustomProvider:wC})/**
         * AppCheck can only be initialized by explicitly calling firebase.appCheck()
         * We don't want firebase products that consume AppCheck to gate on AppCheck
         * if the user doesn't intend them to, just because the AppCheck component
         * is registered.
         */.setInstantiationMode("EXPLICIT"/* EXPLICIT */)/**
         * Because all firebase products that depend on app-check depend on app-check-internal directly,
         * we need to initialize app-check-internal after app-check is initialized to make it
         * available to other firebase products.
         */.setInstanceCreatedCallback(function(t,e,n){t.getProvider(wk).initialize()})),// The internal interface used by other Firebase products
p.INTERNAL.registerComponent(new tV(wk,function(t){// getImmediate for FirebaseApp will always succeed
var e=t.getProvider("app").getImmediate(),n=t.getProvider("platform-logger");return{getToken:function(t){return w_(e,n,t)},addTokenListener:function(t){return wb(e,n,"INTERNAL"/* INTERNAL */,t)},removeTokenListener:function(t){return ww(e,t)}}},"PUBLIC"/* PUBLIC */).setInstantiationMode("EXPLICIT"/* EXPLICIT */)),p.registerVersion("@firebase/app-check","0.3.2"),function(){var t=/**
 * Polyfill for `globalThis` object.
 * @returns the `globalThis` object for the given environment.
 */function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==O)return O;throw Error("Unable to locate global object.")}();if("string"==typeof t.FIREBASE_APPCHECK_DEBUG_TOKEN||!0===t.FIREBASE_APPCHECK_DEBUG_TOKEN){wt.enabled=!0;var e=new to;wt.token=e,"string"==typeof t.FIREBASE_APPCHECK_DEBUG_TOKEN?e.resolve(t.FIREBASE_APPCHECK_DEBUG_TOKEN):e.resolve(function(){return H(this,void 0,void 0,function(){var t,e;return W(this,function(n){switch(n.label){case 0:t=void 0,n.label=1;case 1:return n.trys.push([1,3,,4]),[4/*yield*/,wd(wh)];case 2:return t=n.sent(),[3/*break*/,4];case 3:return n.sent(),[3/*break*/,4];case 4:if(t)return[2/*return*/,t];return(// We don't need to block on writing to indexeddb
// In case persistence failed, a new debug token will be generated everytime the page is refreshed.
// It renders the debug token useless because you have to manually register(whitelist) the new token in the firebase console again and again.
// If you see this error trying to use debug token, it probably means you are using a browser that doesn't support indexeddb.
// You should switch to a different browser that supports indexeddb
wp(wh,e="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)})).catch(function(t){return wg.warn("Failed to persist debug token to indexeddb. Error: "+t)}),// Not using logger because I don't think we ever want this accidentally hidden?
console.log("AppCheck debug token: "+e+". You will need to whitelist it in the Firebase console for it to work"),[2/*return*/,e])}})})}())}}();var wN="8.10.1";function wA(t){return Array.isArray(t=t||[])?t:[t]}function wR(t){return`[Vaadin.Router] ${t}`}ee.registerVersion("firebase",wN,"app"),ee.SDK_VERSION=wN,/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */console.warn("\nIt looks like you're using the development build of the Firebase JS SDK.\nWhen deploying Firebase apps to production, it is advisable to only import\nthe individual SDK components you intend to use.\n\nFor the module builds, these are available in the following manner\n(replace <PACKAGE> with the name of a component - i.e. auth, database, etc):\n\nCommonJS Modules:\nconst firebase = require('firebase/app');\nrequire('firebase/<PACKAGE>');\n\nES Modules:\nimport firebase from 'firebase/app';\nimport 'firebase/<PACKAGE>';\n\nTypescript:\nimport firebase from 'firebase/app';\nimport 'firebase/<PACKAGE>';\n"),ee.registerVersion("firebase","8.10.1");const wx="module",wP="nomodule",wD=[wx,wP];function wO(t){if(!t.match(/.+\.[m]?js$/))throw Error(wR(`Unsupported type for bundle "${t}": .js or .mjs expected.`))}function wL(t){if(!t||!wV(t.path))throw Error(wR('Expected route config to be an object with a "path" string property, or an array of such objects'));let e=t.bundle,n=["component","redirect","bundle"];if(!wq(t.action)&&!Array.isArray(t.children)&&!wq(t.children)&&!wU(e)&&!n.some(e=>wV(t[e])))throw Error(wR(`Expected route config "${t.path}" to include either "${n.join('", "')}" or "action" function but none found.`));if(e){if(wV(e))wO(e);else if(wD.some(t=>t in e))wD.forEach(t=>t in e&&wO(e[t]));else throw Error(wR('Expected route bundle to include either "'+wP+'" or "'+wx+'" keys, or both'))}t.redirect&&["bundle","component"].forEach(e=>{e in t&&console.warn(wR(`Route config "${t.path}" has both "redirect" and "${e}" properties, and "redirect" will always override the latter. Did you mean to only use "${e}"?`))})}function wM(t){wA(t).forEach(t=>wL(t))}function wF(t,e){let n=document.head.querySelector('script[src="'+t+'"][async]');return n||((n=document.createElement("script")).setAttribute("src",t),e===wx?n.setAttribute("type",wx):e===wP&&n.setAttribute(wP,""),n.async=!0),new Promise((t,e)=>{n.onreadystatechange=n.onload=e=>{n.__dynamicImportLoaded=!0,t(e)},n.onerror=t=>{n.parentNode&&n.parentNode.removeChild(n),e(t)},null===n.parentNode?document.head.appendChild(n):n.__dynamicImportLoaded&&t()})}function wj(t,e){return!window.dispatchEvent(new CustomEvent(`vaadin-router-${t}`,{cancelable:"go"===t,detail:e}))}function wU(t){// guard against null passing the typeof check
return"object"==typeof t&&!!t}function wq(t){return"function"==typeof t}function wV(t){return"string"==typeof t}function wB(t){let e=Error(wR(`Page not found (${t.pathname})`));return e.context=t,e.code=404,e}const wK=new class{};// The list of checks is not complete:
//  - SVG support is missing
//  - the 'rel' attribute is not considered
function wH(t){// ignore the click if the default action is prevented
if(t.defaultPrevented||0!==t.button||t.shiftKey||t.ctrlKey||t.altKey||t.metaKey)return;// find the <a> element that the click is at (or within)
let e=t.target,n=t.composedPath?t.composedPath():t.path||[];// FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays
// example to check: `for...of` loop here throws the "Not yet implemented" error
for(let t=0;t<n.length;t++){let r=n[t];if(r.nodeName&&"a"===r.nodeName.toLowerCase()){e=r;break}}for(;e&&"a"!==e.nodeName.toLowerCase();)e=e.parentNode;// ignore the click if not at an <a> element
if(!e||"a"!==e.nodeName.toLowerCase()||e.target&&"_self"!==e.target.toLowerCase()||e.hasAttribute("download")||e.hasAttribute("router-ignore")||e.pathname===window.location.pathname&&""!==e.hash)return;// ignore the click if the target is external to the app
// In IE11 HTMLAnchorElement does not have the `origin` property
let r=e.origin||/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */function(t){// IE11: on HTTP and HTTPS the default port is not included into
// window.location.origin, so won't include it here either.
let e=t.port,n=t.protocol,r="http:"===n&&"80"===e||"https:"===n&&"443"===e?t.hostname// does not include the port number (e.g. www.example.org)
:t.host;return`${n}//${r}`}(e);if(r!==window.location.origin)return;// if none of the above, convert the click into a navigation event
let{pathname:i,search:o,hash:a}=e;wj("go",{pathname:i,search:o,hash:a})&&(t.preventDefault(),t&&"click"===t.type&&window.scrollTo(0,0))}// PopStateEvent constructor shim
const wW=/Trident/.test(navigator.userAgent);function wz(t){if("vaadin-router-ignore"===t.state)return;let{pathname:e,search:n,hash:r}=window.location;wj("go",{pathname:e,search:n,hash:r})}wW&&!wq(window.PopStateEvent)&&(window.PopStateEvent=function(t,e){e=e||{};var n=document.createEvent("Event");return n.initEvent(t,!!e.bubbles,!!e.cancelable),n.state=e.state||null,n},window.PopStateEvent.prototype=window.Event.prototype);/**
 * Expose `pathToRegexp`.
 */var wG=/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {Array=}                keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */function t(e,n,r){return e instanceof RegExp?/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {Array=}  keys
 * @return {!RegExp}
 */function(t,e){if(!e)return t;// Use a negative lookahead to match only capturing groups.
var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,pattern:null});return t}(e,n):Array.isArray(e)?/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array=}  keys
 * @param  {Object=} options
 * @return {!RegExp}
 */function(e,n,r){for(var i=[],o=0;o<e.length;o++)i.push(t(e[o],n,r).source);return RegExp("(?:"+i.join("|")+")",wJ(r))}(/** @type {!Array} */e,n,r):wZ(w$(/** @type {string} */e,r),n,r)},wQ=RegExp("(\\\\.)|(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?","g");/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */function w$(t,e){for(var n,r=[],i=0,o=0,a="",s=e&&e.delimiter||"/",u=e&&e.delimiters||"./",c=!1;null!==(n=wQ.exec(t));){var h=n[0],l=n[1],f=n.index;// Ignore already escaped sequences.
if(a+=t.slice(o,f),o=f+h.length,l){a+=l[1],c=!0;continue}var p="",d=t[o],v=n[2],g=n[3],m=n[4],y=n[5];if(!c&&a.length){var _=a.length-1;u.indexOf(a[_])>-1&&(p=a[_],a=a.slice(0,_))}a&&(r.push(a),a="",c=!1);var b=""!==p&&void 0!==d&&d!==p,w="+"===y||"*"===y,I="?"===y||"*"===y,T=p||s,E=g||m;r.push({name:v||i++,prefix:p,delimiter:T,optional:I,repeat:w,partial:b,pattern:E?E.replace(/([=!:$/()])/g,"\\$1"):"[^"+wX(T)+"]+?"})}return(a||o<t.length)&&r.push(a+t.substr(o)),r}/**
 * Expose a method for transforming tokens into the path function.
 */function wY(t){// Compile all the patterns before compilation.
for(var e=Array(t.length),n=0;n<t.length;n++)"object"==typeof t[n]&&(e[n]=RegExp("^(?:"+t[n].pattern+")$"));return function(n,r){for(var i="",o=r&&r.encode||encodeURIComponent,a=0;a<t.length;a++){var s,u=t[a];if("string"==typeof u){i+=u;continue}var c=n?n[u.name]:void 0;if(Array.isArray(c)){if(!u.repeat)throw TypeError('Expected "'+u.name+'" to not repeat, but got array');if(0===c.length){if(u.optional)continue;throw TypeError('Expected "'+u.name+'" to not be empty')}for(var h=0;h<c.length;h++){if(s=o(c[h],u),!e[a].test(s))throw TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'"');i+=(0===h?u.prefix:u.delimiter)+s}continue}if("string"==typeof c||"number"==typeof c||"boolean"==typeof c){if(s=o(String(c),u),!e[a].test(s))throw TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but got "'+s+'"');i+=u.prefix+s;continue}if(u.optional){// Prepend partial segment prefixes.
u.partial&&(i+=u.prefix);continue}throw TypeError('Expected "'+u.name+'" to be '+(u.repeat?"an array":"a string"))}return i}}/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */function wX(t){return t.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1")}/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */function wJ(t){return t&&t.sensitive?"":"i"}/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}  tokens
 * @param  {Array=}  keys
 * @param  {Object=} options
 * @return {!RegExp}
 */function wZ(t,e,n){// Iterate over the tokens and create our regexp string.
for(var r=(n=n||{}).strict,i=!1!==n.start,o=!1!==n.end,a=wX(n.delimiter||"/"),s=n.delimiters||"./",u=[].concat(n.endsWith||[]).map(wX).concat("$").join("|"),c=i?"^":"",h=0===t.length,l=0;l<t.length;l++){var f=t[l];if("string"==typeof f)c+=wX(f),h=l===t.length-1&&s.indexOf(f[f.length-1])>-1;else{var p=f.repeat?"(?:"+f.pattern+")(?:"+wX(f.delimiter)+"(?:"+f.pattern+"))*":f.pattern;e&&e.push(f),f.optional?f.partial?c+=wX(f.prefix)+"("+p+")?":c+="(?:"+wX(f.prefix)+"("+p+"))?":c+=wX(f.prefix)+"("+p+")"}}return o?(r||(c+="(?:"+a+")?"),c+="$"===u?"$":"(?="+u+")"):(r||(c+="(?:"+a+"(?="+u+"))?"),h||(c+="(?="+a+"|"+u+")")),new RegExp(c,wJ(n))}wG.parse=w$,wG.compile=/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */function(t,e){return wY(w$(t,e))},wG.tokensToFunction=wY,wG.tokensToRegExp=wZ;/**
 * Universal Router (https://www.kriasoft.com/universal-router/)
 *
 * Copyright (c) 2015-present Kriasoft.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.txt file in the root directory of this source tree.
 */const{hasOwnProperty:w0}=Object.prototype,w1=new Map;function w2(t){try{return decodeURIComponent(t)}catch(e){return t}}/**
 * Universal Router (https://www.kriasoft.com/universal-router/)
 *
 * Copyright (c) 2015-present Kriasoft.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.txt file in the root directory of this source tree.
 */function w4(t){if(wq(t.route.action))return t.route.action(t)}// see https://github.com/pillarjs/path-to-regexp/issues/148
w1.set("|false",{keys:[],pattern:/(?:)/});/**
 */class w3{constructor(t,e={}){if(Object(t)!==t)throw TypeError("Invalid routes");this.baseUrl=e.baseUrl||"",this.errorHandler=e.errorHandler,this.resolveRoute=e.resolveRoute||w4,this.context=Object.assign({resolver:this},e.context),this.root=Array.isArray(t)?{path:"",__children:t,parent:null,__synthetic:!0}:t,this.root.parent=null}/**
   * Returns the current list of routes (as a shallow copy). Adding / removing
   * routes to / from the returned array does not affect the routing config,
   * but modifying the route objects does.
   *
   * @return {!Array<!Router.Route>}
   */getRoutes(){return[...this.root.__children]}/**
   * Sets the routing config (replacing the existing one).
   *
   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those
   *    (the array is shallow copied)
   */setRoutes(t){wM(t);let e=[...wA(t)];this.root.__children=e}/**
   * Appends one or several routes to the routing config and returns the
   * effective routing config after the operation.
   *
   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those
   *    (the array is shallow copied)
   * @return {!Array<!Router.Route>}
   * @protected
   */addRoutes(t){return wM(t),this.root.__children.push(...wA(t)),this.getRoutes()}/**
   * Removes all existing routes from the routing config.
   */removeRoutes(){this.setRoutes([])}/**
   * Asynchronously resolves the given pathname, i.e. finds all routes matching
   * the pathname and tries resolving them one after another in the order they
   * are listed in the routes config until the first non-null result.
   *
   * Returns a promise that is fulfilled with the return value of an object that consists of the first
   * route handler result that returns something other than `null` or `undefined` and context used to get this result.
   *
   * If no route handlers return a non-null result, or if no route matches the
   * given pathname the returned promise is rejected with a 'page not found'
   * `Error`.
   *
   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to
   *    resolve or a context object with a `pathname` property and other
   *    properties to pass to the route resolver functions.
   * @return {!Promise<any>}
   */resolve(t){let e=Object.assign({},this.context,wV(t)?{pathname:t}:t),n=/**
 * Universal Router (https://www.kriasoft.com/universal-router/)
 *
 * Copyright (c) 2015-present Kriasoft.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.txt file in the root directory of this source tree.
 *//**
 * Traverses the routes tree and matches its nodes to the given pathname from
 * the root down to the leaves. Each match consumes a part of the pathname and
 * the matching process continues for as long as there is a matching child
 * route for the remaining part of the pathname.
 *
 * The returned value is a lazily evaluated iterator.
 *
 * The leading "/" in a route path matters only for the root of the routes
 * tree (or if all parent routes are ""). In all other cases a leading "/" in
 * a child route path has no significance.
 *
 * The trailing "/" in a _route path_ matters only for the leaves of the
 * routes tree. A leaf route with a trailing "/" matches only a pathname that
 * also has a trailing "/".
 *
 * The trailing "/" in a route path does not affect matching of child routes
 * in any way.
 *
 * The trailing "/" in a _pathname_ generally does not matter (except for
 * the case of leaf nodes described above).
 *
 * The "" and "/" routes have special treatment:
 *  1. as a single route
 *     the "" and "/" routes match only the "" and "/" pathnames respectively
 *  2. as a parent in the routes tree
 *     the "" route matches any pathname without consuming any part of it
 *     the "/" route matches any absolute pathname consuming its leading "/"
 *  3. as a leaf in the routes tree
 *     the "" and "/" routes match only if the entire pathname is consumed by
 *         the parent routes chain. In this case "" and "/" are equivalent.
 *  4. several directly nested "" or "/" routes
 *     - directly nested "" or "/" routes are 'squashed' (i.e. nesting two
 *       "/" routes does not require a double "/" in the pathname to match)
 *     - if there are only "" in the parent routes chain, no part of the
 *       pathname is consumed, and the leading "/" in the child routes' paths
 *       remains significant
 *
 * Side effect:
 *   - the routes tree { path: '' } matches only the '' pathname
 *   - the routes tree { path: '', children: [ { path: '' } ] } matches any
 *     pathname (for the tree root)
 *
 * Prefix matching can be enabled also by `children: true`.
 */function t(e,n,r,i,o){let a,s;let u=0,c=e.path||"";return"/"===c.charAt(0)&&(r&&(c=c.substr(1)),r=!0),{next(h){if(e===h)return{done:!0};let l=e.__children=e.__children||e.children;if(!a&&(a=function(t,e,n,r,i){n=!!n;let o=`${t}|${n}`,a=w1.get(o);if(!a){let e=[];a={keys:e,pattern:wG(t,e,{end:n,strict:""===t})},w1.set(o,a)}let s=a.pattern.exec(e);if(!s)return null;let u=Object.assign({},i);for(let t=1;t<s.length;t++){let e=a.keys[t-1],n=e.name,r=s[t];void 0===r&&w0.call(u,n)||(e.repeat?u[n]=r?r.split(e.delimiter).map(w2):[]:u[n]=r?w2(r):r)}return{path:s[0],keys:(r||[]).concat(a.keys),params:u}}(c,n,!l,i,o)))return{done:!1,value:{route:e,keys:a.keys,params:a.params,path:a.path}};if(a&&l)for(;u<l.length;){if(!s){let i=l[u];i.parent=e;let o=a.path.length;o>0&&"/"===n.charAt(o)&&(o+=1),s=t(i,n.substr(o),r,a.keys,a.params)}let i=s.next(h);if(!i.done)return{done:!1,value:i.value};s=null,u++}return{done:!0}}}}(this.root,this.__normalizePathname(e.pathname),this.baseUrl),r=this.resolveRoute,i=null,o=null,a=e;function s(t,u=i.value.route,c){let h=null===c&&i.value.route;return(i=o||n.next(h),o=null,!t&&(i.done||!/**
 * Universal Router (https://www.kriasoft.com/universal-router/)
 *
 * Copyright (c) 2015-present Kriasoft.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.txt file in the root directory of this source tree.
 */function(t,e){let n=e;for(;n;)if((n=n.parent)===t)return!0;return!1}(u,i.value.route)))?(o=i,Promise.resolve(wK)):i.done?Promise.reject(wB(e)):(!function(t,e){let{route:n,path:r}=e;if(n&&!n.__synthetic){if(t.chain){if(n.parent){let e=t.chain.length;for(;e--&&t.chain[e].route&&t.chain[e].route!==n.parent;)t.chain.pop()}}else t.chain=[];t.chain.push({path:r,route:n})}}(a=Object.assign(a?{chain:a.chain?a.chain.slice(0):[]}:{},e,i.value),i.value),Promise.resolve(r(a)).then(e=>null!=e&&e!==wK?(a.result=e.result||e,a):s(t,u,e)))}return e.next=s,Promise.resolve().then(()=>s(!0,this.root)).catch(t=>{let e=function(t){let e=`Path '${t.pathname}' is not properly resolved due to an error.`,n=(t.route||{}).path;return n&&(e+=` Resolution had failed on route: '${n}'`),e}(a);if(t?console.warn(e):t=Error(e),t.context=t.context||a,t instanceof DOMException||(t.code=t.code||500),this.errorHandler)return a.result=this.errorHandler(t),a;throw t})}/**
   * URL constructor polyfill hook. Creates and returns an URL instance.
   */static __createUrl(t,e){return new URL(t,e)}/**
   * If the baseUrl property is set, transforms the baseUrl and returns the full
   * actual `base` string for using in the `new URL(path, base);` and for
   * prepernding the paths with. The returned base ends with a trailing slash.
   *
   * Otherwise, returns empty string.
   */get __effectiveBaseUrl(){return this.baseUrl?this.constructor.__createUrl(this.baseUrl,document.baseURI||document.URL).href.replace(/[^\/]*$/,""):""}/**
   * If the baseUrl is set, matches the pathname with the router’s baseUrl,
   * and returns the local pathname with the baseUrl stripped out.
   *
   * If the pathname does not match the baseUrl, returns undefined.
   *
   * If the `baseUrl` is not set, returns the unmodified pathname argument.
   */__normalizePathname(t){if(!this.baseUrl)return t;let e=this.__effectiveBaseUrl,n=this.constructor.__createUrl(t,e).href;if(n.slice(0,e.length)===e)return n.slice(e.length)}}w3.pathToRegexp=wG;/**
 * Universal Router (https://www.kriasoft.com/universal-router/)
 *
 * Copyright (c) 2015-present Kriasoft.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.txt file in the root directory of this source tree.
 */const{pathToRegexp:w6}=w3,w5=new Map;function w8(t,e){let n=t.get(e);if(n&&n.length>1)throw Error(`Duplicate route with name "${e}". Try seting unique 'name' route properties.`);return n&&n[0]}function w7(t){let e=t.path;return void 0!==(e=Array.isArray(e)?e[0]:e)?e:""}/**
 * @typedef NavigationTrigger
 * @type {object}
 * @property {function()} activate
 * @property {function()} inactivate
 *//** @type {Array<NavigationTrigger>} */let w9=[];const It=t=>{let e=getComputedStyle(t).getPropertyValue("animation-name");return e&&"none"!==e},Ie=(t,e)=>{let n=()=>{t.removeEventListener("animationend",n),e()};t.addEventListener("animationend",n)};function In(t,e){return t.classList.add(e),new Promise(n=>{if(It(t)){let r=t.getBoundingClientRect(),i=`height: ${r.bottom-r.top}px; width: ${r.right-r.left}px`;t.setAttribute("style",`position: absolute; ${i}`),Ie(t,()=>{t.classList.remove(e),t.removeAttribute("style"),n()})}else t.classList.remove(e),n()})}function Ir({pathname:t="",search:e="",hash:n="",chain:r=[],params:i={},redirectFrom:o,resolver:a},s){let u=r.map(t=>t.route);return{baseUrl:a&&a.baseUrl||"",pathname:t,search:e,hash:n,routes:u,route:s||u.length&&u[u.length-1]||null,params:i,redirectFrom:o,getUrl:(t={})=>Iu(Ih.pathToRegexp.compile(Ic(u))(Object.assign({},i,t)),a)}}function Ii(t,e){let n=Object.assign({},t.params);return{redirect:{pathname:e,from:t.pathname,params:n}}}function Io(t,e,n){if(wq(t))return t.apply(n,e)}function Ia(t,e,n){return r=>r&&(r.cancel||r.redirect)?r:n?Io(n[t],e,n):void 0}function Is(t){if(t&&t.length){let e=t[0].parentNode;for(let n=0;n<t.length;n++)e.removeChild(t[n])}}function Iu(t,e){let n=e.__effectiveBaseUrl;return n?e.constructor.__createUrl(t.replace(/^\//,""),n).pathname:t}function Ic(t){return t.map(t=>t.path).reduce((t,e)=>e.length?t.replace(/\/$/,"")+"/"+e.replace(/^\//,""):t,"")}/**
 * A simple client-side router for single-page applications. It uses
 * express-style middleware and has a first-class support for Web Components and
 * lazy-loading. Works great in Polymer and non-Polymer apps.
 *
 * Use `new Router(outlet, options)` to create a new Router instance.
 *
 * * The `outlet` parameter is a reference to the DOM node to render
 *   the content into.
 *
 * * The `options` parameter is an optional object with options. The following
 *   keys are supported:
 *   * `baseUrl` — the initial value for [
 *     the `baseUrl` property
 *   ](#/classes/Router#property-baseUrl)
 *
 * The Router instance is automatically subscribed to navigation events
 * on `window`.
 *
 * See [Live Examples](#/classes/Router/demos/demo/index.html) for the detailed usage demo and code snippets.
 *
 * See also detailed API docs for the following methods, for the advanced usage:
 *
 * * [setOutlet](#/classes/Router#method-setOutlet) – should be used to configure the outlet.
 * * [setTriggers](#/classes/Router#method-setTriggers) – should be used to configure the navigation events.
 * * [setRoutes](#/classes/Router#method-setRoutes) – should be used to configure the routes.
 *
 * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.
 *
 * @extends Resolver
 * @demo demo/index.html
 * @summary JavaScript class that renders different DOM content depending on
 *    a given path. It can re-render when triggered or automatically on
 *    'popstate' and / or 'click' events.
 */class Ih extends w3{/**
   * Creates a new Router instance with a given outlet, and
   * automatically subscribes it to navigation events on the `window`.
   * Using a constructor argument or a setter for outlet is equivalent:
   *
   * ```
   * const router = new Router();
   * router.setOutlet(outlet);
   * ```
   * @param {?Node=} outlet
   * @param {?RouterOptions=} options
   */constructor(t,e){let n=document.head.querySelector("base"),r=n&&n.getAttribute("href");super([],Object.assign({// Default options
baseUrl:r&&w3.__createUrl(r,document.URL).pathname.replace(/[^\/]*$/,"")},e)),this.resolveRoute=t=>this.__resolveRoute(t);let i=Ih.NavigationTrigger;Ih.setTriggers.apply(Ih,Object.keys(i).map(t=>i[t])),/**
     * The base URL for all routes in the router instance. By default,
     * if the base element exists in the `<head>`, vaadin-router
     * takes the `<base href>` attribute value, resolves against current `document.URL`
     * and gets the `pathname` from the result.
     *
     * @public
     * @type {string}
     */this.baseUrl,/**
     * A promise that is settled after the current render cycle completes. If
     * there is no render cycle in progress the promise is immediately settled
     * with the last render cycle result.
     *
     * @public
     * @type {!Promise<!RouterLocation>}
     */this.ready,this.ready=Promise.resolve(t),/**
     * Contains read-only information about the current router location:
     * pathname, active routes, parameters. See the
     * [Location type declaration](#/classes/RouterLocation)
     * for more details.
     *
     * @public
     * @type {!RouterLocation}
     */this.location,this.location=Ir({resolver:this}),this.__lastStartedRenderId=0,this.__navigationEventHandler=this.__onNavigationEvent.bind(this),this.setOutlet(t),this.subscribe(),// Using WeakMap instead of WeakSet because WeakSet is not supported by IE11
this.__createdByRouter=new WeakMap,this.__addedByRouter=new WeakMap}__resolveRoute(t){let e=t.route,n=Promise.resolve();wq(e.children)&&(n=n.then(()=>e.children(function(t){let e=Object.assign({},t);return delete e.next,e}(t))).then(t=>{null!=t||wq(e.children)||(t=e.children),function(t,e){if(!Array.isArray(t)&&!wU(t))throw Error(wR(`Incorrect "children" value for the route ${e.path}: expected array or object, but got ${t}`));e.__children=[];let n=wA(t);for(let t=0;t<n.length;t++)wL(n[t]),e.__children.push(n[t])}(t,e)}));let r={redirect:e=>Ii(t,e),component:t=>{let e=document.createElement(t);return this.__createdByRouter.set(e,!0),e}};return n.then(()=>{if(this.__isLatestRender(t))return Io(e.action,[t,r],e)}).then(t=>{var n;return null!=t&&(t instanceof HTMLElement||t.redirect||t===wK)?t:wV(e.redirect)?r.redirect(e.redirect):e.bundle?(wV(n=e.bundle)?wF(n):Promise.race(wD.filter(t=>t in n).map(t=>wF(n[t],t)))).then(()=>{},()=>{throw Error(wR(`Bundle not found: ${e.bundle}. Check if the file name is correct`))}):void 0}).then(t=>null!=t?t:wV(e.component)?r.component(e.component):void 0)}/**
   * Sets the router outlet (the DOM node where the content for the current
   * route is inserted). Any content pre-existing in the router outlet is
   * removed at the end of each render pass.
   *
   * NOTE: this method is automatically invoked first time when creating a new Router instance.
   *
   * @param {?Node} outlet the DOM node where the content for the current route
   *     is inserted.
   */setOutlet(t){t&&this.__ensureOutlet(t),this.__outlet=t}/**
   * Returns the current router outlet. The initial value is `undefined`.
   *
   * @return {?Node} the current router outlet (or `undefined`)
   */getOutlet(){return this.__outlet}/**
   * Sets the routing config (replacing the existing one) and triggers a
   * navigation event so that the router outlet is refreshed according to the
   * current `window.location` and the new routing config.
   *
   * Each route object may have the following properties, listed here in the processing order:
   * * `path` – the route path (relative to the parent route if any) in the
   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths").
   *
   * * `children` – an array of nested routes or a function that provides this
   * array at the render time. The function can be synchronous or asynchronous:
   * in the latter case the render is delayed until the returned promise is
   * resolved. The `children` function is executed every time when this route is
   * being rendered. This allows for dynamic route structures (e.g. backend-defined),
   * but it might have a performance impact as well. In order to avoid calling
   * the function on subsequent renders, you can override the `children` property
   * of the route object and save the calculated array there
   * (via `context.route.children = [ route1, route2, ...];`).
   * Parent routes are fully resolved before resolving the children. Children
   * 'path' values are relative to the parent ones.
   *
   * * `action` – the action that is executed before the route is resolved.
   * The value for this property should be a function, accepting `context`
   * and `commands` parameters described below. If present, this function is
   * always invoked first, disregarding of the other properties' presence.
   * The action can return a result directly or within a `Promise`, which
   * resolves to the result. If the action result is an `HTMLElement` instance,
   * a `commands.component(name)` result, a `commands.redirect(path)` result,
   * or a `context.next()` result, the current route resolution is finished,
   * and other route config properties are ignored.
   * See also **Route Actions** section in [Live Examples](#/classes/Router/demos/demo/index.html).
   *
   * * `redirect` – other route's path to redirect to. Passes all route parameters to the redirect target.
   * The target route should also be defined.
   * See also **Redirects** section in [Live Examples](#/classes/Router/demos/demo/index.html).
   *
   * * `bundle` – string containing the path to `.js` or `.mjs` bundle to load before resolving the route,
   * or the object with "module" and "nomodule" keys referring to different bundles.
   * Each bundle is only loaded once. If "module" and "nomodule" are set, only one bundle is loaded,
   * depending on whether the browser supports ES modules or not.
   * The property is ignored when either an `action` returns the result or `redirect` property is present.
   * Any error, e.g. 404 while loading bundle will cause route resolution to throw.
   * See also **Code Splitting** section in [Live Examples](#/classes/Router/demos/demo/index.html).
   *
   * * `component` – the tag name of the Web Component to resolve the route to.
   * The property is ignored when either an `action` returns the result or `redirect` property is present.
   * If route contains the `component` property (or an action that return a component)
   * and its child route also contains the `component` property, child route's component
   * will be rendered as a light dom child of a parent component.
   *
   * * `name` – the string name of the route to use in the
   * [`router.urlForName(name, params)`](#/classes/Router#method-urlForName)
   * navigation helper method.
   *
   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the callback
   * through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow function
   * because arrow functions do not have their own `this` reference.
   *
   * `context` object that is passed to `action` function holds the following properties:
   * * `context.pathname` – string with the pathname being resolved
   *
   * * `context.search` – search query string
   *
   * * `context.hash` – hash string
   *
   * * `context.params` – object with route parameters
   *
   * * `context.route` – object that holds the route that is currently being rendered.
   *
   * * `context.next()` – function for asynchronously getting the next route
   * contents from the resolution chain (if any)
   *
   * `commands` object that is passed to `action` function has
   * the following methods:
   *
   * * `commands.redirect(path)` – function that creates a redirect data
   * for the path specified.
   *
   * * `commands.component(component)` – function that creates a new HTMLElement
   * with current context. Note: the component created by this function is reused if visiting the same path twice in row.
   *
   *
   * @param {!Array<!Route>|!Route} routes a single route or an array of those
   * @param {?boolean} skipRender configure the router but skip rendering the
   *     route corresponding to the current `window.location` values
   *
   * @return {!Promise<!Node>}
   */setRoutes(t,e=!1){return this.__previousContext=void 0,this.__urlForName=void 0,super.setRoutes(t),e||this.__onNavigationEvent(),this.ready}/**
   * Asynchronously resolves the given pathname and renders the resolved route
   * component into the router outlet. If no router outlet is set at the time of
   * calling this method, or at the time when the route resolution is completed,
   * a `TypeError` is thrown.
   *
   * Returns a promise that is fulfilled with the router outlet DOM Node after
   * the route component is created and inserted into the router outlet, or
   * rejected if no route matches the given path.
   *
   * If another render pass is started before the previous one is completed, the
   * result of the previous render pass is ignored.
   *
   * @param {!string|!{pathname: !string, search: ?string, hash: ?string}} pathnameOrContext
   *    the pathname to render or a context object with a `pathname` property,
   *    optional `search` and `hash` properties, and other properties
   *    to pass to the resolver.
   * @param {boolean=} shouldUpdateHistory
   *    update browser history with the rendered location
   * @return {!Promise<!Node>}
   */render(t,e){let n=++this.__lastStartedRenderId,r=Object.assign({search:"",hash:""},wV(t)?{pathname:t}:t,{__renderId:n});return(// Find the first route that resolves to a non-empty result
this.ready=this.resolve(r)// Process the result of this.resolve() and handle all special commands:
// (redirect / prevent / component). If the result is a 'component',
// then go deeper and build the entire chain of nested components matching
// the pathname. Also call all 'on before' callbacks along the way.
.then(t=>this.__fullyResolveChain(t)).then(t=>{if(this.__isLatestRender(t)){let r=this.__previousContext;// Check if the render was prevented and make an early return in that case
if(t===r)return(// Replace the history with the previous context
// to make sure the URL stays the same.
this.__updateBrowserHistory(r,!0),this.location);// Skip detaching/re-attaching there are no render changes
if(this.location=Ir(t),e&&// the redirecting record in the history
this.__updateBrowserHistory(t,1===n),wj("location-changed",{router:this,location:this.location}),t.__skipAttach)return this.__copyUnchangedElements(t,r),this.__previousContext=t,this.location;this.__addAppearingContent(t,r);let i=this.__animateIfNeeded(t);return this.__runOnAfterEnterCallbacks(t),this.__runOnAfterLeaveCallbacks(t,r),i.then(()=>{if(this.__isLatestRender(t))return(// If there is another render pass started after this one,
// the 'disappearing content' would be removed when the other
// render pass calls `this.__addAppearingContent()`
this.__removeDisappearingContent(),this.__previousContext=t,this.location)})}}).catch(t=>{if(n===this.__lastStartedRenderId)throw e&&this.__updateBrowserHistory(r),Is(this.__outlet&&this.__outlet.children),this.location=Ir(Object.assign(r,{resolver:this})),wj("error",Object.assign({router:this,error:t},r)),t}),this.ready)}// `topOfTheChainContextBeforeRedirects` is a context coming from Resolver.resolve().
// It would contain a 'redirect' route or the first 'component' route that
// matched the pathname. There might be more child 'component' routes to be
// resolved and added into the chain. This method would find and add them.
// `contextBeforeRedirects` is the context containing such a child component
// route. It's only necessary when this method is called recursively (otherwise
// it's the same as the 'top of the chain' context).
//
// Apart from building the chain of child components, this method would also
// handle 'redirect' routes, call 'onBefore' callbacks and handle 'prevent'
// and 'redirect' callback results.
__fullyResolveChain(t,e=t){return this.__findComponentContextAfterAllRedirects(e)// `contextAfterRedirects` is always a context with an `HTMLElement` result
// In other cases the promise gets rejected and .then() is not called
.then(n=>{let r=n!==e,i=r?n:t,o=Iu(Ic(n.chain),n.resolver),a=o===n.pathname,s=(t,e=t.route,n)=>t.next(void 0,e,n).then(n=>{if(null===n||n===wK){// Next context is not found in children, ...
    if(a)return t;if(null!==e.parent)return s(t,e.parent,n)}return n});return s(n).then(t=>{if(null===t||t===wK)throw wB(i);return t&&t!==wK&&t!==n?this.__fullyResolveChain(i,t):this.__amendWithOnBeforeCallbacks(n)})})}__findComponentContextAfterAllRedirects(t){let e=t.result;return e instanceof HTMLElement?(!function(t,e){e.location=Ir(t);let n=t.chain.map(t=>t.route).indexOf(t.route);t.chain[n].element=e}(t,e),Promise.resolve(t)):e.redirect?this.__redirect(e.redirect,t.__redirectCount,t.__renderId).then(t=>this.__findComponentContextAfterAllRedirects(t)):e instanceof Error?Promise.reject(e):Promise.reject(Error(wR(`Invalid route resolution result for path "${t.pathname}". Expected redirect object or HTML element, but got: "${function(t){if("object"!=typeof t)return String(t);let e=Object.prototype.toString.call(t).match(/ (.*)\]$/)[1];return"Object"===e||"Array"===e?`${e} ${JSON.stringify(t)}`:e}(e)}". Double check the action return value for the route.`)))}__amendWithOnBeforeCallbacks(t){return this.__runOnBeforeCallbacks(t).then(e=>e===this.__previousContext||e===t?e:this.__fullyResolveChain(e))}__runOnBeforeCallbacks(t){let e=this.__previousContext||{},n=e.chain||[],r=t.chain,i=Promise.resolve(),o=()=>({cancel:!0}),a=e=>Ii(t,e);if(t.__divergedChainIndex=0,t.__skipAttach=!1,n.length){for(let e=0;e<Math.min(n.length,r.length)&&n[e].route===r[e].route&&(n[e].path===r[e].path||n[e].element===r[e].element)&&this.__isReusableElement(n[e].element,r[e].element);e=++t.__divergedChainIndex);if(// Skip re-attaching and notifications if element and chain do not change
t.__skipAttach=r.length===n.length&&t.__divergedChainIndex==r.length&&// Same element
this.__isReusableElement(t.result,e.result),t.__skipAttach){// execute onBeforeLeave for changed segment element when skipping attach
for(let e=r.length-1;e>=0;e--)i=this.__runOnBeforeLeaveCallbacks(i,t,{prevent:o},n[e]);// execute onBeforeEnter for changed segment element when skipping attach
for(let e=0;e<r.length;e++)i=this.__runOnBeforeEnterCallbacks(i,t,{prevent:o,redirect:a},r[e]),n[e].element.location=Ir(t,n[e].route)}else for(let e=n.length-1;e>=t.__divergedChainIndex;e--)i=this.__runOnBeforeLeaveCallbacks(i,t,{prevent:o},n[e])}// execute onBeforeEnter when NOT skipping attach
if(!t.__skipAttach)for(let e=0;e<r.length;e++)e<t.__divergedChainIndex?e<n.length&&n[e].element&&(n[e].element.location=Ir(t,n[e].route)):(i=this.__runOnBeforeEnterCallbacks(i,t,{prevent:o,redirect:a},r[e]),r[e].element&&(r[e].element.location=Ir(t,r[e].route)));return i.then(e=>{if(e){if(e.cancel)return this.__previousContext.__renderId=t.__renderId,this.__previousContext;if(e.redirect)return this.__redirect(e.redirect,t.__redirectCount,t.__renderId)}return t})}__runOnBeforeLeaveCallbacks(t,e,n,r){let i=Ir(e);return t.then(t=>{if(this.__isLatestRender(e)){let e=Ia("onBeforeLeave",[i,n,this],r.element);return e(t)}}).then(t=>{if(!(t||{}).redirect)return t})}__runOnBeforeEnterCallbacks(t,e,n,r){let i=Ir(e,r.route);return t.then(t=>{if(this.__isLatestRender(e)){let e=Ia("onBeforeEnter",[i,n,this],r.element);return e(t)}})}__isReusableElement(t,e){return!!t&&!!e&&(this.__createdByRouter.get(t)&&this.__createdByRouter.get(e)?t.localName===e.localName:t===e)}__isLatestRender(t){return t.__renderId===this.__lastStartedRenderId}__redirect(t,e,n){if(e>256)throw Error(wR(`Too many redirects when rendering ${t.from}`));return this.resolve({pathname:this.urlForPath(t.pathname,t.params),redirectFrom:t.from,__redirectCount:(e||0)+1,__renderId:n})}__ensureOutlet(t=this.__outlet){if(!(t instanceof Node))throw TypeError(wR(`Expected router outlet to be a valid DOM Node (but got ${t})`))}__updateBrowserHistory({pathname:t,search:e="",hash:n=""},r){(window.location.pathname!==t||window.location.search!==e||window.location.hash!==n)&&(window.history[r?"replaceState":"pushState"](null,document.title,t+e+n),window.dispatchEvent(new PopStateEvent("popstate",{state:"vaadin-router-ignore"})))}__copyUnchangedElements(t,e){// Find the deepest common parent between the last and the new component
// chains. Update references for the unchanged elements in the new chain
let n=this.__outlet;for(let r=0;r<t.__divergedChainIndex;r++){let i=e&&e.chain[r].element;if(i){if(i.parentNode===n)t.chain[r].element=i,n=i;else break}}return n}__addAppearingContent(t,e){this.__ensureOutlet(),// If the previous 'entering' animation has not completed yet,
// stop it and remove that content from the DOM before adding new one.
this.__removeAppearingContent();// Copy reusable elements from the previousContext to current
let n=this.__copyUnchangedElements(t,e);// Keep two lists of DOM elements:
//  - those that should be removed once the transition animation is over
//  - and those that should remain
this.__appearingContent=[],this.__disappearingContent=Array.from(n.children).filter(e=>this.__addedByRouter.get(e)&&// Do not remove the result element to avoid flickering
    e!==t.result);// Add new elements (starting after the deepest common parent) to the DOM.
// That way only the components that are actually different between the two
// locations are added to the DOM (and those that are common remain in the
// DOM without first removing and then adding them again).
let r=n;for(let e=t.__divergedChainIndex;e<t.chain.length;e++){let i=t.chain[e].element;i&&(r.appendChild(i),this.__addedByRouter.set(i,!0),r===n&&this.__appearingContent.push(i),r=i)}}__removeDisappearingContent(){this.__disappearingContent&&Is(this.__disappearingContent),this.__disappearingContent=null,this.__appearingContent=null}__removeAppearingContent(){this.__disappearingContent&&this.__appearingContent&&(Is(this.__appearingContent),this.__disappearingContent=null,this.__appearingContent=null)}__runOnAfterLeaveCallbacks(t,e){if(e)// REVERSE iteration: from Z to A
for(let n=e.chain.length-1;n>=t.__divergedChainIndex&&this.__isLatestRender(t);n--){let r=e.chain[n].element;if(r)try{let n=Ir(t);Io(r.onAfterLeave,[n,{},e.resolver],r)}finally{this.__disappearingContent.indexOf(r)>-1&&Is(r.children)}}}__runOnAfterEnterCallbacks(t){// forward iteration: from A to Z
for(let e=t.__divergedChainIndex;e<t.chain.length&&this.__isLatestRender(t);e++){let n=t.chain[e].element||{},r=Ir(t,t.chain[e].route);Io(n.onAfterEnter,[r,{},t.resolver],n)}}__animateIfNeeded(t){let e;let n=(this.__disappearingContent||[])[0],r=(this.__appearingContent||[])[0],i=[],o=t.chain;for(let t=o.length;t>0;t--)if(o[t-1].route.animate){e=o[t-1].route.animate;break}if(n&&r&&e){let t=wU(e)&&e.leave||"leaving",o=wU(e)&&e.enter||"entering";i.push(In(n,t)),i.push(In(r,o))}return Promise.all(i).then(()=>t)}/**
   * Subscribes this instance to navigation events on the `window`.
   *
   * NOTE: beware of resource leaks. For as long as a router instance is
   * subscribed to navigation events, it won't be garbage collected.
   */subscribe(){window.addEventListener("vaadin-router-go",this.__navigationEventHandler)}/**
   * Removes the subscription to navigation events created in the `subscribe()`
   * method.
   */unsubscribe(){window.removeEventListener("vaadin-router-go",this.__navigationEventHandler)}__onNavigationEvent(t){let{pathname:e,search:n,hash:r}=t?t.detail:window.location;wV(this.__normalizePathname(e))&&(t&&t.preventDefault&&t.preventDefault(),this.render({pathname:e,search:n,hash:r},!0))}/**
   * Configures what triggers Router navigation events:
   *  - `POPSTATE`: popstate events on the current `window`
   *  - `CLICK`: click events on `<a>` links leading to the current page
   *
   * This method is invoked with the pre-configured values when creating a new Router instance.
   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.
   *
   * See the `router-config.js` for the default navigation triggers config. Based on it, you can
   * create the own one and only import the triggers you need, instead of pulling in all the code,
   * e.g. if you want to handle `click` differently.
   *
   * See also **Navigation Triggers** section in [Live Examples](#/classes/Router/demos/demo/index.html).
   *
   * @param {...NavigationTrigger} triggers
   */static setTriggers(...t){w9.forEach(t=>t.inactivate()),t.forEach(t=>t.activate()),w9=t}/**
   * Generates a URL for the route with the given name, optionally performing
   * substitution of parameters.
   *
   * The route is searched in all the Router instances subscribed to
   * navigation events.
   *
   * **Note:** For child route names, only array children are considered.
   * It is not possible to generate URLs using a name for routes set with
   * a children function.
   *
   * @function urlForName
   * @param {!string} name the route name or the route’s `component` name.
   * @param {Params=} params Optional object with route path parameters.
   * Named parameters are passed by name (`params[name] = value`), unnamed
   * parameters are passed by index (`params[index] = value`).
   *
   * @return {string}
   */urlForName(t,e){return this.__urlForName||(this.__urlForName=function(t,e={}){if(!(t instanceof w3))throw TypeError("An instance of Resolver is expected");let n=new Map;return(r,i)=>{let o=w8(n,r);if(!o&&(n.clear(),function t(e,n,r){let i=n.name||n.component;if(i&&(e.has(i)?e.get(i).push(n):e.set(i,[n])),Array.isArray(r))for(let i=0;i<r.length;i++){let o=r[i];o.parent=n,t(e,o,o.__children||o.children)}}(n,t.root,t.root.__children),!(o=w8(n,r))))throw Error(`Route "${r}" not found`);let a=w5.get(o.fullPath);if(!a){let t=w7(o),e=o.parent;for(;e;){let n=w7(e);n&&(t=n.replace(/\/$/,"")+"/"+t.replace(/^\//,"")),e=e.parent}let n=w6.parse(t),r=w6.tokensToFunction(n),i=Object.create(null);for(let t=0;t<n.length;t++)wV(n[t])||(i[n[t].name]=!0);a={toPath:r,keys:i},w5.set(t,a),o.fullPath=t}let s=a.toPath(i,e)||"/";if(e.stringifyQueryParams&&i){let t={},n=Object.keys(i);for(let e=0;e<n.length;e++){let r=n[e];a.keys[r]||(t[r]=i[r])}let r=e.stringifyQueryParams(t);r&&(s+="?"===r.charAt(0)?r:`?${r}`)}return s}}(this)),Iu(this.__urlForName(t,e),this)}/**
   * Generates a URL for the given route path, optionally performing
   * substitution of parameters.
   *
   * @param {!string} path string route path declared in [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths").
   * @param {Params=} params Optional object with route path parameters.
   * Named parameters are passed by name (`params[name] = value`), unnamed
   * parameters are passed by index (`params[index] = value`).
   *
   * @return {string}
   */urlForPath(t,e){return Iu(Ih.pathToRegexp.compile(t)(e),this)}/**
   * Triggers navigation to a new path. Returns a boolean without waiting until
   * the navigation is complete. Returns `true` if at least one `Router`
   * has handled the navigation (was subscribed and had `baseUrl` matching
   * the `path` argument), otherwise returns `false`.
   *
   * @param {!string|!{pathname: !string, search: (string|undefined), hash: (string|undefined)}} path
   *   a new in-app path string, or an URL-like object with `pathname`
   *   string property, and optional `search` and `hash` string properties.
   * @return {boolean}
   */static go(t){let{pathname:e,search:n,hash:r}=wV(t)?this.__createUrl(t,"http://a")// some base to omit origin
:t;return wj("go",{pathname:e,search:n,hash:r})}}const Il=/\/\*\*\s+vaadin-dev-mode:start([\s\S]*)vaadin-dev-mode:end\s+\*\*\//i,If=window.Vaadin&&window.Vaadin.Flow&&window.Vaadin.Flow.clients;function Ip(t,e){if("function"!=typeof t)return;let n=Il.exec(t.toString());if(n)try{// requires CSP: script-src 'unsafe-eval'
t=Function(n[1])}catch(t){// eat the exception
console.log("vaadin-development-mode-detector: uncommentAndRun() failed",t)}return t(e)}// A guard against polymer-modulizer removing the window.Vaadin
// initialization above.
window.Vaadin=window.Vaadin||{};/**
 * Inspects the source code of the given `callback` function for
 * specially-marked _commented_ code. If such commented code is found in the
 * callback source, uncomments and runs that code instead of the callback
 * itself. Otherwise runs the callback as is.
 *
 * The optional arguments are passed into the callback / uncommented code,
 * the result is returned.
 *
 * See the `isMinified()` function source code in this file for an example.
 *
 */const Id=function(t,e){if(window.Vaadin.developmentMode)return Ip(t,e)};void 0===window.Vaadin.developmentMode&&(window.Vaadin.developmentMode=function(){try{if(localStorage.getItem("vaadin.developmentmode.force"))return!0;if(!(["localhost","127.0.0.1"].indexOf(window.location.hostname)>=0))return!1;if(If)return!function(){if(If){let t=Object.keys(If).map(t=>If[t]).filter(t=>t.productionMode);if(t.length>0)return!0}return!1}();return!Ip(function(){/** vaadin-dev-mode:start
    return false;
    vaadin-dev-mode:end **/return!0})}catch(t){// Some error in this code, assume production so no further actions will be taken
return!1}}()),window.Vaadin=window.Vaadin||{},window.Vaadin.registrations=window.Vaadin.registrations||[],window.Vaadin.registrations.push({is:"@vaadin/router",version:"1.7.4"}),Id(/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */function(){/** vaadin-dev-mode:start
  (function () {
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
  return typeof obj;
} : function (obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var getPolymerVersion = function getPolymerVersion() {
  return window.Polymer && window.Polymer.version;
};

var StatisticsGatherer = function () {
  function StatisticsGatherer(logger) {
    classCallCheck(this, StatisticsGatherer);

    this.now = new Date().getTime();
    this.logger = logger;
  }

  createClass(StatisticsGatherer, [{
    key: 'frameworkVersionDetectors',
    value: function frameworkVersionDetectors() {
      return {
        'Flow': function Flow() {
          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {
            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {
              return window.Vaadin.Flow.clients[key];
            }).filter(function (client) {
              return client.getVersionInfo;
            }).map(function (client) {
              return client.getVersionInfo().flow;
            });
            if (flowVersions.length > 0) {
              return flowVersions[0];
            }
          }
        },
        'Vaadin Framework': function VaadinFramework() {
          if (window.vaadin && window.vaadin.clients) {
            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {
              return client.getVersionInfo;
            }).map(function (client) {
              return client.getVersionInfo().vaadinVersion;
            });
            if (frameworkVersions.length > 0) {
              return frameworkVersions[0];
            }
          }
        },
        'AngularJs': function AngularJs() {
          if (window.angular && window.angular.version && window.angular.version) {
            return window.angular.version.full;
          }
        },
        'Angular': function Angular() {
          if (window.ng) {
            var tags = document.querySelectorAll("[ng-version]");
            if (tags.length > 0) {
              return tags[0].getAttribute("ng-version");
            }
            return "Unknown";
          }
        },
        'Backbone.js': function BackboneJs() {
          if (window.Backbone) {
            return window.Backbone.VERSION;
          }
        },
        'React': function React() {
          var reactSelector = '[data-reactroot], [data-reactid]';
          if (!!document.querySelector(reactSelector)) {
            // React does not publish the version by default
            return "unknown";
          }
        },
        'Ember': function Ember() {
          if (window.Em && window.Em.VERSION) {
            return window.Em.VERSION;
          } else if (window.Ember && window.Ember.VERSION) {
            return window.Ember.VERSION;
          }
        },
        'jQuery': function (_jQuery) {
          function jQuery() {
            return _jQuery.apply(this, arguments);
          }

          jQuery.toString = function () {
            return _jQuery.toString();
          };

          return jQuery;
        }(function () {
          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {
            return jQuery.prototype.jquery;
          }
        }),
        'Polymer': function Polymer() {
          var version = getPolymerVersion();
          if (version) {
            return version;
          }
        },
        'LitElement': function LitElement() {
          var version = window.litElementVersions && window.litElementVersions[0];
          if (version) {
            return version;
          }
        },
        'LitHtml': function LitHtml() {
          var version = window.litHtmlVersions && window.litHtmlVersions[0];
          if (version) {
            return version;
          }
        },
        'Vue.js': function VueJs() {
          if (window.Vue) {
            return window.Vue.version;
          }
        }
      };
    }
  }, {
    key: 'getUsedVaadinElements',
    value: function getUsedVaadinElements(elements) {
      var version = getPolymerVersion();
      var elementClasses = void 0;
      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.
      // Check all locations calling the method getEntries() in
      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106
      // Currently it is only used by BootstrapHandler.
      if (version && version.indexOf('2') === 0) {
        // Polymer 2: components classes are stored in window.Vaadin
        elementClasses = Object.keys(window.Vaadin).map(function (c) {
          return window.Vaadin[c];
        }).filter(function (c) {
          return c.is;
        });
      } else {
        // Polymer 3: components classes are stored in window.Vaadin.registrations
        elementClasses = window.Vaadin.registrations || [];
      }
      elementClasses.forEach(function (klass) {
        var version = klass.version ? klass.version : "0.0.0";
        elements[klass.is] = { version: version };
      });
    }
  }, {
    key: 'getUsedVaadinThemes',
    value: function getUsedVaadinThemes(themes) {
      ['Lumo', 'Material'].forEach(function (themeName) {
        var theme;
        var version = getPolymerVersion();
        if (version && version.indexOf('2') === 0) {
          // Polymer 2: themes are stored in window.Vaadin
          theme = window.Vaadin[themeName];
        } else {
          // Polymer 3: themes are stored in custom element registry
          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');
        }
        if (theme && theme.version) {
          themes[themeName] = { version: theme.version };
        }
      });
    }
  }, {
    key: 'getFrameworks',
    value: function getFrameworks(frameworks) {
      var detectors = this.frameworkVersionDetectors();
      Object.keys(detectors).forEach(function (framework) {
        var detector = detectors[framework];
        try {
          var version = detector();
          if (version) {
            frameworks[framework] = { version: version };
          }
        } catch (e) {}
      });
    }
  }, {
    key: 'gather',
    value: function gather(storage) {
      var storedStats = storage.read();
      var gatheredStats = {};
      var types = ["elements", "frameworks", "themes"];

      types.forEach(function (type) {
        gatheredStats[type] = {};
        if (!storedStats[type]) {
          storedStats[type] = {};
        }
      });

      var previousStats = JSON.stringify(storedStats);

      this.getUsedVaadinElements(gatheredStats.elements);
      this.getFrameworks(gatheredStats.frameworks);
      this.getUsedVaadinThemes(gatheredStats.themes);

      var now = this.now;
      types.forEach(function (type) {
        var keys = Object.keys(gatheredStats[type]);
        keys.forEach(function (key) {
          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {
            storedStats[type][key] = { firstUsed: now };
          }
          // Discards any previously logged version number
          storedStats[type][key].version = gatheredStats[type][key].version;
          storedStats[type][key].lastUsed = now;
        });
      });

      var newStats = JSON.stringify(storedStats);
      storage.write(newStats);
      if (newStats != previousStats && Object.keys(storedStats).length > 0) {
        this.logger.debug("New stats: " + newStats);
      }
    }
  }]);
  return StatisticsGatherer;
}();

var StatisticsStorage = function () {
  function StatisticsStorage(key) {
    classCallCheck(this, StatisticsStorage);

    this.key = key;
  }

  createClass(StatisticsStorage, [{
    key: 'read',
    value: function read() {
      var localStorageStatsString = localStorage.getItem(this.key);
      try {
        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');
      } catch (e) {
        return {};
      }
    }
  }, {
    key: 'write',
    value: function write(data) {
      localStorage.setItem(this.key, data);
    }
  }, {
    key: 'clear',
    value: function clear() {
      localStorage.removeItem(this.key);
    }
  }, {
    key: 'isEmpty',
    value: function isEmpty() {
      var storedStats = this.read();
      var empty = true;
      Object.keys(storedStats).forEach(function (key) {
        if (Object.keys(storedStats[key]).length > 0) {
          empty = false;
        }
      });

      return empty;
    }
  }]);
  return StatisticsStorage;
}();

var StatisticsSender = function () {
  function StatisticsSender(url, logger) {
    classCallCheck(this, StatisticsSender);

    this.url = url;
    this.logger = logger;
  }

  createClass(StatisticsSender, [{
    key: 'send',
    value: function send(data, errorHandler) {
      var logger = this.logger;

      if (navigator.onLine === false) {
        logger.debug("Offline, can't send");
        errorHandler();
        return;
      }
      logger.debug("Sending data to " + this.url);

      var req = new XMLHttpRequest();
      req.withCredentials = true;
      req.addEventListener("load", function () {
        // Stats sent, nothing more to do
        logger.debug("Response: " + req.responseText);
      });
      req.addEventListener("error", function () {
        logger.debug("Send failed");
        errorHandler();
      });
      req.addEventListener("abort", function () {
        logger.debug("Send aborted");
        errorHandler();
      });
      req.open("POST", this.url);
      req.setRequestHeader("Content-Type", "application/json");
      req.send(data);
    }
  }]);
  return StatisticsSender;
}();

var StatisticsLogger = function () {
  function StatisticsLogger(id) {
    classCallCheck(this, StatisticsLogger);

    this.id = id;
  }

  createClass(StatisticsLogger, [{
    key: '_isDebug',
    value: function _isDebug() {
      return localStorage.getItem("vaadin." + this.id + ".debug");
    }
  }, {
    key: 'debug',
    value: function debug(msg) {
      if (this._isDebug()) {
        console.info(this.id + ": " + msg);
      }
    }
  }]);
  return StatisticsLogger;
}();

var UsageStatistics = function () {
  function UsageStatistics() {
    classCallCheck(this, UsageStatistics);

    this.now = new Date();
    this.timeNow = this.now.getTime();
    this.gatherDelay = 10; // Delay between loading this file and gathering stats
    this.initialDelay = 24 * 60 * 60;

    this.logger = new StatisticsLogger("statistics");
    this.storage = new StatisticsStorage("vaadin.statistics.basket");
    this.gatherer = new StatisticsGatherer(this.logger);
    this.sender = new StatisticsSender("https://tools.vaadin.com/usage-stats/submit", this.logger);
  }

  createClass(UsageStatistics, [{
    key: 'maybeGatherAndSend',
    value: function maybeGatherAndSend() {
      var _this = this;

      if (localStorage.getItem(UsageStatistics.optOutKey)) {
        return;
      }
      this.gatherer.gather(this.storage);
      setTimeout(function () {
        _this.maybeSend();
      }, this.gatherDelay * 1000);
    }
  }, {
    key: 'lottery',
    value: function lottery() {
      return true;
    }
  }, {
    key: 'currentMonth',
    value: function currentMonth() {
      return this.now.getYear() * 12 + this.now.getMonth();
    }
  }, {
    key: 'maybeSend',
    value: function maybeSend() {
      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));
      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));

      if (!firstUse) {
        // Use a grace period to avoid interfering with tests, incognito mode etc
        firstUse = this.timeNow;
        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);
      }

      if (this.timeNow < firstUse + this.initialDelay * 1000) {
        this.logger.debug("No statistics will be sent until the initial delay of " + this.initialDelay + "s has passed");
        return;
      }
      if (this.currentMonth() <= monthProcessed) {
        this.logger.debug("This month has already been processed");
        return;
      }
      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());
      // Use random sampling
      if (this.lottery()) {
        this.logger.debug("Congratulations, we have a winner!");
      } else {
        this.logger.debug("Sorry, no stats from you this time");
        return;
      }

      this.send();
    }
  }, {
    key: 'send',
    value: function send() {
      // Ensure we have the latest data
      this.gatherer.gather(this.storage);

      // Read, send and clean up
      var data = this.storage.read();
      data["firstUse"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));
      data["usageStatisticsVersion"] = UsageStatistics.version;
      var info = 'This request contains usage statistics gathered from the application running in development mode. \n\nStatistics gathering is automatically disabled and excluded from production builds.\n\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n\n\n\n';
      var self = this;
      this.sender.send(info + JSON.stringify(data), function () {
        // Revert the 'month processed' flag
        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);
      });
    }
  }], [{
    key: 'version',
    get: function get$1() {
      return '2.1.0';
    }
  }, {
    key: 'firstUseKey',
    get: function get$1() {
      return 'vaadin.statistics.firstuse';
    }
  }, {
    key: 'monthProcessedKey',
    get: function get$1() {
      return 'vaadin.statistics.monthProcessed';
    }
  }, {
    key: 'optOutKey',
    get: function get$1() {
      return 'vaadin.statistics.optout';
    }
  }]);
  return UsageStatistics;
}();

try {
  window.Vaadin = window.Vaadin || {};
  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();
  window.Vaadin.usageStatsChecker.maybeGatherAndSend();
} catch (e) {
  // Intentionally ignored as this is not a problem in the app being developed
}

}());

  vaadin-dev-mode:end **/}),Ih.NavigationTrigger={POPSTATE:{activate(){window.addEventListener("popstate",wz)},inactivate(){window.removeEventListener("popstate",wz)}},CLICK:{activate(){window.document.addEventListener("click",wH)},inactivate(){window.document.removeEventListener("click",wH)}}},customElements.define("my-header",class extends HTMLElement{connectedCallback(){this.render();let t=document.createElement("style");t.innerHTML=`
            .header {
                height: 60px;
                background-color: #FF8282;
            }
        `,this.appendChild(t)}render(){this.innerHTML='<div class="header"></div>'}}),customElements.define("my-title",class extends HTMLElement{connectedCallback(){this.render();let t=document.createElement("style");t.innerHTML=`
            @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap');
            .title {
                font-family: Roboto;
                font-size: 52px;
                font-style: normal;
                font-weight: 700;
                line-height: normal;
                margin: 0;
            }
        `,this.appendChild(t)}render(){this.innerHTML=`<h1 class="title">${this.innerHTML}</h1>`}}),customElements.define("input-text",class extends HTMLElement{constructor(){super(),this.type=this.getAttribute("for")}connectedCallback(){this.render();let t=document.createElement("style");t.innerHTML=`
            @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@500;700&display=swap');
            .input-container {
                display: flex;
                flex-direction: column;
                font-family: Roboto;
                font-size: 24px;
                font-weight: 500;
            }

            .input {
                width: 97.6%;
                height: 55px;
                border-radius: 4px;
                border: 2px solid #000;
            }
        `,this.appendChild(t)}render(){this.innerHTML=`<div class="input-container">
            <label for=${this.type}>${this.type}</label>
            <input class="input"type="text">
        </div>`}}),customElements.define("input-select",class extends HTMLElement{constructor(){super(),this.roomType=this.getAttribute("for")}connectedCallback(){this.render();let t=document.createElement("style");t.innerHTML=`
            @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@500;700&display=swap');
            .input-container {
                display: flex;
                flex-direction: column;
                font-family: Roboto;
                font-size: 24px;
                font-weight: 500;
            }

            .select {
                width: 100%;
                height: 55px;
                border-radius: 4px;
                border: 2px solid #000;
            }
        `,this.appendChild(t)}render(){this.innerHTML=`<div class="input-container">
            <label for=${this.roomType}>${this.roomType}</label>
            <select class="select" for=${this.roomType}>
                <option value="nuevo-room">Nuevo room</option>
                <option value="room-existente">Room existente</option>
            </select>
        </div>`}}),customElements.define("my-button",class extends HTMLElement{constructor(){super(),this.text=this.innerText}connectedCallback(){this.render();let t=document.createElement("style");t.innerHTML=`
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@500;700&display=swap');
            .button {
                color: #000;
                text-align: center;
                font-family: Roboto;
                font-size: 22px;
                font-style: normal;
                font-weight: 500;
                line-height: normal;
                width: 100%;
                height: 55px;
                border-radius: 4px;
                background: #9CBBE9;
                border: none;
            }

            .button:hover {
                cursor: pointer;
            }
        `,this.appendChild(t)}render(){this.innerHTML=`<button class="button">${this.innerText}</button>`}});var Iv={},Ig={};Ig=/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */function(t,e){for(var n=-1,r=null==t?0:t.length,i=Array(r);++n<r;)i[n]=e(t[n],n,t);return i};var Im={},Iy={},I_={},Ib={},Iw={},II={};II=/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */function(){this.__data__=[],this.size=0};var IT={},IE={},IS={};IS=/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */function(t,e){return t===e||t!=t&&e!=e},IE=/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */function(t,e){for(var n=t.length;n--;)if(IS(t[n][0],e))return n;return -1};/** Built-in value references. */var IC=Array.prototype.splice;IT=/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */function(t){var e=this.__data__,n=IE(e,t);return!(n<0)&&(n==e.length-1?e.pop():IC.call(e,n,1),--this.size,!0)};var Ik={};Ik=/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */function(t){var e=this.__data__,n=IE(e,t);return n<0?void 0:e[n][1]};var IN={};IN=/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */function(t){return IE(this.__data__,t)>-1};var IA={};/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */function IR(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}IA=/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */function(t,e){var n=this.__data__,r=IE(n,t);return r<0?(++this.size,n.push([t,e])):n[r][1]=e,this},// Add methods to `ListCache`.
IR.prototype.clear=II,IR.prototype.delete=IT,IR.prototype.get=Ik,IR.prototype.has=IN,IR.prototype.set=IA,Iw=IR;var Ix={};Ix=/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */function(){this.__data__=new Iw,this.size=0};var IP={};IP=/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n};var ID={};ID=/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */function(t){return this.__data__.get(t)};var IO={};IO=/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */function(t){return this.__data__.has(t)};var IL={},IM={},IF={},Ij={},IU={},Iq={},IV={},IB=U("23YZo");IV=IB.Symbol;var IK={},IH=Object.prototype,IW=IH.hasOwnProperty,Iz=IH.toString,IG=IV?IV.toStringTag:void 0;IK=/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */function(t){var e=IW.call(t,IG),n=t[IG];try{t[IG]=void 0;var r=!0}catch(t){}var i=Iz.call(t);return r&&(e?t[IG]=n:delete t[IG]),i};var IQ={},I$=Object.prototype.toString;IQ=/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */function(t){return I$.call(t)};/** Built-in value references. */var IY=IV?IV.toStringTag:void 0;Iq=/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */function(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":IY&&IY in Object(t)?IK(t):IQ(t)};var IX={};IX=/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */function(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)},IU=/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */function(t){if(!IX(t))return!1;// The use of `Object#toString` avoids issues with the `typeof` operator
// in Safari 9 which returns 'object' for typed arrays and other constructors.
var e=Iq(t);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e};var IJ={},IZ={},IB=U("23YZo");IZ=IB["__core-js_shared__"];/** Used to detect methods masquerading as native. */var I0=(d=/[^.]+$/.exec(IZ&&IZ.keys&&IZ.keys.IE_PROTO||""))?"Symbol(src)_1."+d:"";IJ=/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */function(t){return!!I0&&I0 in t};var I1={},I2=Function.prototype.toString;I1=/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */function(t){if(null!=t){try{return I2.call(t)}catch(t){}try{return t+""}catch(t){}}return""};/** Used to detect host constructors (Safari). */var I4=/^\[object .+?Constructor\]$/,I3=Object.prototype,I6=Function.prototype.toString,I5=I3.hasOwnProperty,I8=RegExp("^"+I6.call(I5).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");Ij=/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */function(t){return!(!IX(t)||IJ(t))&&(IU(t)?I8:I4).test(I1(t))};var I7={};I7=/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */function(t,e){return null==t?void 0:t[e]},IF=/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */function(t,e){var n=I7(t,e);return Ij(n)?n:void 0};var IB=U("23YZo");IM=IF(IB,"Map");var I9={},Tt={},Te={},Tn={},Tr={};Tr=IF(Object,"create"),Tn=/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */function(){this.__data__=Tr?Tr(null):{},this.size=0};var Ti={};Ti=/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e};var To={},Ta=Object.prototype.hasOwnProperty;To=/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */function(t){var e=this.__data__;if(Tr){var n=e[t];return"__lodash_hash_undefined__"===n?void 0:n}return Ta.call(e,t)?e[t]:void 0};var Ts={},Tu=Object.prototype.hasOwnProperty;Ts=/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */function(t){var e=this.__data__;return Tr?void 0!==e[t]:Tu.call(e,t)};var Tc={};/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */function Th(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}Tc=/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */function(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=Tr&&void 0===e?"__lodash_hash_undefined__":e,this},// Add methods to `Hash`.
Th.prototype.clear=Tn,Th.prototype.delete=Ti,Th.prototype.get=To,Th.prototype.has=Ts,Th.prototype.set=Tc,Te=Th,Tt=/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */function(){this.size=0,this.__data__={hash:new Te,map:new(IM||Iw),string:new Te}};var Tl={},Tf={},Tp={};Tp=/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */function(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t},Tf=/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */function(t,e){var n=t.__data__;return Tp(e)?n["string"==typeof e?"string":"hash"]:n.map},Tl=/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */function(t){var e=Tf(this,t).delete(t);return this.size-=e?1:0,e};var Td={};Td=/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */function(t){return Tf(this,t).get(t)};var Tv={};Tv=/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */function(t){return Tf(this,t).has(t)};var Tg={};/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */function Tm(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */function Ty(t){var e=this.__data__=new Iw(t);this.size=e.size}Tg=/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */function(t,e){var n=Tf(this,t),r=n.size;return n.set(t,e),this.size+=n.size==r?0:1,this},// Add methods to `MapCache`.
Tm.prototype.clear=Tt,Tm.prototype.delete=Tl,Tm.prototype.get=Td,Tm.prototype.has=Tv,Tm.prototype.set=Tg,I9=Tm,IL=/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */function(t,e){var n=this.__data__;if(n instanceof Iw){var r=n.__data__;if(!IM||r.length<199)return r.push([t,e]),this.size=++n.size,this;n=this.__data__=new I9(r)}return n.set(t,e),this.size=n.size,this},// Add methods to `Stack`.
Ty.prototype.clear=Ix,Ty.prototype.delete=IP,Ty.prototype.get=ID,Ty.prototype.has=IO,Ty.prototype.set=IL,Ib=Ty;var T_={},Tb={},Tw={},TI={},TT={};TT=/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */function(t){return this.__data__.set(t,"__lodash_hash_undefined__"),this};var TE={};/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */function TS(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new I9;++e<n;)this.add(t[e])}TE=/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */function(t){return this.__data__.has(t)},// Add methods to `SetCache`.
TS.prototype.add=TS.prototype.push=TT,TS.prototype.has=TE,TI=TS;var TC={};TC=/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */function(t,e){for(var n=-1,r=null==t?0:t.length;++n<r;)if(e(t[n],n,t))return!0;return!1};var Tk={};Tk=/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */function(t,e){return t.has(e)},Tw=/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */function(t,e,n,r,i,o){var a=1&n,s=t.length,u=e.length;if(s!=u&&!(a&&u>s))return!1;// Check that cyclic values are equal.
var c=o.get(t),h=o.get(e);if(c&&h)return c==e&&h==t;var l=-1,f=!0,p=2&n?new TI:void 0;// Ignore non-index properties.
for(o.set(t,e),o.set(e,t);++l<s;){var d=t[l],v=e[l];if(r)var g=a?r(v,d,l,e,t,o):r(d,v,l,t,e,o);if(void 0!==g){if(g)continue;f=!1;break}// Recursively compare arrays (susceptible to call stack limits).
if(p){if(!TC(e,function(t,e){if(!Tk(p,e)&&(d===t||i(d,t,n,r,o)))return p.push(e)})){f=!1;break}}else if(!(d===v||i(d,v,n,r,o))){f=!1;break}}return o.delete(t),o.delete(e),f};var TN={},TA={},IB=U("23YZo");TA=IB.Uint8Array;var TR={};TR=/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */function(t){var e=-1,n=Array(t.size);return t.forEach(function(t,r){n[++e]=[r,t]}),n};var Tx={};Tx=/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */function(t){var e=-1,n=Array(t.size);return t.forEach(function(t){n[++e]=t}),n};/** Used to convert symbols to primitives and strings. */var TP=IV?IV.prototype:void 0,TD=TP?TP.valueOf:void 0;TN=/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */function(t,e,n,r,i,o,a){switch(n){case"[object DataView]":if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)break;t=t.buffer,e=e.buffer;case"[object ArrayBuffer]":if(t.byteLength!=e.byteLength||!o(new TA(t),new TA(e)))break;return!0;case"[object Boolean]":case"[object Date]":case"[object Number]":// Coerce booleans to `1` or `0` and dates to milliseconds.
// Invalid dates are coerced to `NaN`.
return IS(+t,+e);case"[object Error]":return t.name==e.name&&t.message==e.message;case"[object RegExp]":case"[object String]":// Coerce regexes to strings and treat strings, primitives and objects,
// as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
// for more details.
return t==e+"";case"[object Map]":var s=TR;case"[object Set]":var u=1&r;if(s||(s=Tx),t.size!=e.size&&!u)break;// Assume cyclic values are equal.
var c=a.get(t);if(c)return c==e;r|=2,// Recursively compare objects (susceptible to call stack limits).
a.set(t,e);var h=Tw(s(t),s(e),r,i,o,a);return a.delete(t),h;case"[object Symbol]":if(TD)return TD.call(t)==TD.call(e)}return!1};var TO={},TL={},TM={},TF={};TF=/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */function(t,e){for(var n=-1,r=e.length,i=t.length;++n<r;)t[i+n]=e[n];return t};var Tj={};Tj=Array.isArray,TM=/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */function(t,e,n){var r=e(t);return Tj(t)?r:TF(r,n(t))};var TU={},Tq={};Tq=/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */function(t,e){for(var n=-1,r=null==t?0:t.length,i=0,o=[];++n<r;){var a=t[n];e(a,n,t)&&(o[i++]=a)}return o};var TV={};TV=/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */function(){return[]};/** Built-in value references. */var TB=Object.prototype.propertyIsEnumerable,TK=Object.getOwnPropertySymbols;TU=TK?function(t){return null==t?[]:(t=Object(t),Tq(TK(t),function(e){return TB.call(t,e)}))}:TV;var TH={},TW={},Tz={};Tz=/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */function(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r};var TG={},TQ={},T$={};T$=/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */function(t){return null!=t&&"object"==typeof t},TQ=/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */function(t){return T$(t)&&"[object Arguments]"==Iq(t)};/** Used for built-in method references. */var TY=Object.prototype,TX=TY.hasOwnProperty,TJ=TY.propertyIsEnumerable;TG=TQ(function(){return arguments}())?TQ:function(t){return T$(t)&&TX.call(t,"callee")&&!TJ.call(t,"callee")};var TZ=U("f504n"),T0={},T1=/^(?:0|[1-9]\d*)$/;T0=/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */function(t,e){var n=typeof t;return!!(e=null==e?9007199254740991:e)&&("number"==n||"symbol"!=n&&T1.test(t))&&t>-1&&t%1==0&&t<e};var T2={},T4={},T3={};T3=/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991};/** Used to identify `toStringTag` values of typed arrays. */var T6={};T6["[object Float32Array]"]=T6["[object Float64Array]"]=T6["[object Int8Array]"]=T6["[object Int16Array]"]=T6["[object Int32Array]"]=T6["[object Uint8Array]"]=T6["[object Uint8ClampedArray]"]=T6["[object Uint16Array]"]=T6["[object Uint32Array]"]=!0,T6["[object Arguments]"]=T6["[object Array]"]=T6["[object ArrayBuffer]"]=T6["[object Boolean]"]=T6["[object DataView]"]=T6["[object Date]"]=T6["[object Error]"]=T6["[object Function]"]=T6["[object Map]"]=T6["[object Number]"]=T6["[object Object]"]=T6["[object RegExp]"]=T6["[object Set]"]=T6["[object String]"]=T6["[object WeakMap]"]=!1,T4=/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */function(t){return T$(t)&&T3(t.length)&&!!T6[Iq(t)]};var T5={};T5=/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */function(t){return function(e){return t(e)}};var T8=U("jIny1"),T7=T8&&T8.isTypedArray;T2=T7?T5(T7):T4;/** Used to check objects for own properties. */var T9=Object.prototype.hasOwnProperty;TW=/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */function(t,e){var n=Tj(t),r=!n&&TG(t),i=!n&&!r&&TZ(t),o=!n&&!r&&!i&&T2(t),a=n||r||i||o,s=a?Tz(t.length,String):[],u=s.length;for(var c in t)(e||T9.call(t,c))&&!(a&&// Safari 9 has enumerable `arguments.length` in strict mode.
("length"==c||// Node.js 0.10 has enumerable non-index properties on buffers.
i&&("offset"==c||"parent"==c)||// PhantomJS 2 has enumerable non-index properties on typed arrays.
o&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||// Skip index properties.
T0(c,u)))&&s.push(c);return s};var Et={},Ee={},En=Object.prototype;Ee=/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */function(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||En)};var Er={};t=Object.keys,e=Object,Er=function(n){return t(e(n))};/** Used to check objects for own properties. */var Ei=Object.prototype.hasOwnProperty;Et=/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */function(t){if(!Ee(t))return Er(t);var e=[];for(var n in Object(t))Ei.call(t,n)&&"constructor"!=n&&e.push(n);return e};var Eo={};Eo=/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */function(t){return null!=t&&T3(t.length)&&!IU(t)},TH=/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */function(t){return Eo(t)?TW(t):Et(t)},TL=/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */function(t){return TM(t,TH,TU)};/** Used to check objects for own properties. */var Ea=Object.prototype.hasOwnProperty;TO=/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */function(t,e,n,r,i,o){var a=1&n,s=TL(t),u=s.length;if(u!=TL(e).length&&!a)return!1;for(var c=u;c--;){var h=s[c];if(!(a?h in e:Ea.call(e,h)))return!1}// Check that cyclic values are equal.
var l=o.get(t),f=o.get(e);if(l&&f)return l==e&&f==t;var p=!0;o.set(t,e),o.set(e,t);for(var d=a;++c<u;){var v=t[h=s[c]],g=e[h];if(r)var m=a?r(g,v,h,e,t,o):r(v,g,h,t,e,o);// Recursively compare objects (susceptible to call stack limits).
if(!(void 0===m?v===g||i(v,g,n,r,o):m)){p=!1;break}d||(d="constructor"==h)}if(p&&!d){var y=t.constructor,_=e.constructor;// Non `Object` object instances with different constructors are not equal.
y!=_&&"constructor"in t&&"constructor"in e&&!("function"==typeof y&&y instanceof y&&"function"==typeof _&&_ instanceof _)&&(p=!1)}return o.delete(t),o.delete(e),p};var Es={},Eu={},IB=U("23YZo");Eu=IF(IB,"DataView");var Ec={},IB=U("23YZo");Ec=IF(IB,"Promise");var Eh={},IB=U("23YZo");Eh=IF(IB,"Set");var El={},IB=U("23YZo");El=IF(IB,"WeakMap");/** `Object#toString` result references. */var Ef="[object Map]",Ep="[object Promise]",Ed="[object Set]",Ev="[object WeakMap]",Eg="[object DataView]",Em=I1(Eu),Ey=I1(IM),E_=I1(Ec),Eb=I1(Eh),Ew=I1(El),EI=Iq;(Eu&&EI(new Eu(new ArrayBuffer(1)))!=Eg||IM&&EI(new IM)!=Ef||Ec&&EI(Ec.resolve())!=Ep||Eh&&EI(new Eh)!=Ed||El&&EI(new El)!=Ev)&&(EI=function(t){var e=Iq(t),n="[object Object]"==e?t.constructor:void 0,r=n?I1(n):"";if(r)switch(r){case Em:return Eg;case Ey:return Ef;case E_:return Ep;case Eb:return Ed;case Ew:return Ev}return e}),Es=EI;var TZ=U("f504n"),ET="[object Arguments]",EE="[object Array]",ES="[object Object]",EC=Object.prototype.hasOwnProperty;Tb=/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */function(t,e,n,r,i,o){var a=Tj(t),s=Tj(e),u=a?EE:Es(t),c=s?EE:Es(e);u=u==ET?ES:u,c=c==ET?ES:c;var h=u==ES,l=c==ES,f=u==c;if(f&&TZ(t)){if(!TZ(e))return!1;a=!0,h=!1}if(f&&!h)return o||(o=new Ib),a||T2(t)?Tw(t,e,n,r,i,o):TN(t,e,u,n,r,i,o);if(!(1&n)){var p=h&&EC.call(t,"__wrapped__"),d=l&&EC.call(e,"__wrapped__");if(p||d){var v=p?t.value():t,g=d?e.value():e;return o||(o=new Ib),i(v,g,n,r,o)}}return!!f&&(o||(o=new Ib),TO(t,e,n,r,i,o))},T_=/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */function t(e,n,r,i,o){return e===n||(null!=e&&null!=n&&(T$(e)||T$(n))?Tb(e,n,r,i,t,o):e!=e&&n!=n)},I_=/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */function(t,e,n,r){var i=n.length,o=i,a=!r;if(null==t)return!o;for(t=Object(t);i--;){var s=n[i];if(a&&s[2]?s[1]!==t[s[0]]:!(s[0]in t))return!1}for(;++i<o;){var u=(s=n[i])[0],c=t[u],h=s[1];if(a&&s[2]){if(void 0===c&&!(u in t))return!1}else{var l=new Ib;if(r)var f=r(c,h,u,t,e,l);if(!(void 0===f?T_(h,c,3,r,l):f))return!1}}return!0};var Ek={},EN={};EN=/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */function(t){return t==t&&!IX(t)},Ek=/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */function(t){for(var e=TH(t),n=e.length;n--;){var r=e[n],i=t[r];e[n]=[r,i,EN(i)]}return e};var EA={};EA=/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */function(t,e){return function(n){return null!=n&&n[t]===e&&(void 0!==e||t in Object(n))}},Iy=/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */function(t){var e=Ek(t);return 1==e.length&&e[0][2]?EA(e[0][0],e[0][1]):function(n){return n===t||I_(n,t,e)}};var ER={},Ex={},EP={},ED={},EO={},EL={};EL=/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */function(t){return"symbol"==typeof t||T$(t)&&"[object Symbol]"==Iq(t)};/** Used to match property names within property paths. */var EM=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,EF=/^\w*$/;EO=/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */function(t,e){if(Tj(t))return!1;var n=typeof t;return!!("number"==n||"symbol"==n||"boolean"==n||null==t||EL(t))||EF.test(t)||!EM.test(t)||null!=e&&t in Object(e)};var Ej={},EU={};/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */function Eq(t,e){if("function"!=typeof t||null!=e&&"function"!=typeof e)throw TypeError("Expected a function");var n=function(){var r=arguments,i=e?e.apply(this,r):r[0],o=n.cache;if(o.has(i))return o.get(i);var a=t.apply(this,r);return n.cache=o.set(i,a)||o,a};return n.cache=new(Eq.Cache||I9),n}// Expose `MapCache`.
Eq.Cache=I9;/** Used to match property names within property paths. */var EV=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,EB=/\\(\\)?/g;r=(n=(EU=Eq)(function(t){var e=[];return 46/* . */===t.charCodeAt(0)&&e.push(""),t.replace(EV,function(t,n,r,i){e.push(r?i.replace(EB,"$1"):n||t)}),e},function(t){return 500===r.size&&r.clear(),t})).cache,Ej=n;var EK={},EH={},EW=1/0,Ez=IV?IV.prototype:void 0,EG=Ez?Ez.toString:void 0;EH=/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */function t(e){// Exit early for strings to avoid a performance hit in some environments.
if("string"==typeof e)return e;if(Tj(e))return Ig(e,t)+"";if(EL(e))return EG?EG.call(e):"";var n=e+"";return"0"==n&&1/e==-EW?"-0":n},EK=/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */function(t){return null==t?"":EH(t)},ED=/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */function(t,e){return Tj(t)?t:EO(t,e)?[t]:Ej(EK(t))};var EQ={},E$=1/0;EQ=/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */function(t){if("string"==typeof t||EL(t))return t;var e=t+"";return"0"==e&&1/t==-E$?"-0":e},EP=/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */function(t,e){e=ED(e,t);for(var n=0,r=e.length;null!=t&&n<r;)t=t[EQ(e[n++])];return n&&n==r?t:void 0},Ex=/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */function(t,e,n){var r=null==t?void 0:EP(t,e);return void 0===r?n:r};var EY={},EX={};EX=/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */function(t,e){return null!=t&&e in Object(t)};var EJ={};EJ=/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */function(t,e,n){e=ED(e,t);for(var r=-1,i=e.length,o=!1;++r<i;){var a=EQ(e[r]);if(!(o=null!=t&&n(t,a)))break;t=t[a]}return o||++r!=i?o:!!(i=null==t?0:t.length)&&T3(i)&&T0(a,i)&&(Tj(t)||TG(t))},EY=/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */function(t,e){return null!=t&&EJ(t,e,EX)},ER=/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */function(t,e){return EO(t)&&EN(e)?EA(EQ(t),e):function(n){var r=Ex(n,t);return void 0===r&&r===e?EY(n,t):T_(e,r,3)}};var EZ={};EZ=/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */function(t){return t};var E0={},E1={};E1=/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */function(t){return function(e){return null==e?void 0:e[t]}};var E2={};E2=/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */function(t){return function(e){return EP(e,t)}},E0=/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */function(t){return EO(t)?E1(EQ(t)):E2(t)},Im=/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */function(t){return(// Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
// See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
"function"==typeof t?t:null==t?EZ:"object"==typeof t?Tj(t)?ER(t[0],t[1]):Iy(t):E0(t))};var E4={},E3={},E6={},E5={};E5=function(t,e,n){for(var r=-1,i=Object(t),o=n(t),a=o.length;a--;){var s=o[++r];if(!1===e(i[s],s,i))break}return t};o=/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */function(t,e){return t&&E5(t,e,TH)},E3=function(t,e){if(null==t)return t;if(!Eo(t))return o(t,e);for(var n=t.length,r=a?n:-1,i=Object(t);(a?r--:++r<n)&&!1!==e(i[r],r,i););return t},E4=/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */function(t,e){var n=-1,r=Eo(t)?Array(t.length):[];return E3(t,function(t,i,o){r[++n]=e(t,i,o)}),r},Iv=/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */function(t,e){return(Tj(t)?Ig:E4)(t,Im(e,3))};const E8={data:{roomId:"",nombre:"",messages:[]},listeners:[],setNombre(t){let e=this.getState();e.nombre=t,this.setState(e)},init(){let t=ee.database(),e=t.ref("/chatrooms/12345/messages"),n=this.getState();e.on("value",t=>{let e=t.val(),r=/*@__PURE__*/M(Iv)(e);n.messages=r,this.setState(n)})},getState(){return this.data},addMessage(t,e){sessionStorage.getItem("nombre"),fetch("http://localhost:3000/rooms/"+t+"/messages",{method:"post",headers:{"content-type":"application/json"},body:JSON.stringify({message:e})})},setNombreAndEmail(t){let e=this.getState();e.nombre=t,sessionStorage.setItem("nombre",t),this.setState(e)},setState(t){for(let e of(this.data=t,this.listeners))e(t)},subscribe(t){this.listeners.push(t)},createRoom(t,e,n){fetch("http://localhost:3000/rooms",{method:"post",headers:{"content-type":"application/json"},body:JSON.stringify({email:t,name:e,messages:n})}).then(t=>t.json()).then(t=>{// aca lo que parece ocurrir es que el cambio que hace al router de page, renderizando el chat ocurre ANTES de que vuelva el llamado a la API con la info.
console.log("Soy la data antes de invocar a enterRoom",t),this.enterRoom(t.id,e)})},enterRoom(t,e){var n;let r=t.toString();fetch("http://localhost:3000/rooms/"+r,{method:"get",headers:{"content-type":"application/json"}}).then(t=>t.json()).then(r=>{// esto devuelve el ID complejo de la room en rtdb. aca con este id complejo que deberiamos hacer? conectarnos a la la room y hacer un set state para empezar a leer los mensajes y eso
n=r.rtdbRoomId;let i=ee.database(),o=i.ref("/rooms/"+n),a=this.getState();o.on("value",n=>{let r=n.val();a.nombre=e,a.roomId=t,a.messages=r.messages,a.messages=/*@__PURE__*/M(Iv)(a.messages),this.setState(a),console.log("Finished setting state",a)})})}};customElements.define("welcome-page",class extends HTMLElement{constructor(){super()}connectedCallback(){this.render(),this.querySelector(".button").addEventListener("click",this.getInputsData),this.querySelector("#roomType").addEventListener("change",this.getRoomType);let t=document.createElement("style");t.innerHTML=`
            .container {
                padding: 18px 33px 50px 28px;
                display: flex;
                flex-direction: column;
                gap: 13px;
            }

            .room-id-form {
                display: none;
            }

            .show {
                display: block;
            }

            .button {
                margin-top: 40px;
            }

        `,this.appendChild(t)}render(){this.innerHTML=`
            <div>
                <my-header></my-header>
                <div class="container">
                    <my-title>Bienvenidx</my-title>
                    <input-text id="email" for="email"></input-text>
                    <input-text id="nombre" for="tu nombre"></input-text>
                    <input-select id="roomType" for="room"></input-select>
                    <input-text class="room-id-form" for="room id"></input-text>
                    <a href="/chat"><my-button class="button">Comenzar</my-button></a>
                </div>
            </div>
        `}getInputsData(){let t=document.querySelector("#email").querySelector(".input").value,e=document.querySelector("#nombre").querySelector(".input").value,n=document.querySelector(".room-id-form").querySelector(".input").value;t&&e||(alert("te falta data ameo"),window.location.href="http://localhost:1234/"),t&&e&&n&&E8.enterRoom(n,e),t&&e&&!n&&E8.createRoom(t,e,!1)}getRoomType(){let t=document.querySelector(".select").value;"room-existente"==t?document.querySelector(".room-id-form").classList.add("show"):document.querySelector(".room-id-form").classList.toggle("show")}}),customElements.define("chat-page",class extends HTMLElement{constructor(){super(),this.username,this.roomId,this.messages=[]}connectedCallback(){this.functionsPack(),E8.subscribe(()=>{this.functionsPack()})}functionsPack(){setTimeout(()=>{let t=E8.getState();this.roomId=t.roomId,this.username=t.nombre,this.messages=t.messages,this.render(),this.addStyle(),this.sendMessage(),this.whoIsWhoChecker()},2100)}render(){this.innerHTML=`
            <my-header></my-header>
            <div class="container">
                <my-title>Chat</my-title>
                <h3 class="roomdId">room id: ${this.roomId}</h3>
                <div class="messages-container">
                
                ${this.messages.map(t=>`<chat-box user="${t.nombre}" class="me">${t.message}</chat-box>`).join("")}
                </div>
                <input type="text" class="input-message">
                <my-button class="send-message">Enviar</my-button>
            <div>
        `}addStyle(){let t=document.createElement("style");t.innerHTML=`
            @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap');
            .container {
                padding: 18px 33px 50px 28px;
                display: flex;
                flex-direction: column;
                gap: 13px;
            }

            .roomdId {
                font-family: Roboto;
                font-weight: 500;
                font-size: 24px;
                margin: 0;
            }

            .messages-container{
                width: 100%;
                display: flex;
                flex-direction: column;
                gap: 12px;
                height: auto;
                justify-content: flex-end;
            }

            .me, .other {
                font-family: 'Roboto', sans-serif;
                width: 43%;
                height: fit-content;
                font-size: 18px;
                font-style: normal;
                font-weight: 400;
                line-height: normal;
                border-radius: 4px;
                background: #D8D8D8;
                display: inline-block;
                padding: 15px 8px 16px 13px;
            }

            .me {
                background-color: #B9E97C;
                margin-left: 50%;
            }

            .other {
                background-color: #D8D8D8;
            }

            .input-message{
                width: 97.7%;
                height: 55px;
                border-radius: 4px;
                border: 2px solid #000;
            }
        `,this.appendChild(t)}sendMessage(){let t=this.querySelector(".send-message"),e=this.querySelector(".input-message");t?.addEventListener("click",()=>{if(""==e.value)console.log("Introduzca un mensaje");else{let t={nombre:this.username,message:e.value};E8.addMessage(this.roomId,t)}})}whoIsWhoChecker(){let t=this.querySelectorAll("chat-box");t.forEach(t=>{t.getAttribute("user")!=this.username&&(t.classList.remove("me"),t.classList.add("other"))})}});const E7=new Ih(document.querySelector(".root"));E7.setRoutes([{path:"/",component:"welcome-page"},{path:"/chat",component:"chat-page"}]),customElements.define("chat-box",class extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}connectedCallback(){this.user=this.getAttribute("user");let t=document.createElement("style");t.innerHTML=`
            .chat-box {
                height: 60px;
            }
            .nickname {
                color: #A5A5A5;
            }
        `,this.shadow.appendChild(t),this.render()}render(){let t=document.createElement("div");t.innerHTML=`
        <div class="chat-box" user="${this.user}">
            <div class="nickname">${this.user}</div>
            <div>
                ${this.textContent}
            </div>
        </div>`,this.shadow.appendChild(t)}}),ee.initializeApp({apiKey:"AIzaSyCveRBJconqfI1NaPXrQYju4RqGK8U1pqc",authDomain:"apx-dwf-m6-e4d74.firebaseapp.com",databaseURL:"https://apx-dwf-m6-e4d74-default-rtdb.firebaseio.com",projectId:"apx-dwf-m6-e4d74"});//# sourceMappingURL=index.c83e4f72.js.map

//# sourceMappingURL=index.c83e4f72.js.map
